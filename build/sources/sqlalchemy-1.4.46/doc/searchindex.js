Search.setIndex({"docnames": ["changelog/changelog_01", "changelog/changelog_02", "changelog/changelog_03", "changelog/changelog_04", "changelog/changelog_05", "changelog/changelog_06", "changelog/changelog_07", "changelog/changelog_08", "changelog/changelog_09", "changelog/changelog_10", "changelog/changelog_11", "changelog/changelog_12", "changelog/changelog_13", "changelog/changelog_14", "changelog/index", "changelog/migration_04", "changelog/migration_05", "changelog/migration_06", "changelog/migration_07", "changelog/migration_08", "changelog/migration_09", "changelog/migration_10", "changelog/migration_11", "changelog/migration_12", "changelog/migration_13", "changelog/migration_14", "changelog/migration_20", "contents", "copyright", "core/api_basics", "core/compiler", "core/connections", "core/constraints", "core/custom_types", "core/ddl", "core/defaults", "core/dml", "core/engines", "core/engines_connections", "core/event", "core/events", "core/exceptions", "core/expression_api", "core/foundation", "core/functions", "core/future", "core/index", "core/inspection", "core/internals", "core/metadata", "core/operators", "core/pooling", "core/reflection", "core/schema", "core/selectable", "core/serializer", "core/sqlelement", "core/tutorial", "core/type_api", "core/type_basics", "core/types", "core/visitors", "dialects/firebird", "dialects/index", "dialects/mssql", "dialects/mysql", "dialects/oracle", "dialects/postgresql", "dialects/sqlite", "dialects/sybase", "errors", "faq/connections", "faq/index", "faq/installation", "faq/metadata_schema", "faq/ormconfiguration", "faq/performance", "faq/sessions", "faq/sqlexpressions", "faq/thirdparty", "glossary", "index", "intro", "orm/backref", "orm/basic_relationships", "orm/cascades", "orm/classical", "orm/collections", "orm/composites", "orm/constructors", "orm/contextual", "orm/dataclasses", "orm/declarative_config", "orm/declarative_mapping", "orm/declarative_mixins", "orm/declarative_styles", "orm/declarative_tables", "orm/events", "orm/examples", "orm/exceptions", "orm/extending", "orm/extensions/associationproxy", "orm/extensions/asyncio", "orm/extensions/automap", "orm/extensions/baked", "orm/extensions/declarative/api", "orm/extensions/declarative/basic_use", "orm/extensions/declarative/index", "orm/extensions/declarative/inheritance", "orm/extensions/declarative/mixins", "orm/extensions/declarative/relationships", "orm/extensions/declarative/table_config", "orm/extensions/horizontal_shard", "orm/extensions/hybrid", "orm/extensions/index", "orm/extensions/indexable", "orm/extensions/instrumentation", "orm/extensions/mutable", "orm/extensions/mypy", "orm/extensions/orderinglist", "orm/index", "orm/inheritance", "orm/inheritance_loading", "orm/internals", "orm/join_conditions", "orm/loading", "orm/loading_columns", "orm/loading_objects", "orm/loading_relationships", "orm/mapped_attributes", "orm/mapped_sql_expr", "orm/mapper_config", "orm/mapping_api", "orm/mapping_columns", "orm/mapping_styles", "orm/nonstandard_mappings", "orm/persistence_techniques", "orm/query", "orm/queryguide", "orm/quickstart", "orm/relationship_api", "orm/relationship_persistence", "orm/relationships", "orm/scalar_mapping", "orm/self_referential", "orm/session", "orm/session_api", "orm/session_basics", "orm/session_events", "orm/session_state_management", "orm/session_transaction", "orm/tutorial", "orm/versioning", "tutorial/data", "tutorial/data_insert", "tutorial/data_select", "tutorial/data_update", "tutorial/dbapi_transactions", "tutorial/engine", "tutorial/further_reading", "tutorial/index", "tutorial/metadata", "tutorial/orm_data_manipulation", "tutorial/orm_related_objects"], "filenames": ["changelog/changelog_01.rst", "changelog/changelog_02.rst", "changelog/changelog_03.rst", "changelog/changelog_04.rst", "changelog/changelog_05.rst", "changelog/changelog_06.rst", "changelog/changelog_07.rst", "changelog/changelog_08.rst", "changelog/changelog_09.rst", "changelog/changelog_10.rst", "changelog/changelog_11.rst", "changelog/changelog_12.rst", "changelog/changelog_13.rst", "changelog/changelog_14.rst", "changelog/index.rst", "changelog/migration_04.rst", "changelog/migration_05.rst", "changelog/migration_06.rst", "changelog/migration_07.rst", "changelog/migration_08.rst", "changelog/migration_09.rst", "changelog/migration_10.rst", "changelog/migration_11.rst", "changelog/migration_12.rst", "changelog/migration_13.rst", "changelog/migration_14.rst", "changelog/migration_20.rst", "contents.rst", "copyright.rst", "core/api_basics.rst", "core/compiler.rst", "core/connections.rst", "core/constraints.rst", "core/custom_types.rst", "core/ddl.rst", "core/defaults.rst", "core/dml.rst", "core/engines.rst", "core/engines_connections.rst", "core/event.rst", "core/events.rst", "core/exceptions.rst", "core/expression_api.rst", "core/foundation.rst", "core/functions.rst", "core/future.rst", "core/index.rst", "core/inspection.rst", "core/internals.rst", "core/metadata.rst", "core/operators.rst", "core/pooling.rst", "core/reflection.rst", "core/schema.rst", "core/selectable.rst", "core/serializer.rst", "core/sqlelement.rst", "core/tutorial.rst", "core/type_api.rst", "core/type_basics.rst", "core/types.rst", "core/visitors.rst", "dialects/firebird.rst", "dialects/index.rst", "dialects/mssql.rst", "dialects/mysql.rst", "dialects/oracle.rst", "dialects/postgresql.rst", "dialects/sqlite.rst", "dialects/sybase.rst", "errors.rst", "faq/connections.rst", "faq/index.rst", "faq/installation.rst", "faq/metadata_schema.rst", "faq/ormconfiguration.rst", "faq/performance.rst", "faq/sessions.rst", "faq/sqlexpressions.rst", "faq/thirdparty.rst", "glossary.rst", "index.rst", "intro.rst", "orm/backref.rst", "orm/basic_relationships.rst", "orm/cascades.rst", "orm/classical.rst", "orm/collections.rst", "orm/composites.rst", "orm/constructors.rst", "orm/contextual.rst", "orm/dataclasses.rst", "orm/declarative_config.rst", "orm/declarative_mapping.rst", "orm/declarative_mixins.rst", "orm/declarative_styles.rst", "orm/declarative_tables.rst", "orm/events.rst", "orm/examples.rst", "orm/exceptions.rst", "orm/extending.rst", "orm/extensions/associationproxy.rst", "orm/extensions/asyncio.rst", "orm/extensions/automap.rst", "orm/extensions/baked.rst", "orm/extensions/declarative/api.rst", "orm/extensions/declarative/basic_use.rst", "orm/extensions/declarative/index.rst", "orm/extensions/declarative/inheritance.rst", "orm/extensions/declarative/mixins.rst", "orm/extensions/declarative/relationships.rst", "orm/extensions/declarative/table_config.rst", "orm/extensions/horizontal_shard.rst", "orm/extensions/hybrid.rst", "orm/extensions/index.rst", "orm/extensions/indexable.rst", "orm/extensions/instrumentation.rst", "orm/extensions/mutable.rst", "orm/extensions/mypy.rst", "orm/extensions/orderinglist.rst", "orm/index.rst", "orm/inheritance.rst", "orm/inheritance_loading.rst", "orm/internals.rst", "orm/join_conditions.rst", "orm/loading.rst", "orm/loading_columns.rst", "orm/loading_objects.rst", "orm/loading_relationships.rst", "orm/mapped_attributes.rst", "orm/mapped_sql_expr.rst", "orm/mapper_config.rst", "orm/mapping_api.rst", "orm/mapping_columns.rst", "orm/mapping_styles.rst", "orm/nonstandard_mappings.rst", "orm/persistence_techniques.rst", "orm/query.rst", "orm/queryguide.rst", "orm/quickstart.rst", "orm/relationship_api.rst", "orm/relationship_persistence.rst", "orm/relationships.rst", "orm/scalar_mapping.rst", "orm/self_referential.rst", "orm/session.rst", "orm/session_api.rst", "orm/session_basics.rst", "orm/session_events.rst", "orm/session_state_management.rst", "orm/session_transaction.rst", "orm/tutorial.rst", "orm/versioning.rst", "tutorial/data.rst", "tutorial/data_insert.rst", "tutorial/data_select.rst", "tutorial/data_update.rst", "tutorial/dbapi_transactions.rst", "tutorial/engine.rst", "tutorial/further_reading.rst", "tutorial/index.rst", "tutorial/metadata.rst", "tutorial/orm_data_manipulation.rst", "tutorial/orm_related_objects.rst"], "titles": ["0.1 Changelog", "0.2 Changelog", "0.3 Changelog", "0.4 Changelog", "0.5 Changelog", "0.6 Changelog", "0.7 Changelog", "0.8 Changelog", "0.9 Changelog", "1.0 Changelog", "1.1 Changelog", "1.2 Changelog", "1.3 Changelog", "1.4 Changelog", "Changes and Migration", "What\u2019s new in SQLAlchemy 0.4?", "What\u2019s new in SQLAlchemy 0.5?", "What\u2019s New in SQLAlchemy 0.6?", "What\u2019s New in SQLAlchemy 0.7?", "What\u2019s New in SQLAlchemy 0.8?", "What\u2019s New in SQLAlchemy 0.9?", "What\u2019s New in SQLAlchemy 1.0?", "What\u2019s New in SQLAlchemy 1.1?", "What\u2019s New in SQLAlchemy 1.2?", "What\u2019s New in SQLAlchemy 1.3?", "What\u2019s New in SQLAlchemy 1.4?", "Migrating to SQLAlchemy 2.0", "Table of Contents", "Appendix:  Copyright", "Core API Basics", "Custom SQL Constructs and Compilation Extension", "Working with Engines and Connections", "Defining Constraints and Indexes", "Custom Types", "Customizing DDL", "Column INSERT/UPDATE Defaults", "Insert, Updates, Deletes", "Engine Configuration", "Engine and Connection Use", "Events", "Core Events", "Core Exceptions", "SQL Statements and Expressions API", "SQL Expression Language Foundational Constructs", "SQL and Generic Functions", "SQLAlchemy 2.0 Future (Core)", "SQLAlchemy Core", "Runtime Inspection API", "Core Internals", "Describing Databases with MetaData", "Operator Reference", "Connection Pooling", "Reflecting Database Objects", "Schema Definition Language", "Selectables, Tables, FROM objects", "Expression Serializer Extension", "Column Elements and Expressions", "SQL Expression Language Tutorial (1.x API)", "Base Type API", "The Type Hierarchy", "SQL Datatype Objects", "Visitor and Traversal Utilities", "Firebird", "Dialects", "Microsoft SQL Server", "MySQL and MariaDB", "Oracle", "PostgreSQL", "SQLite", "Sybase", "Error Messages", "Connections / Engines", "Frequently Asked Questions", "Installation", "MetaData / Schema", "ORM Configuration", "Performance", "Sessions / Queries", "SQL Expressions", "Third Party Integration Issues", "Glossary", "SQLAlchemy Documentation", "Overview", "Using the legacy \u2018backref\u2019 relationship parameter", "Basic Relationship Patterns", "Cascades", "&lt;no title&gt;", "Collection Configuration and Techniques", "Composite Column Types", "Constructors and Object Initialization", "Contextual/Thread-local Sessions", "Integration with dataclasses and attrs", "Mapper Configuration with Declarative", "Mapping Classes with Declarative", "Composing Mapped Hierarchies with Mixins", "Declarative Mapping Styles", "Table Configuration with Declarative", "ORM Events", "ORM Examples", "ORM Exceptions", "Events and Internals", "Association Proxy", "Asynchronous I/O (asyncio)", "Automap", "Baked Queries", "Declarative API", "Basic Use", "Declarative Extensions", "Declarative Inheritance", "Mixin and Custom Base Classes", "Configuring Relationships", "Table Configuration", "Horizontal Sharding", "Hybrid Attributes", "ORM Extensions", "Indexable", "Alternate Class Instrumentation", "Mutation Tracking", "Mypy  / Pep-484 Support for ORM Mappings", "Ordering List", "SQLAlchemy ORM", "Mapping Class Inheritance Hierarchies", "Loading Inheritance Hierarchies", "ORM Internals", "Configuring how Relationship Joins", "&lt;no title&gt;", "Loading Columns", "Querying Data, Loading Objects", "Relationship Loading Techniques", "Changing Attribute Behavior", "SQL Expressions as Mapped Attributes", "ORM Mapped Class Configuration", "Class Mapping API", "Mapping Table Columns", "ORM Mapped Class Overview", "Non-Traditional Mappings", "Additional Persistence Techniques", "Query API", "ORM Querying Guide", "ORM Quick Start", "Relationships API", "Special Relationship Persistence Patterns", "Relationship Configuration", "Mapping Columns and Expressions", "Adjacency List Relationships", "Using the Session", "Session API", "Session Basics", "Tracking queries, object and Session Changes with Events", "State Management", "Transactions and Connection Management", "Object Relational Tutorial (1.x API)", "Configuring a Version Counter", "Working with Data", "Inserting Rows with Core", "Selecting Rows with Core or ORM", "Updating and Deleting Rows with Core", "Working with Transactions and the DBAPI", "Establishing Connectivity - the Engine", "Further Reading", "SQLAlchemy 1.4 / 2.0 Tutorial", "Working with Database Metadata", "Data Manipulation with the ORM", "Working with Related Objects"], "terms": {"releas": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 34, 35, 37, 40, 45, 48, 49, 51, 52, 54, 56, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 80, 82, 87, 90, 91, 97, 101, 102, 103, 116, 118, 122, 123, 126, 128, 132, 136, 137, 146, 147, 150, 157, 160, 162], "fri": [0, 2, 3, 4, 6], "mai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 75, 76, 77, 78, 79, 80, 82, 84, 85, 87, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 112, 113, 115, 116, 117, 118, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 161, 162, 163], "05": [0, 1, 4, 5, 6, 16, 20, 37, 68, 76], "2006": [0, 1, 2, 6, 13, 18, 71], "no_tag": [0, 1, 2, 3, 4, 6, 11], "some": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 71, 75, 76, 77, 78, 79, 80, 84, 85, 87, 90, 92, 94, 97, 98, 99, 101, 102, 103, 104, 107, 112, 113, 116, 119, 120, 121, 122, 123, 124, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163], "fix": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 24, 25, 26, 33, 34, 36, 37, 38, 44, 50, 54, 56, 57, 59, 63, 64, 65, 67, 68, 70, 80, 87, 92, 94, 98, 104, 118, 132, 137, 138, 147, 150, 157, 161], "topolog": [0, 1, 2, 5, 9, 13, 17, 21, 32, 41, 136], "sort": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 21, 25, 31, 32, 33, 34, 41, 44, 49, 52, 58, 59, 72, 75, 76, 98, 117, 119, 132, 136, 155], "algorithm": [0, 1, 3, 5, 6, 9, 13, 21, 25, 31, 68], "ad": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 20, 31, 32, 34, 35, 36, 37, 39, 40, 43, 44, 48, 49, 51, 52, 54, 56, 57, 58, 59, 64, 65, 66, 67, 68, 70, 71, 74, 76, 77, 80, 83, 84, 85, 87, 88, 90, 91, 92, 94, 96, 97, 98, 101, 102, 103, 104, 107, 113, 117, 118, 120, 122, 123, 124, 126, 127, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 149, 155, 156, 163], "distinct": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 31, 37, 42, 49, 50, 52, 54, 56, 57, 59, 62, 64, 66, 70, 74, 80, 82, 90, 92, 94, 98, 101, 102, 121, 122, 123, 124, 128, 134, 137, 138, 140, 146, 148, 149, 151, 155, 157, 160], "ON": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 25, 26, 34, 35, 44, 49, 50, 53, 54, 56, 57, 64, 70, 72, 75, 80, 84, 87, 90, 98, 103, 113, 122, 123, 124, 128, 132, 137, 139, 140, 142, 144, 145, 146, 147, 151], "support": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 27, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 71, 72, 76, 77, 78, 80, 81, 84, 85, 87, 90, 91, 92, 95, 96, 97, 101, 102, 103, 104, 112, 113, 114, 119, 120, 121, 122, 123, 124, 126, 128, 129, 132, 133, 134, 135, 137, 138, 140, 142, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 161], "postgr": [0, 1, 2, 3, 4, 5, 10, 13, 67, 77], "just": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 37, 40, 43, 44, 48, 49, 50, 51, 52, 54, 56, 57, 58, 64, 66, 67, 68, 70, 71, 75, 76, 77, 80, 84, 85, 87, 90, 91, 92, 94, 97, 98, 101, 103, 104, 113, 117, 119, 121, 122, 124, 128, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 146, 147, 148, 150, 151, 154, 155, 157, 158, 162, 163], "suppli": [0, 1, 3, 4, 8, 11, 12, 13, 20, 21, 23, 25, 26, 30, 31, 33, 34, 35, 36, 41, 44, 49, 56, 57, 59, 64, 65, 66, 67, 68, 73, 87, 88, 91, 96, 101, 102, 103, 118, 119, 121, 128, 129, 132, 135, 137, 141, 146, 151, 155], "col1": [0, 4, 13, 19, 25, 31, 32, 34, 44, 49, 54, 56, 62, 64, 65, 67, 101, 123, 126, 137], "col2": [0, 4, 13, 25, 31, 32, 34, 44, 49, 54, 56, 62, 64, 65, 67, 101, 123, 126, 137], "__mod__": [0, 50, 56], "oper": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 20, 26, 27, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 56, 58, 59, 60, 61, 64, 65, 66, 68, 72, 74, 75, 76, 77, 80, 82, 84, 85, 87, 90, 92, 96, 97, 98, 99, 101, 102, 103, 104, 107, 112, 113, 115, 117, 118, 119, 121, 122, 123, 126, 127, 128, 131, 132, 133, 134, 135, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 156, 157, 160, 161, 162], "sql": [0, 1, 16, 17, 26, 27, 32, 34, 36, 38, 39, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 63, 66, 68, 72, 74, 75, 80, 81, 82, 84, 87, 88, 90, 92, 97, 98, 101, 102, 104, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 157, 158, 159, 160, 161, 162, 163], "express": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 22, 26, 27, 28, 31, 32, 33, 36, 37, 40, 41, 44, 46, 47, 48, 49, 52, 53, 54, 58, 59, 61, 64, 65, 66, 67, 72, 74, 75, 77, 80, 81, 82, 84, 88, 90, 92, 94, 97, 98, 100, 101, 102, 112, 115, 118, 120, 121, 123, 124, 126, 128, 129, 131, 132, 133, 134, 135, 137, 138, 140, 144, 145, 146, 147, 148, 149, 151, 157, 159, 160, 161, 162, 163], "order_bi": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 16, 17, 18, 20, 23, 24, 25, 26, 31, 44, 54, 55, 56, 57, 64, 65, 67, 75, 80, 84, 91, 94, 102, 104, 119, 123, 124, 128, 130, 134, 137, 138, 140, 148, 151, 155, 156, 163], "mapper": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 25, 27, 31, 36, 37, 39, 47, 55, 57, 70, 75, 77, 80, 82, 84, 85, 88, 90, 91, 93, 95, 96, 98, 100, 101, 102, 103, 107, 112, 113, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 140, 141, 145, 146, 147, 149, 151, 152], "properti": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 21, 23, 24, 26, 34, 41, 47, 48, 49, 53, 75, 80, 83, 84, 85, 87, 88, 90, 91, 93, 94, 101, 102, 103, 107, 110, 115, 117, 118, 123, 126, 129, 131, 132, 133, 137, 140, 142, 143, 146, 149], "inherit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 19, 20, 24, 27, 31, 32, 33, 35, 36, 40, 43, 45, 48, 49, 54, 56, 59, 62, 64, 65, 66, 67, 68, 70, 71, 75, 80, 87, 90, 92, 93, 95, 96, 97, 101, 102, 107, 116, 117, 118, 120, 123, 124, 127, 128, 131, 132, 134, 136, 137, 138, 140, 146, 147, 149, 150], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 27, 28, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 68, 71, 72, 74, 75, 78, 79, 80, 81, 82, 83, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 104, 107, 112, 115, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 157, 158, 160, 161, 163], "column": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 27, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 53, 54, 55, 58, 59, 61, 72, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 90, 91, 92, 93, 95, 97, 98, 99, 101, 102, 104, 106, 107, 113, 115, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 134, 135, 137, 139, 140, 141, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 161, 162, 163], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 25, 27, 31, 34, 35, 36, 37, 39, 40, 41, 42, 44, 46, 47, 48, 49, 53, 54, 56, 60, 61, 62, 63, 69, 76, 78, 79, 80, 81, 84, 85, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 113, 115, 116, 117, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 140, 142, 143, 146, 148, 150, 151, 156, 161, 163], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 22, 27, 28, 30, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 69, 72, 74, 76, 79, 80, 81, 84, 88, 92, 93, 97, 99, 100, 101, 107, 112, 113, 115, 116, 117, 119, 120, 121, 123, 126, 127, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 152, 153, 154, 158, 159, 160, 161, 162], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 23, 24, 26, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 68, 70, 72, 75, 76, 80, 82, 83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 103, 104, 107, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 148, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163], "updat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 27, 30, 31, 37, 40, 41, 42, 43, 45, 46, 48, 49, 50, 53, 54, 56, 59, 61, 62, 64, 70, 72, 75, 76, 80, 81, 82, 87, 90, 92, 94, 97, 98, 99, 102, 112, 117, 119, 120, 124, 127, 129, 132, 133, 135, 137, 139, 140, 142, 145, 146, 148, 149, 153, 154, 155, 157, 160, 163], "delet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 27, 30, 31, 41, 42, 45, 46, 48, 49, 50, 52, 53, 54, 56, 62, 64, 65, 66, 67, 68, 72, 75, 80, 82, 90, 97, 98, 99, 102, 103, 104, 112, 113, 115, 119, 120, 123, 127, 128, 132, 134, 135, 136, 137, 140, 141, 142, 145, 146, 149, 152, 153, 154, 155, 157, 160, 163], "convert_unicod": [0, 2, 3, 4, 5, 8, 12, 37, 48, 59, 64, 65, 66], "true": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 22, 24, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 62, 64, 65, 66, 67, 68, 71, 72, 75, 76, 77, 78, 80, 83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 113, 115, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 155, 158, 161, 162, 163], "reflect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 26, 27, 31, 40, 41, 45, 46, 53, 55, 57, 58, 60, 64, 80, 81, 84, 93, 97, 102, 103, 107, 119, 131, 132, 137, 140, 143, 149], "wa": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 32, 33, 34, 35, 37, 39, 40, 41, 45, 48, 49, 51, 52, 54, 55, 56, 57, 59, 61, 64, 65, 66, 67, 68, 71, 75, 76, 77, 78, 80, 84, 85, 87, 89, 90, 92, 97, 98, 99, 101, 102, 104, 113, 115, 117, 122, 123, 126, 128, 132, 133, 135, 136, 137, 139, 140, 146, 147, 148, 149, 150, 151, 155, 156, 157, 161, 162, 163], "fail": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 33, 37, 40, 41, 51, 58, 59, 64, 66, 67, 68, 70, 71, 75, 77, 80, 82, 85, 90, 94, 98, 99, 101, 102, 103, 119, 124, 128, 129, 135, 136, 146, 147, 148], "ha": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 22, 26, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 54, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 72, 74, 76, 78, 79, 80, 82, 84, 85, 87, 89, 90, 91, 92, 94, 96, 97, 98, 101, 102, 103, 104, 106, 107, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 160, 161, 162], "been": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 22, 24, 25, 26, 31, 32, 33, 35, 37, 39, 40, 41, 45, 48, 49, 50, 51, 52, 54, 56, 57, 62, 64, 65, 66, 67, 68, 72, 76, 80, 82, 84, 85, 87, 89, 90, 91, 96, 97, 99, 102, 103, 104, 107, 112, 116, 117, 118, 121, 122, 123, 124, 128, 132, 134, 135, 137, 140, 141, 146, 147, 148, 149, 150, 151, 152, 154, 155, 161, 162, 163], "still": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 32, 33, 34, 35, 40, 44, 45, 48, 49, 51, 52, 54, 56, 57, 58, 59, 64, 65, 67, 68, 70, 71, 72, 74, 82, 84, 85, 90, 91, 92, 97, 101, 103, 104, 118, 121, 122, 123, 124, 126, 128, 132, 133, 134, 136, 137, 140, 141, 146, 147, 148, 149, 150, 151, 152, 156, 160, 161, 162, 163], "weren": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 22, 31, 97, 139, 149, 151], "t": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 43, 44, 48, 49, 51, 52, 54, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 72, 74, 75, 76, 78, 79, 80, 84, 85, 87, 90, 91, 94, 96, 97, 98, 101, 102, 104, 113, 117, 121, 122, 124, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 146, 147, 148, 149, 151, 154, 155, 157, 162, 163], "work": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 20, 27, 30, 32, 34, 35, 36, 37, 38, 39, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 70, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 94, 95, 96, 97, 98, 101, 102, 103, 104, 112, 115, 118, 119, 120, 121, 122, 123, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 154, 156, 158, 159, 160, 162], "have": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 22, 23, 24, 25, 26, 30, 31, 32, 33, 35, 36, 37, 39, 40, 43, 45, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 80, 84, 85, 87, 88, 90, 91, 92, 94, 96, 97, 98, 99, 101, 102, 103, 104, 107, 113, 115, 117, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 160, 161, 162, 163], "typedecor": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 23, 24, 41, 58, 59, 60, 64, 67, 68, 70, 76, 78, 80, 117], "again": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 22, 24, 25, 26, 31, 32, 33, 35, 50, 51, 54, 57, 67, 68, 70, 71, 75, 78, 80, 84, 90, 91, 97, 102, 104, 118, 126, 128, 136, 137, 141, 146, 147, 148, 149, 150, 151, 152, 155, 157, 161, 162, 163], "mysql": [0, 1, 16, 17, 20, 25, 27, 30, 31, 32, 34, 35, 36, 39, 40, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 63, 64, 66, 67, 70, 72, 78, 80, 81, 85, 94, 98, 101, 122, 123, 128, 137, 140, 141, 147, 150, 155, 156], "binari": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 17, 20, 23, 33, 43, 44, 49, 50, 54, 56, 59, 60, 66, 67, 73, 78, 124, 126, 136, 155], "convert": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 35, 37, 40, 48, 49, 52, 54, 56, 57, 58, 59, 64, 65, 66, 67, 68, 75, 76, 84, 87, 91, 98, 101, 102, 104, 113, 117, 118, 123, 128, 129, 130, 136, 137, 138, 140, 147, 155, 157], "arrai": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 21, 23, 33, 35, 44, 49, 54, 56, 58, 59, 60, 65, 78, 87, 101, 115, 117, 123, 151, 155, 161], "output": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 21, 24, 25, 32, 33, 35, 37, 44, 48, 49, 51, 54, 56, 57, 59, 64, 65, 67, 71, 72, 76, 77, 80, 82, 87, 90, 98, 101, 123, 136, 137, 151, 157, 158], "buffer": [0, 2, 5, 7, 8, 9, 13, 21, 22, 23, 38, 44, 64, 65, 66, 67, 70, 71, 90, 102, 137, 138, 146], "pickletyp": [0, 2, 3, 4, 5, 6, 7, 13, 16, 17, 19, 33, 59, 60, 76, 117], "attribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 22, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 71, 72, 76, 78, 80, 81, 83, 84, 85, 87, 88, 90, 91, 92, 94, 96, 99, 100, 101, 102, 103, 107, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 126, 127, 128, 131, 132, 134, 135, 136, 137, 139, 140, 143, 145, 147, 151, 152, 155, 156, 157, 161, 163], "py": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 31, 48, 65, 68, 71, 76, 97, 98, 118, 147], "memori": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 22, 23, 24, 25, 26, 37, 38, 39, 43, 47, 49, 51, 55, 57, 64, 65, 70, 71, 75, 80, 85, 90, 102, 117, 119, 124, 126, 128, 132, 137, 138, 139, 141, 146, 147, 148, 149, 150, 151, 152, 158, 162, 163], "leak": [0, 4, 5, 6, 7, 8, 9, 10, 11, 13, 18, 22, 25, 102], "onc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 31, 32, 33, 35, 36, 37, 39, 40, 43, 48, 49, 51, 53, 54, 56, 57, 62, 64, 68, 70, 71, 76, 77, 80, 85, 90, 96, 97, 98, 101, 102, 107, 116, 117, 118, 121, 122, 123, 126, 128, 130, 132, 135, 136, 137, 138, 139, 141, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 161, 162, 163], "all": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 20, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 74, 76, 78, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 94, 96, 97, 101, 102, 103, 104, 107, 112, 113, 116, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 160, 161, 162, 163], "unittest": [0, 1, 2, 4, 8, 150], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163], "qualifi": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 21, 22, 23, 26, 31, 48, 49, 53, 54, 57, 64, 67, 80, 84, 113, 124, 137], "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 23, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 88, 90, 91, 92, 93, 96, 97, 98, 99, 102, 103, 104, 107, 112, 113, 115, 117, 119, 121, 122, 123, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 161, 162, 163], "databas": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 44, 45, 46, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 62, 65, 67, 69, 70, 72, 74, 75, 76, 77, 80, 81, 84, 85, 87, 90, 92, 96, 97, 98, 99, 101, 102, 103, 104, 112, 118, 119, 121, 122, 123, 124, 128, 129, 132, 133, 134, 137, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163], "each": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 48, 49, 51, 52, 54, 56, 57, 59, 61, 63, 64, 65, 66, 67, 68, 70, 75, 76, 77, 78, 80, 82, 83, 84, 85, 87, 88, 90, 92, 94, 95, 96, 97, 98, 101, 102, 103, 104, 107, 112, 113, 116, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 159, 160, 161, 162, 163], "one": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 21, 23, 25, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 44, 45, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 71, 74, 75, 78, 80, 82, 83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 101, 102, 103, 104, 107, 113, 115, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 160, 161, 162, 163], "bug": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 68, 70, 78], "where": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 70, 71, 72, 75, 76, 78, 80, 82, 83, 84, 85, 87, 88, 90, 91, 92, 94, 96, 97, 98, 101, 102, 103, 104, 107, 112, 113, 115, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 144, 145, 146, 149, 150, 151, 152, 154, 156, 157, 161, 162, 163], "default": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 24, 27, 31, 33, 34, 36, 37, 39, 40, 42, 43, 44, 45, 46, 48, 51, 53, 54, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 70, 71, 73, 76, 77, 78, 80, 81, 82, 84, 85, 87, 88, 90, 91, 94, 96, 97, 98, 101, 102, 103, 104, 107, 113, 116, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 131, 132, 133, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 157, 158, 161, 163], "would": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 35, 36, 37, 39, 43, 44, 45, 48, 49, 51, 52, 54, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 75, 76, 77, 78, 80, 84, 85, 87, 88, 90, 91, 92, 94, 97, 98, 101, 102, 103, 104, 107, 113, 115, 116, 118, 119, 121, 122, 123, 124, 126, 128, 129, 132, 133, 135, 136, 137, 138, 140, 144, 146, 147, 148, 149, 150, 151, 152, 155, 156, 161, 162, 163], "clobber": 0, "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 24, 26, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 64, 65, 66, 71, 75, 76, 77, 78, 79, 80, 84, 85, 87, 88, 90, 91, 92, 94, 97, 98, 99, 102, 103, 104, 112, 116, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 149, 150, 151, 152, 156, 157, 162, 163], "claus": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 22, 23, 26, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 48, 49, 54, 56, 57, 58, 59, 61, 64, 65, 66, 74, 76, 78, 80, 88, 90, 94, 97, 101, 102, 104, 112, 113, 121, 122, 123, 127, 128, 130, 131, 133, 136, 137, 139, 140, 145, 146, 151, 156, 162, 163], "insert": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 24, 27, 30, 31, 33, 34, 37, 39, 40, 41, 42, 43, 45, 46, 48, 49, 53, 54, 56, 58, 59, 61, 62, 66, 70, 72, 77, 78, 80, 81, 82, 84, 87, 88, 90, 94, 97, 98, 102, 112, 117, 119, 124, 132, 133, 135, 137, 138, 139, 140, 141, 145, 146, 148, 150, 151, 152, 153, 155, 156, 157, 160, 161, 163], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 26, 27, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 55, 56, 58, 59, 61, 62, 64, 65, 68, 72, 75, 78, 79, 80, 81, 82, 83, 87, 88, 90, 91, 92, 94, 95, 96, 97, 99, 103, 104, 107, 112, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 128, 129, 130, 131, 132, 133, 135, 138, 140, 141, 142, 143, 144, 145, 146, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160], "tabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19, 20, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 53, 55, 56, 58, 59, 61, 62, 63, 69, 71, 72, 76, 77, 78, 80, 81, 83, 85, 88, 90, 92, 93, 95, 97, 101, 102, 103, 106, 107, 112, 117, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 132, 136, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 157, 160, 162, 163], "def": [0, 5, 6, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 43, 45, 48, 49, 51, 52, 56, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 74, 76, 77, 78, 84, 87, 88, 90, 91, 92, 94, 97, 98, 101, 102, 103, 104, 107, 113, 115, 117, 118, 121, 123, 124, 126, 128, 129, 130, 132, 133, 135, 136, 137, 139, 147, 148, 149, 150, 151, 155, 161], "w": [0, 3, 5, 7, 10, 11, 13, 17, 20, 26, 56, 71, 98, 102, 122], "schema": [0, 1, 18, 21, 24, 25, 26, 27, 30, 33, 34, 35, 38, 39, 41, 43, 45, 46, 48, 54, 56, 57, 58, 59, 61, 65, 66, 70, 72, 76, 80, 81, 82, 84, 85, 92, 93, 94, 98, 103, 118, 120, 123, 124, 134, 137, 139, 157, 159, 160, 161], "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 29, 30, 33, 34, 35, 36, 38, 40, 41, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 65, 67, 69, 70, 74, 75, 76, 77, 78, 80, 83, 84, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 104, 107, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163], "forc": [0, 2, 3, 5, 6, 8, 9, 11, 12, 13, 16, 19, 22, 31, 33, 35, 40, 41, 44, 48, 49, 56, 58, 59, 64, 66, 67, 68, 78, 85, 87, 101, 123, 128, 132, 137, 145, 147, 149], "engin": [0, 1, 3, 4, 16, 17, 18, 19, 20, 21, 23, 25, 27, 30, 32, 33, 34, 35, 39, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 62, 64, 66, 67, 68, 72, 74, 76, 78, 80, 81, 82, 85, 90, 94, 96, 97, 98, 103, 104, 107, 112, 120, 121, 122, 123, 132, 137, 141, 145, 146, 147, 148, 151, 152, 154, 155, 156, 157, 159, 160, 161, 162], "connect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 27, 28, 32, 34, 35, 36, 39, 41, 43, 44, 45, 46, 47, 48, 52, 53, 54, 56, 59, 72, 74, 76, 77, 78, 80, 81, 82, 84, 85, 90, 96, 97, 98, 101, 103, 112, 120, 123, 124, 128, 132, 135, 136, 137, 138, 139, 145, 146, 147, 148, 149, 154, 155, 156, 159, 160, 161, 162], "parenthesi": [0, 2, 3, 4, 5, 7, 8, 10, 11, 12, 13, 22, 25, 35, 43, 44, 49, 50, 54, 56, 57, 72, 101, 123, 155], "correctli": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 21, 23, 24, 26, 31, 35, 37, 49, 50, 51, 54, 56, 61, 64, 66, 67, 68, 70, 72, 77, 84, 85, 87, 90, 101, 103, 104, 118, 122, 123, 124, 136, 137, 138, 146, 147, 155, 157], "subqueri": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 22, 23, 35, 36, 42, 43, 44, 46, 49, 54, 56, 64, 66, 77, 80, 96, 98, 101, 122, 123, 124, 126, 127, 130, 131, 133, 134, 137, 140, 144, 154, 156, 163], "historyarrayset": [0, 1], "get": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 21, 23, 24, 25, 30, 31, 32, 33, 35, 37, 41, 47, 48, 49, 51, 52, 54, 56, 57, 58, 59, 64, 65, 66, 67, 70, 72, 76, 78, 80, 81, 84, 85, 87, 90, 91, 92, 94, 97, 99, 101, 102, 103, 104, 107, 113, 115, 118, 119, 121, 122, 123, 124, 128, 129, 132, 136, 137, 139, 144, 145, 146, 148, 150, 151, 153, 154, 155, 161, 163], "extend": [0, 3, 5, 7, 8, 9, 10, 11, 12, 13, 18, 24, 25, 26, 30, 31, 34, 36, 37, 54, 57, 59, 62, 67, 68, 76, 77, 79, 80, 81, 87, 88, 92, 97, 100, 101, 103, 115, 116, 117, 118, 120, 122, 133, 134, 140, 148, 149, 160, 163], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 20, 25, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 62, 64, 65, 67, 68, 71, 76, 77, 78, 79, 80, 84, 85, 87, 88, 91, 92, 94, 95, 96, 97, 98, 101, 103, 104, 107, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 134, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 161, 162, 163], "lazyload": [0, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 16, 17, 20, 21, 22, 24, 25, 77, 98, 102, 127, 128, 137, 146], "other": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 20, 22, 23, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 39, 40, 41, 43, 44, 47, 48, 49, 50, 51, 53, 54, 56, 58, 59, 61, 62, 64, 65, 66, 67, 70, 71, 72, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 93, 95, 96, 97, 98, 101, 103, 104, 107, 112, 113, 115, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 156, 160, 162, 163], "comparison": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 22, 25, 26, 30, 31, 42, 43, 44, 49, 54, 56, 57, 58, 59, 64, 67, 70, 76, 79, 90, 97, 101, 102, 104, 113, 123, 128, 129, 131, 133, 138, 139, 140, 142, 143, 145, 146, 151, 152, 155, 163], "besid": [0, 6, 20, 25, 77, 80, 128, 155], "two": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 62, 64, 65, 67, 68, 70, 71, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 90, 91, 92, 94, 96, 98, 101, 103, 104, 107, 113, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 145, 146, 147, 149, 151, 152, 154, 155, 157, 160, 161, 162, 163], "join": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19, 23, 27, 32, 34, 36, 41, 42, 44, 46, 48, 49, 50, 54, 56, 66, 67, 70, 72, 75, 76, 80, 83, 90, 92, 94, 96, 97, 101, 103, 120, 123, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 149], "condit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 31, 34, 36, 40, 41, 44, 49, 51, 56, 57, 58, 64, 66, 67, 68, 70, 74, 75, 77, 80, 83, 90, 94, 97, 99, 101, 104, 118, 123, 128, 129, 130, 131, 132, 136, 137, 138, 140, 142, 144, 151], "point": [0, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 18, 19, 22, 23, 24, 25, 26, 31, 37, 39, 40, 41, 45, 47, 48, 49, 51, 55, 56, 57, 59, 64, 65, 66, 67, 68, 70, 71, 76, 77, 78, 80, 84, 85, 88, 90, 94, 97, 98, 102, 103, 104, 107, 113, 117, 121, 122, 124, 128, 132, 137, 138, 140, 142, 146, 147, 149, 150, 151, 163], "samem": 0, "construct_new": 0, "flag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 45, 48, 49, 51, 52, 54, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 70, 75, 77, 78, 80, 82, 84, 85, 88, 90, 97, 98, 101, 102, 103, 104, 117, 122, 123, 124, 128, 129, 132, 133, 136, 137, 140, 141, 146, 147, 149, 150, 151, 152, 158, 160, 162], "__new__": [0, 13, 97], "creat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 23, 24, 26, 30, 31, 34, 35, 36, 38, 40, 41, 43, 44, 45, 46, 48, 51, 52, 53, 54, 56, 58, 59, 60, 61, 64, 66, 67, 68, 71, 72, 75, 76, 78, 80, 81, 83, 84, 85, 87, 88, 92, 93, 96, 97, 98, 101, 102, 103, 104, 107, 113, 115, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 161, 162, 163], "instanc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 30, 31, 32, 33, 34, 37, 39, 40, 43, 44, 45, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 64, 65, 67, 68, 72, 75, 76, 80, 84, 85, 87, 88, 90, 91, 98, 99, 100, 101, 102, 103, 104, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 146, 147, 148, 149, 150, 154, 155, 156, 161, 163], "instead": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 37, 40, 43, 45, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 80, 82, 84, 85, 88, 90, 91, 97, 98, 101, 102, 103, 104, 107, 113, 115, 118, 121, 122, 123, 126, 128, 129, 130, 132, 133, 134, 136, 137, 138, 140, 146, 147, 148, 149, 150, 151, 152, 155, 157, 161, 163], "__init__": [0, 3, 4, 6, 7, 11, 12, 13, 15, 17, 18, 25, 30, 31, 32, 33, 34, 35, 36, 44, 48, 49, 51, 52, 54, 56, 58, 59, 60, 64, 65, 66, 67, 72, 87, 88, 90, 91, 95, 97, 101, 102, 112, 113, 115, 117, 118, 119, 121, 123, 131, 132, 134, 137, 139, 146, 147, 148, 161, 162], "standard": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 21, 22, 23, 25, 26, 30, 31, 33, 34, 35, 37, 41, 48, 49, 51, 54, 55, 57, 60, 64, 65, 66, 67, 68, 70, 71, 80, 82, 90, 94, 98, 101, 102, 113, 116, 119, 129, 134, 139, 140, 146, 147, 149, 151, 155, 158], "selectresult": [0, 1, 2, 3, 16, 26], "svn": 0, "miss": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 21, 22, 24, 25, 31, 70, 82, 90, 103, 115, 118, 119, 124, 128, 132, 136, 146, 152, 161, 162], "last": [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 25, 31, 33, 36, 37, 48, 51, 54, 56, 57, 58, 59, 64, 66, 67, 68, 70, 71, 76, 80, 87, 96, 98, 117, 119, 123, 128, 129, 130, 132, 134, 136, 137, 139, 149, 151, 152, 154, 155, 162, 163], "time": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 20, 21, 23, 24, 25, 26, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 65, 66, 67, 69, 71, 75, 76, 77, 78, 80, 84, 85, 87, 90, 94, 96, 97, 101, 102, 104, 107, 113, 117, 121, 123, 124, 126, 127, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163], "tweak": [0, 1, 2, 5, 6, 7, 8, 9, 12], "allow": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 74, 75, 76, 77, 78, 80, 83, 84, 85, 87, 90, 91, 92, 94, 96, 97, 98, 101, 102, 103, 104, 107, 112, 116, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 132, 133, 134, 135, 136, 137, 138, 140, 141, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 160, 161, 162], "mani": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 21, 23, 30, 31, 32, 33, 37, 40, 43, 44, 47, 48, 49, 50, 52, 54, 56, 57, 62, 64, 65, 66, 67, 69, 72, 74, 75, 76, 77, 78, 80, 81, 83, 87, 90, 91, 92, 94, 97, 98, 101, 102, 104, 113, 120, 121, 122, 123, 128, 130, 132, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 161, 162, 163], "relationship": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 23, 27, 31, 32, 44, 49, 54, 56, 57, 66, 67, 72, 77, 80, 81, 90, 91, 92, 93, 95, 96, 97, 101, 102, 104, 107, 119, 120, 123, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 139, 145, 146, 147, 148, 149, 153, 155, 159, 160, 161, 162], "itself": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 37, 39, 40, 43, 44, 45, 47, 48, 49, 51, 52, 54, 56, 57, 58, 59, 64, 65, 66, 67, 68, 71, 76, 77, 78, 80, 82, 84, 85, 87, 88, 90, 91, 92, 94, 96, 97, 99, 101, 102, 103, 104, 107, 113, 115, 117, 118, 119, 121, 122, 123, 124, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 155, 157, 161, 162, 163], "via": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 21, 23, 24, 25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 80, 84, 85, 88, 90, 92, 94, 95, 96, 97, 98, 101, 102, 103, 104, 107, 112, 113, 117, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 136, 137, 138, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 155, 156, 161, 163], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 24, 26, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 72, 74, 76, 78, 79, 80, 82, 83, 84, 85, 87, 88, 90, 92, 93, 94, 97, 98, 99, 101, 102, 104, 107, 112, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163], "associ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 21, 22, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 39, 40, 41, 44, 45, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 66, 67, 68, 71, 75, 78, 80, 81, 83, 85, 87, 88, 90, 91, 92, 94, 96, 97, 99, 102, 103, 112, 113, 114, 115, 117, 118, 120, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 151, 155, 161, 162, 163], "small": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 13, 17, 18, 19, 20, 21, 23, 25, 26, 31, 45, 48, 51, 54, 65, 76, 96, 98, 128, 132, 155, 161], "translate_row": [0, 9, 21], "function": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 21, 23, 25, 27, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 61, 64, 65, 66, 69, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 97, 98, 101, 103, 104, 107, 113, 114, 116, 117, 118, 119, 121, 122, 123, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 160, 161, 162, 163], "polymorph": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 19, 20, 21, 24, 25, 80, 96, 98, 101, 107, 123, 127, 131, 132, 137, 147], "exampl": [0, 1, 2, 3, 4, 15, 16, 17, 20, 22, 23, 24, 25, 26, 27, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 64, 65, 67, 68, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97, 101, 102, 103, 104, 106, 107, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 160, 161, 162, 163], "create_engin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 31, 33, 37, 38, 39, 40, 45, 46, 48, 49, 51, 52, 56, 57, 59, 64, 65, 66, 67, 68, 70, 71, 76, 77, 78, 80, 96, 98, 101, 102, 103, 107, 123, 136, 139, 146, 147, 150, 151, 158, 160], "cgi": [0, 6], "parse_qsl": [0, 6], "read": [0, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 17, 20, 22, 23, 24, 25, 26, 27, 31, 32, 36, 37, 40, 49, 51, 54, 57, 59, 62, 64, 65, 66, 68, 71, 74, 76, 77, 80, 87, 90, 97, 101, 102, 114, 124, 128, 129, 130, 132, 133, 136, 137, 140, 146, 149, 150, 151, 152, 157, 160, 161, 162, 163], "queri": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 27, 30, 31, 36, 44, 48, 49, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 70, 71, 72, 75, 78, 79, 80, 81, 82, 83, 85, 87, 88, 90, 99, 100, 102, 103, 107, 112, 113, 114, 115, 120, 121, 123, 128, 129, 131, 132, 133, 134, 135, 136, 139, 140, 142, 143, 145, 146, 149, 150, 152, 153, 155, 159, 160, 161, 162], "string": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 23, 25, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 48, 49, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 69, 70, 71, 72, 75, 76, 80, 83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 98, 101, 102, 103, 104, 107, 112, 113, 115, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 149, 151, 152, 154, 155, 157, 158, 161], "out": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 31, 32, 33, 35, 37, 40, 41, 48, 49, 51, 52, 54, 56, 57, 59, 61, 64, 65, 66, 67, 68, 72, 74, 77, 80, 85, 87, 90, 101, 102, 104, 117, 119, 121, 123, 124, 126, 128, 133, 137, 139, 140, 141, 145, 146, 148, 149, 151, 153, 154, 155, 158, 160, 161, 162, 163], "window": [0, 5, 6, 8, 9, 10, 11, 12, 13, 21, 37, 44, 56, 64, 66, 68, 128, 137, 142, 151], "cast": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 21, 24, 33, 42, 44, 49, 52, 56, 58, 59, 64, 66, 67, 68, 98, 115, 121, 124, 132, 136, 140], "local_tim": 0, "local_timestamp": 0, "localtim": [0, 42, 44, 136], "localtimestamp": [0, 6, 42, 44], "order": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 23, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 48, 49, 51, 52, 54, 56, 58, 59, 61, 62, 65, 66, 67, 68, 70, 71, 72, 76, 78, 80, 82, 85, 87, 88, 90, 91, 92, 96, 97, 98, 101, 102, 103, 104, 107, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 129, 130, 132, 133, 135, 136, 137, 138, 140, 141, 146, 147, 148, 149, 150, 151, 152, 154, 157, 160, 161, 162, 163], "BY": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 23, 24, 26, 31, 44, 48, 53, 54, 56, 57, 64, 65, 66, 67, 72, 80, 122, 124, 128, 130, 135, 137, 138, 148, 151, 156, 157, 163], "compil": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 48, 49, 50, 52, 54, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 74, 76, 78, 80, 82, 84, 98, 101, 102, 104, 123, 136, 137, 146, 148, 154, 155, 156], "wed": [0, 3, 5, 6], "apr": [0, 2, 3, 5, 6], "12": [0, 1, 3, 4, 6, 15, 16, 18, 20, 22, 23, 25, 26, 31, 35, 37, 56, 57, 59, 63, 67, 68, 70, 76, 91, 113, 117, 118, 129, 134, 147, 157], "m": [0, 1, 2, 4, 5, 7, 8, 9, 11, 16, 17, 21, 22, 24, 25, 30, 32, 33, 35, 40, 49, 56, 57, 64, 65, 66, 67, 68, 70, 72, 98, 101, 103, 123, 138, 147], "courtesi": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13], "rick": 0, "morrison": 0, "runar": 0, "petursson": 0, "latest": [0, 5, 6, 7, 8, 9, 19, 26, 66, 82, 139], "sqlsoup": [0, 5, 6, 9, 20, 103], "j": [0, 11, 24, 25, 49, 54, 56, 57, 98, 124, 138], "elli": 0, "activemapp": [0, 1, 2, 3, 16], "preliminari": [0, 2, 4, 5], "jeff": [0, 6, 8], "watkin": 0, "mod": [0, 1, 2, 16], "system": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 22, 24, 25, 26, 30, 31, 32, 33, 34, 35, 37, 39, 43, 44, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 63, 65, 68, 70, 71, 75, 76, 77, 80, 81, 82, 84, 87, 90, 92, 96, 97, 98, 100, 102, 103, 104, 105, 107, 112, 113, 116, 121, 123, 124, 126, 128, 129, 132, 134, 136, 137, 140, 146, 147, 148, 149, 151, 155, 160], "which": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163], "pluggabl": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 20, 21, 25, 31, 32, 33, 37, 40, 41, 45, 47, 48, 49, 51, 54, 55, 56, 57, 58, 59, 61, 64, 66, 67, 68, 70, 71, 76, 84, 91, 95, 96, 97, 98, 116, 117, 118, 119, 123, 132, 137, 139, 140, 147, 151, 156, 158, 161], "modifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 31, 32, 33, 35, 36, 38, 40, 42, 43, 44, 48, 49, 57, 58, 61, 64, 65, 66, 67, 70, 77, 80, 85, 87, 90, 94, 97, 101, 102, 103, 104, 113, 116, 117, 118, 121, 123, 124, 128, 129, 132, 133, 134, 135, 136, 137, 138, 140, 144, 146, 147, 148, 149, 150, 151, 152, 156, 157, 163], "augment": [0, 3, 7, 9, 13, 16, 19, 22, 24, 31, 37, 49, 51, 58, 59, 60, 67, 80, 82, 91, 93, 97, 98, 103, 117, 123, 124, 128, 129, 131, 132, 137], "core": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 27, 31, 32, 33, 36, 38, 39, 44, 47, 49, 50, 51, 53, 54, 56, 57, 59, 61, 64, 65, 66, 67, 68, 75, 77, 78, 80, 81, 82, 90, 97, 98, 100, 104, 113, 114, 123, 130, 131, 137, 139, 143, 145, 146, 147, 148, 150, 151, 153, 157, 159, 160, 162], "install_mod": 0, "modnam": [0, 1], "first": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 21, 22, 23, 25, 31, 32, 33, 34, 35, 37, 39, 40, 44, 45, 48, 49, 50, 51, 54, 56, 57, 59, 61, 62, 64, 65, 66, 67, 68, 70, 71, 72, 75, 76, 78, 79, 80, 84, 85, 87, 88, 90, 91, 94, 96, 97, 98, 101, 102, 103, 104, 107, 112, 113, 115, 117, 119, 120, 121, 122, 123, 124, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 160, 161, 162, 163], "select": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 23, 24, 27, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 56, 58, 59, 61, 62, 64, 66, 67, 68, 71, 74, 75, 76, 77, 78, 79, 80, 82, 85, 88, 90, 92, 96, 97, 98, 99, 101, 102, 103, 104, 107, 112, 113, 115, 118, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 144, 146, 148, 149, 150, 152, 153, 156, 157, 158, 160, 161, 162, 163], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 22, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 47, 48, 49, 50, 52, 54, 56, 57, 58, 59, 61, 64, 65, 68, 70, 72, 75, 76, 78, 79, 80, 82, 83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 97, 98, 99, 101, 102, 103, 104, 107, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 137, 138, 139, 140, 145, 146, 148, 149, 150, 152, 157, 158, 160, 161, 162, 163], "gener": [0, 1, 10, 11, 16, 19, 21, 26, 27, 30, 32, 33, 34, 36, 39, 40, 41, 42, 43, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 64, 65, 67, 68, 71, 72, 74, 75, 76, 77, 80, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 104, 107, 112, 113, 115, 116, 118, 121, 122, 123, 124, 128, 131, 132, 133, 134, 137, 138, 139, 140, 141, 145, 146, 147, 148, 151, 152, 155, 156, 157, 160, 161, 162, 163], "turn": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 36, 37, 48, 49, 51, 54, 56, 57, 59, 65, 66, 67, 68, 70, 77, 80, 90, 94, 98, 104, 118, 128, 132, 137, 139, 155, 163], "rang": [0, 2, 3, 5, 7, 8, 10, 11, 12, 13, 16, 19, 20, 21, 24, 25, 26, 49, 51, 54, 56, 57, 64, 65, 68, 70, 71, 76, 80, 87, 98, 101, 117, 119, 122, 123, 128, 134, 137, 140, 151, 155, 156], "limit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 20, 24, 26, 28, 32, 33, 34, 35, 36, 37, 41, 48, 49, 51, 53, 54, 56, 59, 65, 67, 68, 71, 72, 78, 80, 85, 87, 88, 90, 91, 94, 97, 98, 101, 102, 103, 112, 118, 119, 121, 122, 128, 132, 136, 137, 138, 140, 142, 146, 147, 148, 151, 155, 156, 157, 163], "offset": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 15, 17, 48, 54, 56, 75, 87, 88, 128, 137, 151], "jona": 0, "borgstr": 0, "factor": [0, 1, 13, 31, 68, 71, 76, 149], "capabl": [0, 3, 5, 6, 7, 8, 9, 11, 13, 16, 19, 21, 22, 25, 26, 32, 35, 44, 48, 51, 52, 54, 56, 57, 59, 64, 66, 67, 70, 76, 77, 82, 90, 97, 101, 121, 122, 128, 129, 136, 137, 140, 141, 146, 147, 148, 149, 155, 160], "separ": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 21, 24, 25, 26, 31, 32, 34, 35, 37, 48, 49, 51, 52, 54, 56, 57, 59, 63, 64, 65, 66, 67, 68, 70, 75, 78, 80, 82, 84, 88, 90, 91, 94, 96, 98, 101, 102, 103, 107, 113, 118, 121, 124, 126, 128, 129, 130, 132, 134, 137, 138, 140, 146, 147, 150, 151, 155, 157, 162, 163], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 106, 107, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 144, 145, 146, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163], "session": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 20, 24, 27, 30, 31, 34, 37, 39, 41, 44, 45, 49, 51, 52, 54, 55, 56, 59, 64, 65, 66, 67, 68, 72, 75, 76, 79, 80, 81, 83, 84, 85, 87, 88, 91, 98, 100, 101, 103, 107, 112, 113, 115, 117, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 144, 152, 154, 155, 156, 159, 160], "centric": [0, 19, 46, 61, 82, 148, 153, 154, 156, 157, 160, 161, 162], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163], "improv": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 26, 35, 49, 51, 52, 56, 62, 71, 90, 98, 101, 104, 123, 132, 136, 140, 146], "perform": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 22, 23, 24, 26, 27, 30, 32, 33, 34, 35, 37, 38, 40, 44, 45, 48, 49, 51, 52, 54, 56, 57, 59, 62, 63, 64, 65, 67, 68, 71, 72, 77, 80, 84, 85, 87, 90, 96, 97, 101, 102, 103, 113, 116, 119, 121, 123, 124, 128, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 146, 147, 150, 151, 152, 157, 158, 160, 161, 162, 163], "make": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 35, 36, 37, 39, 40, 43, 44, 45, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 72, 75, 76, 78, 79, 80, 84, 85, 87, 90, 91, 92, 96, 97, 98, 101, 102, 103, 104, 107, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 128, 129, 130, 132, 133, 135, 136, 137, 138, 140, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163], "thing": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 31, 32, 33, 49, 52, 54, 57, 68, 70, 71, 76, 77, 78, 80, 87, 90, 92, 97, 98, 103, 113, 117, 118, 124, 128, 132, 136, 137, 139, 151, 154, 155, 157, 158, 161, 162, 163], "possibl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 33, 35, 40, 41, 44, 48, 49, 51, 52, 54, 56, 57, 59, 62, 64, 66, 67, 68, 70, 77, 78, 80, 84, 87, 90, 92, 97, 104, 119, 121, 122, 123, 124, 128, 130, 132, 135, 137, 138, 140, 147, 148, 149, 150, 151, 152, 155, 162, 163], "objectstor": [0, 1, 3, 15], "refactor": [0, 1, 2, 3, 4, 5, 8, 11, 12, 13, 17, 21, 25], "offici": [0, 5, 7, 8, 9, 18, 20, 22, 62, 65, 128, 137], "wai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 35, 36, 37, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 64, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 87, 90, 91, 92, 94, 95, 96, 97, 98, 101, 102, 103, 104, 107, 113, 118, 119, 121, 122, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163], "save": [0, 1, 2, 3, 4, 5, 6, 7, 9, 13, 15, 16, 17, 18, 21, 22, 25, 30, 49, 68, 87, 90, 98, 102, 104, 121, 128, 132, 140, 145, 146, 147, 149, 163], "now": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 48, 49, 51, 52, 54, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 74, 76, 77, 78, 80, 82, 83, 84, 88, 90, 92, 94, 97, 101, 102, 103, 104, 105, 107, 113, 115, 117, 118, 122, 123, 124, 126, 128, 132, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 157, 160, 161, 162, 163], "flush": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 23, 24, 25, 26, 31, 33, 39, 41, 47, 67, 72, 76, 80, 84, 85, 87, 90, 91, 92, 97, 98, 99, 102, 112, 119, 123, 124, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 148, 149, 150, 151, 152], "The": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 24, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163], "begin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 20, 21, 22, 24, 25, 26, 31, 33, 34, 37, 40, 45, 48, 49, 51, 56, 57, 64, 67, 68, 70, 71, 76, 77, 88, 90, 92, 97, 102, 117, 139, 141, 145, 146, 151, 154, 155, 156, 161, 162, 163], "commit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 37, 39, 40, 45, 48, 51, 57, 59, 62, 64, 65, 66, 67, 68, 70, 72, 76, 79, 80, 84, 85, 88, 90, 97, 98, 102, 103, 117, 119, 123, 128, 129, 130, 133, 136, 138, 139, 141, 145, 146, 148, 149, 151, 152, 154, 156, 161, 163], "legacysess": 0, "establish": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 23, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 48, 49, 51, 52, 54, 56, 57, 59, 64, 65, 66, 67, 70, 76, 77, 80, 83, 84, 85, 87, 88, 90, 91, 92, 94, 97, 98, 101, 102, 103, 121, 122, 123, 124, 128, 132, 133, 134, 137, 138, 139, 140, 144, 146, 147, 148, 150, 151, 152, 154, 155, 157, 160, 162, 163], "behavior": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 27, 30, 31, 32, 33, 35, 36, 37, 39, 40, 43, 45, 48, 49, 50, 51, 52, 54, 56, 58, 59, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 83, 85, 87, 88, 89, 90, 91, 92, 97, 98, 101, 102, 104, 114, 115, 118, 119, 121, 122, 123, 124, 126, 128, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 145, 146, 147, 148, 150, 151, 155, 156, 157, 161, 162, 163], "until": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 31, 37, 40, 45, 51, 54, 62, 67, 68, 71, 74, 77, 80, 84, 85, 87, 90, 96, 97, 102, 104, 107, 119, 121, 122, 123, 124, 126, 129, 137, 141, 146, 147, 148, 151, 157, 162, 163], "seri": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 35, 40, 43, 44, 45, 48, 51, 52, 54, 56, 57, 58, 59, 61, 66, 70, 71, 75, 77, 80, 82, 85, 90, 95, 96, 97, 98, 102, 104, 107, 121, 122, 123, 126, 128, 136, 137, 138, 139, 140, 146, 147, 148, 149, 150, 155, 160, 161, 163], "bound": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 19, 20, 22, 23, 24, 30, 31, 32, 33, 35, 37, 39, 40, 41, 43, 45, 48, 49, 50, 54, 56, 58, 59, 61, 65, 66, 67, 68, 72, 77, 80, 85, 88, 90, 91, 92, 94, 97, 101, 102, 103, 104, 112, 118, 123, 126, 128, 129, 132, 133, 136, 137, 138, 140, 146, 147, 150, 151, 154, 155, 156, 162, 163], "construct": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 23, 24, 26, 27, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 66, 71, 72, 74, 75, 78, 80, 81, 82, 83, 84, 85, 87, 90, 91, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 107, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 148, 149, 150, 151, 153, 157, 160, 161, 162, 163], "simplifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 16, 17, 20, 21, 25, 26, 35, 66, 77, 85, 129, 132, 146], "well": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "proxyengin": [0, 1, 3], "version_id": [0, 6, 8, 11, 12, 13, 18, 23, 32, 90, 137, 146, 152], "keyword": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 24, 25, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 43, 44, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 64, 65, 66, 67, 71, 72, 80, 83, 84, 87, 90, 92, 96, 97, 101, 102, 103, 118, 123, 124, 126, 128, 132, 134, 136, 137, 138, 139, 140, 146, 147, 151, 155, 156, 162, 163], "argument": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 21, 22, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 43, 44, 45, 48, 49, 51, 52, 54, 56, 57, 58, 59, 64, 68, 72, 75, 76, 78, 80, 85, 87, 88, 90, 93, 96, 97, 98, 101, 102, 104, 112, 113, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 131, 132, 133, 134, 136, 137, 138, 140, 142, 146, 150, 151, 152, 155, 156, 157, 158, 162, 163], "should": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 48, 49, 51, 54, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 70, 71, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 87, 88, 90, 92, 94, 95, 96, 97, 101, 102, 103, 104, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 154, 155, 157, 158, 160, 161, 162, 163], "refer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 80, 81, 82, 83, 84, 85, 87, 90, 92, 94, 96, 97, 98, 101, 102, 104, 118, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 155, 156, 157, 159, 160, 161, 162, 163], "integ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 21, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 40, 44, 49, 50, 52, 54, 56, 57, 58, 59, 60, 61, 65, 66, 67, 70, 71, 75, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 98, 101, 102, 103, 107, 113, 115, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 148, 149, 151, 152, 154, 155, 157, 161], "prefer": [0, 2, 3, 4, 5, 8, 9, 10, 12, 13, 16, 20, 21, 22, 23, 26, 31, 33, 35, 36, 48, 49, 51, 54, 56, 59, 61, 64, 65, 67, 70, 83, 85, 90, 96, 97, 129, 132, 134, 137, 140, 141, 146, 147, 150, 151, 157], "non": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 21, 23, 25, 26, 27, 31, 33, 35, 36, 37, 38, 39, 40, 44, 45, 48, 49, 52, 54, 56, 57, 58, 59, 61, 62, 65, 66, 67, 68, 69, 70, 71, 78, 80, 84, 90, 93, 96, 97, 98, 101, 102, 103, 104, 107, 113, 118, 119, 120, 121, 123, 128, 129, 130, 131, 132, 133, 134, 137, 138, 140, 142, 145, 146, 147, 148, 149, 150, 155, 156, 157, 162], "nullabl": [0, 2, 3, 4, 5, 6, 8, 9, 12, 13, 17, 18, 19, 21, 22, 23, 24, 25, 30, 32, 34, 35, 40, 48, 49, 52, 57, 58, 65, 68, 75, 87, 92, 95, 103, 113, 118, 126, 128, 132, 133, 134, 136, 138, 139, 140, 147, 149, 151, 152, 161], "map": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 23, 24, 26, 27, 31, 32, 33, 36, 37, 39, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 67, 68, 72, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 126, 127, 129, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 152, 155, 157, 159, 160, 163], "track": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 21, 23, 24, 25, 26, 27, 31, 33, 37, 40, 51, 56, 59, 64, 67, 70, 71, 76, 80, 85, 87, 90, 97, 114, 115, 116, 120, 123, 131, 133, 136, 137, 139, 140, 143, 145, 146, 149, 151, 152, 157, 162, 163], "version": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 21, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 54, 56, 58, 59, 61, 62, 69, 70, 74, 75, 76, 79, 80, 81, 84, 87, 90, 91, 92, 94, 97, 99, 101, 102, 103, 104, 105, 107, 112, 113, 115, 117, 118, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 144, 146, 147, 148, 149, 150, 154, 155, 156, 157, 162, 163], "number": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 35, 36, 37, 39, 45, 48, 49, 51, 52, 54, 56, 57, 58, 59, 64, 65, 66, 67, 68, 70, 72, 76, 78, 80, 90, 97, 98, 99, 101, 102, 104, 115, 119, 123, 124, 128, 132, 134, 135, 136, 137, 138, 140, 146, 147, 149, 151, 155, 156], "increment": [0, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 22, 23, 25, 26, 31, 35, 48, 49, 52, 65, 70, 118, 136, 148, 152, 161, 162], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 45, 48, 51, 52, 53, 54, 56, 59, 64, 65, 70, 71, 75, 80, 82, 84, 85, 87, 88, 91, 92, 94, 96, 97, 98, 101, 102, 104, 107, 116, 117, 118, 119, 121, 122, 123, 126, 127, 129, 130, 132, 133, 134, 136, 137, 138, 140, 141, 142, 146, 147, 149, 150, 151, 154, 155, 158, 161, 163], "so": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 43, 44, 45, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 70, 72, 75, 76, 77, 78, 80, 84, 85, 87, 90, 91, 94, 96, 97, 98, 101, 102, 103, 104, 107, 113, 117, 118, 119, 121, 122, 123, 124, 126, 128, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163], "row": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 23, 24, 27, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 44, 45, 48, 49, 50, 51, 52, 54, 56, 58, 59, 62, 64, 65, 70, 72, 74, 75, 80, 85, 87, 88, 90, 94, 97, 99, 101, 102, 104, 119, 121, 122, 123, 126, 128, 130, 132, 135, 136, 137, 138, 139, 140, 142, 146, 147, 148, 149, 150, 151, 152, 153, 160, 161, 163], "count": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 22, 23, 24, 26, 31, 35, 42, 44, 54, 56, 72, 96, 98, 104, 124, 130, 131, 132, 135, 136, 137, 140, 155], "result": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 20, 21, 23, 24, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 54, 56, 58, 59, 60, 61, 62, 64, 65, 67, 68, 70, 72, 74, 75, 77, 79, 80, 81, 82, 85, 87, 90, 92, 94, 96, 97, 98, 101, 103, 104, 112, 113, 118, 119, 121, 122, 123, 126, 127, 129, 132, 133, 134, 136, 137, 139, 140, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 160, 161, 162, 163], "concurrencyerror": 0, "receiv": [0, 4, 5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 19, 22, 25, 26, 31, 32, 33, 34, 36, 37, 39, 40, 48, 49, 50, 51, 54, 56, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 75, 76, 77, 78, 80, 83, 84, 87, 90, 92, 94, 97, 101, 102, 104, 113, 115, 128, 129, 132, 134, 135, 136, 138, 140, 146, 147, 148, 155, 157, 161, 163], "expect": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 31, 32, 33, 35, 36, 37, 40, 44, 48, 49, 50, 52, 56, 57, 58, 59, 61, 64, 66, 67, 68, 71, 72, 76, 77, 78, 84, 85, 87, 94, 99, 101, 103, 113, 117, 118, 121, 123, 128, 129, 132, 134, 136, 137, 138, 140, 146, 148, 149, 150, 151, 152, 155, 156, 162, 163], "entity_nam": [0, 1, 2, 3, 4, 16], "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 21, 23, 25, 27, 30, 31, 32, 33, 35, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 61, 64, 65, 66, 68, 71, 72, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 92, 97, 98, 99, 101, 102, 104, 105, 107, 108, 112, 113, 114, 115, 117, 118, 119, 120, 122, 123, 126, 128, 129, 130, 133, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 156, 159, 160, 163], "option": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 25, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 45, 48, 51, 52, 53, 54, 56, 57, 59, 61, 62, 69, 70, 71, 74, 75, 76, 77, 78, 80, 81, 84, 85, 87, 88, 90, 91, 93, 94, 96, 97, 98, 101, 102, 103, 106, 112, 117, 118, 119, 121, 122, 123, 124, 127, 129, 130, 131, 132, 134, 136, 137, 139, 140, 141, 143, 146, 147, 148, 149, 150, 151, 152, 155, 156, 160, 161, 162, 163], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 21, 26, 27, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 58, 59, 61, 65, 66, 68, 71, 72, 76, 80, 82, 84, 85, 87, 88, 90, 91, 92, 94, 96, 97, 101, 102, 103, 104, 112, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 146, 147, 148, 149, 150, 151, 154, 155, 158, 161, 162, 163], "none": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 72, 75, 85, 87, 90, 91, 92, 94, 97, 98, 99, 101, 102, 103, 104, 112, 113, 115, 116, 117, 118, 119, 122, 123, 128, 129, 130, 132, 134, 135, 137, 140, 141, 146, 149, 151, 161, 162, 163], "ani": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 24, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 80, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 101, 102, 103, 104, 107, 112, 113, 115, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162], "primari": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21, 23, 25, 26, 31, 34, 35, 36, 37, 39, 40, 44, 45, 48, 49, 50, 52, 53, 54, 56, 57, 59, 61, 64, 65, 66, 67, 68, 71, 72, 76, 77, 80, 84, 90, 92, 93, 94, 97, 98, 99, 101, 102, 103, 107, 115, 118, 119, 122, 123, 124, 126, 128, 129, 131, 132, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 151, 152, 154, 155, 157, 161, 163], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 72, 75, 77, 78, 79, 80, 82, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 101, 102, 103, 104, 107, 112, 113, 115, 116, 117, 118, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 160, 161, 162, 163], "entiti": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 21, 23, 24, 25, 31, 36, 45, 49, 54, 67, 70, 76, 77, 80, 83, 84, 87, 90, 97, 98, 102, 104, 119, 122, 123, 124, 127, 130, 131, 132, 135, 136, 137, 139, 141, 144, 146, 147, 148, 162, 163], "those": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 64, 65, 66, 67, 68, 70, 75, 76, 77, 79, 80, 82, 84, 85, 87, 90, 92, 94, 97, 98, 101, 102, 103, 104, 113, 117, 118, 121, 122, 123, 124, 126, 128, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 155, 160, 161, 163], "issu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 30, 31, 32, 34, 37, 40, 41, 48, 49, 51, 52, 53, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 72, 75, 76, 78, 82, 84, 87, 90, 91, 97, 98, 102, 103, 104, 112, 113, 118, 121, 122, 124, 128, 129, 130, 132, 136, 137, 140, 141, 146, 147, 149, 150, 151, 152, 155, 163], "load": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 19, 25, 27, 31, 33, 37, 41, 42, 44, 48, 49, 52, 53, 54, 55, 59, 65, 67, 68, 72, 75, 76, 80, 81, 84, 85, 87, 88, 89, 90, 92, 97, 98, 101, 102, 117, 119, 120, 123, 124, 125, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 150, 159, 162], "through": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21, 22, 23, 24, 25, 31, 32, 33, 37, 39, 43, 53, 54, 56, 57, 61, 65, 66, 67, 68, 71, 74, 75, 78, 80, 84, 85, 87, 90, 91, 92, 96, 97, 100, 102, 104, 107, 117, 119, 122, 123, 124, 128, 129, 132, 134, 136, 137, 138, 139, 141, 146, 147, 148, 151, 157, 161], "maintain": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 36, 37, 39, 40, 45, 48, 49, 51, 52, 54, 56, 59, 63, 64, 65, 66, 67, 68, 70, 71, 74, 76, 77, 80, 84, 87, 90, 92, 97, 101, 102, 103, 113, 116, 117, 118, 128, 132, 134, 137, 138, 147, 148, 149, 150, 151, 155, 162], "ident": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 26, 31, 36, 39, 41, 42, 43, 45, 48, 49, 51, 52, 53, 54, 56, 57, 75, 76, 77, 80, 90, 94, 97, 98, 99, 102, 104, 112, 121, 122, 123, 128, 132, 133, 134, 135, 136, 137, 138, 140, 141, 146, 147, 148, 149, 151, 155, 157, 161, 163], "otherwis": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 28, 30, 31, 32, 33, 35, 36, 37, 41, 48, 49, 51, 52, 54, 56, 57, 58, 59, 64, 65, 66, 67, 68, 70, 71, 75, 77, 78, 80, 82, 85, 87, 90, 95, 96, 97, 101, 102, 103, 116, 117, 118, 121, 122, 123, 124, 128, 129, 132, 134, 135, 137, 140, 144, 146, 147, 148, 150, 151, 152, 155, 157, 161, 162, 163], "equival": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 19, 20, 21, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 64, 65, 67, 68, 70, 76, 78, 83, 87, 90, 91, 95, 96, 101, 102, 104, 113, 115, 117, 118, 121, 123, 126, 128, 132, 134, 137, 138, 145, 146, 147, 148, 149, 150, 151, 155, 157, 160, 161, 163], "overhaul": [0, 1, 2, 3, 4, 5, 7, 8, 9, 13, 17], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 32, 33, 37, 40, 41, 43, 44, 45, 49, 51, 52, 54, 56, 58, 61, 64, 70, 77, 78, 79, 80, 83, 84, 85, 90, 96, 97, 98, 102, 104, 113, 114, 117, 118, 123, 128, 129, 134, 137, 138, 139, 140, 146, 148, 150, 155, 160, 161], "clarifi": [0, 3, 5, 6, 10, 12, 13, 31, 121, 136], "also": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 70, 71, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 113, 115, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163], "proper": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 24, 25, 31, 34, 49, 67, 70, 98, 118, 119, 121, 135, 136, 147, 155], "for_upd": [0, 2, 6, 7, 8, 35, 49], "backref": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 21, 23, 27, 77, 80, 84, 87, 91, 97, 101, 103, 113, 120, 122, 123, 124, 128, 129, 132, 134, 140, 142, 144, 145, 146, 149, 151], "postgres1": 0, "datetim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 17, 19, 20, 22, 23, 25, 30, 33, 35, 44, 49, 54, 56, 59, 60, 62, 64, 67, 92, 94, 97, 101, 102, 118, 121, 123, 148, 155], "document": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 44, 46, 47, 49, 55, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 80, 84, 88, 89, 90, 91, 92, 96, 97, 98, 103, 107, 118, 121, 123, 124, 129, 132, 133, 134, 136, 137, 138, 140, 146, 147, 148, 149, 154, 155, 156, 161, 162, 163], "page": [0, 1, 4, 11, 13, 25, 37, 64, 67, 68, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163], "mostli": [0, 2, 6, 8, 9, 10, 11, 12, 13, 17, 18, 20, 23, 26, 31, 45, 48, 49, 51, 54, 57, 77, 80, 82, 97, 98, 102, 103, 121, 134, 138, 147, 151, 152, 160, 163], "switch": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 18, 21, 25, 31, 38, 68, 70, 76, 90, 102, 119, 121, 122, 146], "over": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 24, 25, 26, 31, 37, 40, 42, 43, 44, 48, 49, 51, 54, 56, 57, 59, 64, 76, 77, 80, 87, 90, 91, 94, 98, 124, 128, 129, 130, 132, 135, 137, 138, 140, 144, 146, 147, 148, 149, 151, 155, 157, 161, 163], "markdown": [0, 2], "syntax": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 21, 22, 23, 24, 25, 31, 35, 36, 48, 49, 54, 56, 57, 59, 62, 64, 65, 67, 68, 70, 78, 80, 91, 101, 122, 123, 124, 128, 136, 137, 138, 151, 155, 156, 157, 163], "mon": [0, 1, 2, 4, 5, 6], "mar": [0, 2, 3, 4, 5, 6], "27": [0, 1, 3, 7, 10, 11, 12, 16, 18, 25, 31], "sqlsession": 0, "concept": [0, 2, 3, 6, 8, 9, 10, 12, 13, 19, 21, 24, 25, 26, 31, 32, 45, 48, 49, 52, 54, 56, 57, 59, 66, 67, 68, 70, 71, 77, 80, 81, 82, 85, 90, 92, 98, 102, 120, 121, 126, 128, 131, 135, 136, 147, 150, 151, 153, 155, 157, 159, 160, 161, 163], "sqlengin": [0, 1], "keep": [0, 3, 4, 6, 7, 8, 13, 15, 16, 17, 20, 24, 25, 26, 31, 37, 40, 48, 49, 51, 52, 67, 68, 70, 71, 76, 77, 78, 80, 98, 101, 102, 104, 123, 124, 132, 133, 136, 137, 139, 140, 141, 147, 149, 150, 151], "retriev": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 21, 22, 24, 25, 26, 31, 36, 37, 40, 45, 48, 49, 51, 52, 54, 59, 65, 66, 67, 68, 70, 71, 76, 78, 80, 90, 99, 102, 104, 119, 123, 128, 132, 134, 136, 137, 139, 146, 147, 148, 149, 151, 154, 156, 162, 163], "pool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 22, 24, 27, 31, 38, 39, 41, 45, 46, 48, 62, 65, 70, 72, 74, 80, 81, 82, 90, 98, 139, 146, 147, 150, 151, 158, 162], "progress": [0, 1, 2, 3, 5, 7, 8, 9, 22, 30, 31, 45, 51, 67, 70, 71, 90, 97, 102, 123, 139, 146, 147, 148, 150, 151, 157, 162], "transact": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 23, 24, 27, 30, 37, 38, 39, 40, 41, 45, 46, 48, 49, 57, 62, 72, 80, 81, 82, 90, 97, 98, 102, 120, 123, 128, 138, 139, 141, 145, 146, 147, 151, 153, 155, 158, 160, 161, 162, 163], "push_sess": 0, "pop_sess": 0, "push": [0, 1, 2, 3, 6, 7, 8, 18, 70, 87, 124, 147, 162], "pop": [0, 6, 9, 12, 18, 25, 31, 76, 77, 87, 97, 117, 119], "new": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 27, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 76, 77, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 102, 103, 104, 107, 112, 113, 115, 116, 117, 118, 119, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163], "onto": [0, 3, 4, 5, 6, 8, 10, 11, 13, 16, 17, 20, 21, 22, 23, 25, 26, 31, 33, 36, 40, 43, 51, 54, 56, 57, 61, 62, 70, 76, 78, 80, 87, 90, 103, 119, 122, 124, 126, 132, 138, 139, 140, 146, 149, 151, 155, 157, 161, 163], "upon": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 48, 49, 51, 52, 54, 56, 57, 59, 61, 62, 64, 65, 66, 67, 68, 70, 71, 72, 76, 80, 82, 84, 85, 87, 90, 91, 94, 97, 98, 99, 101, 102, 103, 104, 113, 117, 118, 121, 122, 123, 126, 128, 129, 130, 132, 135, 136, 137, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 160, 161, 162], "second": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 37, 44, 48, 49, 50, 51, 52, 54, 56, 57, 59, 62, 64, 65, 66, 68, 70, 71, 74, 75, 76, 77, 80, 84, 87, 90, 91, 98, 103, 104, 121, 122, 123, 124, 128, 132, 134, 136, 137, 138, 140, 141, 144, 146, 147, 149, 151, 155, 157, 161, 162, 163], "nest": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 25, 32, 38, 43, 44, 45, 49, 54, 56, 57, 67, 70, 76, 80, 90, 97, 102, 122, 128, 130, 131, 137, 140, 143, 144, 146, 147, 148, 155, 163], "within": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 80, 82, 84, 85, 87, 88, 90, 91, 92, 94, 96, 97, 98, 101, 102, 103, 104, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 146, 147, 148, 149, 150, 151, 152, 153, 157, 160, 161, 162, 163], "previou": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 30, 31, 32, 34, 35, 36, 37, 40, 48, 49, 51, 52, 54, 55, 56, 57, 59, 64, 66, 67, 68, 71, 72, 78, 80, 84, 87, 88, 90, 91, 97, 98, 101, 102, 113, 115, 118, 121, 122, 123, 124, 128, 133, 134, 136, 137, 138, 140, 141, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163], "trick": [0, 5, 15, 17, 57, 87, 157], "sure": [0, 1, 8, 13, 15, 16, 17, 20, 22, 23, 30, 32, 49, 56, 57, 65, 70, 71, 76, 97, 100, 101, 103, 104, 119, 123, 124, 128, 136, 139, 147, 150, 151, 162], "come": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24, 26, 33, 48, 49, 56, 57, 61, 64, 65, 66, 70, 72, 80, 82, 98, 99, 101, 104, 121, 123, 128, 138, 139, 147, 149, 154, 163], "later": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 21, 24, 26, 31, 32, 35, 42, 49, 54, 56, 59, 65, 66, 67, 68, 70, 79, 84, 85, 90, 97, 104, 107, 121, 122, 126, 128, 130, 132, 146, 147, 149, 151, 152, 153, 154, 157, 161, 162, 163], "regard": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 23, 24, 26, 31, 32, 33, 35, 39, 40, 41, 49, 51, 52, 54, 56, 59, 62, 65, 66, 67, 68, 71, 76, 77, 78, 81, 82, 83, 85, 97, 122, 126, 134, 136, 137, 147, 148, 149, 150, 155], "nest_on": 0, "singl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 64, 65, 66, 67, 68, 71, 77, 78, 80, 84, 85, 87, 88, 90, 92, 94, 96, 97, 98, 101, 102, 112, 113, 117, 119, 123, 124, 126, 127, 128, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 161, 162, 163], "list": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 20, 21, 23, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 54, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 70, 72, 77, 78, 80, 84, 85, 87, 88, 90, 91, 94, 97, 101, 102, 103, 104, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 146, 147, 148, 149, 150, 154, 155, 157, 160, 161, 163], "call": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 64, 65, 67, 68, 70, 71, 72, 74, 75, 76, 78, 80, 82, 83, 84, 85, 87, 90, 92, 94, 96, 97, 98, 101, 102, 103, 104, 107, 112, 113, 115, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 146, 147, 148, 149, 150, 151, 152, 155, 157, 158, 160, 161, 162, 163], "becom": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 18, 20, 21, 22, 23, 24, 25, 31, 33, 49, 51, 52, 54, 56, 57, 58, 59, 65, 66, 67, 68, 70, 71, 75, 77, 80, 85, 87, 92, 96, 97, 104, 122, 123, 132, 134, 137, 147, 148, 149, 151, 162, 163], "activ": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 18, 19, 21, 22, 31, 32, 35, 37, 40, 51, 57, 63, 64, 68, 70, 76, 84, 85, 90, 97, 102, 104, 132, 136, 139, 146, 148, 151, 152], "unit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 16, 18, 19, 20, 21, 22, 24, 31, 37, 40, 56, 57, 59, 67, 75, 76, 77, 80, 82, 84, 85, 90, 92, 97, 98, 101, 112, 113, 115, 119, 128, 132, 133, 134, 135, 136, 137, 140, 141, 146, 147, 151, 154, 155, 156, 157, 162, 163], "take": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 30, 31, 32, 35, 36, 37, 39, 40, 43, 44, 45, 49, 50, 51, 52, 54, 56, 57, 59, 64, 65, 66, 67, 68, 70, 76, 77, 80, 83, 85, 87, 91, 92, 101, 102, 104, 107, 113, 117, 118, 119, 121, 122, 124, 126, 128, 129, 132, 133, 135, 136, 137, 138, 140, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 160, 161, 162, 163], "advantag": [0, 2, 3, 5, 7, 9, 10, 11, 13, 17, 18, 20, 21, 22, 23, 25, 31, 32, 37, 49, 51, 56, 64, 65, 66, 67, 68, 70, 80, 83, 84, 90, 101, 104, 113, 118, 121, 123, 124, 128, 130, 136, 138, 144], "featur": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 61, 63, 64, 66, 67, 68, 70, 71, 76, 77, 78, 80, 82, 83, 84, 85, 90, 91, 92, 94, 97, 98, 101, 102, 104, 107, 117, 118, 119, 122, 123, 124, 126, 128, 129, 132, 133, 134, 135, 136, 137, 138, 140, 141, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 159, 161, 162], "without": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 21, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 64, 65, 66, 67, 68, 70, 72, 75, 76, 78, 80, 82, 84, 85, 87, 90, 91, 94, 95, 97, 98, 101, 102, 104, 113, 117, 118, 121, 122, 123, 126, 128, 132, 134, 135, 136, 137, 138, 139, 142, 146, 147, 149, 150, 151, 152, 154, 155, 158, 161, 162, 163], "explicitli": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 31, 32, 34, 35, 37, 39, 40, 45, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 64, 65, 66, 67, 68, 70, 71, 77, 78, 80, 83, 84, 85, 87, 88, 90, 91, 94, 95, 97, 101, 102, 107, 112, 117, 118, 121, 123, 124, 126, 128, 130, 132, 133, 134, 135, 136, 137, 138, 140, 146, 147, 148, 149, 150, 151, 154, 155, 160, 161, 162, 163], "apart": 0, "unitofwork": [0, 1, 3, 4, 5, 6, 13, 17], "scope": [0, 1, 3, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 24, 25, 26, 31, 40, 43, 45, 49, 51, 58, 67, 68, 70, 77, 80, 82, 85, 91, 96, 97, 101, 132, 134, 137, 145, 146, 147, 148, 149, 150, 157, 162, 163], "uow": [0, 4, 5, 6, 7, 13, 128], "heavi": [0, 3, 4, 6, 20, 25, 31], "lift": [0, 6, 9, 10, 21, 66], "populate_inst": [0, 2, 9, 16, 21], "mapperextens": [0, 1, 2, 3, 4, 6, 12, 13, 16, 18, 24], "extens": [0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 16, 23, 25, 27, 31, 33, 34, 37, 40, 42, 44, 46, 49, 51, 53, 56, 57, 58, 59, 61, 64, 66, 67, 68, 70, 71, 76, 78, 80, 81, 84, 85, 87, 94, 96, 97, 98, 101, 103, 104, 105, 113, 115, 116, 117, 118, 120, 123, 129, 130, 132, 133, 136, 137, 138, 140, 146, 148, 151, 162], "popul": [0, 2, 3, 4, 5, 6, 9, 11, 12, 13, 18, 21, 25, 26, 31, 32, 35, 39, 48, 49, 52, 56, 70, 76, 77, 80, 83, 88, 90, 97, 101, 102, 121, 123, 126, 128, 129, 130, 132, 133, 136, 137, 140, 141, 144, 146, 147, 149, 151, 154, 162, 163], "anoth": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 31, 33, 34, 35, 36, 37, 43, 44, 49, 52, 54, 56, 57, 59, 66, 67, 68, 70, 76, 77, 78, 80, 84, 85, 87, 88, 90, 94, 97, 101, 102, 103, 104, 117, 118, 123, 124, 126, 128, 129, 132, 133, 136, 137, 138, 140, 147, 148, 149, 150, 151, 155, 156, 157, 161, 162, 163], "proxi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 21, 22, 26, 27, 31, 32, 40, 48, 51, 52, 57, 70, 71, 76, 80, 81, 84, 87, 90, 98, 102, 114, 120, 123, 134, 137, 147, 162], "translat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 16, 17, 20, 25, 26, 33, 37, 38, 48, 49, 56, 57, 58, 59, 64, 66, 68, 82, 101, 102, 128, 136, 137], "logic": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 32, 33, 35, 36, 40, 49, 51, 56, 58, 59, 66, 67, 68, 70, 71, 77, 80, 90, 97, 98, 103, 104, 128, 129, 133, 135, 137, 138, 140, 146, 147, 148, 162], "built": [0, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 30, 31, 33, 35, 37, 43, 44, 49, 50, 51, 53, 54, 56, 57, 58, 59, 66, 67, 68, 73, 78, 80, 82, 84, 87, 90, 91, 98, 102, 103, 104, 113, 117, 119, 123, 124, 129, 130, 136, 137, 151, 162], "help": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 21, 24, 25, 26, 31, 33, 48, 56, 57, 64, 67, 70, 85, 90, 92, 98, 121, 122, 146, 147, 148, 149, 152, 155, 161, 163], "oracle8": 0, "compat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 23, 24, 25, 31, 32, 36, 47, 48, 49, 51, 54, 56, 57, 59, 62, 67, 70, 78, 82, 87, 90, 98, 101, 102, 118, 123, 128, 130, 132, 134, 137, 138, 140, 144, 145, 146, 150, 155, 160, 163], "use_ansi": [0, 5, 57, 66], "pass": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 68, 70, 72, 75, 77, 78, 80, 82, 84, 85, 87, 90, 91, 92, 96, 97, 101, 102, 103, 104, 107, 112, 113, 116, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 132, 133, 134, 136, 137, 138, 139, 140, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 161, 163], "basic": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 21, 26, 27, 32, 34, 37, 38, 43, 46, 48, 49, 50, 51, 52, 57, 58, 59, 63, 64, 70, 71, 76, 78, 80, 81, 87, 90, 92, 94, 97, 101, 102, 113, 118, 119, 120, 122, 123, 126, 128, 129, 134, 136, 137, 138, 139, 140, 142, 145, 146, 151, 153, 155, 156, 160, 161, 162, 163], "oracl": [0, 1, 17, 18, 19, 20, 27, 30, 31, 35, 48, 49, 54, 56, 57, 59, 63, 64, 76, 80, 81, 101, 123, 128, 132, 136, 137, 141, 151, 152, 154, 155], "all_": [0, 10, 11, 13, 22, 42, 49, 56, 59, 101, 123], "view": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 24, 25, 26, 31, 45, 47, 48, 49, 53, 57, 66, 67, 70, 72, 77, 82, 87, 101, 102, 128, 132, 134, 137, 138, 146, 147, 149, 154, 162, 163], "user_": 0, "larger": [0, 1, 4, 5, 7, 9, 11, 12, 13, 17, 19, 21, 22, 24, 25, 30, 31, 32, 37, 43, 44, 49, 54, 56, 61, 90, 97, 128, 146, 151, 155, 163], "stuff": [0, 2, 4, 25, 64, 122, 124], "foreign": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 24, 31, 34, 41, 44, 48, 49, 52, 53, 54, 57, 66, 67, 70, 72, 77, 80, 84, 87, 90, 91, 94, 96, 98, 102, 103, 121, 123, 128, 132, 135, 137, 138, 139, 140, 142, 144, 145, 146, 147, 149, 151, 155, 161, 163], "kei": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 20, 25, 26, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 61, 62, 64, 66, 67, 72, 76, 77, 80, 84, 90, 91, 92, 94, 96, 97, 98, 99, 101, 102, 103, 104, 107, 113, 115, 116, 117, 118, 119, 122, 123, 126, 128, 129, 131, 132, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 161, 163], "105": 0, "obj1": [0, 22, 59, 101, 147, 149], "obj2": [0, 22, 59, 101, 147], "add": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 30, 32, 33, 34, 36, 38, 40, 41, 43, 48, 49, 51, 52, 54, 56, 57, 58, 59, 64, 65, 66, 67, 68, 70, 72, 73, 74, 76, 79, 80, 84, 85, 87, 88, 90, 92, 96, 97, 98, 101, 102, 103, 104, 113, 114, 117, 119, 121, 122, 123, 124, 128, 129, 130, 132, 133, 136, 137, 138, 139, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 162, 163], "extra": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 32, 43, 48, 49, 59, 67, 73, 82, 87, 102, 118, 122, 123, 128, 144, 148, 151], "step": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 25, 30, 31, 33, 44, 48, 50, 51, 52, 54, 56, 57, 59, 61, 64, 66, 67, 70, 71, 83, 85, 87, 90, 92, 97, 103, 104, 107, 113, 117, 118, 119, 121, 123, 129, 132, 133, 136, 138, 139, 147, 148, 149, 150, 151, 161, 162, 163], "seek": [0, 1, 13, 20, 21, 22, 24, 25, 26, 31, 77, 97, 101, 103, 124, 141, 155], "privat": [0, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 17, 33, 39, 49, 56, 58, 59, 67, 132], "relat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 22, 23, 24, 26, 27, 30, 31, 32, 33, 35, 36, 37, 39, 40, 44, 47, 49, 50, 51, 52, 53, 54, 57, 65, 66, 68, 72, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 90, 94, 96, 97, 101, 102, 103, 107, 113, 117, 119, 120, 121, 122, 123, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 153, 154, 155, 156, 159, 160, 161, 162], "child": [0, 1, 2, 3, 4, 5, 6, 8, 9, 15, 17, 18, 19, 20, 26, 31, 32, 40, 43, 49, 51, 54, 56, 57, 61, 70, 71, 80, 84, 85, 87, 98, 122, 124, 128, 132, 137, 140, 141, 144, 147, 149], "even": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 35, 36, 37, 39, 48, 49, 50, 51, 54, 57, 59, 64, 65, 66, 67, 68, 70, 71, 75, 76, 77, 80, 82, 85, 87, 90, 92, 97, 98, 102, 103, 104, 113, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 133, 136, 137, 138, 139, 140, 146, 147, 148, 149, 151, 153, 155, 157, 163], "though": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 35, 37, 48, 49, 50, 51, 52, 54, 56, 57, 64, 65, 66, 68, 70, 71, 75, 77, 80, 84, 85, 101, 103, 104, 118, 119, 121, 122, 124, 129, 132, 136, 138, 139, 146, 147, 149, 150, 151, 152, 155, 157, 163], "its": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 71, 75, 76, 77, 79, 80, 82, 84, 85, 87, 88, 90, 91, 92, 94, 95, 97, 98, 99, 101, 102, 104, 107, 113, 115, 117, 119, 121, 122, 123, 128, 132, 134, 135, 136, 137, 138, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 160, 161, 162, 163], "global": [0, 1, 2, 3, 4, 6, 7, 13, 18, 19, 21, 23, 31, 33, 35, 56, 64, 66, 68, 80, 90, 96, 97, 98, 102, 116, 117, 137, 145, 146, 147, 150, 158], "lot": [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 22, 24, 25, 26, 31, 52, 57, 66, 70, 78, 83, 98, 104, 113, 118, 128, 133, 137, 139, 148, 151, 155, 156, 157, 160, 161, 162, 163], "strengthen": 0, "being": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 48, 49, 51, 52, 54, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 71, 72, 74, 75, 77, 80, 82, 83, 84, 85, 87, 90, 92, 94, 96, 97, 98, 99, 101, 102, 103, 104, 113, 117, 118, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 154, 155, 161, 162, 163], "made": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 20, 21, 22, 24, 25, 26, 30, 31, 33, 35, 36, 37, 40, 48, 49, 51, 56, 57, 58, 59, 64, 65, 66, 67, 68, 70, 76, 78, 80, 83, 84, 97, 99, 101, 104, 116, 121, 124, 128, 129, 132, 133, 138, 139, 146, 147, 148, 149, 150, 151, 152, 154, 155, 161, 162, 163], "toward": [0, 3, 8, 9, 10, 11, 12, 13, 19, 20, 21, 22, 23, 24, 25, 26, 30, 32, 36, 37, 45, 48, 49, 52, 54, 56, 57, 59, 61, 64, 65, 67, 68, 70, 75, 82, 84, 87, 92, 96, 97, 102, 103, 118, 121, 122, 123, 124, 126, 129, 132, 135, 138, 139, 147, 149, 150, 151, 154, 155, 157, 160, 163], "local": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 27, 30, 31, 32, 33, 37, 43, 48, 49, 51, 52, 54, 56, 64, 65, 66, 67, 68, 75, 78, 80, 85, 87, 97, 98, 101, 102, 103, 120, 121, 122, 123, 124, 128, 132, 137, 138, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 162, 163], "more": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 21, 23, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 44, 48, 49, 50, 52, 54, 56, 58, 59, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 90, 91, 92, 95, 96, 97, 98, 101, 102, 103, 104, 107, 112, 113, 117, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 148, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163], "complex": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 31, 34, 35, 37, 49, 52, 56, 66, 67, 70, 76, 80, 98, 104, 113, 118, 121, 124, 126, 128, 129, 135, 137, 138, 140, 144, 147, 155, 162], "composit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 25, 27, 31, 32, 35, 49, 50, 54, 56, 57, 68, 75, 77, 80, 87, 90, 113, 122, 123, 126, 128, 129, 131, 132, 135, 137, 140, 141, 142, 143, 146, 147, 151, 154, 155], "pattern": [0, 1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 40, 44, 45, 49, 52, 56, 57, 61, 64, 67, 68, 70, 71, 74, 75, 76, 77, 80, 81, 82, 85, 87, 90, 92, 94, 96, 97, 98, 101, 102, 104, 113, 118, 120, 121, 122, 123, 124, 129, 132, 134, 135, 137, 138, 140, 142, 144, 146, 147, 148, 155, 156, 157, 158, 162, 163], "lazi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 22, 24, 25, 26, 31, 37, 72, 75, 76, 80, 83, 87, 90, 97, 98, 102, 121, 122, 123, 124, 126, 127, 134, 137, 139, 140, 144, 146, 147, 148, 149, 162, 163], "eager": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 26, 54, 70, 75, 76, 77, 80, 87, 90, 97, 98, 101, 102, 120, 121, 124, 126, 127, 137, 138, 140, 142, 146, 149], "same": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 72, 75, 78, 79, 80, 82, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 101, 102, 103, 104, 113, 116, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 161, 162, 163], "both": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 35, 36, 37, 39, 41, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 70, 71, 77, 79, 80, 81, 82, 83, 84, 85, 87, 90, 91, 92, 94, 95, 96, 97, 98, 101, 102, 103, 104, 107, 113, 117, 118, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 160, 161, 162, 163], "parent": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 22, 23, 25, 31, 32, 33, 36, 40, 44, 45, 49, 51, 54, 56, 57, 59, 67, 71, 72, 80, 83, 84, 85, 87, 88, 94, 97, 98, 99, 101, 113, 117, 121, 123, 124, 126, 128, 130, 132, 133, 137, 140, 141, 144, 146, 149, 150, 151, 161, 163], "minor": [0, 4, 11, 18, 20, 21, 40], "speed": [0, 1, 2, 3, 4, 5, 9, 13, 17, 21, 24, 38, 43, 56, 76, 82, 137, 148], "instanti": [0, 2, 3, 8, 12, 13, 31, 33, 37, 40, 44, 45, 56, 59, 67, 70, 78, 90, 97, 101, 102, 103, 121, 123, 128, 132, 136, 137, 146, 147, 151, 161], "test": [0, 1, 2, 3, 4, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 33, 35, 37, 39, 40, 48, 49, 50, 51, 52, 56, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 76, 77, 78, 80, 82, 87, 88, 90, 94, 97, 101, 102, 104, 118, 119, 123, 128, 132, 136, 137, 145, 146, 149, 151, 152, 158, 160, 161, 163], "element": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 20, 21, 23, 25, 27, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 48, 49, 52, 54, 57, 58, 59, 61, 64, 65, 67, 68, 76, 77, 78, 80, 90, 92, 94, 97, 98, 101, 102, 103, 104, 112, 115, 117, 119, 121, 123, 124, 126, 128, 130, 132, 133, 134, 136, 137, 138, 140, 146, 147, 149, 151, 155, 156, 161, 163], "liter": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 23, 25, 26, 30, 31, 33, 34, 35, 36, 42, 44, 48, 49, 50, 51, 54, 56, 57, 58, 59, 65, 67, 68, 70, 78, 101, 123, 126, 132, 136, 137, 151, 155, 156, 157], "multi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 31, 32, 35, 36, 48, 49, 54, 57, 59, 61, 65, 66, 67, 90, 98, 136, 146, 151, 152, 157], "token": [0, 8, 9, 10, 11, 12, 13, 20, 23, 31, 34, 38, 49, 53, 54, 56, 65, 67, 90, 123, 124, 126, 130, 132, 137], "e": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 70, 71, 75, 76, 77, 78, 80, 82, 85, 87, 90, 92, 93, 97, 98, 101, 102, 103, 104, 107, 112, 113, 115, 117, 118, 119, 123, 126, 128, 129, 132, 133, 134, 137, 138, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 162, 163], "mypkg": 0, "func": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 31, 32, 33, 34, 35, 42, 43, 44, 49, 54, 56, 57, 58, 59, 65, 67, 68, 84, 94, 96, 101, 102, 113, 123, 124, 126, 129, 130, 135, 136, 137, 151, 155], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18, 21, 25, 26, 30, 31, 32, 34, 43, 44, 45, 48, 49, 53, 56, 59, 65, 67, 68, 76, 79, 80, 82, 84, 87, 98, 102, 103, 116, 117, 118, 132, 138, 146, 147, 150, 155, 157, 161], "illustr": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 16, 19, 20, 21, 22, 23, 24, 26, 30, 31, 32, 34, 35, 36, 37, 40, 49, 50, 51, 52, 56, 57, 58, 59, 64, 65, 66, 67, 68, 70, 71, 76, 79, 80, 82, 84, 85, 88, 90, 91, 92, 96, 97, 98, 101, 102, 103, 104, 113, 115, 117, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 146, 147, 148, 150, 151, 152, 154, 155, 157, 161, 162, 163], "multipl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 20, 21, 24, 25, 26, 32, 34, 35, 36, 37, 38, 40, 43, 44, 46, 48, 49, 50, 51, 52, 54, 56, 58, 60, 64, 65, 66, 70, 72, 75, 76, 77, 80, 90, 93, 96, 97, 98, 101, 104, 112, 113, 115, 116, 119, 121, 122, 123, 127, 128, 130, 131, 132, 133, 137, 139, 140, 142, 145, 146, 147, 148, 149, 150, 154, 155, 161], "union": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 18, 21, 25, 30, 37, 42, 54, 56, 61, 68, 70, 117, 121, 122, 127, 132, 137, 161], "along": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 30, 31, 33, 35, 36, 40, 45, 49, 51, 54, 56, 57, 66, 68, 76, 78, 80, 82, 84, 85, 87, 95, 96, 98, 101, 102, 103, 113, 117, 121, 122, 124, 126, 128, 130, 132, 134, 136, 137, 138, 140, 144, 146, 147, 148, 151, 152, 157, 163], "refresh": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 20, 25, 26, 31, 51, 57, 76, 77, 80, 90, 97, 99, 102, 117, 123, 128, 130, 137, 138, 139, 140, 145, 146, 150, 151, 152, 162, 163], "expir": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 22, 24, 25, 31, 40, 70, 77, 80, 84, 90, 97, 99, 102, 123, 124, 128, 130, 132, 133, 136, 137, 138, 139, 140, 145, 146, 150, 152, 162, 163], "invalid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 21, 25, 31, 37, 38, 40, 41, 45, 48, 65, 67, 71, 98, 99, 102, 137, 146, 151], "earlier": [0, 6, 8, 9, 10, 11, 12, 13, 17, 20, 21, 24, 25, 31, 49, 56, 57, 66, 76, 80, 87, 90, 101, 123, 136, 151, 155, 161, 162], "expung": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 16, 19, 24, 70, 80, 90, 97, 102, 123, 128, 132, 140, 145, 146, 147, 148, 150, 162], "total": [0, 1, 2, 3, 5, 7, 8, 9, 12, 13, 17, 19, 21, 22, 23, 24, 25, 31, 37, 49, 51, 54, 65, 70, 71, 76, 80, 98, 104, 128, 138, 155], "remov": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 44, 45, 48, 49, 51, 52, 54, 56, 57, 59, 62, 63, 64, 65, 67, 68, 69, 70, 72, 74, 78, 80, 82, 84, 85, 87, 89, 90, 91, 97, 98, 101, 102, 103, 104, 117, 118, 119, 122, 123, 124, 126, 128, 129, 130, 132, 135, 137, 139, 140, 146, 147, 148, 149, 150, 151, 157, 163], "current": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 22, 23, 24, 26, 30, 31, 32, 34, 35, 36, 37, 40, 45, 48, 49, 51, 52, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 77, 78, 80, 83, 85, 87, 90, 94, 96, 97, 98, 99, 101, 102, 104, 107, 113, 118, 121, 122, 123, 126, 127, 128, 130, 132, 134, 136, 137, 138, 139, 140, 141, 145, 146, 147, 148, 150, 151, 152, 155, 156, 161, 162, 163], "arg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 15, 17, 25, 26, 31, 32, 33, 34, 35, 36, 37, 39, 41, 43, 44, 45, 48, 49, 51, 52, 54, 55, 56, 57, 59, 64, 65, 67, 68, 71, 87, 90, 92, 94, 97, 99, 102, 104, 112, 117, 128, 132, 137, 140, 146, 148], "kwarg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 15, 18, 25, 26, 31, 32, 33, 35, 36, 37, 39, 42, 43, 44, 45, 48, 49, 51, 52, 54, 56, 58, 59, 64, 65, 67, 68, 88, 90, 97, 101, 102, 112, 113, 118, 123, 128, 132, 133, 137, 140, 146, 148], "easier": [0, 2, 3, 5, 6, 7, 8, 12, 15, 17, 18, 19, 21, 22, 25, 26, 30, 64, 87, 104, 126, 146, 150, 151], "creation": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 13, 18, 19, 20, 21, 22, 25, 26, 30, 31, 33, 35, 38, 39, 40, 44, 48, 49, 51, 54, 58, 65, 66, 67, 68, 70, 74, 90, 94, 104, 107, 122, 123, 146, 157], "transaction": [0, 23], "decor": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 21, 23, 25, 26, 30, 31, 33, 39, 43, 49, 54, 56, 71, 77, 84, 91, 92, 93, 94, 96, 97, 102, 113, 118, 123, 129, 130, 131, 132, 134, 137, 142, 150], "iter": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 21, 24, 25, 26, 31, 36, 39, 42, 49, 54, 56, 57, 61, 68, 70, 77, 80, 84, 87, 90, 98, 102, 104, 117, 123, 132, 137, 138, 139, 140, 146, 147, 148, 149, 151, 155, 156, 157], "interfac": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 19, 21, 22, 24, 25, 26, 31, 39, 40, 45, 47, 48, 49, 51, 52, 54, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 80, 81, 87, 97, 98, 102, 103, 113, 115, 123, 126, 128, 132, 134, 135, 137, 145, 146, 147, 149, 151, 157, 158], "resultproxi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 17, 22, 25, 26, 31, 57, 62], "assert": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 20, 21, 22, 23, 24, 25, 30, 31, 58, 59, 68, 77, 85, 87, 98, 101, 103, 117, 128, 129, 137, 149], "tx": 0, "rollback": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 20, 22, 23, 24, 25, 26, 31, 37, 40, 45, 48, 51, 62, 64, 67, 68, 72, 80, 90, 97, 102, 128, 145, 146, 148, 149, 150, 151, 155, 157, 161, 162], "cant": [0, 2, 57], "after": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 31, 32, 35, 38, 39, 40, 45, 48, 49, 51, 52, 54, 56, 57, 59, 61, 62, 64, 65, 66, 67, 68, 70, 72, 77, 80, 84, 85, 87, 90, 91, 92, 96, 97, 98, 102, 103, 104, 107, 118, 119, 121, 122, 123, 128, 130, 132, 133, 136, 137, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 157, 161, 162, 163], "date": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 22, 25, 33, 49, 50, 52, 54, 56, 57, 59, 60, 65, 66, 67, 90, 98, 102, 121, 146, 148, 152, 155, 157], "convers": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 22, 23, 24, 25, 26, 30, 32, 33, 50, 52, 56, 57, 58, 59, 64, 66, 67, 70, 71, 76, 87, 128, 147, 151], "bind": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 21, 22, 24, 25, 26, 31, 32, 34, 35, 36, 40, 43, 44, 48, 49, 52, 54, 55, 56, 58, 59, 60, 64, 65, 67, 68, 76, 80, 90, 98, 102, 104, 112, 132, 136, 137, 146, 147, 150, 151], "sqlite": [0, 1, 15, 16, 17, 20, 23, 26, 27, 30, 31, 32, 33, 35, 36, 48, 49, 51, 52, 56, 57, 59, 63, 64, 66, 70, 72, 76, 77, 78, 81, 85, 90, 96, 98, 101, 102, 103, 122, 123, 128, 139, 141, 146, 147, 150, 151, 154, 155, 157, 158, 161, 162], "enabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 23, 25, 26, 31, 35, 36, 37, 40, 42, 43, 45, 49, 51, 54, 56, 57, 59, 65, 66, 67, 68, 70, 71, 80, 85, 87, 91, 98, 103, 121, 123, 127, 128, 132, 136, 137, 140, 141, 142, 145, 147, 148, 151, 155, 156, 160], "pysqlite1": [0, 2], "intellig": [0, 2, 3, 15, 33, 151], "116": 0, "label": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 21, 22, 24, 26, 30, 31, 32, 33, 36, 37, 42, 49, 56, 59, 66, 67, 96, 102, 113, 123, 124, 126, 132, 135, 137, 151, 157], "param": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 21, 24, 25, 26, 31, 36, 37, 40, 41, 42, 43, 48, 49, 54, 56, 57, 59, 65, 74, 76, 78, 90, 101, 102, 104, 123, 132, 137, 146, 151, 154, 157], "keynam": [0, 3, 4, 5, 17], "thei": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 70, 71, 75, 76, 77, 78, 80, 83, 84, 85, 87, 90, 91, 97, 98, 101, 102, 103, 104, 113, 115, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 160, 161, 162, 163], "relev": [0, 4, 9, 10, 11, 13, 19, 23, 40, 48, 64, 68, 84, 85, 87, 123, 124, 147, 148, 149, 157], "case": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 67, 68, 70, 71, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 90, 91, 92, 94, 96, 97, 98, 99, 101, 102, 103, 104, 107, 112, 113, 115, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163], "excess": [0, 3, 10, 11, 12, 13, 24, 31, 51, 78, 117, 137, 138], "length": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 16, 17, 22, 23, 24, 30, 32, 33, 34, 36, 43, 48, 49, 51, 54, 56, 57, 58, 59, 64, 67, 68, 77, 88, 101, 104, 113, 123, 128, 129, 134, 138, 151, 155, 161], "rule": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 22, 23, 24, 25, 33, 34, 35, 42, 49, 56, 57, 58, 59, 64, 65, 67, 68, 80, 84, 85, 90, 94, 97, 102, 115, 127, 132, 136, 137, 140, 146, 147, 149, 155, 157], "check": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 25, 30, 31, 33, 34, 36, 37, 40, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 61, 64, 65, 66, 67, 68, 70, 71, 74, 76, 80, 90, 92, 97, 102, 118, 120, 123, 128, 132, 137, 146, 147, 148, 149, 152, 162], "peculiar": 0, "collis": [0, 2, 3, 7, 13, 80, 132], "against": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 33, 34, 35, 36, 40, 42, 43, 44, 48, 49, 54, 56, 57, 58, 59, 64, 65, 66, 67, 68, 70, 71, 72, 76, 78, 80, 82, 83, 84, 85, 88, 90, 91, 92, 94, 96, 97, 98, 99, 101, 102, 104, 107, 112, 113, 117, 118, 119, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 162, 163], "tablename_colnam": 0, "major": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 21, 22, 24, 31, 37, 48, 51, 53, 57, 59, 63, 64, 65, 66, 70, 76, 77, 78, 80, 82, 85, 96, 97, 103, 107, 118, 134, 136, 138, 144, 148, 152, 155, 156, 159, 160, 162], "section": [0, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 44, 48, 49, 50, 51, 53, 54, 56, 57, 59, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 76, 78, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 104, 106, 107, 108, 109, 110, 111, 113, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "got": [0, 1, 2, 3, 6, 9, 13, 15, 19, 21, 22, 25, 26, 57, 71, 72, 102, 151, 163], "blown": [0, 4], "awai": [0, 2, 3, 5, 6, 7, 13, 18, 21, 24, 26, 31, 57, 72, 147, 150], "hadn": [0, 9, 19, 32], "unique_connect": 0, "part": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 44, 48, 49, 52, 54, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 70, 76, 77, 80, 81, 82, 85, 87, 90, 91, 92, 94, 96, 97, 98, 101, 103, 104, 105, 113, 117, 118, 121, 122, 123, 124, 126, 128, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "thread": [0, 1, 2, 3, 5, 6, 9, 10, 11, 12, 13, 15, 16, 18, 24, 25, 27, 31, 39, 49, 51, 62, 66, 70, 71, 102, 120, 145, 146, 149, 151], "context": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 31, 32, 34, 40, 41, 43, 45, 48, 49, 51, 53, 54, 56, 57, 59, 61, 65, 66, 67, 70, 71, 76, 77, 80, 85, 87, 90, 94, 97, 101, 102, 104, 113, 117, 118, 123, 124, 127, 128, 130, 132, 135, 136, 137, 138, 139, 140, 146, 147, 148, 149, 150, 151, 155, 156, 157, 162], "need": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 75, 76, 77, 78, 79, 80, 84, 85, 88, 90, 91, 92, 94, 97, 98, 101, 102, 103, 104, 107, 113, 115, 117, 118, 119, 121, 122, 123, 124, 126, 128, 130, 132, 133, 135, 137, 138, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 161, 162, 163], "auto": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 22, 24, 25, 26, 31, 32, 35, 36, 40, 49, 51, 52, 54, 57, 65, 70, 90, 103, 132, 136, 145, 146, 155, 162], "reconnect": [0, 1, 2, 3, 4, 5, 7, 8, 9, 13, 21, 31, 40, 41, 51], "stale": [0, 1, 5, 6, 7, 8, 9, 11, 12, 13, 16, 18, 23, 24, 37, 41, 51, 66, 67, 71, 80, 132, 147, 149, 152], "db": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 15, 18, 21, 25, 31, 37, 41, 45, 48, 51, 56, 58, 59, 62, 63, 64, 65, 67, 68, 70, 76, 77, 98, 102, 103, 136, 146, 150], "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 30, 31, 32, 33, 35, 37, 40, 45, 49, 51, 52, 53, 57, 58, 65, 66, 67, 68, 70, 72, 74, 75, 76, 77, 78, 80, 82, 84, 85, 87, 88, 90, 94, 97, 101, 103, 107, 115, 119, 120, 122, 128, 132, 136, 140, 141, 146, 147, 148, 149, 154, 155, 157, 160], "do": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 48, 49, 51, 54, 56, 57, 58, 59, 61, 64, 65, 66, 70, 72, 76, 80, 84, 85, 90, 92, 96, 97, 98, 101, 102, 103, 104, 107, 117, 118, 119, 121, 122, 123, 124, 128, 129, 132, 136, 137, 140, 145, 146, 149, 151, 152, 154, 155, 157, 158, 160, 161, 162, 163], "mycol": [0, 33], "always_refresh": [0, 94, 132], "alwai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 37, 40, 45, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 64, 65, 66, 67, 68, 70, 71, 72, 75, 78, 80, 84, 87, 90, 92, 94, 96, 97, 101, 102, 103, 117, 118, 121, 122, 123, 126, 128, 132, 133, 134, 136, 137, 138, 139, 141, 144, 146, 147, 150, 151, 152, 153, 154, 155, 162], "overwrit": [0, 4, 6, 9, 11, 13, 21, 23, 49, 77, 124, 128, 132, 137], "chang": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 27, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 45, 48, 49, 51, 52, 54, 56, 59, 61, 62, 64, 66, 67, 68, 70, 71, 72, 76, 78, 80, 82, 83, 84, 85, 87, 88, 90, 92, 94, 97, 98, 101, 102, 103, 104, 105, 107, 112, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 128, 131, 132, 133, 134, 136, 137, 138, 140, 141, 143, 145, 146, 147, 149, 150, 151, 152, 154, 155, 161, 162, 163], "13": [0, 2, 4, 5, 8, 22, 24, 25, 31, 37, 44, 54, 63, 64, 67, 98, 136, 157], "generic": [0, 31, 49, 52], "host": [0, 1, 5, 12, 13, 20, 21, 23, 25, 31, 33, 37, 39, 40, 41, 45, 51, 62, 64, 65, 66, 68, 70, 80, 102, 129, 150, 158], "hostnam": [0, 9, 12, 13, 37, 65, 67, 96, 129], "dbname": [0, 8, 9, 12, 20, 21, 23, 25, 37, 39, 40, 45, 51, 65, 66, 67, 68, 80, 102, 150], "password": [0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 15, 24, 25, 38, 40, 62, 64, 65, 66, 67, 68, 69, 113, 132], "passwd": [0, 12], "etc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 34, 35, 36, 37, 40, 44, 48, 49, 52, 54, 55, 56, 57, 58, 64, 65, 66, 67, 68, 72, 76, 78, 80, 90, 91, 93, 97, 98, 101, 102, 107, 112, 113, 117, 118, 119, 123, 124, 128, 132, 133, 136, 137, 146, 147, 148, 151, 155, 162], "uri": [0, 2, 12, 13, 65, 67], "much": [0, 2, 3, 5, 6, 7, 8, 9, 12, 13, 15, 17, 18, 19, 20, 21, 23, 24, 26, 30, 38, 48, 57, 59, 66, 67, 70, 71, 76, 77, 78, 85, 90, 96, 97, 103, 104, 121, 122, 128, 136, 139, 141, 146, 147, 148, 151, 152, 155, 157, 159, 162, 163], "univers": [0, 7, 19, 26, 113], "statement": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 24, 26, 27, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 56, 58, 59, 61, 62, 64, 65, 66, 68, 70, 72, 74, 75, 76, 77, 80, 82, 84, 85, 90, 97, 98, 99, 101, 102, 104, 113, 118, 119, 121, 122, 123, 124, 126, 127, 130, 132, 133, 135, 136, 137, 139, 140, 141, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 159, 160, 161, 163], "embed": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 17, 18, 20, 21, 25, 26, 30, 31, 35, 44, 48, 54, 56, 57, 64, 66, 67, 70, 80, 101, 122, 128, 137, 145, 151, 155], "scalar": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 31, 33, 34, 36, 37, 44, 45, 49, 51, 53, 54, 56, 58, 59, 66, 67, 68, 71, 77, 80, 81, 84, 88, 90, 97, 98, 102, 103, 104, 118, 119, 123, 128, 130, 132, 133, 134, 136, 137, 138, 139, 140, 145, 146, 147, 149, 154, 163], "eagerload": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 16, 20, 25, 87, 122, 127, 128], "conjunct": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19, 21, 22, 24, 25, 26, 30, 31, 32, 33, 35, 42, 46, 49, 51, 52, 54, 56, 58, 59, 64, 65, 66, 67, 68, 78, 80, 85, 87, 90, 94, 97, 98, 103, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 136, 137, 139, 140, 146, 148, 150, 151, 154, 155, 157, 161, 163], "figur": [0, 1, 2, 4, 8, 9, 10, 11, 57, 77], "alias": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19, 20, 22, 24, 25, 46, 49, 54, 59, 64, 70, 77, 113, 123, 127, 128, 132, 135, 137, 142, 144, 147], "set": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 25, 26, 30, 33, 34, 35, 36, 38, 39, 40, 43, 44, 45, 48, 50, 52, 53, 54, 56, 58, 59, 61, 62, 64, 65, 66, 71, 72, 74, 76, 78, 80, 82, 83, 84, 85, 88, 90, 91, 92, 94, 95, 96, 97, 101, 103, 104, 107, 112, 113, 115, 117, 119, 121, 123, 124, 126, 127, 129, 130, 131, 132, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 158, 162, 163], "up": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 21, 22, 24, 25, 26, 31, 33, 35, 37, 39, 40, 41, 44, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 72, 75, 77, 80, 83, 84, 85, 87, 91, 97, 98, 101, 102, 103, 104, 107, 113, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 147, 149, 150, 151, 152, 154, 155, 156, 157, 158, 162, 163], "specif": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 21, 25, 26, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 63, 70, 71, 74, 75, 76, 77, 80, 82, 83, 84, 87, 90, 91, 92, 96, 97, 98, 101, 102, 103, 104, 107, 112, 113, 115, 117, 118, 121, 123, 124, 126, 127, 128, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163], "further": [0, 1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 16, 17, 18, 20, 25, 26, 27, 31, 32, 33, 34, 37, 40, 42, 46, 49, 51, 52, 54, 56, 59, 62, 65, 66, 67, 68, 70, 77, 78, 85, 87, 91, 92, 96, 97, 102, 114, 120, 122, 123, 126, 128, 134, 136, 137, 138, 140, 147, 149, 155, 160, 162, 163], "down": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 21, 22, 24, 25, 31, 32, 33, 37, 43, 49, 52, 54, 56, 57, 61, 66, 71, 80, 85, 87, 90, 102, 128, 147, 150, 151, 161], "chain": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 20, 21, 22, 31, 40, 42, 54, 57, 61, 70, 71, 80, 85, 97, 101, 102, 115, 122, 123, 126, 128, 132, 137, 139, 140, 144, 146, 151], "overridden": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 19, 21, 33, 36, 43, 44, 48, 49, 52, 54, 56, 58, 67, 80, 90, 94, 112, 117, 123, 132, 137, 138, 139, 146], "custom": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 22, 24, 26, 27, 31, 35, 38, 40, 42, 43, 44, 46, 48, 49, 52, 53, 54, 56, 58, 59, 60, 61, 64, 65, 68, 70, 72, 74, 76, 81, 83, 84, 85, 88, 92, 96, 97, 98, 101, 102, 104, 107, 112, 116, 117, 119, 123, 126, 127, 131, 132, 133, 134, 135, 137, 138, 140, 142, 143, 145, 146, 148, 151, 155, 161, 162], "secondari": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 16, 20, 22, 25, 39, 54, 65, 67, 68, 70, 80, 83, 84, 85, 87, 101, 103, 122, 123, 128, 137, 140, 142, 147, 151], "patch": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 18], "selecton": [0, 2, 16], "throw": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 40, 51, 57, 71], "except": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 48, 49, 51, 54, 56, 57, 59, 61, 65, 66, 67, 68, 71, 72, 75, 76, 78, 80, 84, 85, 87, 90, 94, 97, 100, 101, 102, 104, 112, 117, 120, 121, 122, 123, 126, 128, 129, 130, 132, 133, 136, 137, 138, 140, 141, 144, 146, 147, 148, 149, 150, 151, 155, 157, 162, 163], "than": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 30, 31, 32, 33, 35, 36, 37, 39, 41, 45, 49, 51, 52, 54, 56, 57, 58, 59, 64, 65, 66, 67, 70, 71, 75, 76, 77, 78, 80, 81, 83, 84, 85, 87, 88, 90, 91, 92, 94, 97, 101, 102, 103, 104, 107, 113, 117, 118, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 146, 148, 149, 151, 155, 157, 161, 162, 163], "selectfirst": [0, 2, 16], "selectfirst_bi": [0, 2, 16], "synonym": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 21, 24, 31, 32, 43, 48, 49, 54, 57, 64, 67, 71, 85, 92, 102, 123, 128, 131, 132, 135, 137, 140, 143, 148], "get_bi": [0, 2, 15, 16], "selectone_bi": [0, 2, 16], "onupd": [0, 2, 3, 4, 5, 10, 11, 32, 35, 49, 65, 67, 68, 97, 133, 136, 141], "exec": [0, 3, 12, 13, 26, 56, 97], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 24, 30, 31, 32, 33, 34, 36, 37, 40, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 67, 70, 72, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 90, 91, 94, 95, 96, 97, 98, 101, 102, 103, 104, 113, 115, 117, 118, 119, 120, 123, 124, 126, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 160, 161, 162, 163], "defaultgener": [0, 4, 5, 10, 12, 13, 17, 26, 31, 35, 48, 53], "subclass": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 24, 25, 26, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 48, 49, 52, 54, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 72, 76, 80, 87, 90, 92, 94, 95, 96, 97, 98, 101, 102, 103, 107, 112, 116, 117, 118, 121, 123, 126, 127, 129, 132, 134, 135, 136, 137, 139, 140, 146, 147, 156, 160], "contribut": [0, 8, 9, 98], "andrija": [0, 2], "zaric": 0, "dictionari": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 30, 32, 33, 34, 35, 36, 38, 39, 40, 43, 45, 48, 49, 51, 52, 54, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 76, 78, 80, 82, 88, 90, 91, 92, 96, 97, 102, 103, 104, 112, 115, 116, 117, 123, 126, 129, 131, 132, 133, 136, 137, 138, 140, 142, 146, 147, 149, 151, 154, 155, 156, 157, 161, 162], "initi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 20, 21, 23, 25, 26, 31, 32, 33, 37, 39, 40, 48, 49, 51, 52, 56, 65, 66, 67, 68, 70, 77, 80, 84, 87, 90, 91, 97, 98, 101, 102, 104, 115, 117, 119, 121, 122, 123, 132, 137, 138, 140, 146, 147, 148, 149, 150, 158], "firebird": [0, 1, 17, 19, 27, 56, 57, 63, 80, 151, 152], "await": [0, 13, 25, 41, 48, 67, 70, 71], "clauseparamet": [0, 3], "get_param": [0, 5], "doe": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 78, 80, 84, 85, 87, 88, 90, 91, 94, 97, 99, 101, 102, 104, 107, 113, 115, 117, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 145, 146, 149, 150, 152, 154, 155, 156, 157, 158, 161, 162, 163], "late": [0, 6, 10, 11, 12, 13, 19, 21, 22, 24, 25, 27, 40, 48, 78, 92, 94, 104, 110, 120, 121, 142], "typeprocess": 0, "origin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 37, 43, 48, 49, 51, 52, 54, 56, 57, 58, 59, 61, 64, 66, 67, 68, 70, 71, 80, 83, 90, 97, 98, 101, 102, 104, 113, 118, 122, 124, 128, 129, 134, 136, 137, 140, 146, 147, 149, 150, 151, 155], "access": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 30, 31, 32, 35, 37, 40, 44, 47, 48, 51, 52, 53, 54, 56, 57, 59, 63, 65, 66, 67, 68, 70, 75, 77, 78, 80, 84, 85, 88, 91, 92, 93, 94, 97, 98, 99, 101, 102, 113, 115, 117, 118, 121, 122, 123, 126, 128, 129, 130, 132, 133, 136, 137, 139, 140, 142, 145, 146, 147, 148, 149, 151, 152, 155, 157, 161, 162, 163], "doc": [0, 1, 2, 3, 4, 5, 6, 7, 10, 13, 15, 16, 17, 18, 49, 54, 59, 65, 67, 68, 71, 77, 81, 88, 98, 123, 129, 133, 140], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 21, 23, 24, 25, 27, 31, 33, 34, 35, 37, 43, 44, 46, 48, 49, 52, 53, 54, 56, 58, 59, 60, 62, 76, 77, 80, 81, 87, 93, 102, 114, 117, 119, 120, 124, 131, 136, 137, 157], "simpler": [0, 1, 2, 3, 5, 8, 9, 12, 13, 17, 19, 20, 23, 24, 25, 31, 57, 101, 104, 122, 123, 124, 128, 132, 151, 155], "easili": [0, 1, 3, 6, 7, 8, 13, 15, 16, 24, 32, 34, 40, 50, 57, 71, 80, 85, 90, 91, 104, 121, 132, 133, 136, 146, 151], "fals": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 62, 64, 65, 66, 67, 68, 70, 71, 72, 74, 76, 78, 79, 84, 85, 87, 88, 90, 91, 92, 95, 97, 98, 101, 102, 103, 104, 113, 115, 118, 119, 122, 123, 124, 126, 128, 129, 132, 133, 134, 137, 138, 139, 140, 141, 146, 147, 148, 149, 151, 152, 155, 161, 162], "caus": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 33, 34, 37, 39, 40, 49, 51, 52, 56, 57, 59, 62, 64, 66, 67, 68, 70, 71, 76, 77, 78, 80, 84, 87, 90, 92, 97, 98, 99, 101, 104, 113, 117, 119, 123, 128, 129, 137, 138, 140, 141, 146, 147, 148, 149, 163], "unicod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 25, 26, 34, 37, 43, 48, 49, 52, 54, 56, 57, 58, 59, 60, 62, 76, 96, 103, 137], "encod": [0, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 17, 24, 30, 32, 37, 40, 48, 59, 60, 64, 65, 67, 68, 71, 102, 115, 117, 129], "decod": [0, 5, 6, 7, 8, 9, 11, 12, 24, 25, 33, 48, 59, 64, 66, 67, 102, 129], "act": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 22, 24, 25, 31, 37, 40, 45, 48, 49, 52, 56, 57, 59, 77, 80, 84, 87, 90, 101, 102, 103, 121, 123, 136, 146, 149, 150, 152, 155, 157, 158, 162], "like": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 23, 24, 30, 31, 32, 33, 34, 35, 37, 39, 43, 44, 45, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 87, 90, 92, 94, 95, 96, 97, 98, 101, 102, 103, 104, 107, 113, 115, 116, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 141, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 161, 162, 163], "utf8": [0, 8, 11, 12, 13, 19, 59, 64, 65, 66, 67, 71], "given": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48, 49, 51, 52, 54, 56, 57, 58, 59, 61, 64, 65, 66, 67, 70, 71, 72, 78, 80, 85, 87, 88, 90, 91, 92, 94, 96, 97, 98, 101, 102, 103, 104, 112, 113, 115, 116, 117, 118, 121, 122, 123, 124, 126, 128, 129, 132, 133, 134, 135, 136, 137, 138, 146, 147, 148, 149, 150, 151, 152, 155, 157, 160, 161, 162, 163], "backrefer": [0, 4, 148], "sequenc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 21, 22, 26, 30, 31, 32, 36, 37, 40, 44, 45, 48, 49, 52, 53, 54, 56, 57, 61, 68, 74, 77, 87, 90, 97, 101, 102, 113, 116, 123, 136, 137, 141, 146, 147, 148, 150, 151, 156, 157, 162], "columndefault": [0, 2, 3, 10, 11, 35, 49, 53], "execut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 21, 22, 24, 30, 33, 34, 36, 37, 38, 39, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 59, 62, 65, 66, 68, 70, 72, 74, 77, 78, 79, 80, 82, 90, 94, 97, 98, 101, 102, 104, 107, 112, 123, 126, 127, 128, 132, 135, 136, 137, 139, 145, 146, 147, 149, 150, 151, 155, 156, 161, 162, 163], "standalon": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 22, 24, 30, 36, 49, 53, 54, 56, 65, 98, 115, 123, 126, 128, 137], "foo": [0, 2, 3, 4, 5, 7, 8, 9, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 35, 36, 37, 43, 45, 49, 50, 51, 54, 55, 56, 57, 58, 59, 61, 62, 65, 67, 68, 70, 72, 75, 76, 80, 87, 90, 94, 96, 98, 101, 103, 117, 123, 124, 128, 130, 132, 136, 137, 138, 146, 147, 150, 151, 155], "ansi": [0, 2, 3, 5, 6, 7, 11, 44, 57], "current_timestamp": [0, 3, 5, 10, 11, 12, 24, 30, 35, 42, 44, 49, 56, 57, 65, 68, 155], "settattr_clean": 0, "append_clean": 0, "smartproperti": 0, "trigger": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 22, 23, 34, 36, 49, 52, 53, 59, 65, 66, 67, 72, 77, 80, 84, 85, 87, 97, 102, 121, 128, 129, 132, 136, 140, 149, 152], "dirti": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 15, 17, 18, 20, 68, 80, 90, 97, 98, 102, 117, 133, 146, 148, 149, 151, 162], "event": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 45, 46, 48, 49, 52, 56, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 74, 76, 77, 80, 81, 85, 87, 88, 90, 92, 101, 103, 107, 113, 116, 120, 123, 128, 129, 132, 133, 135, 136, 137, 140, 145, 146, 147, 149, 151, 157], "histori": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 18, 19, 21, 25, 26, 47, 80, 90, 97, 102, 115, 123, 128, 133, 134, 135, 136, 140, 145, 146, 148, 149], "myclass": [0, 2, 3, 4, 6, 8, 16, 18, 19, 20, 21, 22, 24, 33, 47, 55, 56, 64, 65, 66, 67, 70, 75, 76, 80, 87, 90, 92, 96, 97, 107, 118, 123, 126, 128, 129, 132, 133, 137], "prop1": 0, "setattr_clean": 0, "myobject": [0, 3, 15, 22, 26, 59, 72, 136, 146], "hi": [0, 19, 22, 23, 25, 37, 56, 154], "pull": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 23, 24, 31, 35, 37, 63, 76, 85, 94, 98, 104, 140, 148], "pre": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 22, 23, 25, 31, 34, 35, 36, 37, 40, 41, 44, 49, 51, 54, 56, 57, 62, 64, 65, 66, 67, 68, 70, 71, 73, 77, 78, 82, 91, 96, 97, 98, 102, 103, 104, 119, 123, 128, 132, 136, 140, 141, 146, 148, 150, 151, 158], "": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 64, 66, 67, 68, 71, 72, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 94, 96, 97, 98, 99, 101, 102, 103, 104, 113, 115, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 152, 154, 155, 156, 160, 161, 162, 163], "them": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 31, 33, 36, 39, 49, 51, 52, 56, 57, 59, 61, 63, 64, 65, 67, 68, 70, 71, 75, 77, 79, 80, 85, 87, 88, 90, 91, 92, 94, 96, 97, 98, 101, 102, 104, 113, 117, 118, 121, 122, 123, 124, 126, 128, 132, 133, 134, 135, 136, 137, 138, 139, 146, 147, 149, 151, 155, 161, 162], "passivedefault": [0, 1, 3, 5, 16, 17], "fire": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 23, 24, 35, 40, 48, 58, 59, 87, 97, 123, 128, 137, 146, 148, 151], "off": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 31, 33, 35, 36, 37, 40, 44, 48, 49, 51, 54, 57, 58, 59, 64, 65, 66, 67, 68, 70, 87, 90, 97, 103, 104, 112, 123, 128, 137, 139, 146, 147, 148, 151, 162, 163], "post": [0, 3, 4, 5, 6, 7, 10, 11, 12, 13, 15, 16, 23, 26, 41, 48, 49, 54, 56, 66, 77, 87, 97, 98, 104, 122, 123, 136, 137, 147, 151], "fetch": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 22, 23, 24, 30, 31, 33, 35, 36, 37, 40, 48, 49, 52, 54, 56, 57, 59, 62, 64, 65, 67, 70, 71, 77, 80, 87, 90, 97, 98, 102, 104, 113, 122, 126, 128, 129, 132, 137, 140, 145, 146, 147, 151, 152, 154, 155, 163], "get_sess": [0, 1, 16], "obj": [0, 3, 5, 10, 13, 21, 22, 26, 31, 33, 55, 56, 59, 61, 77, 87, 90, 92, 99, 101, 102, 123, 130, 136, 146, 148, 149, 150, 155], "themselv": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 22, 23, 25, 30, 31, 33, 40, 41, 43, 44, 47, 49, 50, 54, 55, 56, 57, 58, 59, 61, 67, 75, 77, 80, 84, 85, 90, 92, 97, 98, 101, 104, 117, 118, 121, 123, 126, 129, 135, 138, 140, 142, 146, 147, 148, 149, 150, 151, 155, 157, 162], "next": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 21, 22, 23, 24, 26, 30, 31, 35, 37, 40, 44, 48, 51, 54, 57, 64, 67, 70, 71, 76, 77, 78, 80, 85, 90, 91, 92, 95, 97, 102, 116, 121, 128, 132, 136, 137, 139, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163], "includ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 66, 67, 68, 70, 71, 73, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 103, 104, 107, 112, 113, 115, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163], "d": [0, 2, 3, 4, 6, 9, 12, 15, 16, 19, 20, 21, 22, 24, 30, 31, 32, 37, 39, 52, 57, 58, 59, 65, 67, 68, 76, 78, 87, 95, 97, 101, 113, 117, 121, 122, 124, 128, 130, 133, 136, 137, 138, 147, 149, 151, 161], "ed": [0, 2, 3, 4, 5, 6, 7, 8, 9, 15, 20, 23, 24, 33, 36, 39, 51, 57, 70, 104, 128, 129, 137, 138, 141, 147, 149, 151, 152, 156], "accessor": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 16, 17, 18, 19, 20, 22, 25, 30, 31, 32, 36, 37, 43, 44, 48, 49, 51, 54, 56, 59, 64, 67, 70, 78, 102, 113, 123, 132, 135, 137, 146, 148, 149, 151, 154, 155, 162], "mysql4": 0, "slightli": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 18, 19, 20, 21, 22, 25, 26, 37, 45, 87, 116, 136, 148, 149, 154], "enhanc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 20, 21, 24, 26, 31, 32, 40, 57, 77, 84, 132], "log": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19, 24, 25, 26, 33, 38, 40, 48, 56, 57, 70, 72, 78, 84, 87, 90, 98, 101, 128, 139, 146, 148, 151, 154, 157, 158], "timestamp": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 20, 42, 49, 51, 53, 56, 59, 60, 64, 66, 67, 68, 80, 92, 94, 97, 98, 113, 148], "somewhat": [0, 4, 5, 6, 7, 8, 10, 13, 18, 26, 31, 56, 77, 124, 128, 147, 149], "configur": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 21, 22, 24, 25, 27, 33, 35, 38, 39, 40, 45, 46, 47, 48, 49, 52, 53, 54, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 72, 77, 80, 81, 83, 85, 90, 91, 93, 94, 95, 97, 98, 101, 102, 103, 104, 107, 118, 119, 120, 123, 126, 127, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 145, 146, 147, 149, 150, 156, 158, 159, 160, 161, 163], "format": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 48, 49, 51, 52, 54, 56, 57, 58, 59, 64, 65, 66, 67, 68, 70, 78, 80, 83, 88, 97, 128, 134, 137, 138, 148, 151, 157], "lieu": [0, 19, 124], "full": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 24, 25, 26, 27, 31, 32, 34, 35, 36, 37, 42, 43, 44, 48, 49, 51, 52, 54, 56, 57, 59, 65, 66, 68, 70, 76, 77, 78, 80, 84, 87, 88, 90, 91, 95, 96, 97, 98, 102, 104, 118, 122, 123, 124, 128, 132, 134, 135, 136, 137, 138, 139, 140, 141, 146, 148, 149, 158, 160, 161, 162, 163], "tg": 0, "gang": 0, "doubl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 22, 23, 32, 65, 68, 72, 137], "tinyint": [0, 1, 5, 52, 64, 65], "thu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 23, 24, 25, 31, 33, 47, 58, 65, 67, 90, 92, 94, 102, 121, 132, 133, 144, 146, 148, 157], "02": [0, 2, 3, 22, 37, 136], "complet": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 16, 17, 18, 20, 21, 22, 24, 25, 26, 31, 33, 35, 37, 44, 45, 48, 49, 51, 54, 57, 59, 64, 66, 67, 68, 70, 76, 77, 80, 81, 82, 84, 85, 87, 90, 91, 92, 96, 97, 99, 101, 102, 103, 117, 118, 121, 123, 126, 128, 132, 133, 135, 136, 138, 139, 141, 146, 147, 148, 149, 150, 151, 154, 155, 161, 163], "post_upd": [0, 2, 5, 9, 10, 11, 41, 72, 123, 140, 141], "befor": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 45, 48, 49, 51, 54, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 71, 74, 77, 84, 87, 90, 92, 94, 97, 101, 102, 103, 104, 115, 117, 119, 121, 123, 128, 129, 132, 136, 137, 138, 140, 141, 146, 147, 148, 150, 152, 161, 162, 163], "reconcil": [0, 3, 13, 26, 68, 77, 79, 90, 97, 132, 137, 146, 149], "depend": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33, 34, 35, 37, 40, 41, 43, 47, 48, 49, 51, 52, 54, 56, 65, 67, 68, 70, 72, 73, 75, 76, 77, 80, 82, 84, 90, 94, 97, 101, 102, 103, 104, 117, 118, 121, 123, 128, 129, 132, 136, 137, 140, 142, 146, 147, 151, 155, 156, 161, 163], "persist": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 24, 27, 31, 33, 35, 37, 39, 49, 51, 52, 55, 56, 57, 58, 59, 64, 65, 67, 68, 76, 80, 82, 84, 85, 87, 88, 90, 97, 99, 101, 102, 107, 112, 117, 120, 121, 123, 124, 128, 132, 133, 134, 135, 140, 142, 144, 145, 146, 147, 149, 150, 151, 152, 160, 161, 162], "per": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 31, 32, 33, 36, 38, 39, 40, 43, 47, 48, 49, 51, 54, 56, 57, 59, 62, 64, 65, 66, 68, 70, 71, 85, 90, 92, 97, 98, 101, 102, 104, 112, 113, 121, 122, 123, 124, 127, 129, 132, 134, 137, 141, 145, 146, 147, 148, 149, 150, 155, 156, 157, 162, 163], "declar": [0, 1, 2, 3, 4, 5, 6, 16, 20, 22, 23, 24, 27, 31, 35, 49, 53, 54, 55, 59, 64, 65, 66, 67, 70, 72, 76, 77, 80, 84, 85, 94, 98, 101, 102, 106, 110, 113, 114, 115, 117, 120, 121, 122, 123, 124, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 145, 148, 155, 157, 163], "manipul": [0, 3, 4, 7, 10, 13, 20, 25, 26, 27, 37, 40, 44, 61, 64, 68, 77, 80, 87, 101, 124, 128, 129, 139, 147, 148, 151, 153, 156, 160, 161, 163], "user": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 62, 64, 65, 66, 67, 70, 71, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 101, 102, 103, 104, 112, 113, 114, 116, 117, 118, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 155, 157, 160, 161, 162, 163], "defin": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 33, 34, 37, 38, 39, 40, 41, 43, 44, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 61, 64, 65, 67, 70, 75, 76, 78, 80, 84, 87, 88, 90, 91, 93, 94, 95, 96, 97, 101, 102, 103, 104, 107, 110, 112, 115, 116, 117, 118, 121, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 146, 147, 151, 155, 157, 160, 162, 163], "row_numb": [0, 2, 3, 6, 9, 22, 44, 56, 57, 64, 66, 124, 155], "run": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 21, 24, 25, 26, 31, 32, 33, 35, 38, 39, 43, 45, 48, 49, 51, 54, 56, 57, 59, 64, 65, 66, 67, 68, 70, 72, 76, 77, 82, 85, 87, 90, 91, 95, 96, 97, 103, 104, 113, 118, 122, 128, 130, 132, 134, 136, 141, 147, 149, 150, 151, 155, 157, 160, 161, 162], "own": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 31, 32, 33, 34, 35, 40, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 64, 66, 67, 68, 76, 79, 80, 82, 84, 85, 87, 90, 91, 94, 96, 97, 103, 113, 116, 117, 121, 123, 128, 130, 132, 134, 135, 137, 140, 141, 146, 147, 148, 149, 150, 151, 160, 161], "produc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 65, 66, 67, 71, 76, 78, 80, 87, 88, 90, 91, 94, 95, 96, 97, 98, 101, 102, 103, 104, 107, 112, 113, 115, 117, 118, 119, 121, 122, 123, 124, 128, 129, 132, 135, 136, 137, 138, 139, 140, 146, 149, 150, 151, 154, 155, 161, 163], "build": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 16, 17, 19, 20, 21, 23, 24, 25, 26, 30, 31, 33, 36, 47, 48, 50, 51, 54, 56, 57, 59, 61, 64, 66, 67, 75, 76, 78, 81, 82, 97, 101, 104, 114, 117, 118, 120, 121, 130, 132, 137, 142, 149, 154, 155, 160, 161, 162], "tableclaus": [0, 8, 10, 13, 36, 42, 49, 54, 57, 61, 65, 67, 68], "columnclaus": [0, 1, 5, 8, 11, 25, 30, 31, 42, 49, 56, 61], "lexic": [0, 6, 9, 21, 56, 57], "physic": 0, "overal": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 21, 22, 23, 24, 25, 26, 31, 40, 45, 51, 59, 65, 67, 70, 90, 97, 102, 121, 128, 132, 146, 147, 154, 155, 161], "larg": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 17, 18, 23, 24, 25, 31, 36, 37, 45, 47, 59, 67, 76, 80, 88, 90, 97, 102, 117, 121, 122, 123, 126, 128, 136, 137, 142, 144, 146, 147, 155, 157], "margin": [0, 26, 31, 148], "entir": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 33, 36, 37, 40, 41, 51, 54, 55, 56, 57, 61, 64, 65, 67, 68, 70, 71, 74, 75, 76, 77, 80, 82, 85, 87, 90, 92, 96, 97, 101, 104, 114, 116, 119, 121, 132, 136, 137, 139, 146, 147, 150, 151, 155, 157, 161, 163], "getattr": [0, 5, 12, 25, 48, 77, 101, 113, 123, 132], "plagu": [0, 136], "how": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 34, 35, 38, 40, 41, 43, 44, 48, 49, 51, 52, 54, 56, 57, 59, 61, 64, 65, 66, 67, 68, 70, 72, 80, 84, 85, 87, 90, 92, 94, 95, 96, 97, 98, 101, 102, 103, 104, 113, 116, 118, 120, 123, 128, 129, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 151, 153, 154, 155, 157, 158, 160, 161, 162, 163], "synchron": [0, 2, 5, 7, 8, 9, 12, 13, 16, 17, 21, 31, 48, 67, 70, 71, 76, 87, 113, 119, 124, 136, 138, 140, 151, 162, 163], "data": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 45, 48, 49, 51, 52, 54, 55, 56, 58, 59, 70, 71, 72, 76, 78, 79, 80, 81, 84, 85, 87, 88, 90, 92, 96, 97, 98, 101, 102, 104, 113, 115, 116, 117, 120, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 144, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 163], "between": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 35, 37, 40, 41, 42, 44, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 67, 68, 71, 74, 77, 80, 84, 85, 87, 92, 96, 98, 101, 102, 103, 113, 118, 121, 122, 123, 124, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 147, 149, 150, 151, 155, 160], "better": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 22, 23, 24, 26, 31, 56, 57, 59, 66, 68, 70, 71, 75, 76, 77, 80, 84, 90, 96, 97, 102, 103, 129, 132, 136, 140, 146, 147, 151, 155, 161, 162], "attach": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 22, 31, 40, 49, 68, 74, 76, 77, 80, 85, 97, 98, 99, 102, 113, 117, 134, 136, 140, 146, 148, 162], "addit": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 37, 39, 40, 43, 44, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 64, 65, 66, 70, 71, 72, 75, 76, 80, 82, 83, 84, 85, 87, 90, 91, 92, 93, 94, 97, 98, 101, 102, 103, 104, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 137, 138, 140, 141, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 160, 162, 163], "methodologi": [0, 1, 2, 3, 4, 7, 49, 57, 66, 82, 116, 132], "identitymap": [0, 9, 100, 123], "aggress": [0, 2, 3, 5, 7, 8, 9, 13, 22, 62, 71, 85, 132], "fulli": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 20, 22, 25, 26, 30, 31, 35, 38, 41, 44, 48, 49, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 71, 74, 75, 76, 77, 78, 80, 85, 87, 90, 91, 95, 96, 97, 101, 102, 103, 107, 118, 120, 121, 122, 123, 124, 128, 129, 132, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 157, 160, 161], "implement": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 22, 23, 25, 26, 30, 31, 33, 35, 36, 37, 38, 40, 41, 44, 48, 49, 52, 54, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 70, 75, 76, 77, 78, 80, 82, 84, 85, 88, 90, 91, 98, 99, 101, 102, 103, 104, 113, 116, 117, 119, 121, 123, 128, 131, 132, 136, 137, 141, 142, 146, 147, 148, 150, 151, 152, 155, 157], "uniqu": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 22, 24, 25, 26, 31, 34, 37, 43, 44, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 64, 66, 67, 68, 70, 72, 75, 80, 84, 101, 102, 107, 119, 121, 128, 133, 136, 137, 138, 140, 144, 147, 148, 151, 155, 162], "treat": [0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 18, 21, 22, 24, 25, 26, 31, 32, 33, 35, 37, 49, 51, 52, 54, 56, 57, 64, 67, 90, 97, 102, 113, 115, 136, 140, 151, 155], "char": [0, 2, 4, 5, 6, 7, 8, 12, 13, 25, 33, 59, 60, 64, 65, 66, 67, 68, 69], "raw": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 16, 17, 21, 23, 24, 25, 26, 32, 35, 37, 38, 41, 48, 51, 55, 66, 67, 72, 76, 78, 80, 90, 97, 98, 102, 146, 161], "byte": [0, 5, 6, 7, 8, 9, 11, 13, 21, 25, 59, 64, 65, 66, 67, 68], "utf": [0, 4, 11, 17, 20, 33, 37, 48, 64, 65, 66, 67, 68], "8": [0, 14, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 31, 33, 34, 37, 48, 49, 52, 56, 58, 59, 62, 63, 65, 67, 68, 76, 97, 98, 101, 117, 123, 126, 130, 154, 157], "side": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 22, 23, 25, 26, 33, 36, 37, 38, 44, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 64, 66, 68, 71, 76, 77, 78, 80, 83, 84, 85, 87, 90, 97, 98, 101, 102, 103, 113, 115, 118, 121, 123, 124, 128, 129, 131, 132, 133, 135, 136, 137, 138, 140, 141, 144, 146, 151, 155, 160, 163], "must": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 48, 49, 50, 54, 55, 56, 57, 59, 62, 64, 65, 66, 67, 68, 70, 71, 75, 76, 80, 85, 87, 90, 91, 94, 97, 98, 102, 103, 104, 107, 113, 116, 117, 118, 119, 121, 122, 124, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 146, 147, 150, 152, 162], "consist": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 20, 21, 22, 24, 25, 26, 31, 32, 33, 37, 40, 48, 49, 51, 52, 56, 57, 59, 61, 64, 66, 67, 68, 70, 71, 77, 78, 80, 103, 118, 124, 130, 132, 134, 137, 138, 146, 147, 148, 155, 161, 163], "global_connect": [0, 1], "reload": [0, 3, 77, 128, 149, 151], "uncondition": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 22, 23, 25, 31, 34, 37, 43, 45, 51, 54, 56, 59, 61, 64, 66, 70, 78, 90, 97, 102, 113, 117, 123, 124, 136, 140, 146, 147, 150], "feb": [0, 2, 3, 5, 6, 118], "24": [0, 4, 5, 9, 10, 11, 31, 37, 48, 51, 54, 65, 68, 71, 90, 102, 146], "recurs": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 21, 23, 54, 57, 67, 76, 98, 117, 129, 137, 148, 155, 163], "somehow": [0, 26], "994": 0, "normal": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 21, 22, 24, 25, 26, 31, 32, 33, 35, 36, 37, 40, 43, 44, 45, 48, 49, 51, 52, 54, 56, 57, 59, 63, 64, 65, 66, 67, 68, 71, 75, 77, 78, 80, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97, 101, 102, 103, 104, 107, 113, 115, 117, 118, 119, 121, 122, 123, 124, 128, 129, 130, 132, 133, 136, 137, 138, 139, 140, 144, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 161, 162, 163], "broke": [0, 5, 7, 8, 12, 13, 22], "noth": [0, 2, 5, 6, 8, 9, 10, 13, 17, 20, 23, 31, 33, 49, 61, 70, 80, 84, 117, 128, 147, 149, 162], "slow": [0, 2, 3, 31, 70, 72, 128], "everyth": [0, 3, 6, 18, 19, 20, 21, 24, 31, 46, 70, 76, 82, 85, 92, 96, 98, 104, 129, 146, 147, 149, 150, 157], "thank": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 22, 24, 57], "jpellerin": 0, "find": [0, 3, 4, 6, 13, 15, 21, 25, 26, 52, 137, 148], "23": [0, 2, 3, 8, 9, 22, 54, 61, 67, 140], "left": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 25, 26, 31, 33, 35, 36, 37, 44, 49, 52, 54, 56, 57, 58, 59, 64, 65, 66, 67, 70, 71, 78, 80, 84, 85, 90, 91, 101, 102, 113, 118, 119, 122, 123, 124, 128, 132, 135, 137, 138, 140, 144, 146, 149, 151, 154, 155, 160, 162, 163], "boolean": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 24, 33, 35, 37, 40, 44, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 90, 97, 101, 113, 122, 123, 124, 126, 129, 132, 137, 140, 146, 149, 151, 155], "move": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 23, 24, 25, 31, 33, 37, 41, 51, 54, 56, 57, 76, 80, 86, 90, 92, 97, 102, 106, 107, 110, 111, 118, 121, 123, 125, 132, 136, 146, 147, 148, 149, 151], "target": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 22, 25, 26, 29, 31, 32, 34, 35, 36, 37, 40, 41, 43, 48, 49, 51, 52, 54, 56, 57, 59, 61, 65, 66, 70, 71, 74, 75, 77, 78, 82, 84, 85, 87, 90, 91, 92, 94, 96, 97, 98, 99, 101, 102, 104, 113, 117, 118, 119, 121, 122, 123, 126, 128, 130, 132, 134, 135, 136, 137, 139, 140, 142, 146, 148, 149, 151, 152, 154, 155, 161, 162], "changeset": [0, 2], "1020": 0, "self": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 33, 41, 43, 44, 48, 49, 54, 56, 57, 58, 59, 64, 65, 67, 68, 70, 76, 77, 78, 87, 88, 90, 92, 98, 101, 102, 103, 104, 113, 115, 117, 118, 121, 123, 126, 129, 130, 132, 136, 139, 140, 142, 147, 150, 151, 161, 163], "easi": [0, 2, 3, 4, 13, 15, 16, 17, 25, 31, 49, 57, 70, 76, 113, 121, 128, 129, 158], "1019": [0, 3], "1015": [0, 3], "psycopg1": 0, "1005": [0, 3, 25], "doesn": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 44, 48, 49, 52, 54, 56, 57, 58, 59, 64, 66, 68, 70, 75, 76, 77, 78, 80, 85, 87, 94, 104, 117, 124, 128, 129, 137, 138, 139, 140, 147, 148, 151, 155, 157], "want": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 30, 31, 32, 33, 34, 35, 40, 44, 49, 51, 52, 56, 57, 59, 65, 70, 71, 75, 76, 78, 80, 84, 87, 91, 94, 98, 101, 103, 113, 115, 120, 121, 122, 124, 126, 128, 129, 130, 136, 137, 138, 139, 140, 146, 147, 148, 149, 150, 151, 152, 155, 157, 160, 161, 162, 163], "give": [0, 2, 3, 6, 8, 11, 15, 19, 21, 23, 26, 31, 33, 37, 41, 48, 51, 58, 70, 76, 94, 97, 101, 113, 136, 137, 151, 155, 157, 161], "lastrowid": [0, 2, 3, 4, 5, 6, 7, 12, 13, 18, 31, 35, 48, 49, 57, 64, 154], "sinc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 40, 44, 45, 48, 49, 51, 52, 54, 56, 57, 58, 59, 62, 64, 65, 66, 67, 68, 69, 71, 75, 76, 77, 80, 82, 83, 87, 90, 97, 101, 103, 104, 117, 121, 122, 123, 124, 126, 128, 132, 134, 135, 136, 137, 138, 140, 146, 147, 148, 149, 150, 151, 155, 162, 163], "oid": [0, 1, 2, 4, 7, 8, 9, 11, 12, 15, 16, 21, 67], "deprec": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 23, 26, 31, 32, 34, 35, 36, 37, 39, 40, 41, 44, 45, 47, 48, 49, 51, 52, 54, 56, 57, 59, 62, 65, 66, 67, 68, 69, 70, 82, 85, 87, 90, 97, 101, 102, 103, 104, 123, 126, 128, 132, 134, 135, 136, 137, 140, 146, 147, 150], "col": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 16, 18, 19, 20, 22, 23, 24, 25, 31, 32, 33, 36, 37, 43, 49, 54, 56, 65, 67, 88, 101, 123, 133], "beforehand": [0, 3, 9, 22, 25, 35, 36, 37, 65, 67, 68], "idea": [0, 1, 2, 3, 5, 6, 12, 16, 17, 18, 19, 21, 22, 24, 25, 26, 31, 52, 57, 68, 75, 76, 84, 90, 102, 113, 122, 128, 137, 147, 151, 163], "becaus": [0, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 33, 40, 51, 52, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 75, 76, 77, 78, 80, 85, 87, 90, 94, 97, 98, 101, 102, 104, 118, 119, 123, 128, 133, 135, 138, 139, 140, 141, 146, 147, 149, 151, 152, 154, 155, 157, 161, 163], "we": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 32, 33, 34, 35, 37, 39, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 63, 64, 65, 67, 68, 70, 71, 75, 76, 77, 78, 80, 83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 101, 102, 103, 104, 107, 113, 115, 117, 118, 121, 122, 124, 126, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 141, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163], "know": [0, 2, 3, 5, 6, 7, 8, 11, 13, 17, 19, 20, 22, 23, 24, 26, 31, 33, 35, 44, 45, 49, 51, 56, 57, 64, 66, 67, 68, 70, 71, 76, 80, 83, 84, 87, 94, 95, 97, 101, 113, 123, 124, 128, 133, 136, 137, 138, 140, 147, 149, 154, 155, 162, 163], "what": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 26, 27, 30, 33, 37, 44, 48, 51, 52, 54, 56, 57, 65, 66, 67, 68, 70, 71, 75, 77, 78, 80, 81, 82, 84, 85, 89, 92, 97, 98, 102, 103, 104, 113, 122, 123, 124, 127, 130, 132, 133, 134, 136, 137, 139, 140, 145, 146, 148, 154, 155, 158, 161, 162, 163], "did": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 22, 24, 25, 26, 31, 33, 34, 35, 57, 58, 59, 65, 67, 68, 75, 94, 97, 124, 126, 136, 147, 157, 161, 162], "bunch": [0, 8], "old": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 31, 40, 48, 49, 54, 59, 62, 64, 67, 70, 71, 82, 87, 90, 91, 97, 98, 102, 126, 134, 146], "back": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 31, 33, 37, 40, 41, 45, 57, 58, 59, 62, 64, 65, 66, 67, 68, 71, 72, 80, 84, 85, 90, 97, 99, 102, 113, 120, 121, 122, 123, 128, 132, 136, 137, 140, 145, 146, 148, 149, 150, 155, 163], "occur": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 35, 37, 39, 40, 41, 45, 48, 49, 51, 52, 54, 56, 57, 59, 62, 64, 65, 66, 67, 68, 70, 71, 75, 77, 79, 80, 84, 85, 87, 90, 92, 96, 97, 102, 104, 107, 113, 117, 118, 119, 122, 123, 124, 128, 129, 130, 132, 133, 135, 136, 137, 138, 140, 144, 146, 147, 148, 149, 150, 151, 152, 155, 162, 163], "happen": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 15, 17, 19, 20, 21, 25, 26, 31, 57, 70, 97, 99, 119, 128, 139, 140, 148, 149, 150, 151, 158, 162], "unless": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 20, 21, 22, 23, 25, 26, 30, 31, 32, 33, 34, 37, 44, 48, 49, 51, 56, 57, 58, 59, 64, 65, 66, 67, 68, 77, 84, 87, 90, 101, 115, 119, 122, 123, 126, 128, 130, 132, 136, 137, 140, 141, 146, 147, 149, 150, 152], "someon": [0, 7, 9, 12, 18, 21, 24, 70], "usual": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 37, 40, 41, 44, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 74, 75, 76, 77, 78, 80, 82, 84, 85, 87, 90, 91, 94, 96, 97, 101, 102, 103, 112, 113, 115, 117, 119, 122, 123, 124, 126, 128, 129, 130, 132, 136, 137, 140, 146, 147, 149, 150, 151, 155, 156, 157, 162, 163], "orm": [0, 1, 15, 27, 31, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 65, 66, 67, 68, 72, 78, 80, 81, 82, 83, 84, 87, 88, 90, 92, 94, 95, 96, 100, 101, 103, 104, 105, 107, 112, 115, 116, 117, 121, 122, 124, 126, 127, 128, 129, 130, 132, 133, 135, 140, 141, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 159, 160, 163], "ask": [0, 5, 6, 7, 8, 12, 13, 17, 20, 21, 22, 23, 27, 30, 31, 35, 37, 41, 52, 57, 58, 67, 70, 76, 77, 81, 90, 103, 104, 128, 137, 138, 145, 151, 158, 162], "glitch": 0, "execute_compil": 0, "thrown": [0, 1, 2, 8, 9, 13, 40, 128, 132], "began": [0, 13, 23, 24, 25, 57, 150], "newer": [0, 3, 4, 7, 8, 9, 12, 13, 20, 25, 26, 31, 35, 37, 49, 54, 56, 62, 64, 65, 66, 70, 87, 90, 101, 123, 128, 146, 147, 151], "sai": [0, 2, 3, 4, 5, 8, 9, 15, 17, 18, 20, 21, 26, 31, 57, 72, 80, 119, 126, 138, 147, 151, 162], "attr": [0, 3, 4, 5, 6, 9, 10, 12, 13, 19, 20, 21, 26, 27, 61, 75, 80, 87, 88, 97, 98, 101, 119, 120, 123, 126, 128, 131, 132, 134, 137, 146], "propertyload": [0, 1, 2, 4], "correspond": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 21, 22, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 47, 48, 49, 51, 52, 54, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 74, 75, 77, 80, 83, 85, 87, 88, 90, 91, 96, 97, 98, 99, 101, 102, 103, 115, 117, 118, 121, 122, 123, 124, 126, 130, 132, 133, 136, 137, 138, 140, 146, 147, 148, 149, 151, 155, 161, 162, 163], "prop": [0, 1, 3, 4, 5, 19, 123, 132, 137], "intern": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 22, 23, 24, 26, 27, 29, 31, 32, 35, 37, 39, 40, 41, 46, 49, 51, 52, 54, 56, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 80, 81, 84, 90, 92, 94, 97, 98, 101, 102, 118, 120, 134, 136, 137, 140, 142, 146, 147, 149, 150, 151, 152, 154, 155, 156, 157, 162], "complic": [0, 7, 12, 13, 20, 22, 24, 25, 26, 31, 52, 66, 67, 78, 121, 122, 124, 136, 137, 151, 161], "explicit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 21, 23, 24, 25, 26, 31, 32, 33, 34, 36, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 64, 65, 66, 67, 68, 70, 75, 76, 77, 80, 83, 85, 87, 90, 92, 93, 94, 98, 101, 102, 107, 119, 123, 124, 126, 127, 131, 132, 136, 137, 138, 139, 140, 143, 145, 146, 147, 154, 160, 161], "instruct": [0, 1, 2, 4, 5, 7, 9, 10, 12, 13, 17, 20, 22, 23, 24, 26, 31, 34, 35, 39, 40, 45, 49, 52, 53, 57, 59, 65, 67, 68, 84, 90, 97, 102, 122, 124, 128, 140, 147, 148, 150, 151, 157, 158, 162], "experiment": [0, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 20, 23, 24, 40, 113, 122, 124, 136, 158], "use_upd": 0, "indic": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 70, 75, 76, 77, 80, 83, 84, 85, 87, 88, 90, 91, 94, 96, 97, 101, 102, 103, 113, 117, 118, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 149, 151, 152, 155, 156, 157, 158, 161, 162, 163], "handl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 22, 23, 25, 26, 31, 32, 33, 34, 37, 38, 39, 40, 41, 45, 48, 49, 56, 57, 58, 59, 62, 65, 66, 68, 69, 76, 77, 78, 80, 85, 87, 90, 94, 97, 101, 102, 104, 107, 113, 117, 119, 121, 123, 129, 132, 134, 136, 138, 139, 140, 142, 146, 147, 148, 149, 150, 151, 155, 156, 157, 160, 162, 163], "either": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 36, 37, 39, 40, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 75, 76, 77, 78, 80, 82, 84, 85, 87, 90, 91, 94, 95, 96, 97, 101, 102, 103, 113, 117, 118, 122, 123, 124, 128, 130, 132, 133, 134, 136, 137, 138, 140, 146, 147, 148, 149, 150, 151, 152, 155, 156, 163], "circular": [0, 1, 2, 4, 41], "rais": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 23, 25, 26, 30, 31, 32, 33, 34, 35, 36, 40, 41, 43, 44, 45, 47, 48, 49, 51, 52, 54, 56, 57, 58, 59, 62, 64, 65, 66, 67, 70, 71, 77, 78, 87, 90, 97, 99, 101, 102, 103, 104, 107, 112, 117, 119, 122, 123, 126, 128, 129, 132, 133, 135, 137, 138, 140, 146, 147, 149, 150, 151, 152, 155, 157, 161, 162, 163], "keyerror": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 41, 87, 99, 117, 123], "attributeerror": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 20, 23, 25, 97, 99, 115, 123, 151, 161, 162, 163], "descend": [0, 2, 3, 7, 8, 9, 13, 20, 22, 24, 26, 32, 35, 44, 48, 50, 54, 56, 57, 107, 117, 122, 124, 128, 132, 136, 137, 138, 140, 155, 161], "timedelta": [0, 9, 13, 33, 59, 148], "phase": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 23, 26, 31, 33, 37, 40, 45, 48, 51, 56, 57, 58, 67, 97, 136, 145, 146, 151, 160], "sessiontran": 0, "clearli": [0, 2, 13, 15, 18, 25], "boundari": [0, 3, 7, 8, 9, 11, 25, 26, 31, 45, 51, 77, 124, 147, 148], "drop": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 20, 23, 25, 26, 30, 31, 34, 35, 37, 40, 41, 51, 53, 59, 62, 66, 67, 68, 70, 71, 72, 76, 98, 161], "pursuant": 0, "ongo": [0, 1, 2, 12, 21, 23, 25, 26, 31, 51, 77, 78, 80, 97, 148, 149, 150, 162, 163], "information_schema": [0, 6, 11, 12, 13], "had": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 35, 41, 54, 57, 64, 65, 66, 68, 70, 77, 80, 90, 101, 113, 122, 124, 128, 130, 135, 136, 137, 146, 149, 150, 155, 161, 162, 163], "faster": [0, 1, 3, 4, 8, 9, 13, 17, 19, 24, 25, 76, 104], "process_default": 0, "differ": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 64, 65, 66, 67, 68, 70, 71, 75, 76, 78, 80, 82, 85, 87, 90, 92, 94, 97, 98, 99, 101, 102, 104, 113, 116, 117, 118, 121, 122, 123, 124, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 146, 147, 148, 149, 150, 151, 154, 155, 157, 161, 163], "982": 0, "onli": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 21, 23, 24, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 61, 63, 64, 66, 68, 69, 71, 72, 75, 76, 78, 80, 83, 84, 85, 87, 90, 92, 94, 95, 97, 98, 101, 103, 104, 107, 113, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 160, 161, 162, 163], "alltest": 0, "testtyp": 0, "export": [0, 3, 4, 5, 6, 7, 11, 13, 17, 19, 22, 44, 49, 54, 56, 66, 82, 138, 155], "c": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 21, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 40, 43, 44, 45, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 70, 71, 75, 76, 77, 78, 80, 85, 87, 88, 91, 92, 94, 96, 101, 102, 103, 117, 121, 123, 124, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 149, 151, 154, 155, 156, 161], "973": 0, "tue": [1, 2, 3, 4, 5], "sep": [1, 3, 4, 5, 76], "cleanup": [1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 18, 20, 40, 51], "dbapi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 22, 23, 24, 25, 26, 27, 30, 33, 36, 38, 39, 40, 41, 45, 46, 48, 49, 51, 56, 57, 58, 59, 63, 72, 76, 77, 78, 79, 80, 81, 82, 90, 97, 98, 102, 128, 135, 136, 137, 141, 145, 146, 147, 148, 151, 153, 155, 156, 158, 160, 161], "connect_arg": [1, 24, 65, 66, 67, 68, 71], "creator": [1, 5, 7, 9, 11, 12, 21, 24, 37, 40, 51, 66, 68, 101], "recycl": [1, 6, 7, 8, 9, 11, 12, 13, 22, 37, 48, 71], "pool_recycl": [1, 37, 51, 65, 71], "3600": [1, 37, 51, 65], "ag": [1, 22, 25, 51, 57, 115, 137], "close": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 24, 25, 26, 31, 34, 37, 40, 41, 45, 48, 49, 51, 52, 53, 57, 62, 65, 67, 68, 70, 72, 74, 76, 77, 80, 81, 85, 90, 97, 98, 102, 136, 139, 145, 146, 148, 150, 151, 155, 157], "replac": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 26, 31, 33, 36, 38, 40, 43, 47, 48, 49, 50, 51, 52, 54, 56, 59, 61, 64, 65, 67, 68, 70, 71, 79, 80, 84, 87, 88, 91, 97, 101, 104, 113, 118, 123, 124, 126, 128, 129, 133, 135, 136, 137, 138, 140, 146, 148, 150, 156, 157, 163], "automat": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 43, 44, 45, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 64, 65, 66, 67, 68, 72, 78, 80, 82, 83, 84, 85, 87, 88, 90, 91, 92, 95, 97, 98, 101, 102, 103, 104, 107, 115, 117, 118, 119, 120, 121, 122, 123, 124, 128, 129, 132, 133, 136, 137, 138, 139, 140, 146, 147, 148, 149, 150, 151, 152, 155, 157, 161, 162, 163], "274": 1, "semant": [1, 3, 4, 13, 16, 22, 31, 49, 52, 54, 56, 57, 67, 84, 87, 90, 102, 129, 132, 136, 146, 149, 150, 160], "underli": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 17, 18, 20, 21, 22, 25, 26, 31, 32, 33, 37, 41, 44, 45, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 64, 65, 66, 67, 70, 76, 78, 79, 80, 85, 87, 90, 96, 97, 98, 101, 102, 117, 123, 130, 132, 133, 137, 146, 147, 150, 151, 155], "record": [1, 6, 8, 9, 13, 21, 25, 26, 37, 39, 40, 51, 67, 76, 80, 84, 85, 90, 98, 102, 128, 132, 135, 136, 137, 146, 147, 149, 150, 151, 152, 154], "error": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 20, 21, 23, 24, 26, 27, 31, 32, 35, 40, 41, 48, 49, 51, 54, 57, 59, 63, 64, 65, 67, 68, 71, 72, 77, 80, 81, 85, 87, 90, 94, 103, 107, 118, 119, 121, 122, 124, 126, 128, 132, 133, 135, 137, 138, 140, 146, 147, 149, 150, 151, 152, 155, 162, 163], "cursor": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 21, 22, 23, 25, 26, 35, 37, 38, 40, 41, 45, 48, 49, 51, 56, 57, 58, 59, 62, 64, 66, 68, 70, 71, 76, 78, 80, 98, 102, 128, 137, 138, 154, 156, 157, 162], "hopefulli": [1, 6, 7, 20, 22, 24, 104], "stop": [1, 3, 6, 7, 9, 12, 13, 15, 20, 31, 32, 34, 44, 50, 54, 57, 67, 68, 75, 88, 113, 128, 136, 137, 138, 139, 140, 148, 149, 151, 154, 155, 156, 157, 161, 162, 163], "start": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 22, 23, 25, 26, 27, 31, 35, 36, 37, 41, 44, 45, 48, 49, 51, 53, 54, 56, 57, 59, 65, 66, 67, 68, 71, 76, 77, 80, 81, 82, 83, 88, 90, 96, 97, 98, 101, 102, 104, 113, 117, 119, 120, 121, 123, 126, 128, 131, 134, 136, 137, 142, 146, 147, 148, 149, 150, 151, 154, 157, 158, 160, 161, 162, 163], "restart": [1, 2, 6, 7, 22, 40, 41, 51, 65, 71], "applic": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 33, 35, 36, 37, 40, 43, 44, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 77, 78, 80, 81, 82, 84, 85, 87, 91, 96, 97, 98, 101, 102, 103, 104, 107, 117, 118, 123, 126, 128, 129, 132, 133, 134, 136, 137, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 158, 160, 161, 162, 163], "121": 1, "eesh": 1, "tutori": [1, 7, 9, 13, 15, 16, 17, 18, 21, 24, 26, 27, 31, 32, 36, 42, 44, 45, 46, 49, 50, 54, 56, 59, 65, 67, 68, 77, 80, 81, 82, 83, 90, 120, 127, 131, 134, 136, 137, 138, 139, 140, 142, 144, 147, 148], "doctest": [1, 9, 57, 82, 151, 155, 160, 161], "broken": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 17, 20, 21, 23, 51, 64, 66, 92, 97, 121, 136, 148], "quit": [1, 4, 5, 8, 13, 17, 20, 21, 22, 25, 49, 87], "add_properti": [1, 3, 4, 96, 130, 131, 132], "pg": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 21, 22, 33, 44, 48, 57, 59, 67], "alreadi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 37, 40, 43, 44, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 65, 67, 68, 71, 75, 76, 77, 78, 82, 85, 87, 88, 90, 91, 96, 97, 98, 101, 103, 107, 116, 117, 118, 121, 122, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 155, 157, 160, 161, 163], "exist": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 67, 68, 70, 71, 76, 77, 80, 81, 84, 85, 87, 88, 90, 93, 94, 95, 97, 99, 101, 102, 104, 113, 115, 116, 118, 119, 121, 122, 123, 124, 128, 129, 130, 131, 132, 133, 135, 136, 137, 139, 140, 145, 146, 148, 149, 150, 156, 158, 160, 161], "277": 1, "contextu": [1, 3, 11, 13, 27, 31, 40, 49, 55, 120, 145, 147], "sessioncontext": [1, 3, 16], "plugin": [1, 6, 8, 9, 10, 11, 13, 25, 26, 31, 36, 37, 48, 54, 80, 94, 95, 96, 123, 132], "why": [1, 3, 12, 23, 24, 25, 31, 51, 57, 70, 72, 104, 128, 137, 149, 151, 162], "see": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 48, 49, 51, 52, 54, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 128, 129, 132, 133, 134, 136, 137, 138, 139, 140, 144, 146, 147, 148, 149, 150, 151, 154, 155, 157, 161, 162, 163], "http": [1, 3, 4, 5, 6, 7, 8, 12, 15, 16, 17, 18, 19, 20, 21, 24, 26, 28, 49, 54, 61, 62, 64, 65, 66, 67, 68, 69, 71, 80, 98], "www": [1, 3, 4, 5, 6, 8, 15, 17, 18, 24, 28, 49, 54, 57, 64, 67, 68, 69, 80, 98], "sqlalchemi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 69, 72, 73, 75, 78, 79, 80, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152], "org": [1, 3, 4, 5, 6, 7, 8, 15, 17, 18, 19, 20, 21, 24, 28, 49, 54, 57, 61, 62, 64, 65, 67, 68, 69, 98, 113, 138, 139, 154, 155, 163], "trac": [1, 3, 4, 5, 17, 98], "wiki": [1, 3, 4, 5, 6, 8, 11, 16, 17, 18, 25, 82, 98, 104], "whydontforeignkeysloaddata": 1, "orphan": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 24, 25, 31, 84, 87, 101, 103, 132, 139, 140, 145, 147], "cascad": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 21, 22, 24, 26, 27, 31, 32, 34, 72, 80, 83, 84, 87, 90, 94, 97, 98, 102, 103, 120, 121, 123, 132, 136, 139, 140, 142, 145, 146, 147, 148, 149, 162], "certain": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 18, 19, 20, 21, 25, 26, 31, 33, 34, 35, 36, 37, 39, 40, 48, 49, 51, 54, 56, 57, 58, 59, 61, 64, 65, 66, 70, 72, 78, 80, 87, 91, 98, 101, 102, 123, 126, 128, 129, 132, 137, 145, 146, 148, 151, 152, 155, 157, 163], "isn": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 20, 21, 23, 24, 25, 26, 31, 32, 33, 51, 56, 57, 72, 74, 76, 85, 87, 90, 96, 98, 101, 102, 117, 121, 124, 130, 134, 138, 146, 147, 151, 157, 163], "avail": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 48, 49, 50, 52, 54, 56, 57, 59, 62, 64, 65, 66, 67, 68, 69, 71, 74, 75, 78, 80, 81, 82, 84, 85, 87, 90, 94, 96, 97, 98, 101, 102, 104, 107, 113, 114, 117, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 146, 147, 149, 150, 151, 154, 155, 156, 157, 160, 161, 163], "tell": [1, 13, 15, 21, 39, 57, 72, 76, 87, 90, 122, 137, 151, 155, 160], "interact": [1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 23, 25, 26, 31, 33, 35, 37, 40, 43, 49, 53, 57, 58, 66, 67, 70, 87, 97, 104, 137, 139, 146, 147, 150, 151, 153, 155, 157, 158, 160, 162, 163], "statu": [1, 2, 4, 5, 6, 7, 9, 11, 12, 21, 22, 23, 25, 31, 36, 41, 51, 67, 68, 70, 77, 80, 82, 90, 102, 123, 124, 129, 132, 134, 136, 146], "detach": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 22, 25, 31, 40, 48, 51, 70, 71, 80, 90, 97, 99, 102, 123, 140, 145, 146, 147, 149, 162, 163], "referenti": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 19, 26, 70, 80, 98, 103, 132, 140, 141, 142, 151, 163], "abovement": 1, "imposs": [1, 4, 21, 23, 25, 64, 65, 70, 79, 140, 141], "bindparam": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 21, 23, 24, 25, 30, 31, 33, 42, 43, 48, 49, 54, 56, 57, 61, 66, 70, 78, 101, 104, 123, 154, 156], "posit": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 21, 24, 26, 30, 31, 34, 36, 37, 39, 40, 48, 49, 54, 56, 57, 58, 59, 65, 67, 68, 70, 78, 80, 87, 88, 90, 96, 97, 98, 101, 119, 132, 137, 155], "nice": [1, 3, 4, 15, 16, 17, 21, 32, 68, 85, 151], "job": [1, 2, 5, 7, 18, 19, 22, 24, 31, 51, 70, 80, 87, 90, 122, 147], "bill": [1, 12], "noon": 1, "280": 1, "pg_schema": 1, "use_information_schema": 1, "60": [1, 10, 25, 32, 49, 59], "71": 1, "case_sensit": [1, 2, 3, 9, 13, 19, 37, 48], "metadata": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 22, 23, 24, 25, 27, 30, 31, 33, 34, 37, 40, 41, 46, 48, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 66, 67, 68, 72, 75, 76, 77, 80, 84, 85, 90, 91, 93, 95, 98, 101, 102, 112, 117, 118, 121, 123, 124, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 146, 151, 153, 155, 157, 160, 162, 163], "determin": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 40, 44, 49, 51, 52, 54, 56, 57, 58, 59, 65, 66, 67, 68, 70, 77, 78, 80, 87, 90, 92, 94, 97, 98, 101, 103, 104, 112, 117, 118, 121, 123, 124, 128, 132, 136, 137, 138, 140, 146, 147, 151, 152, 155, 163], "schemaitem": [1, 2, 6, 8, 10, 12, 21, 32, 34, 35, 40, 49, 53, 101, 123], "whether": [1, 2, 3, 5, 6, 7, 8, 11, 13, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 31, 32, 34, 35, 36, 37, 40, 43, 48, 49, 51, 54, 56, 59, 64, 65, 66, 67, 68, 70, 77, 85, 90, 92, 94, 97, 101, 104, 113, 118, 121, 123, 124, 128, 132, 134, 137, 140, 144, 146, 148, 149, 151, 154, 155, 161], "identifi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 21, 22, 23, 24, 25, 26, 29, 31, 32, 35, 36, 37, 39, 40, 43, 44, 45, 48, 49, 51, 56, 57, 59, 64, 65, 67, 68, 75, 80, 90, 98, 99, 101, 102, 104, 113, 118, 121, 123, 124, 128, 132, 133, 136, 137, 140, 141, 146, 150, 151, 152, 154, 162], "lower": [1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 19, 20, 23, 31, 32, 33, 40, 49, 50, 56, 57, 58, 59, 65, 66, 67, 70, 77, 78, 90, 94, 98, 101, 103, 113, 123, 132, 133, 136, 146, 151, 155], "quot": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 31, 32, 34, 35, 40, 44, 45, 48, 49, 52, 56, 57, 59, 64, 66, 67, 68, 155], "appli": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 23, 24, 25, 26, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 43, 44, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 75, 76, 77, 79, 80, 83, 84, 85, 87, 88, 90, 94, 95, 96, 97, 98, 101, 102, 103, 104, 107, 113, 117, 118, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 144, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 160, 161, 163], "mix": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 19, 20, 21, 22, 24, 32, 49, 56, 65, 71, 87, 91, 93, 122, 127, 131, 155], "uppercas": [1, 3, 4, 5, 6, 8, 11, 12, 13, 17, 20, 23, 56, 58, 60, 64, 65, 66, 67, 68, 155], "known": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 32, 33, 35, 36, 37, 42, 43, 47, 49, 51, 52, 53, 54, 56, 57, 58, 59, 64, 65, 66, 67, 68, 70, 71, 72, 75, 76, 77, 78, 80, 87, 94, 97, 98, 99, 102, 103, 118, 122, 123, 128, 132, 134, 135, 136, 138, 139, 144, 146, 147, 149, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163], "reserv": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 35, 48, 49, 56, 57, 67, 72], "word": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 22, 35, 36, 48, 49, 50, 56, 57, 64, 67, 70, 71, 72, 77, 113, 121, 124, 136, 144], "contain": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 70, 72, 74, 75, 76, 78, 79, 80, 82, 84, 87, 90, 92, 94, 96, 97, 98, 101, 102, 103, 104, 113, 117, 118, 119, 121, 122, 123, 124, 128, 130, 132, 134, 135, 136, 137, 138, 140, 141, 144, 146, 147, 148, 149, 150, 151, 154, 155, 156, 161, 162, 163], "charact": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 20, 22, 23, 24, 25, 30, 31, 32, 33, 38, 39, 41, 44, 48, 49, 52, 56, 57, 59, 64, 65, 66, 67, 68, 97, 101, 103, 123, 129, 152], "variou": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 20, 21, 22, 24, 25, 26, 31, 32, 34, 37, 43, 48, 49, 51, 52, 53, 54, 57, 59, 61, 63, 65, 67, 68, 70, 80, 81, 84, 87, 98, 103, 126, 128, 132, 137, 138, 140, 147, 148, 151, 163], "dialect": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 27, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 65, 67, 68, 69, 70, 71, 74, 76, 78, 80, 81, 82, 101, 102, 103, 104, 115, 117, 123, 124, 136, 137, 150, 151, 154, 155, 156, 157, 158], "overrid": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 21, 23, 30, 31, 34, 35, 36, 37, 40, 43, 44, 48, 49, 53, 54, 56, 58, 59, 60, 64, 65, 66, 67, 68, 79, 90, 94, 98, 101, 102, 104, 113, 115, 117, 121, 122, 123, 126, 128, 132, 136, 137, 146, 150, 151], "155": 1, "pysqlit": [1, 3, 4, 5, 7, 8, 9, 12, 13, 17, 18, 71, 78, 136, 158], "instal": [1, 4, 5, 6, 7, 8, 11, 12, 13, 16, 17, 19, 25, 26, 27, 31, 37, 63, 64, 65, 66, 67, 68, 70, 72, 81, 98, 116, 140], "mock": [1, 6, 7, 8, 11, 13, 17, 37], "url": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 17, 20, 22, 24, 26, 31, 38, 40, 45, 48, 49, 57, 59, 62, 64, 65, 66, 67, 68, 70, 71, 78, 80, 98, 102, 146, 147, 151, 158], "escap": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 25, 32, 34, 35, 38, 48, 49, 56, 59, 64, 65, 78, 101, 123], "281": 1, "yet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 21, 22, 24, 25, 26, 31, 32, 33, 36, 43, 48, 49, 52, 54, 56, 57, 65, 67, 68, 70, 71, 75, 77, 80, 84, 87, 90, 94, 97, 102, 107, 118, 121, 122, 123, 124, 128, 132, 134, 136, 137, 146, 149, 150, 151, 154, 157, 158, 162, 163], "timezon": [1, 2, 5, 7, 8, 9, 12, 13, 30, 59, 60, 64, 65, 66, 67], "far": [1, 2, 3, 5, 6, 8, 9, 11, 12, 13, 15, 17, 19, 21, 24, 25, 31, 56, 57, 61, 75, 76, 87, 107, 118, 121, 124, 127, 128, 132, 135, 139, 148, 149, 151, 156, 157, 161], "stamp": [1, 90, 146, 149], "WITH": [1, 5, 6, 7, 8, 9, 10, 12, 13, 21, 22, 28, 33, 35, 36, 44, 54, 57, 59, 65, 66, 67, 137, 155], "zone": [1, 5, 30, 35, 147], "control": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 31, 33, 35, 38, 40, 45, 48, 51, 53, 54, 56, 57, 59, 62, 67, 68, 70, 77, 80, 83, 90, 92, 93, 97, 98, 113, 118, 122, 123, 128, 129, 131, 132, 137, 140, 145, 146, 147, 148, 151, 152, 155, 156, 157, 162, 163], "presenc": [1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 17, 22, 24, 26, 31, 34, 39, 48, 49, 54, 57, 59, 67, 68, 101, 104, 132, 136, 149, 151, 161, 163], "psycopg2": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 21, 22, 23, 31, 33, 36, 37, 39, 40, 49, 51, 59, 63, 70, 76, 78, 79, 80, 96, 98, 154, 157, 162], "tzinfo": [1, 12, 13, 33], "confus": [1, 4, 5, 9, 10, 11, 12, 13, 18, 19, 20, 23, 25, 26, 31, 33, 35, 49, 52, 56, 62, 67, 68, 70, 77, 78, 85, 97, 101, 118, 123, 128, 136, 147, 150], "don": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 21, 22, 23, 24, 26, 30, 31, 32, 33, 35, 36, 37, 48, 49, 51, 52, 54, 56, 57, 58, 59, 64, 66, 67, 70, 71, 76, 77, 78, 80, 90, 97, 101, 102, 122, 124, 128, 130, 133, 134, 136, 137, 138, 147, 148, 149, 151, 155, 157, 162, 163], "287": 1, "deregist": [1, 30, 42], "autoload": [1, 2, 3, 5, 6, 9, 13, 17, 23, 24, 26, 31, 49, 52, 96], "289": 1, "import": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19, 20, 21, 22, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 101, 102, 103, 104, 107, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163], "py2": [1, 2, 3], "sqlite3": [1, 5, 11, 12, 17, 25, 37, 57, 76, 98, 151, 158, 161], "293": 1, "startswith": [1, 3, 7, 11, 12, 13, 25, 49, 50, 56, 57, 59, 83, 101, 102, 123], "endswith": [1, 3, 7, 11, 12, 13, 49, 50, 56, 59, 101, 123, 163], "296": 1, "sat": [1, 2, 3, 4, 5, 6], "aug": [1, 3, 4], "facil": [1, 2, 9, 12, 13, 21, 30, 31, 48, 51, 68, 70, 76, 78, 121, 136], "individu": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 22, 23, 25, 31, 32, 35, 36, 37, 40, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 76, 77, 80, 81, 82, 83, 85, 87, 88, 90, 92, 94, 96, 97, 101, 102, 107, 112, 113, 115, 117, 118, 121, 122, 123, 126, 127, 128, 132, 133, 134, 135, 136, 137, 139, 140, 141, 143, 146, 147, 148, 149, 151, 152, 155, 157, 161, 162], "quote_schema": [1, 4, 6, 16, 35, 48, 49], "aaron": 1, "spike": 1, "excel": [1, 6], "effort": [1, 2, 7, 8, 10, 11, 12, 13, 16, 20, 22, 25, 31, 63, 64, 65, 66, 67, 68], "assignmapp": [1, 2, 3, 16], "is_primari": [1, 2], "mayhem": 1, "redund": [1, 3, 4, 5, 6, 7, 8, 9, 12, 16, 19, 20, 21, 54, 78, 84, 104, 128, 149, 163], "were": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 35, 36, 37, 39, 40, 41, 43, 44, 48, 49, 51, 52, 54, 56, 57, 66, 67, 68, 70, 71, 77, 80, 84, 85, 87, 90, 91, 96, 97, 99, 101, 102, 103, 113, 117, 122, 123, 124, 126, 128, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 161, 162, 163], "allow_null_pk": [1, 5, 7, 17], "null": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 23, 24, 25, 31, 32, 34, 35, 40, 42, 49, 50, 52, 56, 57, 58, 59, 64, 66, 67, 68, 70, 76, 77, 80, 84, 85, 87, 90, 101, 103, 113, 118, 121, 123, 124, 126, 128, 130, 132, 139, 140, 144, 145, 146, 147, 149, 151, 152, 155, 161, 163], "outer": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 24, 25, 31, 36, 45, 49, 54, 57, 66, 70, 72, 97, 113, 122, 123, 128, 132, 135, 137, 140, 144, 147, 150, 151, 163], "modif": [1, 3, 6, 7, 8, 9, 10, 11, 12, 13, 18, 20, 21, 22, 23, 25, 26, 30, 31, 37, 40, 54, 61, 65, 90, 97, 98, 101, 102, 104, 113, 119, 128, 134, 137, 140, 146, 147, 148, 149], "uowtask": 1, "tag": [1, 87, 101, 157], "regist": [1, 6, 7, 8, 9, 12, 13, 20, 30, 38, 39, 40, 44, 47, 65, 67, 68, 85, 97, 102, 104, 116, 157], "save_obj": [1, 2, 3], "end": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 20, 22, 24, 25, 26, 30, 31, 32, 33, 34, 37, 40, 43, 44, 45, 48, 49, 51, 52, 54, 56, 57, 58, 59, 64, 67, 68, 70, 71, 77, 80, 88, 90, 92, 97, 98, 101, 102, 103, 104, 113, 117, 118, 119, 123, 128, 134, 137, 139, 146, 147, 149, 150, 151, 155, 157, 160, 161], "cycl": [1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 15, 18, 21, 24, 25, 32, 34, 35, 41, 48, 49, 52, 54, 67, 77, 121, 137, 140], "organ": [1, 4, 6, 11, 13, 21, 25, 31, 35, 44, 45, 51, 52, 56, 67, 70, 76, 77, 82, 90, 98, 126, 138, 146, 155], "particularli": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 18, 20, 21, 23, 24, 25, 32, 40, 49, 51, 56, 57, 59, 61, 64, 66, 90, 95, 102, 118, 123, 128, 129, 130, 138, 147, 148, 150, 151, 155, 156], "task": [1, 2, 3, 4, 5, 7, 8, 9, 12, 13, 21, 25, 30, 34, 40, 54, 56, 57, 66, 76, 78, 80, 82, 85, 88, 90, 102, 103, 104, 119, 128, 135, 147, 148, 151, 155, 157, 158, 162], "worri": [1, 3, 9, 10, 20, 21, 22, 57, 113, 157], "about": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 30, 31, 33, 35, 36, 40, 47, 48, 49, 51, 52, 53, 54, 56, 59, 61, 64, 65, 66, 70, 72, 74, 77, 80, 83, 84, 87, 92, 97, 98, 103, 104, 113, 123, 124, 128, 129, 132, 133, 134, 137, 138, 139, 147, 148, 149, 154, 155, 156, 157, 161, 162, 163], "anywai": [1, 2, 3, 4, 5, 6, 18, 21], "referenc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 22, 23, 24, 25, 31, 32, 36, 48, 49, 51, 52, 54, 55, 57, 65, 67, 68, 77, 80, 84, 94, 98, 101, 104, 122, 123, 124, 126, 128, 132, 133, 135, 137, 140, 141, 145, 147, 148, 151], "256": [1, 68], "257": 1, "propag": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 25, 31, 32, 39, 40, 45, 48, 49, 51, 54, 59, 61, 68, 85, 97, 102, 117, 123, 132, 137, 140, 141, 146, 147, 148], "ambigu": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 19, 20, 21, 25, 26, 48, 56, 57, 66, 70, 84, 90, 94, 121, 124, 135, 138, 140, 146, 155], "messag": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 20, 21, 24, 25, 26, 27, 31, 33, 37, 40, 41, 51, 52, 54, 57, 64, 67, 68, 71, 72, 81, 82, 98, 102, 107, 118, 122, 124, 126, 140, 151], "reason": [1, 2, 3, 5, 7, 8, 9, 10, 12, 13, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 30, 31, 36, 40, 41, 45, 49, 51, 52, 57, 59, 62, 64, 65, 66, 67, 70, 71, 76, 77, 78, 90, 94, 102, 113, 118, 119, 121, 124, 128, 129, 133, 136, 137, 144, 146, 147, 148, 149, 150, 154, 155, 156, 162, 163], "foreignkeyconstraint": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 22, 23, 32, 34, 40, 41, 49, 52, 53, 54, 65, 67, 85, 96, 103, 124, 138, 140, 141, 144, 147, 155, 161, 163], "properli": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 31, 37, 48, 67, 68, 70, 77, 85, 94, 102, 137, 141, 148, 157], "adjust": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 31, 37, 57, 62, 66, 67, 68, 70, 76, 101, 113, 123], "stem": [1, 8, 9, 12], "overflow": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 37, 51, 129], "counter": [1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 20, 21, 22, 23, 27, 31, 35, 37, 67, 80, 92, 98, 120, 131, 132, 148, 156], "decrement": [1, 6, 31, 35], "actual": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 37, 40, 43, 45, 48, 49, 51, 52, 54, 56, 57, 58, 59, 64, 65, 66, 67, 68, 70, 71, 75, 76, 77, 78, 80, 84, 85, 87, 90, 94, 97, 98, 101, 102, 103, 104, 107, 118, 121, 123, 126, 128, 129, 132, 134, 135, 136, 137, 138, 139, 140, 145, 146, 147, 148, 150, 151, 155, 156, 157, 158, 160, 161, 162, 163], "succeed": [1, 31, 123, 136], "script": [1, 5, 6, 8, 9, 11, 18, 21, 25, 31, 32, 49, 53, 71, 74, 76, 82, 96, 98, 102, 136, 147, 158], "attempt": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 35, 36, 40, 41, 49, 51, 54, 56, 57, 59, 64, 65, 66, 67, 68, 70, 71, 74, 82, 83, 85, 87, 90, 97, 98, 99, 101, 102, 103, 104, 112, 113, 123, 124, 128, 132, 137, 138, 140, 141, 144, 146, 148, 149, 151, 163], "224": [1, 151], "mediumint": [1, 52, 65], "263": 1, "264": 1, "singletonthreadpool": [1, 3, 5, 8, 12, 13, 18, 37, 38, 51, 68, 71], "size": [1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 17, 21, 25, 26, 31, 37, 51, 59, 64, 65, 67, 102, 104, 117, 128, 138], "stai": [1, 5, 8, 9, 12, 18, 21, 26, 31, 67, 70, 77, 87, 128, 161, 162], "around": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 31, 35, 40, 43, 44, 48, 49, 50, 54, 56, 57, 59, 64, 67, 68, 70, 76, 77, 78, 80, 82, 87, 90, 96, 98, 101, 102, 113, 123, 147, 149, 151, 154, 155, 161], "dispos": [1, 2, 4, 5, 6, 7, 9, 12, 13, 22, 38, 40, 49, 51, 64, 70, 71, 90, 97, 102, 131, 132], "en": [1, 3, 5, 6, 16, 64, 65, 66, 71, 132], "mass": [1, 3, 90, 146], "pickl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 55, 59, 97, 98, 137], "loader": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 23, 24, 26, 31, 54, 59, 70, 75, 76, 77, 80, 90, 97, 99, 102, 122, 123, 124, 127, 137, 139, 140, 142, 146, 147, 148, 151], "265": 1, "267": 1, "show": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 21, 22, 23, 25, 31, 51, 57, 65, 75, 76, 84, 97, 98, 121, 133, 137, 147, 151, 155, 162], "1770": [1, 5], "adodbapi": [1, 2, 3, 4, 9, 10, 13], "nowait": [1, 2, 6, 20, 54, 137], "issubclass": [1, 102, 136], "direct": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 20, 21, 24, 25, 26, 31, 32, 33, 34, 35, 37, 40, 49, 52, 54, 56, 57, 61, 64, 65, 66, 67, 68, 70, 74, 78, 83, 84, 85, 87, 90, 91, 93, 97, 101, 102, 103, 104, 121, 123, 124, 126, 128, 129, 130, 131, 132, 135, 136, 137, 139, 140, 141, 144, 146, 147, 149, 150, 151, 152, 155, 161, 162, 163], "__mro__": [1, 7, 19, 90, 112, 132, 136, 146], "A": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 64, 65, 66, 67, 68, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 90, 91, 92, 94, 96, 97, 98, 99, 101, 102, 103, 104, 107, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 149, 151, 154, 155, 156, 157, 161, 162, 163], "b": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 33, 36, 43, 44, 49, 54, 56, 58, 59, 61, 65, 66, 67, 68, 70, 75, 77, 78, 80, 84, 85, 87, 88, 94, 101, 102, 122, 123, 124, 128, 132, 136, 137, 140, 149, 155], "flexibli": [1, 6, 13, 19, 20, 98, 129, 132, 138, 151], "271": 1, "subselect": [1, 4, 8, 9], "aggreg": [1, 2, 6, 9, 10, 12, 18, 21, 25, 31, 44, 54, 56, 57, 67, 80, 113, 137], "max": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 21, 30, 31, 41, 42, 43, 44, 54, 57, 70, 96, 135, 136, 137, 155], "min": [1, 4, 42, 44, 66, 76, 80, 137, 155], "252": 1, "text": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 22, 25, 26, 31, 32, 33, 34, 35, 36, 37, 40, 42, 45, 48, 49, 51, 52, 54, 56, 59, 60, 62, 65, 66, 69, 70, 87, 90, 92, 95, 97, 102, 112, 119, 126, 132, 136, 137, 138, 146, 151, 154, 155, 157], "269": 1, "mstinyinteg": [1, 4, 65], "jul": [1, 2, 3, 4, 5, 6], "20": [1, 2, 3, 4, 5, 6, 9, 10, 11, 17, 19, 23, 24, 25, 26, 33, 34, 35, 49, 51, 56, 57, 58, 59, 64, 67, 70, 76, 87, 101, 115, 118, 121, 122, 123, 137, 156], "big": [1, 2, 3, 7, 8, 13, 15, 30, 128], "truli": [1, 13, 30, 66, 75, 140], "constraint": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 27, 30, 34, 41, 46, 48, 49, 51, 52, 53, 54, 59, 64, 74, 77, 80, 81, 84, 85, 87, 92, 96, 103, 119, 121, 124, 133, 136, 138, 139, 140, 141, 147, 151, 153, 155], "primarykeyconstraint": [1, 2, 5, 6, 7, 8, 9, 10, 12, 13, 17, 22, 25, 32, 49, 53, 54, 56, 64, 65, 67, 68, 92, 124, 133, 161], "behind": [1, 3, 17, 21, 25, 26, 31, 57, 77, 95, 115, 121, 128, 132, 134, 137, 148, 151, 153, 157], "scene": [1, 17, 26, 31, 77, 95, 115, 121, 128, 134, 137, 148, 151, 153, 157], "orient": [1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 16, 21, 22, 23, 25, 26, 31, 33, 34, 44, 48, 54, 56, 57, 59, 67, 70, 77, 80, 82, 90, 91, 96, 97, 101, 102, 103, 126, 128, 129, 130, 135, 136, 137, 138, 146, 149, 155, 161], "rather": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 24, 30, 31, 32, 33, 35, 36, 37, 39, 54, 56, 58, 59, 64, 67, 70, 77, 80, 83, 84, 85, 87, 90, 91, 92, 97, 101, 102, 104, 117, 118, 121, 122, 124, 126, 128, 132, 133, 134, 136, 137, 146, 148, 151, 155, 157, 161, 162, 163], "76": 1, "scheme": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 37, 38, 40, 43, 44, 48, 49, 54, 56, 58, 59, 64, 65, 66, 67, 68, 71, 80, 88, 90, 92, 96, 97, 102, 112, 113, 123, 124, 128, 131, 132, 134, 137, 143, 146, 147, 150, 152], "wasn": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 20, 24, 149], "veri": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 35, 36, 37, 39, 49, 51, 54, 57, 61, 64, 65, 66, 67, 68, 70, 71, 75, 76, 77, 78, 90, 92, 96, 97, 98, 103, 104, 107, 113, 114, 118, 121, 122, 123, 124, 128, 132, 135, 137, 138, 139, 140, 141, 146, 147, 148, 151, 155, 156, 157, 163], "previous": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 33, 34, 37, 49, 51, 52, 54, 58, 59, 64, 66, 67, 80, 84, 87, 90, 91, 97, 99, 101, 102, 103, 119, 123, 128, 136, 138, 141, 146, 147, 149, 154, 155, 157, 161, 162, 163], "slight": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 18, 26, 70, 76], "rearrang": [1, 2, 4, 8, 9, 13], "threadloc": [1, 2, 3, 4, 5, 12, 13, 15], "directli": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 32, 33, 35, 37, 38, 40, 43, 44, 45, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 87, 90, 91, 92, 95, 96, 97, 98, 101, 102, 103, 105, 107, 112, 113, 118, 119, 121, 122, 123, 124, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 161, 162, 163], "regexp": [1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 17, 19, 49, 50, 56, 65, 68, 101, 123], "filenam": [1, 13, 37, 68, 76, 98, 123, 130], "select_t": [1, 2, 3, 4, 5, 16, 17], "datatyp": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 21, 22, 27, 30, 31, 32, 33, 35, 37, 40, 44, 46, 48, 49, 50, 52, 54, 56, 57, 58, 64, 65, 68, 70, 76, 78, 79, 81, 88, 98, 115, 117, 118, 121, 131, 136, 138, 143, 151, 152, 155, 159, 161], "count_bi": [1, 16], "wrap": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 17, 22, 25, 31, 33, 35, 40, 41, 44, 45, 48, 54, 56, 58, 66, 68, 70, 87, 113, 122, 128], "dbapierror": [1, 6, 7, 8, 29, 35, 41, 51, 56, 70], "definit": [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 35, 40, 46, 48, 49, 52, 59, 64, 65, 67, 68, 70, 77, 80, 81, 91, 92, 94, 96, 113, 118, 119, 123, 128, 130, 132, 133, 134, 149, 151, 155, 159, 161], "__autoload__": 1, "your": [1, 2, 3, 4, 5, 7, 8, 10, 13, 15, 16, 17, 26, 30, 31, 49, 57, 65, 67, 70, 76, 77, 82, 84, 85, 87, 101, 119, 128, 147, 149, 151], "inner": [1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 22, 23, 24, 25, 33, 48, 57, 59, 61, 67, 70, 75, 102, 122, 128, 137, 140, 147, 148, 163], "defer": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 23, 24, 25, 31, 48, 54, 56, 66, 68, 83, 88, 92, 93, 97, 102, 107, 123, 127, 128, 131, 133, 137, 140, 141, 146, 147, 149], "could": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 37, 52, 67, 70, 75, 76, 77, 84, 85, 90, 94, 97, 102, 103, 112, 113, 117, 122, 123, 124, 126, 128, 130, 136, 137, 139, 146, 147, 152, 162, 163], "screw": [1, 5], "under": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 20, 21, 22, 23, 24, 25, 26, 31, 37, 40, 44, 48, 49, 54, 56, 59, 62, 64, 65, 67, 68, 70, 71, 72, 80, 85, 92, 97, 98, 101, 103, 117, 118, 123, 126, 128, 129, 132, 133, 134, 135, 136, 137, 147, 150, 151, 160], "circumst": [1, 3, 5, 6, 7, 8, 9, 12, 13, 21, 22, 24, 31, 33, 37, 48, 49, 56, 59, 64, 65, 66, 68, 78, 82, 96, 97, 101, 123, 136, 140, 150], "potenti": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 16, 17, 18, 20, 21, 22, 23, 24, 26, 31, 37, 49, 50, 51, 54, 56, 58, 59, 61, 65, 68, 77, 80, 90, 94, 98, 102, 104, 124, 128, 129, 137, 138, 147, 152, 162], "endless": [1, 3, 4, 5, 7, 8, 9, 13, 20, 30, 148], "loop": [1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 20, 25, 30, 40, 67, 148], "propnam": [1, 2, 3, 5, 16], "purpos": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 32, 34, 36, 37, 40, 44, 49, 51, 52, 54, 56, 57, 59, 61, 64, 65, 66, 67, 68, 70, 76, 77, 78, 87, 96, 97, 101, 102, 113, 116, 117, 118, 122, 123, 130, 132, 133, 136, 137, 138, 139, 140, 141, 146, 147, 149, 152, 155, 157, 160, 161, 162], "select_bi": [1, 2, 15, 16], "polymorphic_union": [1, 2, 4, 6, 12, 107, 121, 131, 132], "somedai": [1, 7, 18, 21], "ll": [1, 3, 5, 6, 7, 8, 15, 17, 18, 19, 22, 32, 57, 77, 85, 101, 113, 122, 124, 139, 144, 151, 154, 157, 162, 163], "mapperproperti": [1, 3, 4, 5, 6, 7, 9, 10, 11, 19, 47, 75, 84, 88, 91, 93, 100, 101, 113, 123, 129, 131, 132, 133, 134, 140], "do_init": [1, 123], "awar": [1, 2, 3, 5, 7, 8, 9, 12, 13, 15, 16, 18, 20, 25, 26, 31, 32, 37, 47, 56, 57, 59, 60, 65, 66, 84, 98, 128, 132, 133, 140, 151, 155], "disallow": [1, 4, 5, 8, 9, 10, 12, 13, 23, 39, 65, 97, 104, 115, 140], "reduc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 37, 43, 51, 59, 64, 76, 80, 90, 101, 104, 136, 140, 144, 146, 147, 151], "_get": [1, 18, 113], "appeas": [1, 5, 12], "picki": [1, 8, 9], "244": 1, "checkfirst": [1, 2, 3, 6, 9, 13, 21, 32, 34, 35, 37, 40, 48, 49, 59, 67, 74], "234": 1, "245": 1, "08": [1, 5, 25, 37, 136], "travers": [1, 2, 3, 6, 11, 12, 13, 22, 27, 32, 42, 43, 46, 49, 54, 56, 58, 80, 101, 123, 132, 137], "hit": [1, 5, 6, 7, 8, 9, 10, 11, 12, 15, 19, 24, 31, 57, 70, 77], "upgrad": [1, 3, 5, 6, 7, 8, 9, 13, 16, 17, 19, 21, 23, 25, 31, 32, 67, 70, 72], "lib": [1, 5, 6, 7, 8, 9, 17, 21, 26, 65, 67, 76, 98], "sy": [1, 5, 6, 7, 8, 9, 11, 12, 13, 37, 51, 64, 76, 97], "path": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 25, 26, 37, 44, 49, 52, 57, 59, 62, 68, 70, 80, 84, 101, 121, 122, 123, 126, 128, 130, 137, 140, 142, 144, 146, 155], "setuptool": [1, 2, 3, 4, 5, 7, 8, 12, 13, 17, 18, 31, 73, 82, 102], "pythonpath": [1, 98], "kill": [1, 12, 22], "dynamicmetadata": [1, 2, 3], "pymssql": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 22, 23, 37], "group": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 20, 25, 30, 31, 32, 43, 44, 48, 49, 52, 54, 56, 67, 68, 78, 80, 87, 88, 90, 102, 103, 126, 127, 133, 134, 135, 136, 137, 146, 149, 151], "determinist": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 17, 22, 24, 32, 35, 51, 54, 57, 68, 70, 75, 124, 132, 137], "after_insert": [1, 7, 97, 148], "jun": [1, 2, 4, 5, 6], "try": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 22, 23, 24, 25, 31, 48, 49, 51, 56, 57, 63, 70, 71, 72, 80, 85, 97, 98, 101, 119, 123, 126, 146, 147, 150, 151, 162, 163], "init": [1, 8, 13, 18, 91, 97, 98, 118, 123, 132, 148], "__name__": [1, 2, 48, 71, 76, 92, 94, 98, 103, 132], "autocommit": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 25, 37, 38, 40, 42, 45, 48, 51, 54, 56, 65, 67, 77, 90, 102, 145, 146, 147, 153, 157, 161], "despit": [1, 4, 5, 8, 9, 11, 12, 13, 21, 24, 25, 31, 49, 75, 136, 144], "requir": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 23, 24, 26, 30, 31, 32, 33, 34, 35, 37, 39, 41, 43, 44, 45, 49, 51, 52, 54, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 71, 75, 76, 77, 80, 82, 84, 85, 87, 88, 90, 91, 94, 96, 97, 101, 102, 103, 104, 113, 118, 119, 121, 122, 123, 124, 126, 128, 129, 132, 133, 134, 136, 137, 138, 139, 140, 144, 146, 147, 149, 150, 151, 152, 155, 156, 158, 161, 162, 163], "wherea": [1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 17, 21, 22, 23, 24, 31, 43, 54, 57, 64, 80, 82, 107, 121, 128, 132, 134, 137, 151, 155, 161, 162], "blank": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 17, 49, 54, 56, 65, 67, 97, 115, 123, 132, 151], "lenient": [1, 7], "formerli": [1, 5, 17, 24, 80, 149], "garbag": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 20, 22, 24, 31, 40, 51, 62, 70, 90, 99, 102, 117, 123, 128, 132, 148, 149], "collect": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 21, 26, 27, 31, 33, 34, 35, 36, 37, 39, 40, 43, 44, 45, 48, 49, 51, 52, 53, 54, 56, 57, 59, 61, 65, 67, 68, 70, 72, 75, 78, 80, 81, 83, 84, 90, 92, 94, 96, 97, 99, 102, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 132, 133, 134, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 155, 157, 161, 162, 163], "combin": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 19, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 40, 48, 49, 50, 54, 56, 57, 59, 65, 67, 68, 72, 76, 77, 80, 82, 85, 87, 90, 91, 93, 95, 97, 98, 101, 102, 103, 112, 113, 121, 123, 124, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 144, 146, 147, 151, 153, 154, 155], "utterli": 1, "remark": [1, 10, 22], "space": [1, 4, 5, 6, 8, 9, 11, 12, 13, 21, 23, 31, 49, 56, 62, 64, 65, 122, 128, 140, 144, 151, 158], "rest": [1, 2, 5, 8, 19, 20, 25, 31, 51, 54, 57, 71, 75, 90, 113, 128, 133, 137, 151, 157], "tablenam": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 19, 22, 32, 48, 49, 52, 54, 94, 103, 132, 137], "206": 1, "queuepool": [1, 2, 3, 5, 6, 7, 8, 12, 13, 31, 37, 38, 39, 51, 64, 67, 71], "timeouterror": [1, 2, 13, 29, 41], "erron": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 23, 77, 151], "queue": [1, 13, 24, 51, 70, 102], "usag": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 24, 30, 32, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 75, 77, 78, 80, 81, 84, 85, 87, 88, 90, 94, 97, 98, 101, 102, 103, 104, 112, 113, 116, 117, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 135, 137, 138, 140, 141, 142, 145, 146, 147, 149, 150, 151, 152, 155, 156, 157, 158, 160, 163], "rlock": [1, 4], "mutex": [1, 2, 4, 5, 6, 12, 13, 68, 70], "report": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 22, 23, 24, 25, 26, 31, 33, 52, 65, 66, 67, 68, 78, 82, 90, 102, 103, 118, 123, 135, 146, 152], "connectionfairi": [1, 48, 51, 71], "__del__": [1, 7, 102], "put": [1, 2, 3, 5, 6, 9, 10, 12, 25, 57, 70, 71, 77, 80, 119, 136, 147, 155], "reentrant": [1, 3, 4, 5, 6, 129], "hang": [1, 3, 7, 8, 9, 17, 18, 62, 71, 72, 149], "place": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 21, 22, 24, 25, 26, 30, 31, 32, 33, 35, 37, 40, 43, 44, 45, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 77, 78, 80, 83, 84, 85, 87, 90, 91, 92, 94, 95, 96, 97, 98, 101, 102, 104, 107, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 131, 132, 133, 135, 136, 137, 138, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 161, 162, 163], "serial": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 22, 27, 32, 33, 34, 42, 46, 48, 49, 52, 53, 59, 80, 103, 136, 162], "221": 1, "225": 1, "msenum": [1, 4, 5], "mstinytext": 1, "msmediumtext": 1, "mslongtext": 1, "precis": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 23, 33, 57, 59, 64, 65, 67, 151], "numer": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 21, 23, 24, 25, 30, 31, 37, 39, 44, 50, 54, 56, 57, 59, 60, 65, 67, 68, 70, 76, 79, 97, 113, 137, 151, 152, 155], "mike": [1, 13], "bernson": 1, "17": [1, 3, 4, 6, 15, 22, 25, 34, 49, 51, 57, 64, 67, 76, 97, 113, 118, 123, 135, 140, 155], "pretti": [1, 5, 6, 8, 11, 13, 16, 19, 21, 24, 31, 71, 124, 128], "bottleneck": [1, 76], "instrument": [1, 3, 4, 6, 7, 8, 9, 11, 13, 16, 21, 22, 25, 27, 39, 40, 51, 76, 80, 90, 91, 99, 100, 102, 113, 114, 117, 118, 120, 123, 132, 134, 135, 142, 146, 147, 148, 151], "rewritten": [1, 5, 7, 8, 9, 10, 12, 13, 16, 17, 20, 22, 25], "degre": [1, 3, 4, 5, 6, 7, 8, 9, 13, 18, 20, 22, 26, 31, 37, 59, 68, 70, 76, 85, 94, 121, 134, 135, 138, 147, 150], "clearer": [1, 5, 12, 13, 20, 24, 26, 54, 70, 90, 118, 146, 150], "longer": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 30, 31, 32, 33, 37, 40, 41, 43, 48, 49, 51, 54, 57, 59, 64, 65, 66, 67, 68, 71, 77, 78, 82, 85, 90, 97, 98, 101, 102, 103, 104, 115, 123, 129, 132, 137, 140, 141, 146, 147, 150, 151, 152, 162, 163], "micromanag": 1, "committedst": 1, "gone": [1, 2, 4, 5, 17, 22, 24, 30, 67, 72, 98, 128, 149, 151], "open": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 18, 22, 25, 26, 31, 37, 40, 51, 59, 67, 68, 70, 71, 74, 90, 92, 102, 139, 145, 146, 151, 155, 157, 162], "re": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 30, 31, 33, 39, 40, 49, 51, 52, 55, 56, 57, 59, 67, 68, 70, 71, 72, 75, 78, 80, 82, 84, 85, 87, 90, 92, 97, 98, 101, 102, 103, 104, 113, 117, 118, 119, 123, 124, 128, 130, 132, 138, 139, 145, 146, 147, 149, 150, 151, 152, 155, 158, 162, 163], "anymor": [1, 3, 5, 6, 17, 18, 70], "fall": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15, 18, 20, 21, 22, 24, 25, 57, 67, 68, 75, 87, 102, 128, 132, 133, 149, 155], "repeat": [1, 2, 3, 4, 5, 6, 8, 9, 13, 21, 22, 23, 31, 37, 50, 54, 64, 65, 66, 67, 70, 77, 80, 128, 150, 152], "badli": [1, 4], "block": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 19, 25, 26, 38, 45, 48, 50, 67, 68, 70, 71, 77, 90, 96, 102, 104, 118, 124, 136, 140, 145, 146, 150, 155, 157, 163], "foreignkei": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 31, 32, 34, 41, 49, 52, 53, 54, 57, 65, 66, 67, 70, 75, 77, 80, 83, 84, 85, 87, 91, 92, 94, 95, 96, 98, 101, 102, 103, 107, 113, 118, 119, 121, 122, 124, 128, 130, 132, 134, 135, 139, 140, 141, 144, 149, 151, 161], "detect": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 21, 22, 24, 25, 26, 30, 31, 33, 34, 37, 40, 41, 48, 49, 51, 52, 54, 56, 59, 62, 64, 65, 66, 67, 68, 70, 71, 75, 76, 80, 82, 87, 90, 91, 94, 97, 99, 101, 102, 117, 118, 123, 124, 130, 132, 135, 140, 146, 147, 148, 149, 150, 152], "151": 1, "redefin": [1, 2, 3, 5, 6, 7, 8, 11, 12, 17, 19, 49, 50, 56, 57, 60, 101, 113, 117, 123, 129, 131, 140, 143], "207": 1, "port": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 17, 20, 21, 26, 37, 62, 64, 65, 66, 67, 104], "present": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 21, 23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 87, 90, 91, 92, 96, 97, 98, 99, 101, 102, 103, 104, 112, 113, 116, 117, 118, 119, 121, 122, 123, 124, 126, 128, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 144, 146, 147, 148, 149, 150, 151, 155, 157, 160, 161, 162, 163], "didn": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 22, 23, 24, 25, 26, 57, 97, 102, 137, 139, 151, 154, 162], "bugfix": [1, 4, 6, 9, 20], "incorrect": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 21, 22, 25, 70, 94, 122, 128, 137], "driver": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 22, 23, 24, 25, 33, 36, 37, 38, 41, 48, 49, 51, 56, 59, 62, 63, 67, 69, 70, 76, 78, 79, 80, 90, 104, 128, 135, 136, 138, 146, 147, 153, 156, 157, 158, 161], "nonexistentt": 1, "138": 1, "constructor": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 21, 25, 30, 31, 32, 33, 37, 42, 43, 45, 48, 49, 51, 52, 65, 67, 68, 70, 77, 87, 88, 90, 91, 95, 96, 97, 101, 102, 104, 118, 119, 121, 123, 126, 131, 132, 133, 146, 150, 151, 155, 161, 162, 163], "__doc__": [1, 5, 22], "200": [1, 5, 13, 17, 25, 62, 76, 104, 126], "cascade_mapp": 1, "strongli": [1, 3, 4, 5, 12, 13, 15, 20, 21, 22, 23, 24, 31, 59, 64, 65, 66, 90, 121, 128, 137, 146, 149, 152], "moment": [1, 2, 6, 7, 8, 10, 11, 13, 15, 20, 23, 24, 30, 40, 49, 63, 65, 70, 80, 97, 98, 121, 123, 141, 157, 162], "inform": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 35, 36, 37, 40, 44, 45, 47, 48, 49, 51, 52, 53, 54, 56, 57, 61, 62, 64, 65, 66, 67, 68, 69, 70, 75, 76, 77, 80, 83, 84, 87, 90, 91, 96, 97, 98, 101, 103, 117, 118, 119, 121, 122, 123, 124, 126, 128, 132, 134, 136, 137, 138, 139, 140, 146, 147, 148, 151, 154, 155, 161, 162, 163], "202": 1, "203": 1, "ansicompil": 1, "silent": [1, 4, 5, 6, 7, 8, 9, 12, 13, 17, 18, 19, 20, 21, 22, 25, 31, 54, 64, 65, 67, 68, 71, 90, 124, 135, 146, 147, 150], "ignor": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 21, 22, 24, 26, 31, 32, 33, 35, 49, 54, 56, 59, 62, 64, 65, 67, 68, 77, 85, 87, 90, 91, 97, 101, 103, 113, 118, 119, 123, 124, 135, 146], "most": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 20, 21, 22, 23, 24, 26, 30, 31, 32, 33, 34, 35, 37, 40, 44, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 74, 75, 76, 77, 78, 80, 82, 84, 85, 87, 90, 92, 94, 95, 97, 98, 99, 101, 102, 103, 118, 121, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 161, 162, 163], "seem": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 20, 21, 22, 24, 26, 31, 57, 66, 68, 76, 78, 90, 94, 128, 139, 163], "int": [1, 4, 5, 6, 8, 11, 18, 21, 22, 23, 26, 33, 37, 48, 49, 56, 58, 59, 60, 64, 65, 67, 68, 78, 79, 91, 118, 123, 132, 157], "todo": [1, 2, 50, 116, 123], "adjac": [1, 27, 67, 113, 120, 124, 140, 142], "structur": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 22, 23, 25, 26, 30, 31, 32, 33, 36, 37, 39, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 67, 70, 76, 77, 80, 85, 92, 95, 97, 98, 103, 104, 105, 113, 115, 117, 118, 123, 124, 126, 128, 132, 133, 134, 135, 137, 139, 141, 144, 147, 148, 149, 151, 155, 161, 163], "190": 1, "echo_pool": [1, 5, 8, 9, 37, 51, 71], "info": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 17, 25, 31, 32, 33, 34, 37, 40, 48, 49, 51, 52, 64, 66, 67, 71, 76, 80, 88, 90, 92, 94, 101, 102, 123, 129, 133, 139, 140, 146, 149, 161], "unsaf": [1, 56], "strategi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 21, 23, 26, 31, 37, 40, 51, 59, 67, 71, 75, 76, 77, 80, 87, 90, 98, 99, 101, 102, 104, 112, 113, 121, 124, 126, 127, 137, 138, 139, 140, 141, 142, 145, 146, 150, 151], "safe": [1, 2, 3, 5, 8, 9, 11, 12, 13, 23, 24, 30, 31, 32, 33, 40, 49, 57, 58, 59, 64, 66, 68, 70, 71, 76, 78, 80, 90, 104, 145, 146, 148, 149, 150], "188": 1, "partial": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 17, 19, 21, 32, 49, 51, 52, 56, 64, 76, 77, 84, 90, 101, 102, 123, 132, 137, 138, 146, 147], "jame": [1, 2, 13], "ralston": 1, "brad": 1, "clement": 1, "feed": [1, 12, 57, 85], "sid": 1, "cx_oracl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 21, 25, 36, 37, 40, 49, 56, 59], "makedsn": [1, 66], "field": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 16, 17, 20, 22, 25, 31, 37, 49, 51, 56, 57, 59, 66, 67, 68, 70, 80, 87, 91, 96, 101, 115, 118, 126, 128, 130, 132, 151, 155, 161], "els": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 19, 20, 21, 23, 25, 26, 30, 31, 32, 33, 34, 43, 46, 48, 49, 51, 52, 56, 64, 67, 68, 71, 76, 77, 82, 87, 90, 92, 94, 97, 102, 103, 104, 113, 117, 129, 130, 132, 136, 140, 146, 147, 148, 149, 150, 155], "straight": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 20, 21, 22, 26, 43, 49, 54, 56, 57, 68, 101, 104, 122, 126, 128, 136, 146, 151], "tn": [1, 9], "criterion": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 15, 20, 31, 36, 44, 54, 56, 67, 68, 87, 101, 113, 122, 123, 124, 128, 137, 151], "rowcount": [1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 17, 21, 25, 31, 48, 57, 62, 67, 147, 156], "rudiment": [1, 3, 4, 6, 7, 12, 59, 98, 112], "clean": [1, 3, 4, 5, 6, 8, 9, 12, 13, 15, 22, 25, 40, 77, 80, 90, 102, 119, 123, 139, 146, 147, 162], "restor": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 22, 23, 25, 31, 51, 52, 92, 97, 117, 123, 137, 162], "default_metadata": 1, "leav": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 17, 23, 25, 31, 33, 35, 36, 49, 51, 52, 67, 68, 70, 85, 87, 90, 98, 102, 119, 121, 123, 126, 132, 133, 140, 146, 149, 151, 152], "reorgan": [1, 3, 5, 8, 9, 13, 20, 22, 25, 88], "subdirectori": 1, "29": [1, 2, 9, 11, 25, 59, 76, 90, 102, 113, 146], "pars": [1, 3, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 21, 25, 26, 31, 37, 44, 48, 64, 65, 68, 98, 137, 149], "break": [1, 2, 4, 5, 6, 7, 8, 9, 11, 13, 16, 17, 18, 23, 25, 26, 31, 32, 68, 71, 77, 79, 102, 124, 140], "tri": [1, 6, 7, 8, 9, 10, 11, 20, 21, 26, 48, 57, 78, 103, 151, 155, 158, 163], "rewrot": [1, 3, 4, 5, 6], "half": [1, 4, 5, 7, 8, 18, 25], "tlengin": [1, 10], "composedsqlengin": [1, 2], "tran": [1, 15, 24, 31, 71, 150], "six": [1, 6, 31, 157], "duh": 1, "forgot": 1, "weakvaluedictionari": [1, 7], "suppos": [1, 6, 8, 9, 11, 12, 13, 18, 20, 23, 26, 31, 34, 51, 52, 57, 75, 84, 85, 90, 101, 103, 104, 113, 122, 128, 130, 136, 137, 151, 162], "ensur": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 35, 37, 39, 40, 48, 51, 52, 54, 56, 57, 59, 64, 65, 67, 70, 71, 76, 77, 80, 82, 84, 85, 87, 90, 97, 98, 102, 104, 113, 117, 118, 119, 122, 124, 128, 130, 132, 136, 137, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 154, 157, 163], "placehold": [1, 5, 6, 9, 10, 11, 17, 19, 22, 23, 33, 44, 48, 49, 56, 57, 59, 64, 68, 101, 123, 130], "anyth": [1, 2, 3, 4, 5, 6, 8, 15, 21, 22, 30, 33, 48, 51, 75, 87, 90, 124], "process": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 30, 34, 35, 37, 38, 39, 40, 41, 43, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 64, 65, 67, 68, 70, 71, 76, 77, 78, 80, 82, 83, 84, 85, 87, 90, 91, 92, 96, 97, 102, 103, 104, 112, 113, 117, 118, 121, 123, 124, 128, 129, 132, 133, 134, 135, 136, 137, 139, 140, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 161, 162, 163], "detail": [1, 4, 5, 6, 7, 8, 9, 10, 12, 13, 16, 17, 19, 20, 21, 22, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 40, 44, 45, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 64, 65, 66, 67, 68, 70, 71, 77, 78, 80, 81, 82, 84, 85, 87, 90, 92, 96, 97, 101, 102, 103, 113, 121, 123, 124, 126, 128, 131, 132, 133, 134, 136, 137, 138, 139, 140, 144, 146, 147, 148, 149, 150, 151, 153, 155, 157, 159, 160, 162, 163], "varieti": [1, 2, 3, 4, 5, 6, 8, 9, 12, 13, 19, 20, 22, 26, 31, 33, 34, 37, 39, 40, 47, 54, 56, 58, 65, 67, 68, 70, 82, 92, 94, 97, 98, 101, 102, 114, 119, 123, 124, 128, 134, 136, 137, 138, 139, 140, 147, 148, 149, 157, 161, 163], "compon": [1, 4, 8, 12, 13, 21, 23, 26, 30, 32, 37, 47, 48, 53, 56, 57, 61, 64, 70, 76, 80, 82, 92, 98, 105, 106, 131, 132, 153, 155, 157], "connectionprovid": 1, "impact": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 31, 48, 49, 54, 57, 59, 64, 66, 68, 70, 77, 83, 102, 104, 119, 128, 132, 147, 148, 151, 156], "rfc": [1, 8, 20, 37], "1738": [1, 8, 20, 37], "style": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 24, 26, 27, 29, 31, 32, 35, 36, 37, 40, 42, 44, 45, 48, 49, 50, 53, 56, 57, 59, 64, 67, 68, 70, 71, 78, 80, 81, 82, 85, 90, 91, 92, 93, 94, 96, 97, 98, 101, 102, 112, 115, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 136, 137, 138, 139, 141, 145, 146, 148, 149, 150, 151, 155, 156, 157, 158, 160, 161, 163], "exactli": [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 17, 20, 21, 22, 24, 25, 31, 36, 39, 40, 49, 50, 51, 52, 54, 56, 57, 59, 64, 66, 68, 71, 77, 80, 90, 91, 97, 98, 102, 103, 104, 118, 122, 124, 128, 137, 146, 147, 151, 152, 155, 157, 161], "underscor": [1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 17, 24, 32, 37, 49, 65, 103, 129], "dash": [1, 37], "period": [1, 5, 12, 13, 25, 26, 31, 37, 51, 64, 65, 67, 68, 70, 71, 80], "accept": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 21, 22, 23, 24, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 45, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 78, 79, 84, 85, 88, 90, 97, 101, 102, 104, 113, 118, 122, 126, 128, 129, 132, 134, 136, 137, 138, 140, 146, 149, 151, 152, 155, 156, 157, 163], "portion": [1, 3, 5, 6, 7, 8, 9, 10, 13, 18, 19, 24, 25, 28, 37, 44, 54, 56, 66, 67, 68, 71, 80, 82, 128, 136, 137, 138, 140, 150, 158], "rewrit": [1, 3, 5, 6, 7, 8, 9, 11, 13, 18, 19, 20, 21, 22, 48, 67, 80], "throughout": [1, 3, 4, 5, 6, 11, 12, 13, 16, 17, 24, 25, 26, 31, 32, 34, 51, 57, 77, 80, 123, 128, 130, 132, 137, 141, 148, 150, 151], "reli": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 31, 34, 52, 57, 61, 64, 66, 68, 70, 72, 76, 80, 82, 85, 87, 91, 97, 102, 104, 113, 117, 118, 119, 128, 132, 136, 138, 141, 147, 150, 152, 160], "152": 1, "hibern": [1, 3, 15, 16, 18, 26, 80, 85, 135], "save_or_upd": [1, 3, 4, 5, 16, 17], "provid": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 64, 65, 66, 67, 68, 70, 71, 72, 76, 77, 78, 80, 82, 83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 101, 102, 103, 104, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 136, 137, 138, 140, 144, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163], "sessiontransact": [1, 2, 3, 7, 13, 15, 25, 90, 97, 102, 145, 146, 147, 150], "simplist": [1, 25, 51, 64, 94, 104], "across": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 20, 22, 23, 24, 31, 32, 33, 36, 40, 51, 56, 57, 58, 59, 66, 68, 70, 71, 76, 85, 90, 94, 97, 98, 101, 104, 112, 121, 122, 123, 124, 127, 128, 132, 134, 135, 136, 137, 144, 146, 147, 150, 151, 155, 162], "decis": [1, 2, 3, 6, 11, 17, 19, 20, 21, 23, 24, 25, 26, 37, 40, 52, 66, 67, 99, 103, 104, 148, 151, 162], "whatsoev": [1, 4, 12, 102], "sole": [1, 4, 13, 15, 20, 31, 40, 58, 59, 67, 87, 157], "boundmetadata": [1, 2, 3], "167": 1, "147": 1, "namespac": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 21, 23, 24, 25, 26, 37, 44, 48, 49, 52, 54, 55, 56, 65, 67, 68, 75, 84, 107, 118, 122, 123, 124, 126, 132, 134, 137, 140, 155], "favor": [1, 2, 3, 4, 5, 6, 11, 12, 13, 15, 17, 18, 23, 24, 71, 90, 102, 113, 132, 135, 146, 147], "monkeypatch": [1, 2, 9, 13, 70, 71, 102], "154": [1, 98], "31": [1, 2, 3, 5, 6, 10, 11, 12, 21, 25, 35, 64, 76], "create_al": [1, 3, 5, 6, 7, 9, 13, 20, 21, 22, 26, 31, 32, 33, 34, 35, 37, 48, 49, 57, 58, 59, 64, 65, 67, 68, 74, 76, 77, 92, 96, 98, 102, 136, 139, 151, 161], "drop_al": [1, 3, 5, 6, 7, 9, 11, 21, 31, 32, 34, 35, 49, 59, 67, 72, 98, 102, 161], "98": 1, "runner": [1, 6, 8, 13, 25, 102], "deal": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 28, 31, 34, 36, 37, 38, 40, 57, 59, 67, 70, 71, 75, 82, 84, 85, 97, 101, 104, 113, 123, 124, 128, 132, 136, 137, 140, 146, 147, 148, 149, 151, 155, 162, 163], "migrat": [1, 3, 4, 7, 8, 9, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 32, 34, 37, 44, 45, 52, 53, 54, 57, 66, 67, 70, 74, 80, 81, 87, 90, 96, 102, 118, 123, 128, 137, 140, 146, 147, 151, 160], "guid": [1, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 31, 32, 54, 60, 62, 81, 102, 120, 123, 127, 137, 148, 152, 153, 155, 163], "02migrat": 1, "sun": [2, 3, 4, 5, 6, 12], "oct": [2, 3, 4, 5, 6], "14": [2, 3, 4, 6, 7, 8, 15, 21, 24, 25, 26, 33, 48, 49, 58, 59, 63, 67, 76, 97, 157], "2007": [2, 3, 15, 22, 98], "m2m": [2, 4], "687": 2, "merg": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 23, 25, 26, 28, 31, 40, 54, 90, 97, 98, 102, 123, 132, 137, 140, 145, 146, 147, 148, 150, 155], "link": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 31, 33, 35, 36, 37, 40, 45, 48, 49, 51, 54, 56, 57, 61, 62, 64, 65, 67, 68, 70, 74, 75, 77, 80, 82, 84, 90, 97, 101, 102, 103, 112, 113, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 146, 147, 148, 149, 151, 155, 158, 160, 161, 162, 163], "pk": [2, 3, 5, 6, 7, 8, 9, 10, 13, 17, 18, 32, 33, 49, 76, 136], "sync": [2, 3, 7, 8, 9, 10, 11, 13, 22, 48, 51, 70, 72, 102, 119, 141, 162], "769": [2, 3], "item": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 31, 32, 34, 37, 43, 48, 49, 54, 56, 59, 61, 66, 67, 70, 84, 85, 87, 90, 97, 98, 101, 102, 104, 117, 119, 123, 124, 126, 128, 129, 132, 136, 137, 138, 139, 140, 141, 144, 145, 146, 149, 150, 151, 163], "noload": [2, 3, 5, 6, 7, 8, 9, 10, 13, 127, 128, 137, 140, 142], "813": [2, 3], "occasion": [2, 7, 8, 9, 17, 18, 21, 57, 76, 101, 150, 151], "race": [2, 4, 8, 9, 10, 11, 12, 13, 90, 152], "preced": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 17, 21, 22, 34, 35, 43, 44, 49, 50, 54, 56, 57, 59, 65, 68, 71, 78, 84, 94, 101, 123, 136, 137, 138, 147, 149, 155, 157, 162], "719": 2, "assum": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 33, 37, 40, 45, 48, 49, 51, 52, 54, 56, 57, 58, 59, 61, 64, 65, 66, 67, 71, 75, 76, 77, 84, 85, 90, 92, 96, 97, 98, 101, 102, 103, 104, 115, 122, 123, 128, 130, 132, 134, 136, 137, 138, 140, 141, 144, 146, 147, 149, 150, 151, 157, 163], "768": [2, 3], "NOT": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 24, 25, 28, 31, 32, 33, 34, 35, 36, 40, 42, 49, 52, 54, 56, 57, 64, 65, 66, 67, 68, 76, 78, 84, 85, 101, 123, 124, 128, 139, 140, 151, 152, 155, 161, 163], "match": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 23, 24, 25, 26, 31, 32, 36, 37, 39, 41, 42, 44, 49, 54, 56, 59, 61, 64, 65, 66, 67, 68, 75, 80, 84, 85, 87, 90, 92, 97, 98, 99, 101, 103, 113, 118, 122, 123, 124, 128, 132, 133, 136, 137, 138, 146, 147, 148, 149, 151, 152, 155, 156, 157, 162, 163], "x": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 45, 46, 49, 50, 52, 54, 56, 58, 59, 63, 64, 65, 67, 68, 72, 77, 78, 79, 80, 81, 82, 85, 88, 90, 94, 97, 98, 101, 102, 107, 113, 117, 120, 122, 123, 126, 127, 128, 129, 130, 137, 138, 140, 141, 142, 145, 146, 148, 149, 150, 155, 156, 157, 161], "y": [2, 3, 4, 5, 6, 8, 9, 10, 13, 15, 18, 19, 20, 21, 23, 24, 25, 26, 30, 31, 33, 34, 43, 44, 45, 49, 50, 54, 56, 57, 58, 59, 64, 65, 67, 72, 78, 88, 94, 101, 102, 113, 117, 122, 123, 126, 129, 130, 137, 140, 141, 155, 156, 157, 161], "764": [2, 3], "year": [2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 18, 20, 22, 23, 24, 25, 26, 31, 56, 57, 64, 65, 66, 67, 68, 70, 115, 148, 151], "passthrough": [2, 3], "stringifi": [2, 9, 10, 12, 13, 25, 30, 33, 37, 43, 48, 70, 72, 76, 154, 155, 157], "simul": [2, 5, 23, 142], "679": 2, "bigint": [2, 5, 6, 7, 8, 13, 17, 35, 49, 59, 60, 64, 65, 67, 68], "monei": [2, 11, 64, 67], "smallmonei": [2, 64], "uniqueidentifi": [2, 64], "sql_variant": [2, 64], "721": 2, "684": 2, "dsn": [2, 4, 9, 12, 21, 37, 65, 69], "pyodbc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 22, 23, 31, 37, 40, 51, 59, 63], "bob": 2, "long_str": 2, "long_binari": 2, "lob": [2, 3, 4, 5, 6, 7, 9, 11, 12, 23], "622": 2, "751": 2, "supports_sane_rowcount": [2, 3, 6, 12, 31, 48, 156], "due": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 31, 34, 37, 40, 49, 51, 57, 59, 65, 66, 67, 68, 71, 72, 75, 76, 79, 80, 82, 90, 92, 97, 99, 102, 104, 117, 121, 128, 136, 146, 147, 148, 151, 155, 162, 163], "ticket": [2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 17], "370": [2, 3], "right": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 15, 19, 24, 25, 28, 31, 32, 33, 37, 44, 49, 51, 54, 56, 57, 58, 61, 66, 67, 68, 70, 76, 78, 80, 84, 85, 97, 101, 104, 113, 118, 122, 123, 124, 128, 137, 138, 147, 151, 155, 160, 163], "altern": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 20, 21, 23, 24, 25, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 54, 56, 57, 58, 59, 65, 66, 68, 70, 71, 77, 80, 84, 85, 87, 90, 91, 92, 94, 95, 96, 97, 98, 101, 102, 103, 104, 114, 117, 120, 121, 122, 123, 128, 129, 130, 132, 134, 135, 137, 140, 142, 146, 148, 149, 150, 151, 152, 155, 157, 161, 163], "fine": [2, 3, 5, 6, 11, 12, 13, 15, 16, 17, 21, 24, 31, 33, 40, 45, 51, 53, 78, 84, 102, 137, 148, 149, 162], "unnecessari": [2, 4, 5, 6, 7, 10, 11, 12, 13, 21, 22, 23, 31, 37, 49, 59, 64, 66, 77, 78, 129, 137, 147, 162], "harm": [2, 25], "pool_timeout": [2, 13, 37, 51, 70], "dure": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 48, 49, 51, 54, 56, 58, 59, 64, 66, 67, 68, 71, 72, 80, 84, 85, 87, 90, 91, 97, 99, 101, 102, 103, 117, 124, 132, 134, 136, 137, 140, 141, 144, 146, 147, 149, 151, 154], "immedi": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 22, 24, 25, 26, 30, 31, 32, 33, 34, 37, 40, 43, 44, 49, 51, 54, 56, 59, 61, 62, 64, 65, 67, 68, 70, 71, 77, 80, 85, 87, 88, 90, 96, 97, 101, 102, 103, 104, 119, 123, 126, 128, 132, 133, 136, 140, 141, 144, 146, 147, 148, 149, 151, 162], "delai": [2, 6, 7, 10, 11, 12, 13, 80, 96, 107, 121], "implicit": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 20, 21, 24, 25, 30, 33, 35, 36, 37, 38, 48, 49, 52, 54, 56, 64, 65, 66, 67, 68, 70, 74, 77, 80, 83, 85, 88, 123, 137, 139, 141, 145, 146, 151, 154, 155, 156, 161, 162, 163], "spec": [2, 13, 30], "667": 2, "commut": [2, 10], "optim": [2, 3, 4, 5, 6, 8, 9, 10, 12, 15, 16, 17, 18, 21, 22, 24, 25, 31, 54, 65, 66, 67, 76, 80, 85, 104, 119, 128, 137, 138, 140, 151, 157, 162, 163], "664": 2, "63": [2, 5, 6, 13, 24, 32, 35], "571": [2, 3], "15": [2, 3, 5, 15, 20, 21, 22, 25, 26, 33, 35, 56, 68, 78, 97, 113, 117, 128, 157], "nosuchcolumnerror": [2, 5, 6, 9, 29, 41], "607": 2, "final": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 20, 21, 22, 24, 25, 26, 31, 32, 37, 40, 44, 48, 49, 50, 51, 52, 54, 56, 57, 67, 70, 76, 77, 82, 87, 94, 97, 102, 104, 123, 128, 134, 136, 138, 139, 146, 147, 148, 150], "__version__": [2, 57, 76, 82, 151, 160], "428": 2, "engine_or_url": 2, "bind_to": 2, "term": [2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 17, 18, 22, 24, 25, 26, 31, 33, 34, 40, 41, 45, 48, 49, 50, 54, 56, 57, 67, 70, 71, 75, 76, 77, 78, 80, 81, 82, 87, 90, 92, 98, 101, 104, 113, 118, 121, 122, 123, 124, 128, 132, 134, 135, 136, 137, 138, 140, 146, 147, 148, 151, 153, 155, 157, 160, 161, 162, 163], "forward": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 19, 20, 21, 23, 25, 26, 31, 47, 54, 64, 65, 70, 123, 150, 160, 161], "almost": [2, 5, 6, 9, 10, 17, 18, 19, 26, 32, 75, 80, 87, 94, 113, 114, 121, 135, 137, 146], "reset_joinpoint": [2, 3, 21, 137], "realli": [2, 4, 5, 6, 8, 9, 13, 16, 18, 19, 22, 24, 26, 51, 57, 71, 72, 74, 75, 78, 99, 128, 139, 147], "promis": [2, 17], "let": [2, 5, 7, 9, 15, 16, 19, 20, 23, 26, 31, 51, 57, 104, 124, 128, 149, 151, 155, 157, 162], "root": [2, 3, 6, 13, 15, 24, 30, 31, 50, 54, 65, 102, 144, 146, 161], "filter": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 30, 31, 44, 48, 49, 54, 55, 56, 57, 68, 70, 72, 76, 80, 87, 88, 90, 97, 98, 101, 102, 104, 107, 113, 115, 122, 123, 124, 126, 127, 129, 130, 132, 137, 138, 140, 144, 146, 147, 148, 163], "crit": [2, 54], "avoid": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 31, 37, 44, 49, 66, 70, 84, 87, 102, 118, 119, 126, 129, 132, 138, 147, 149, 157, 162], "613": 2, "warn": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 20, 23, 26, 32, 33, 34, 35, 37, 41, 43, 44, 49, 54, 56, 58, 59, 64, 66, 67, 68, 70, 71, 72, 76, 78, 82, 84, 87, 90, 94, 97, 102, 103, 107, 123, 124, 132, 137, 140, 146], "mung": [2, 7], "frequent": [2, 4, 5, 9, 11, 12, 21, 24, 25, 27, 31, 33, 51, 64, 70, 81, 94, 96, 132, 138, 145], "with_par": [2, 5, 6, 9, 11, 13, 16, 17, 26, 124, 127, 137, 151, 163], "598": 2, "stupid": 2, "uselist": [2, 4, 5, 6, 7, 9, 12, 20, 24, 77, 84, 87, 101, 118, 123, 124, 128, 140], "rememb": [2, 67, 77, 78, 87, 151], "funni": 2, "togeth": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 16, 20, 21, 23, 24, 25, 30, 31, 32, 37, 43, 44, 45, 49, 54, 56, 57, 59, 68, 70, 75, 76, 80, 82, 90, 91, 98, 101, 103, 112, 113, 121, 122, 126, 128, 130, 132, 134, 135, 136, 137, 139, 140, 146, 148, 151, 155, 157], "outerjoin": [2, 3, 4, 5, 6, 8, 9, 11, 12, 15, 16, 17, 20, 21, 22, 26, 42, 49, 54, 57, 77, 113, 123, 127, 128, 137, 144, 151, 155], "concret": [2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 16, 21, 37, 80, 98, 107, 122, 131, 132], "involv": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 21, 25, 26, 30, 31, 32, 34, 37, 48, 49, 50, 57, 58, 59, 64, 66, 67, 70, 76, 77, 78, 80, 82, 85, 90, 94, 96, 97, 99, 102, 104, 121, 124, 127, 128, 132, 133, 135, 136, 137, 146, 147, 148, 149, 151, 161], "alt_schema": [2, 49], "id": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 44, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 62, 64, 65, 66, 67, 68, 70, 72, 75, 76, 78, 79, 80, 83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 98, 101, 102, 103, 104, 107, 112, 113, 115, 117, 118, 119, 121, 122, 123, 124, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 161, 162, 163], "substitut": [2, 3, 8, 9, 11, 13, 21, 31, 34, 54, 65, 78, 87, 113, 137, 138], "renam": [2, 3, 4, 5, 6, 7, 8, 13, 17, 31, 37, 49, 52, 54, 56, 57, 59, 84, 101, 115, 123], "threadlocalmetadata": [2, 3, 5, 15, 17, 49, 53], "alia": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 20, 22, 25, 42, 43, 44, 45, 48, 49, 51, 52, 54, 56, 57, 58, 59, 65, 67, 68, 80, 90, 99, 102, 122, 123, 124, 128, 132, 137, 138, 140, 144, 146, 151, 155, 163], "regular": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31, 37, 49, 50, 55, 56, 57, 70, 71, 79, 80, 87, 101, 102, 103, 104, 116, 123, 124, 130, 136, 138, 149, 151, 154, 155, 157], "repres": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 20, 21, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 47, 48, 49, 51, 52, 54, 56, 57, 59, 61, 64, 65, 66, 67, 68, 70, 74, 76, 78, 80, 82, 84, 87, 88, 90, 92, 97, 98, 101, 102, 103, 104, 113, 117, 118, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 161, 163], "scenario": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 22, 24, 25, 31, 34, 37, 40, 41, 49, 51, 52, 56, 57, 58, 59, 64, 66, 67, 68, 70, 71, 77, 78, 80, 84, 85, 90, 93, 97, 101, 104, 117, 121, 123, 124, 128, 131, 132, 133, 135, 136, 138, 140, 146, 147, 149, 150, 151, 152, 155, 161], "formul": [2, 5, 16, 104, 123, 137, 149], "correct": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 31, 48, 56, 57, 59, 62, 64, 65, 68, 70, 71, 72, 75, 78, 87, 94, 102, 107, 118, 119, 121, 128, 137, 138, 148, 161, 163], "abil": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 18, 19, 20, 21, 23, 25, 26, 30, 31, 34, 43, 49, 51, 56, 64, 66, 67, 78, 85, 90, 96, 98, 102, 113, 118, 121, 122, 128, 137, 138, 146, 148, 149, 150, 151, 154, 155, 156, 163], "minim": [2, 3, 4, 7, 8, 12, 17, 19, 23, 31, 37, 51, 54, 56, 57, 68, 74, 77, 78, 87, 104, 117], "equat": [2, 4, 22, 57, 88, 122, 123, 124, 130, 133, 135, 151], "best": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 21, 24, 25, 26, 30, 31, 33, 56, 59, 62, 63, 64, 65, 66, 68, 70, 71, 75, 76, 77, 80, 101, 122, 128, 141, 147, 148, 149, 150, 151, 152, 157, 161, 162, 163], "choic": [2, 3, 5, 13, 30, 33, 40, 57, 58, 59, 65, 68, 75, 96, 97, 102, 103, 129, 133, 136, 151, 161], "185": 2, "650": [2, 4], "dupe": [2, 7, 8, 9, 10, 20, 21], "657": 2, "affect": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 21, 22, 23, 25, 26, 30, 31, 33, 35, 37, 43, 45, 49, 51, 52, 54, 56, 59, 63, 64, 65, 66, 67, 68, 70, 75, 76, 77, 85, 87, 90, 92, 96, 97, 98, 102, 113, 122, 128, 129, 132, 135, 137, 138, 141, 146, 147, 149, 150, 151, 152, 162, 163], "dump": [2, 3, 4, 6, 7, 8, 12, 16, 17, 18, 21, 33, 37, 42, 55, 59, 74, 117], "file": [2, 3, 4, 6, 7, 8, 9, 12, 13, 16, 17, 22, 26, 28, 31, 33, 37, 49, 51, 54, 55, 58, 59, 65, 66, 67, 68, 82, 102, 103, 118, 123, 130, 137, 140, 146, 147, 149, 158], "reus": [2, 5, 10, 11, 31, 40, 51, 64, 104, 132, 137, 139], "unpickl": [2, 3, 4, 6, 7, 8, 9, 13, 55, 97, 117], "619": 2, "calcul": [2, 3, 4, 5, 6, 10, 11, 13, 31, 32, 35, 48, 56, 57, 67, 70, 90, 102, 146, 155], "prevent": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 21, 22, 24, 25, 26, 31, 37, 40, 48, 51, 56, 57, 64, 67, 68, 70, 71, 80, 84, 85, 87, 90, 92, 97, 122, 126, 127, 129, 130, 136, 137, 140, 146, 149, 150, 163], "bypass": [2, 5, 6, 7, 8, 10, 12, 13, 19, 20, 22, 23, 31, 37, 40, 66, 68, 71, 78, 87, 98, 122, 128, 136, 137, 141, 147], "max_overflow": [2, 37, 51, 70], "compound": [2, 5, 6, 7, 8, 10, 13, 56, 57, 78, 138], "623": 2, "620": 2, "in_": [2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 16, 23, 24, 25, 26, 33, 49, 50, 54, 56, 57, 78, 101, 104, 118, 123, 137, 138, 139, 149, 151, 155], "THEN": [2, 3, 56], "545": 2, "558": 2, "last_inserted_id": [2, 5, 7, 17], "passiv": [2, 3, 4, 6, 7, 8, 13, 19, 20, 31, 97, 123, 141, 142, 146], "long": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 37, 39, 41, 51, 53, 54, 56, 64, 66, 68, 70, 76, 78, 80, 84, 85, 87, 98, 104, 115, 122, 124, 128, 130, 136, 144, 147, 151, 161], "589": 2, "corresponding_column": [2, 3, 8, 49, 54, 56], "mess": [2, 20, 57], "593": 2, "interv": [2, 3, 4, 5, 9, 11, 13, 52, 59, 60, 66, 67, 113], "595": 2, "catch": [2, 6, 7, 8, 9, 10, 11, 12, 13, 20, 21, 22, 25, 40, 51, 64, 77, 97, 150], "impli": [2, 3, 7, 8, 9, 11, 12, 13, 23, 25, 26, 28, 31, 35, 36, 39, 49, 54, 56, 57, 59, 68, 70, 77, 78, 80, 85, 90, 98, 102, 121, 122, 128, 137, 138, 140, 141, 147, 151, 155], "625": 2, "modulo": 2, "624": [2, 71], "590": 2, "too": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 22, 24, 25, 30, 31, 32, 33, 56, 57, 70, 76, 98, 103, 117, 128, 148, 151, 157], "overwritten": [2, 3, 11, 22, 128], "603": 2, "634": [2, 98], "abl": [2, 4, 7, 8, 9, 10, 11, 13, 16, 18, 19, 20, 21, 22, 23, 25, 26, 30, 31, 32, 33, 44, 51, 57, 58, 59, 61, 64, 65, 70, 71, 77, 78, 85, 91, 102, 113, 118, 121, 124, 128, 132, 136, 137, 138, 146, 147, 148, 149, 151, 155, 157, 162, 163], "scope_ident": [2, 49, 64], "subsecond": 2, "oracled": [2, 3], "month": [2, 3, 4, 5, 11, 19, 20, 22, 23, 24, 25, 26, 66, 67, 68, 115, 148], "dai": [2, 3, 4, 5, 6, 9, 11, 15, 18, 19, 20, 23, 24, 25, 33, 54, 59, 66, 67, 68, 115, 157], "604": 2, "auto_convert_lob": [2, 4, 12, 23, 66], "oraclebinari": [2, 4], "typemap": [2, 8, 13, 20, 68], "textual": [2, 3, 7, 9, 10, 11, 12, 13, 18, 21, 26, 31, 32, 33, 35, 46, 48, 54, 56, 59, 65, 67, 68, 70, 72, 98, 136, 137, 157], "542": 2, "ext": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 25, 26, 30, 31, 33, 34, 55, 59, 64, 65, 67, 68, 75, 76, 77, 78, 96, 97, 98, 101, 102, 103, 104, 107, 112, 113, 115, 116, 117, 118, 119, 121, 123, 124, 128, 129, 130, 132, 135, 140, 141, 146, 148], "dict": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 18, 20, 21, 22, 25, 31, 33, 37, 48, 52, 58, 59, 61, 62, 65, 67, 68, 76, 87, 92, 94, 101, 117, 123, 126, 132, 136, 157], "instrumentedlist": [2, 3, 15, 87, 142], "g": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 21, 22, 23, 24, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 54, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 75, 76, 77, 78, 80, 85, 90, 93, 97, 98, 101, 102, 103, 104, 107, 112, 113, 115, 117, 118, 119, 123, 126, 128, 129, 132, 134, 137, 138, 140, 145, 146, 147, 148, 149, 150, 151, 152, 155, 162, 163], "tightli": 2, "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 22, 26, 31, 33, 35, 37, 45, 48, 53, 54, 57, 59, 61, 66, 68, 70, 71, 75, 80, 83, 90, 96, 97, 98, 101, 102, 112, 114, 118, 123, 124, 132, 135, 136, 137, 138, 140, 146, 147, 148, 149, 150, 151, 155, 158, 161], "thunk": 2, "597": 2, "domain": [2, 3, 4, 5, 6, 11, 12, 13, 46, 57, 80, 82, 121, 151, 163], "570": 2, "resolv": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 23, 24, 25, 31, 32, 34, 36, 40, 41, 49, 54, 56, 57, 59, 65, 66, 68, 70, 75, 84, 90, 94, 97, 101, 102, 103, 118, 123, 124, 130, 131, 133, 137, 140, 146, 147, 155], "abov": [2, 3, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 62, 64, 65, 68, 70, 71, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 101, 102, 103, 104, 107, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 141, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 161, 162, 163], "alt": 2, "public": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 17, 21, 22, 25, 30, 31, 33, 36, 40, 47, 48, 49, 51, 52, 54, 56, 58, 59, 61, 67, 68, 80, 97, 98, 102, 114, 121, 123, 128, 132, 137, 148], "reset": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 25, 31, 37, 38, 40, 49, 54, 66, 71, 123, 126, 128, 137, 146, 147, 150], "interim": [2, 6, 13, 19, 21, 24, 25, 26, 50, 70, 90, 104, 146], "wouldn": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 17, 20, 21, 22, 33, 58, 59, 113, 130, 137, 151], "correl": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 15, 21, 31, 36, 37, 49, 54, 56, 65, 67, 68, 80, 101, 104, 123, 130, 132, 137, 163], "577": 2, "introduc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 34, 49, 50, 52, 56, 57, 59, 62, 64, 65, 67, 68, 70, 81, 82, 90, 91, 95, 96, 98, 101, 102, 113, 117, 120, 121, 122, 123, 128, 129, 131, 134, 136, 139, 140, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 160, 162, 163], "r2556": 2, "primary_kei": [2, 3, 4, 5, 8, 9, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 44, 49, 52, 54, 56, 57, 59, 64, 65, 66, 67, 68, 70, 75, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 98, 101, 102, 103, 107, 113, 115, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 148, 149, 151, 152, 161], "sa": [2, 3, 13, 16, 17, 24, 26, 37, 57, 63, 64, 67, 71, 72, 91, 132], "logger": [2, 5, 8, 9, 13, 31, 37, 51, 67, 71, 76, 158], "locat": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 24, 25, 26, 31, 32, 35, 36, 41, 43, 49, 52, 54, 56, 57, 59, 61, 66, 68, 84, 85, 90, 98, 103, 112, 113, 121, 122, 123, 129, 130, 132, 136, 137, 146, 147, 149, 151, 155, 156, 158, 161, 162, 163], "_label": [2, 4, 5, 8, 12], "compare_self": 2, "ultim": [2, 5, 6, 7, 8, 9, 11, 12, 13, 21, 22, 23, 24, 25, 31, 32, 33, 37, 40, 48, 56, 57, 58, 59, 66, 67, 71, 76, 84, 85, 90, 92, 94, 96, 97, 102, 112, 113, 118, 121, 124, 128, 132, 133, 134, 137, 138, 146, 147, 155], "mean": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 75, 76, 77, 78, 80, 82, 85, 87, 88, 90, 91, 94, 97, 99, 102, 103, 104, 107, 113, 115, 118, 119, 121, 122, 123, 124, 128, 129, 132, 133, 136, 137, 138, 140, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 161, 162, 163], "someexpr": 2, "_hide_from": 2, "behav": [2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 17, 18, 20, 21, 22, 23, 24, 26, 31, 33, 49, 50, 54, 56, 57, 59, 64, 65, 66, 67, 75, 80, 83, 101, 103, 107, 115, 118, 123, 128, 129, 132, 137, 138, 144, 146, 149, 151, 155, 163], "574": 2, "oid_column": 2, "heavili": [2, 3, 5, 6, 17, 19, 66, 80], "signific": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 17, 20, 22, 23, 25, 38, 43, 56, 61, 62, 64, 66, 67, 68, 76, 78, 80, 82, 90, 94, 97, 102, 118, 124, 128, 132, 136, 137, 138, 147, 148, 155, 162], "cach": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 21, 24, 33, 35, 37, 38, 42, 43, 48, 49, 51, 52, 54, 56, 57, 58, 59, 61, 64, 65, 68, 78, 80, 90, 97, 102, 104, 123, 137, 140, 145, 146, 148, 149], "typeengin": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 22, 23, 25, 33, 40, 44, 48, 49, 52, 56, 58, 59, 60, 61, 64, 65, 67, 68, 70, 76, 101, 123, 136, 155], "_group": 2, "cleaner": [2, 5], "mutat": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 20, 24, 27, 31, 33, 39, 40, 54, 56, 59, 67, 77, 90, 97, 102, 113, 114, 120, 129, 131, 136, 141, 143, 146, 163], "paren": [2, 87], "restrict": [2, 6, 9, 12, 13, 18, 19, 21, 24, 25, 28, 32, 36, 44, 55, 57, 64, 66, 67, 68, 87, 90, 97, 134, 146, 149], "578": 2, "nearli": [2, 13, 18, 25, 37, 55, 66, 70, 76, 80, 123, 147], "nchar": [2, 3, 4, 5, 7, 11, 12, 24, 59, 60, 64, 65, 66, 68, 69], "nvarchar": [2, 4, 5, 6, 7, 9, 12, 13, 17, 58, 59, 60, 65, 66, 68, 69], "varbinari": [2, 5, 6, 9, 10, 11, 13, 17, 22, 59, 60, 64, 65], "tinyblob": [2, 65], "longblob": [2, 59, 65], "sqltype": [2, 11, 21, 22, 30, 31, 48, 59, 117], "blob": [2, 3, 5, 7, 8, 12, 17, 33, 59, 60, 64, 65, 66, 67, 68], "problem": [2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 17, 20, 22, 23, 24, 25, 26, 31, 52, 64, 70, 71, 75, 80, 81, 87, 103, 104, 118, 122, 124, 128, 136, 137, 148, 149, 163], "level": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 27, 30, 32, 36, 37, 38, 40, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 70, 71, 76, 77, 80, 85, 87, 90, 91, 92, 93, 94, 96, 97, 98, 101, 102, 103, 104, 113, 115, 118, 119, 120, 121, 122, 123, 124, 126, 128, 130, 131, 132, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 157, 159, 160, 161, 162, 163], "collat": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 30, 40, 42, 49, 50, 56, 58, 59, 65, 66, 94, 101, 123], "ascii": [2, 5, 6, 7, 8, 9, 11, 12, 13, 19, 21, 32, 33, 57, 59, 64, 65, 66, 68, 69, 98, 103], "nation": [2, 12, 59, 65, 66], "shorthand": [2, 23, 32, 44, 45, 49, 56, 80, 101, 102, 123, 132, 134, 140, 151, 158, 161], "versioned_id_col": 2, "wont": [2, 130, 154], "fb": [2, 3, 6, 7], "orderinglist": [2, 6, 13, 119], "selectresultsext": [2, 3], "filter_bi": [2, 3, 5, 6, 8, 9, 12, 13, 15, 19, 20, 23, 24, 25, 26, 49, 54, 85, 113, 128, 137, 147, 149, 151, 155, 162], "derefer": [2, 3, 51], "critic": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 22, 25, 30, 31, 51, 68, 70, 71, 77, 97, 98, 103, 104, 121, 128, 162], "subsequ": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 25, 31, 33, 39, 40, 43, 45, 49, 51, 57, 59, 64, 67, 70, 71, 76, 80, 96, 97, 102, 104, 112, 117, 122, 128, 130, 137, 138, 146, 147, 148, 149, 150, 151, 152, 154, 157], "someinst": 2, "search": [2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 21, 24, 25, 26, 31, 32, 37, 49, 52, 66, 68, 90, 96, 98, 112, 116, 137, 141, 146, 148], "isol": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 26, 30, 34, 35, 37, 38, 48, 51, 54, 57, 71, 77, 80, 90, 98, 102, 137, 138, 145, 146, 147, 152, 157], "desir": [2, 3, 5, 7, 8, 9, 10, 11, 13, 16, 17, 18, 20, 21, 22, 23, 25, 26, 30, 31, 32, 33, 35, 37, 45, 49, 51, 52, 54, 56, 59, 64, 65, 67, 68, 70, 75, 78, 85, 88, 90, 97, 101, 102, 103, 107, 121, 122, 123, 124, 128, 133, 134, 136, 137, 140, 146, 149, 150, 151, 155], "static": [2, 5, 11, 18, 23, 49, 54, 56, 67, 87, 101, 118, 123], "query_from_par": [2, 5, 17], "541": 2, "xxx_by": 2, "someprop": [2, 4], "similar": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 23, 24, 26, 30, 31, 33, 35, 36, 37, 40, 41, 44, 45, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 65, 67, 68, 70, 72, 76, 80, 81, 84, 85, 90, 91, 92, 93, 97, 98, 101, 102, 103, 104, 113, 117, 118, 121, 122, 124, 126, 128, 130, 131, 132, 135, 136, 137, 138, 140, 141, 146, 147, 149, 150, 151, 152, 155, 156, 157, 162, 163], "remot": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 23, 24, 32, 44, 48, 49, 52, 66, 84, 92, 98, 101, 103, 123, 124, 140, 142, 144, 151], "therebi": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13], "554": [2, 25], "sum": [2, 4, 23, 24, 31, 42, 44, 54, 113, 128, 130, 137, 146], "avg": [2, 18, 137], "apply_max": [2, 3, 16], "apply_sum": [2, 3, 16], "552": 2, "md5": [2, 5, 15, 24, 32, 65], "hash": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 21, 22, 24, 31, 32, 56, 65, 67, 162], "look": [2, 3, 5, 6, 7, 8, 11, 12, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 31, 33, 34, 35, 39, 45, 48, 49, 52, 54, 56, 57, 59, 64, 65, 66, 67, 68, 70, 71, 75, 76, 78, 80, 81, 84, 87, 90, 98, 101, 103, 104, 121, 123, 124, 126, 128, 131, 132, 134, 135, 136, 137, 138, 139, 141, 144, 146, 147, 148, 149, 151, 152, 155, 156, 160, 161, 162, 163], "append": [2, 3, 4, 5, 6, 7, 8, 11, 13, 15, 16, 20, 21, 23, 24, 25, 37, 39, 48, 49, 54, 59, 64, 67, 76, 77, 84, 85, 87, 93, 97, 98, 101, 117, 119, 122, 123, 129, 137, 139, 148, 151, 163], "column_properti": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 21, 70, 75, 88, 90, 92, 93, 97, 101, 102, 113, 123, 126, 129, 131, 132, 135, 143, 146], "aren": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 18, 19, 21, 22, 26, 33, 34, 48, 49, 52, 57, 58, 59, 61, 67, 75, 77, 84, 104, 121, 122, 124, 128, 133, 148, 149], "kind": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 31, 32, 35, 37, 40, 43, 48, 49, 51, 54, 56, 57, 59, 61, 62, 64, 65, 67, 69, 70, 71, 72, 75, 78, 80, 90, 92, 94, 97, 98, 104, 112, 113, 115, 118, 121, 123, 126, 127, 129, 130, 132, 133, 134, 136, 137, 140, 146, 147, 148, 149, 151, 152, 154, 155, 158, 161, 163], "533": 2, "543": 2, "superclass": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 18, 23, 30, 31, 32, 43, 48, 49, 54, 56, 61, 65, 67, 68, 76, 90, 94, 97, 103, 112, 113, 121, 122, 123, 132, 136, 146, 148], "lowercas": [2, 5, 8, 10, 12, 37, 48, 64, 66, 113, 155], "descript": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 21, 22, 25, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 77, 82, 87, 88, 90, 97, 98, 99, 101, 102, 103, 104, 107, 112, 113, 115, 116, 117, 119, 122, 123, 126, 128, 129, 132, 133, 136, 137, 139, 140, 146, 147, 152, 155, 161], "note": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 63, 64, 65, 67, 68, 70, 71, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 87, 90, 92, 96, 97, 99, 101, 103, 104, 112, 113, 115, 117, 118, 121, 122, 123, 124, 126, 129, 130, 132, 133, 134, 137, 138, 140, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 161, 162, 163], "colnam": [2, 6, 7, 8, 9, 13, 16, 19, 32, 48, 64, 67, 132], "cap": 2, "has_tabl": [2, 5, 8, 9, 13, 20, 31, 40, 45, 48, 49, 52, 56], "situat": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 21, 22, 24, 25, 26, 31, 32, 40, 41, 49, 51, 52, 62, 68, 70, 71, 80, 85, 101, 104, 121, 122, 124, 129, 139, 147, 150, 151], "522": 2, "clauseel": [2, 3, 4, 5, 6, 8, 10, 11, 13, 17, 19, 22, 25, 30, 31, 36, 40, 42, 43, 44, 45, 47, 48, 49, 54, 56, 61, 78, 80, 90, 101, 102, 112, 123, 137, 146, 154], "476": 2, "revers": [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 17, 18, 20, 24, 31, 32, 33, 49, 52, 56, 57, 58, 59, 77, 83, 84, 85, 87, 101, 117, 123, 124, 150, 151, 155, 161], "comparemixin": [2, 7], "somecolumn": [2, 4, 7, 16, 21, 23, 33, 35, 37, 49, 54, 56, 57, 58, 59, 101, 123], "474": 2, "disabl": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 20, 21, 23, 24, 25, 33, 37, 38, 40, 48, 49, 56, 57, 58, 59, 62, 64, 65, 66, 68, 76, 85, 90, 102, 128, 133, 136, 137, 138, 140, 146, 147, 150], "truncat": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 37, 53, 56, 65, 66], "30": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 17, 20, 24, 25, 32, 37, 48, 49, 51, 54, 56, 64, 66, 70, 76, 80, 101, 102, 121, 122, 123, 138, 139, 161], "go": [2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 15, 18, 19, 20, 21, 24, 25, 26, 30, 31, 32, 45, 51, 57, 64, 70, 71, 76, 78, 80, 87, 94, 97, 102, 113, 123, 128, 139, 147, 148, 156, 157, 161], "labelnam": [2, 3, 5, 8, 9], "512": 2, "plan": [2, 5, 6, 7, 8, 12, 13, 15, 16, 17, 24, 25, 26, 31, 37, 51, 57, 67, 76, 80, 122, 136, 148, 151, 160], "mini": [2, 147], "glitchi": 2, "understand": [2, 3, 6, 11, 20, 26, 38, 57, 62, 67, 71, 77, 87, 90, 104, 114, 128, 149, 157], "513": 2, "columnel": [2, 3, 4, 7, 9, 10, 11, 13, 19, 22, 30, 31, 32, 33, 42, 43, 44, 45, 49, 50, 54, 56, 57, 61, 65, 67, 78, 79, 123, 138, 151, 155], "phrase": [2, 5, 7, 10, 12, 13, 31, 32, 34, 49, 64, 65, 66, 68, 80, 101, 136, 137, 155, 157, 158, 163], "fetchmani": [2, 9, 13, 21, 23, 25, 31, 76, 102, 138], "505": 2, "send": [2, 3, 5, 6, 7, 8, 9, 11, 15, 17, 19, 21, 23, 25, 31, 32, 36, 37, 48, 56, 57, 58, 59, 66, 67, 70, 76, 78, 80, 90, 97, 103, 104, 126, 136, 147, 149, 151, 154, 155, 161], "someth": [2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 16, 17, 18, 19, 21, 22, 33, 34, 40, 41, 57, 59, 76, 77, 87, 90, 92, 94, 102, 113, 122, 129, 139, 148, 149, 151, 155], "tupl": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 21, 23, 24, 31, 33, 34, 36, 37, 40, 42, 48, 49, 51, 52, 54, 56, 57, 58, 59, 61, 65, 87, 88, 90, 96, 97, 101, 102, 112, 113, 117, 122, 123, 128, 130, 132, 137, 146, 147, 151, 154, 155, 156, 157], "523": 2, "associationproxi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 20, 75, 98, 101, 113, 123, 132], "assign_mapp": 2, "accord": [2, 6, 8, 13, 19, 20, 37, 49, 54, 77, 80, 87, 90, 102, 117, 133, 135, 146, 151], "551": 2, "ssl": [2, 5, 6, 7, 8, 9, 10, 11, 13, 37], "inlin": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 24, 25, 26, 31, 32, 33, 34, 35, 36, 40, 41, 43, 48, 49, 54, 56, 65, 67, 68, 70, 72, 80, 91, 92, 94, 96, 102, 117, 118, 122, 124, 130, 132, 133], "prefix": [2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 21, 24, 30, 33, 36, 37, 44, 48, 49, 54, 66, 67, 68, 92, 102, 113, 137], "ssl_": 2, "terjero": 2, "gmail": [2, 25, 67, 68, 155, 163], "com": [2, 4, 12, 15, 20, 24, 26, 57, 64, 65, 66, 67, 68, 69, 70, 71, 80, 103, 128, 129, 137, 138, 149, 151, 154, 155, 156, 163], "schemanam": [2, 3, 5, 7, 8, 32, 49], "describ": [2, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 44, 46, 48, 51, 52, 53, 54, 56, 57, 58, 59, 64, 65, 66, 67, 68, 70, 71, 76, 77, 78, 80, 81, 82, 84, 85, 91, 92, 96, 97, 98, 101, 102, 103, 104, 115, 118, 120, 121, 122, 123, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 145, 146, 147, 148, 149, 151, 153, 154, 155, 158, 159, 160, 161, 162, 163], "mysql5": 2, "557": 2, "silli": [2, 5], "api": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19, 23, 24, 27, 30, 36, 38, 40, 41, 45, 46, 48, 50, 53, 54, 56, 59, 60, 61, 64, 65, 67, 68, 70, 72, 76, 77, 80, 81, 97, 107, 114, 118, 120, 121, 123, 127, 131, 134, 139, 142, 145, 147, 148, 150, 154, 156, 157, 159, 160, 161], "request": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 20, 22, 24, 25, 26, 31, 37, 40, 41, 49, 51, 52, 63, 64, 65, 66, 67, 70, 77, 90, 98, 99, 102, 122, 128, 136, 140, 147, 148, 149, 155, 162], "probe": 2, "engine_connect": [2, 8, 23, 31, 40, 51], "use_scope_ident": [2, 6, 64], "dburi": [2, 3, 8], "success": [2, 3, 5, 6, 13, 17, 21, 31, 45, 51, 54, 57, 67, 77, 104, 113, 123, 137, 149, 151, 157], "480": 2, "codepath": [2, 11, 12, 13, 18, 31, 51], "state": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 30, 31, 33, 34, 37, 39, 41, 43, 45, 47, 48, 49, 51, 52, 54, 56, 57, 58, 59, 61, 62, 64, 65, 67, 68, 71, 76, 77, 78, 80, 82, 84, 85, 87, 88, 90, 91, 97, 98, 99, 101, 102, 103, 104, 112, 113, 116, 117, 118, 120, 123, 124, 128, 132, 133, 134, 136, 137, 138, 140, 145, 147, 148, 153, 154, 155, 156, 161, 162, 163], "insid": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 21, 22, 23, 24, 25, 31, 32, 33, 35, 36, 37, 39, 41, 45, 48, 49, 54, 56, 58, 59, 61, 65, 67, 70, 71, 75, 77, 90, 91, 101, 102, 104, 113, 117, 118, 122, 123, 124, 128, 130, 132, 137, 139, 146, 147, 148, 149, 151, 155, 157, 161], "executioncontext": [2, 3, 5, 7, 13, 18, 29, 31, 40, 48], "server": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 27, 30, 33, 36, 38, 40, 48, 49, 51, 52, 53, 54, 56, 57, 59, 63, 66, 70, 72, 80, 81, 90, 97, 102, 128, 129, 131, 132, 133, 137, 138, 139, 145, 146, 154, 155, 158], "514": 2, "framework": [2, 3, 7, 8, 12, 18, 19, 26, 31, 70, 90, 98, 116, 147, 150, 160], "lost": [2, 3, 4, 6, 7, 9, 10, 11, 13, 17, 22, 31, 51, 71, 87], "disconnect": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 22, 24, 31, 37, 38, 40, 41, 70, 71], "addition": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 34, 37, 49, 51, 52, 54, 56, 57, 59, 61, 62, 64, 65, 66, 67, 68, 80, 84, 87, 90, 97, 102, 103, 104, 117, 118, 124, 128, 130, 132, 135, 136, 137, 138, 140, 141, 146, 147, 148, 150, 151, 154, 157, 163], "discard": [2, 5, 6, 8, 9, 10, 13, 21, 24, 31, 40, 51, 57, 64, 65, 67, 68, 70, 71, 75, 87, 90, 102, 117, 129, 132, 146, 147, 148, 149, 150], "516": 2, "entri": [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 17, 19, 20, 21, 25, 31, 36, 39, 47, 48, 49, 52, 54, 57, 65, 67, 70, 77, 79, 80, 97, 104, 113, 119, 128, 130, 134, 135, 137, 138, 140, 141, 147, 151, 162], "found": [2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 19, 21, 22, 24, 25, 26, 31, 34, 37, 41, 49, 52, 54, 57, 59, 61, 64, 65, 66, 67, 70, 87, 90, 91, 92, 98, 102, 107, 112, 117, 118, 123, 132, 136, 137, 146, 147, 149, 151, 155], "pkg_resourc": [2, 13], "extern": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 17, 25, 31, 32, 48, 58, 61, 62, 67, 68, 69, 80, 82, 87, 103, 104, 128, 145, 147, 148, 149], "521": 2, "informix": [2, 5, 6, 7, 8, 59, 63], "zhang": 2, "who": [2, 3, 5, 6, 8, 9, 13, 15, 16, 19, 22, 25, 26, 31, 36, 49, 53, 57, 67, 76, 82, 90, 139, 147, 151, 160, 161], "ton": [2, 4, 6], "featureset": [2, 13, 22, 25, 31], "These": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 31, 33, 34, 35, 37, 39, 40, 44, 49, 50, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 74, 75, 79, 80, 84, 85, 88, 94, 97, 98, 101, 103, 118, 121, 123, 124, 129, 132, 134, 136, 137, 140, 146, 148, 149, 150, 151, 155, 157, 160, 161, 162, 163], "wherebi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 21, 22, 25, 54, 70, 71, 80, 118, 137, 144], "copi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 21, 22, 23, 25, 28, 31, 32, 33, 34, 35, 37, 40, 43, 49, 54, 56, 57, 58, 59, 61, 67, 75, 80, 83, 90, 94, 102, 117, 121, 123, 124, 135, 137, 140, 146, 147, 149, 150], "evalu": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 22, 23, 24, 25, 26, 27, 31, 36, 49, 56, 57, 58, 59, 77, 78, 92, 94, 97, 101, 113, 120, 123, 124, 137, 140, 142, 144, 147, 151, 156, 163], "incompat": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 31, 40, 54, 62, 67, 102, 128, 136], "join_to": [2, 3, 16], "join_via": [2, 16], "although": [2, 4, 12, 17, 21, 25, 37, 40, 57, 65, 97, 122, 128, 140, 149, 155], "cartesian": [2, 4, 6, 8, 11, 13, 18, 37, 44, 57, 76, 80, 128], "product": [2, 4, 6, 7, 8, 9, 11, 13, 17, 18, 20, 21, 22, 23, 24, 35, 37, 38, 40, 43, 44, 51, 54, 56, 57, 59, 61, 65, 67, 70, 71, 76, 78, 80, 92, 101, 103, 104, 133, 137, 147, 148], "add_ent": [2, 3, 5, 15, 16, 137], "add_column": [2, 3, 4, 5, 6, 16, 54, 137], "respons": [2, 3, 4, 5, 6, 9, 10, 12, 13, 18, 20, 22, 23, 40, 51, 61, 67, 70, 71, 77, 80, 87, 90, 97, 101, 117, 132, 148, 149, 151, 162], "sent": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 20, 21, 23, 26, 31, 32, 33, 35, 36, 37, 39, 40, 48, 49, 56, 57, 58, 59, 64, 65, 78, 80, 90, 96, 97, 98, 102, 104, 118, 123, 129, 132, 136, 146, 155, 157, 163], "exact": [2, 3, 5, 6, 9, 12, 17, 18, 19, 22, 25, 37, 40, 49, 56, 58, 59, 65, 66, 67, 68, 118, 151], "similarli": [2, 5, 6, 7, 8, 9, 12, 13, 16, 17, 18, 20, 21, 23, 25, 31, 33, 35, 45, 49, 50, 52, 54, 56, 64, 67, 68, 75, 84, 85, 90, 97, 113, 121, 122, 124, 133, 136, 138, 146, 147, 150, 153, 155, 157, 161], "howev": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 45, 48, 49, 51, 52, 54, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 70, 71, 74, 75, 76, 77, 78, 80, 82, 84, 85, 87, 90, 92, 94, 96, 97, 98, 99, 101, 102, 104, 107, 113, 115, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 160, 161, 162, 163], "care": [2, 5, 7, 8, 15, 32, 56, 59, 61, 67, 90, 102, 121, 122, 124, 128, 136, 137, 144, 146, 149, 154, 161], "495": 2, "handi": [2, 3, 4, 6, 15, 19, 52, 57], "identity_kei": [2, 6, 13, 19, 23, 90, 102, 123, 131, 132, 146], "daniel": [2, 6, 11, 12, 13], "miller": [2, 6], "249": [2, 9, 13, 21, 25, 26, 31, 48, 65, 70, 71, 80, 102], "492": 2, "belong": [2, 13, 21, 51, 52, 68, 90, 102, 121, 146, 147, 161, 163], "v": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 22, 24, 25, 26, 35, 37, 38, 44, 59, 65, 68, 70, 76, 85, 87, 88, 92, 101, 113, 117, 118, 123, 128, 129, 132, 145, 163], "493": 2, "calc": [2, 6, 57], "viewonli": [2, 3, 4, 5, 8, 12, 13, 24, 26, 44, 70, 84, 123, 124, 140], "cyclic": [2, 3, 4, 6, 12, 34, 49, 140], "outsid": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 25, 31, 33, 35, 37, 49, 54, 57, 58, 64, 67, 68, 70, 76, 80, 87, 90, 97, 99, 102, 117, 130, 132, 136, 137, 138, 146, 147, 149, 150, 151, 155, 157, 162], "bi": [2, 3, 5, 6, 25, 83, 85, 87, 103, 121, 128, 129, 140], "bite": 2, "enable_typecheck": [2, 3, 123, 140], "But": [2, 3, 5, 8, 9, 17, 18, 19, 21, 31, 33, 40, 57, 65, 67, 68, 75, 87, 101, 104, 113, 123, 128, 133, 147, 149, 151, 161, 162], "particular": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 31, 33, 34, 35, 36, 37, 40, 41, 43, 44, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 75, 76, 77, 78, 80, 82, 84, 85, 87, 90, 91, 92, 94, 95, 96, 97, 98, 101, 102, 103, 104, 107, 113, 114, 115, 117, 118, 121, 122, 123, 124, 126, 128, 130, 132, 134, 135, 136, 137, 138, 139, 140, 144, 146, 147, 148, 149, 150, 151, 152, 155, 158, 160, 161, 162, 163], "fragil": [2, 31], "500": [2, 17, 23, 25, 31, 37, 45, 51, 67, 128], "share": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 20, 21, 25, 31, 35, 39, 49, 51, 54, 56, 67, 68, 70, 71, 84, 85, 90, 94, 98, 102, 121, 132, 133, 137, 147, 149, 150, 156], "conflict": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 23, 26, 41, 44, 54, 56, 57, 65, 84, 90, 91, 104, 107, 113, 118, 124, 131, 138, 140, 145, 146, 147, 149, 152], "usabl": [2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 19, 20, 22, 24, 25, 26, 31, 33, 34, 51, 56, 58, 59, 64, 65, 67, 68, 80, 107, 126, 129, 130, 147, 155, 161], "conn": [2, 5, 6, 7, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 35, 37, 40, 45, 48, 50, 51, 54, 57, 59, 62, 64, 65, 66, 67, 68, 70, 71, 76, 78, 102, 150, 154, 155, 156, 157], "dosometh": 2, "use_label": [2, 4, 7, 8, 20, 22, 25, 54], "assumpt": [2, 5, 6, 7, 10, 12, 13, 23, 25, 26, 31, 70, 71, 78, 84, 90, 97, 102, 136, 146, 147, 151], "somecol": [2, 5, 10, 17, 32, 33], "AS": [2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 31, 33, 34, 36, 44, 49, 53, 54, 56, 57, 59, 64, 67, 70, 75, 80, 88, 101, 113, 115, 121, 122, 123, 124, 128, 129, 136, 137, 138, 139, 144, 149, 151, 152, 154, 155, 162, 163], "somelabel": [2, 4], "literal_column": [2, 5, 6, 7, 8, 11, 12, 13, 18, 24, 42, 54, 56, 67, 155], "is_liter": [2, 56], "somestr": [2, 3, 24, 56, 67], "fold_equival": [2, 5, 7], "duplic": [2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 20, 22, 26, 31, 37, 56, 57, 75, 77, 78, 80, 84, 91, 97, 102, 128, 140, 150], "great": [2, 4, 6, 7, 13, 18, 19, 24, 25, 26, 31, 57, 67, 70, 77, 87, 128, 136, 147, 150, 151, 155, 163], "complain": [2, 13, 23], "use_alt": [2, 5, 7, 9, 17, 32, 34, 41, 49], "503": [2, 98], "506": 2, "hacker": [2, 4], "visitor": [2, 5, 13, 17, 27, 42, 43, 46, 49, 54, 58], "clausevisitor": [2, 3, 61], "accept_visitor": 2, "get_children": [2, 32, 42, 43, 49, 54, 56, 61], "clear": [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 16, 17, 19, 20, 21, 22, 24, 25, 31, 45, 49, 51, 52, 56, 57, 64, 67, 70, 78, 85, 87, 90, 102, 113, 117, 123, 128, 137, 138, 147, 148, 149], "unambigu": [2, 4, 9, 10, 13, 25, 26, 54, 65, 70, 144, 163], "loggabl": 2, "pick": [2, 3, 4, 5, 6, 8, 21, 22, 49, 65, 101], "appropri": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 35, 36, 37, 39, 40, 43, 44, 48, 49, 50, 51, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 68, 70, 76, 77, 78, 79, 80, 82, 85, 87, 90, 97, 101, 102, 104, 112, 113, 117, 118, 121, 122, 123, 124, 128, 132, 133, 134, 136, 137, 138, 140, 144, 146, 148, 150, 151, 155, 157, 162, 163], "501": 2, "else_": [2, 25, 26, 30, 56, 61, 130, 132], "zero": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 21, 23, 24, 26, 31, 32, 37, 56, 57, 59, 65, 66, 67, 70, 78, 80, 96, 103, 104, 115, 119, 137, 152, 155], "472": [2, 76], "navig": [2, 128, 163], "catchal": [2, 6, 18], "msstring": 2, "obscur": [2, 4, 8, 9, 18], "varchar": [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 16, 17, 19, 22, 24, 25, 30, 31, 32, 33, 34, 35, 49, 52, 54, 57, 58, 59, 60, 65, 66, 67, 68, 69, 76, 80, 117, 121, 139, 151, 155, 161], "mstimestamp": 2, "effect": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 40, 44, 45, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 64, 65, 66, 67, 68, 70, 71, 75, 76, 77, 80, 84, 85, 90, 92, 94, 96, 97, 101, 102, 107, 117, 121, 122, 124, 128, 129, 130, 132, 133, 136, 137, 138, 140, 141, 146, 147, 149, 152, 155, 162, 163], "input": [2, 4, 7, 8, 9, 10, 13, 16, 22, 23, 26, 30, 31, 32, 35, 56, 59, 64, 66, 67, 78, 84, 124, 140, 157], "my": [2, 5, 22, 23, 31, 33, 49, 56, 64, 65, 70, 72, 101, 123, 137, 138, 147, 151], "fault": 2, "setinputs": [2, 6, 7, 11, 12, 13, 23, 24, 37, 40, 48, 58, 59], "clob": [2, 3, 6, 7, 12, 16, 17, 24, 59, 60, 68], "write": [2, 3, 4, 7, 9, 10, 11, 12, 13, 15, 19, 22, 26, 31, 40, 52, 57, 59, 64, 65, 68, 70, 71, 80, 84, 87, 90, 101, 115, 119, 124, 128, 129, 132, 136, 140, 146, 147, 151, 155, 157, 158], "auto_setinputs": [2, 11, 23, 24], "improperli": [2, 7, 8], "bad": [2, 4, 8, 9, 13, 21, 24, 68, 90], "probabl": [2, 4, 5, 6, 7, 8, 9, 13, 20, 30, 31, 33, 41, 59, 62, 68, 75, 78, 80, 85, 102, 104, 113, 128, 144, 148], "altogeth": [2, 4, 11, 13, 18, 24], "float": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 17, 25, 35, 37, 51, 54, 56, 59, 60, 64, 65, 66, 67, 68, 79], "unsiz": 2, "text_as_varchar": [2, 5], "509": [2, 65], "strip": [2, 5, 6, 11, 12, 33, 37, 39, 97], "forbid": [2, 12, 17], "22": [2, 3, 7, 8, 9, 10, 11, 48, 66, 71, 76, 118], "accur": [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 17, 19, 20, 22, 31, 33, 64, 65, 70, 90, 102, 104, 119, 133, 146], "439": 2, "441": 2, "448": 2, "collection_class": [2, 3, 13, 15, 24, 87, 97, 101, 103, 116, 118, 119, 123, 140], "peopl": [2, 3, 20, 22, 24, 25, 54, 57, 77, 78], "_instanc": [2, 76], "454": 2, "486": 2, "ant": 2, "aasma": 2, "423": 2, "strict": [2, 3, 5, 7, 8, 11, 12, 13, 21, 25, 65, 74, 118], "degrad": [2, 6, 9, 11, 12, 13, 20, 25, 59, 64, 66, 70, 76, 80], "449": 2, "485": 2, "incorrectli": [2, 5, 6, 7, 8, 9, 11, 12, 13, 22, 68], "445": 2, "478": 2, "fk": [2, 4, 5, 6, 7, 8, 9, 12, 13, 32, 49, 67], "manual": [2, 3, 4, 5, 6, 8, 9, 12, 13, 15, 19, 21, 22, 23, 25, 31, 32, 37, 49, 51, 57, 59, 65, 66, 67, 68, 84, 90, 119, 128, 132, 140, 141, 146, 155, 161, 162], "mistakenli": [2, 3], "foreign_kei": [2, 4, 5, 6, 7, 8, 9, 19, 21, 22, 32, 48, 49, 52, 54, 56, 68, 70, 75, 84, 103, 123, 124, 140, 141], "primaryjoin": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 21, 22, 23, 24, 26, 44, 70, 72, 83, 84, 93, 98, 123, 124, 128, 140, 141], "secondaryjoin": [2, 3, 4, 5, 11, 16, 72, 83, 84, 123, 124, 140], "385": [2, 76], "contains_eag": [2, 4, 5, 6, 7, 9, 11, 13, 16, 17, 22, 26, 56, 70, 76, 122, 127, 137, 138, 151, 163], "eagerli": [2, 3, 5, 9, 10, 12, 13, 15, 16, 17, 20, 22, 24, 25, 35, 54, 77, 90, 102, 122, 126, 127, 132, 140, 145, 146, 151, 163], "contains_alia": 2, "468": 2, "regardless": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 21, 22, 23, 24, 25, 30, 31, 37, 39, 49, 52, 54, 56, 57, 59, 67, 68, 71, 77, 84, 90, 97, 101, 102, 104, 112, 121, 123, 124, 128, 134, 137, 146, 147, 148, 150, 151, 154], "might": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 33, 37, 43, 44, 45, 48, 49, 51, 52, 54, 56, 59, 71, 75, 76, 78, 80, 84, 85, 87, 90, 97, 104, 107, 112, 122, 128, 129, 135, 139, 140, 146, 147, 148, 149, 151, 152, 155, 156, 157], "fake": 2, "supports_execut": [2, 56], "invok": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 19, 22, 23, 24, 25, 26, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 64, 65, 67, 70, 71, 76, 77, 78, 80, 82, 85, 90, 94, 97, 101, 102, 103, 104, 107, 113, 121, 123, 124, 130, 132, 133, 137, 138, 139, 140, 145, 146, 147, 148, 150, 151, 154, 155, 156, 157, 160, 161, 162, 163], "executemani": [2, 3, 4, 5, 6, 8, 9, 11, 13, 18, 19, 23, 24, 25, 26, 31, 35, 36, 40, 45, 48, 49, 56, 57, 58, 67, 70, 71, 76, 90, 102, 136, 146, 154, 156, 157, 162], "466": 2, "464": 2, "tometadata": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 49], "__table_opts__": 2, "kw": [2, 4, 5, 6, 8, 9, 12, 13, 16, 17, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 54, 55, 56, 58, 59, 61, 64, 65, 67, 68, 71, 78, 87, 90, 92, 99, 101, 102, 103, 104, 112, 117, 119, 121, 123, 126, 128, 129, 132, 137, 140, 146], "462": 2, "467": 2, "older": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 20, 21, 25, 49, 51, 56, 62, 63, 64, 65, 66, 68, 70, 71, 97, 101, 122, 123, 128, 148], "variabl": [2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 16, 21, 23, 24, 25, 26, 31, 33, 37, 48, 49, 56, 57, 58, 59, 61, 64, 65, 66, 82, 84, 90, 91, 92, 94, 101, 104, 118, 123, 124, 130, 134, 137, 151, 154, 157, 161], "yai": 2, "419": 2, "298": 2, "456": 2, "473": 2, "415": 2, "481": 2, "422": 2, "479": 2, "371": 2, "auto_identity_insert": [2, 5], "query_timeout": 2, "lgpl": 2, "rowid": [2, 4, 5, 6, 12, 68], "436": 2, "prefetchingresultproxi": 2, "435": [2, 10, 11, 12, 22, 59, 65], "dblink": [2, 3, 7, 49], "379": 2, "permiss": [2, 10, 11, 12, 13, 28, 66, 137], "363": 2, "442": 2, "pginterv": 2, "pginet": 2, "444": 2, "460": [2, 4], "jan": [2, 3, 4, 5, 6, 8, 9, 59], "insur": 2, "u": [2, 3, 7, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 25, 26, 31, 33, 35, 37, 56, 57, 64, 65, 67, 68, 70, 76, 77, 85, 87, 98, 101, 104, 113, 121, 122, 124, 128, 129, 130, 134, 136, 137, 138, 139, 149, 151, 154, 155, 157, 161, 162, 163], "english": [2, 67], "interchang": [2, 16, 132, 134], "illiter": 2, "sub": [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 17, 22, 23, 25, 26, 31, 33, 38, 39, 41, 42, 45, 48, 49, 51, 54, 56, 57, 61, 62, 64, 65, 67, 70, 77, 78, 97, 102, 103, 121, 122, 123, 124, 126, 127, 132, 134, 137, 138, 144, 155], "poke": 2, "hole": [2, 78], "worm": 2, "somerelationnam": 2, "rework": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 18, 20, 21, 23, 24, 26, 54, 66], "deeper": [2, 6, 10, 149, 154, 160], "tighten": [2, 3, 5, 8], "littl": [2, 3, 4, 5, 6, 9, 12, 13, 17, 18, 24, 25, 26, 31, 57, 76, 87, 104, 144, 151], "bit": [2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 21, 26, 51, 57, 59, 64, 65, 67, 85, 104, 139, 149, 151], "flesh": [2, 16], "top": [2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 18, 19, 22, 25, 26, 31, 33, 36, 37, 45, 47, 48, 49, 54, 57, 64, 65, 66, 67, 68, 76, 77, 80, 82, 93, 97, 98, 102, 104, 123, 128, 129, 139, 146, 148, 149, 150, 159, 160, 161], "hid": 2, "symptom": [2, 3, 5, 11, 64], "427": 2, "iv": 2, "reluct": 2, "spot": [2, 5, 21], "typic": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 64, 65, 66, 67, 68, 70, 72, 76, 77, 80, 84, 85, 87, 88, 90, 92, 95, 96, 97, 98, 101, 102, 103, 104, 112, 113, 117, 118, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 155, 158, 161, 162], "while": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 49, 51, 52, 54, 56, 57, 59, 64, 65, 66, 67, 68, 70, 71, 72, 75, 78, 80, 84, 85, 90, 92, 94, 96, 97, 98, 101, 102, 103, 107, 113, 115, 118, 119, 121, 122, 123, 124, 128, 129, 132, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 161, 162, 163], "significantli": [2, 3, 5, 7, 8, 17, 20, 23, 24, 26, 59, 64, 65, 66, 68, 70, 76, 128], "compile_mapp": [2, 4, 6, 13], "shortcut": [2, 5, 17, 18, 37, 44, 49, 56, 57, 151], "create_inst": [2, 9, 16, 21], "406": 2, "407": 2, "413": 2, "412": 2, "booleanexpress": 2, "binaryexpress": [2, 7, 24, 42, 44, 56, 57, 65], "follow": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 37, 40, 44, 45, 48, 49, 51, 52, 54, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 92, 95, 96, 97, 98, 102, 103, 104, 113, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 140, 143, 144, 146, 147, 149, 150, 151, 152, 153, 155, 157, 160, 161, 162, 163], "trail": [2, 3, 21], "trim": [2, 3, 4, 6, 20, 24], "xxx": [2, 5, 15], "if_": 2, "append_column": [2, 5, 6, 13, 17, 18, 49, 56, 96], "main": [2, 3, 5, 10, 12, 14, 17, 21, 22, 26, 31, 33, 34, 37, 56, 57, 64, 65, 67, 68, 71, 75, 77, 84, 98, 102, 122, 123, 135, 137, 139, 146, 158, 161], "least": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 26, 31, 37, 49, 52, 54, 56, 57, 59, 68, 70, 75, 76, 77, 78, 98, 107, 115, 117, 119, 123, 124, 128, 133, 136, 139, 140, 144, 149, 151, 160, 163], "sensit": [2, 3, 4, 5, 7, 11, 12, 13, 17, 18, 19, 20, 23, 37, 48, 49, 51, 53, 56, 57, 64, 66, 151, 152], "414": 2, "op": [2, 3, 6, 7, 8, 11, 12, 13, 19, 20, 23, 25, 26, 32, 33, 44, 48, 49, 51, 54, 56, 57, 58, 62, 65, 67, 72, 87, 97, 101, 113, 123, 124], "ok": [2, 9, 20, 22, 26, 65, 68, 78], "below": [2, 5, 6, 7, 13, 17, 18, 19, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 45, 47, 49, 50, 51, 52, 54, 56, 57, 59, 62, 64, 66, 67, 68, 70, 76, 78, 80, 82, 83, 84, 85, 87, 88, 90, 91, 92, 94, 96, 97, 101, 102, 103, 113, 115, 117, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 159, 161, 162, 163], "valid": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 24, 26, 31, 32, 33, 34, 35, 40, 43, 48, 49, 50, 51, 56, 57, 59, 64, 65, 66, 67, 68, 78, 80, 85, 87, 90, 97, 102, 117, 118, 123, 128, 131, 132, 140, 143, 146, 148, 151, 156], "426": 2, "inconsist": [2, 5, 6, 8, 9, 10, 11, 12, 13, 17, 18, 19, 21, 22, 23, 25, 26, 37, 65, 68, 77, 136, 150], "accommod": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 21, 23, 24, 25, 26, 30, 31, 33, 34, 35, 37, 48, 49, 50, 51, 56, 57, 58, 59, 64, 65, 66, 67, 68, 70, 71, 85, 95, 96, 98, 102, 104, 113, 116, 118, 121, 128, 133, 135, 136, 137, 138, 147, 161], "three": [2, 3, 4, 7, 11, 12, 13, 15, 16, 18, 20, 21, 22, 23, 24, 31, 37, 40, 41, 51, 53, 54, 56, 57, 59, 64, 65, 67, 68, 77, 80, 91, 98, 101, 103, 121, 122, 124, 126, 128, 132, 133, 135, 138, 147, 150, 151, 155, 158, 163], "420": 2, "passthru": 2, "mysql_engin": [2, 8, 22, 49, 52, 65, 94, 96, 132, 141], "innodb": [2, 5, 6, 10, 22, 32, 49, 52, 65, 71, 94, 96, 132, 141], "mysql_col": 2, "latin1_german2_ci": [2, 50], "mysql_auto_incr": 2, "mysql_": 2, "somearg": 2, "418": 2, "msunicod": 2, "4k": 2, "408": [2, 25], "multifield": 2, "409": 2, "account": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 22, 23, 30, 31, 34, 43, 44, 49, 54, 56, 64, 65, 66, 67, 68, 75, 80, 98, 101, 103, 104, 113, 123, 124, 136, 137, 138, 144, 147, 148, 150, 155], "424": 2, "server_side_cursor": [2, 3, 4, 5, 10, 13, 48, 65, 67], "util": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 21, 24, 25, 27, 31, 37, 42, 46, 52, 56, 58, 67, 87, 90, 98, 123, 132, 134, 136, 137, 145, 163], "necessari": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 19, 21, 22, 23, 24, 25, 26, 31, 33, 35, 39, 48, 54, 56, 57, 58, 59, 64, 65, 66, 67, 68, 70, 75, 78, 87, 90, 94, 96, 97, 98, 102, 107, 113, 118, 121, 122, 124, 128, 130, 140, 146, 152, 155, 162, 163], "unbound": [2, 4, 6, 7, 8, 9, 10, 11, 12, 16, 18, 21, 22, 39, 56, 57, 59, 90, 112, 117, 146], "environ": [2, 5, 7, 8, 9, 10, 11, 13, 17, 18, 20, 25, 26, 49, 66, 82, 98, 102], "appar": [2, 4, 5, 6, 7, 8, 9, 12, 13, 21, 22, 24, 31, 62, 64, 101, 104], "undocu": [2, 4, 7, 11, 13, 18, 20, 23, 51, 64, 68], "recent": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 17, 20, 21, 22, 23, 24, 25, 26, 31, 33, 37, 49, 52, 54, 57, 58, 59, 68, 70, 71, 76, 77, 79, 80, 82, 98, 99, 124, 137, 146, 147, 149, 151, 155, 162], "discov": [2, 9, 13], "psycopg": 2, "mail": [2, 18, 124], "bigseri": [2, 6, 9, 10], "pgbiginteg": 2, "autoincr": [2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 18, 23, 24, 31, 35, 48, 49, 52, 64, 65, 66, 67, 91, 136, 141, 154, 162], "jason": [2, 9, 119], "ncsmag": 2, "402": 2, "dec": [2, 4, 6], "from_obj": [2, 3, 54, 137], "sometext": [2, 3], "passive_delet": [2, 3, 5, 8, 9, 10, 12, 13, 84, 85, 98, 103, 123, 132, 140, 147], "object_sess": [2, 5, 7, 21, 90, 97, 102, 124, 130, 145, 146, 147], "reachabl": 2, "s\u00e3": 2, "bastien": 2, "lelong": 2, "396": 2, "2014": [2, 5, 7, 8, 9, 21, 25, 64], "operationalerror": [2, 5, 7, 8, 9, 29, 35, 40, 41, 48, 51, 71], "roll": [2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 16, 22, 25, 26, 31, 40, 41, 45, 62, 71, 72, 80, 90, 97, 102, 120, 123, 128, 145, 146, 148, 149, 150, 163], "accident": [2, 3, 8, 9, 11, 13, 31], "387": 2, "bring": [2, 3, 11, 80, 121], "dozen": [2, 9, 18, 25, 49, 76, 98, 155, 163], "debug": [2, 5, 8, 9, 12, 13, 17, 19, 21, 22, 31, 33, 37, 40, 48, 51, 57, 65, 70, 76, 78, 132, 139, 155], "intens": [2, 26, 31, 128, 137], "graph": [2, 3, 4, 6, 8, 9, 13, 22, 25, 76, 90, 132, 144, 146, 147, 150, 163], "unnecessarili": [2, 3, 5, 9, 11, 12, 22, 163], "speedup": [2, 3, 5, 7, 17, 25], "weak": [2, 3, 4, 8, 9, 10, 12, 13, 20, 22, 24, 117, 147], "create_sess": [2, 4, 5, 15, 23], "weak_identity_map": [2, 3, 4, 10, 13, 15, 22, 24], "388": 2, "command": [2, 5, 6, 7, 8, 9, 10, 11, 13, 22, 31, 32, 35, 38, 48, 49, 51, 57, 64, 65, 67, 68, 72, 73, 77, 82, 98, 102, 139, 147, 150, 151, 157], "bool": [2, 3, 7, 9, 11, 17, 23, 32, 33, 34, 39, 48, 56, 59, 64, 67], "307": 2, "349": 2, "382": 2, "intersect": [2, 3, 4, 5, 17, 42, 54, 57, 98, 113, 117, 123, 137, 138, 155], "247": 2, "2110": 2, "foomax": 2, "ondelet": [2, 9, 22, 32, 85, 103], "preserv": [2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 17, 18, 23, 25, 66, 67, 137, 138], "incom": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 22, 23, 24, 33, 34, 35, 45, 59, 68, 70, 77, 80, 87, 90, 96, 97, 117, 132, 136, 137, 140, 146, 147, 149, 152, 157], "IN": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 20, 21, 22, 26, 28, 32, 37, 42, 49, 54, 56, 65, 77, 78, 101, 117, 122, 123, 124, 127, 132, 137, 138, 139, 140, 151, 155, 163], "yourself": [2, 4, 67], "remote_sid": [2, 4, 5, 6, 8, 9, 15, 19, 83, 84, 113, 123, 124, 140, 144], "eventu": [2, 5, 10, 12, 19, 20, 23, 24, 25, 31, 56, 70, 85, 151], "dedic": [2, 9, 10, 48, 66, 115], "nov": [2, 3, 4], "nor": [2, 3, 4, 5, 6, 7, 10, 11, 12, 17, 18, 22, 23, 24, 25, 26, 31, 32, 37, 48, 57, 63, 65, 67, 68, 70, 84, 118, 128, 133, 134, 148, 149, 154, 158], "360": [2, 17], "325": [2, 76], "store": [2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 30, 35, 37, 38, 40, 43, 48, 49, 51, 52, 56, 57, 58, 59, 60, 64, 65, 66, 67, 75, 80, 83, 84, 90, 97, 98, 101, 102, 104, 117, 119, 121, 123, 124, 128, 132, 136, 137, 138, 140, 146, 147, 148, 149, 151, 161, 162], "transpar": [2, 3, 7, 11, 13, 22, 23, 31, 33, 35, 43, 51, 57, 59, 67, 80, 87, 90, 101, 102, 104, 117, 128, 147, 151], "proxied_associ": [2, 98], "hierarchi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 21, 27, 31, 36, 40, 45, 46, 54, 56, 60, 67, 76, 80, 91, 92, 93, 95, 96, 97, 98, 102, 107, 108, 109, 113, 116, 120, 126, 127, 131, 132, 134, 136, 137, 138, 155, 161], "beneath": [2, 57, 71, 158], "subtl": [2, 5, 6, 8, 13, 25], "node": [2, 6, 9, 15, 23, 26, 32, 54, 87, 98, 113, 124, 137, 144], "appear": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 22, 25, 26, 31, 54, 57, 64, 65, 67, 68, 69, 70, 77, 80, 128, 132, 137, 140, 148, 151, 157, 162, 163], "twice": [2, 3, 6, 9, 12, 13, 21, 22, 24, 31, 48, 57, 70, 77, 84, 113, 137, 138, 151, 163], "362": 2, "365": 2, "use_threadloc": [2, 12, 24], "consum": [2, 3, 9, 10, 12, 13, 18, 23, 24, 25, 26, 31, 32, 36, 40, 41, 43, 44, 48, 49, 54, 56, 57, 58, 62, 67, 70, 71, 76, 91, 96, 102, 132, 137, 138, 146, 151, 157], "typeerror": [2, 3, 6, 7, 8, 9, 11, 12, 13, 17, 23, 30, 33, 58, 59, 87, 103], "nosuchtableerror": [2, 29, 41], "echo": [2, 5, 18, 19, 20, 21, 22, 24, 31, 33, 38, 45, 51, 52, 57, 64, 65, 76, 98, 102, 136, 139, 147, 151, 158, 163], "unset": [2, 10, 24, 35, 37, 77, 119], "respect": [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 18, 26, 32, 35, 37, 49, 56, 59, 64, 67, 68, 94, 97, 150, 155], "classnam": [2, 7, 8, 9, 13, 20, 103], "0x": [2, 57, 76, 156, 157, 162], "00": [2, 16, 35], "ff": 2, "suit": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 22, 23, 24, 25, 26, 31, 32, 33, 39, 52, 54, 57, 63, 66, 70, 76, 77, 104, 107, 123, 124, 126, 129, 132, 134, 135, 136, 137, 145, 146, 148, 151, 160, 161, 163], "independ": [2, 7, 8, 9, 12, 13, 21, 23, 25, 30, 31, 32, 33, 35, 37, 45, 49, 51, 54, 56, 59, 65, 66, 67, 75, 78, 80, 82, 85, 90, 92, 102, 107, 121, 124, 128, 132, 138, 146, 152], "verbos": [2, 16, 20, 24, 31, 51, 57, 101, 104, 113, 122, 126, 128, 147, 151], "quiet": 2, "design": [2, 6, 17, 20, 21, 22, 23, 25, 26, 31, 49, 53, 68, 70, 77, 80, 82, 90, 98, 101, 104, 121, 129, 132, 147, 148, 149, 158, 161], "integr": [2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 17, 19, 20, 22, 26, 27, 32, 33, 34, 37, 40, 46, 51, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 80, 81, 82, 85, 90, 96, 97, 102, 103, 107, 116, 118, 120, 123, 126, 131, 132, 136, 140, 141, 147, 148, 150, 151, 160, 162], "mutabl": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 21, 25, 37, 39, 45, 59, 67, 81, 82, 87, 88, 102, 115, 119, 132, 140, 142], "greater": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 20, 21, 22, 25, 31, 49, 51, 54, 56, 64, 65, 66, 67, 68, 76, 82, 88, 101, 113, 123, 128, 157, 163], "role": [2, 11, 13, 18, 19, 20, 22, 25, 34, 36, 43, 52, 54, 56, 61, 72, 80, 94, 121, 122, 123, 124, 128, 137, 138, 149, 155], "compar": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 20, 22, 23, 24, 25, 26, 31, 33, 34, 42, 43, 44, 49, 54, 56, 58, 59, 60, 61, 64, 65, 67, 70, 78, 88, 90, 98, 100, 101, 102, 103, 104, 107, 117, 121, 123, 124, 128, 132, 133, 135, 138, 140, 146, 150, 151, 155, 157, 163], "mutabletyp": [2, 7, 18], "mixin": [2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18, 27, 30, 33, 41, 43, 54, 56, 58, 59, 67, 88, 92, 93, 96, 98, 103, 107, 117, 121, 123, 130, 131, 132, 136, 148, 151], "manag": [2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 31, 40, 45, 51, 57, 59, 64, 65, 70, 71, 76, 77, 87, 90, 97, 98, 99, 102, 104, 107, 116, 119, 120, 121, 122, 123, 132, 136, 138, 139, 140, 145, 147, 152, 157, 160, 161, 162], "wide": [2, 3, 5, 8, 10, 11, 12, 13, 18, 19, 20, 22, 26, 31, 37, 39, 40, 47, 48, 49, 51, 54, 56, 59, 64, 65, 66, 67, 70, 71, 78, 80, 82, 87, 97, 128, 132, 147, 148, 149, 151, 155], "architectur": [2, 3, 5, 7, 9, 11, 13, 23, 24, 25, 26, 31, 49, 68, 73, 77, 80, 81, 82, 90, 102, 147, 160], "columnproperti": [2, 3, 4, 5, 9, 12, 19, 47, 92, 100, 123, 126, 129, 130, 132, 133, 134], "switchabl": 2, "mapperopt": [2, 3, 4, 11], "querycontext": [2, 13, 97, 100, 123, 137], "selectioncontext": 2, "laid": 2, "breakag": [2, 3, 5, 6, 9, 21, 77], "append_result": [2, 3, 9, 21], "signatur": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 19, 20, 25, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 48, 49, 51, 54, 56, 58, 59, 61, 64, 65, 66, 67, 68, 87, 90, 97, 99, 101, 102, 107, 112, 113, 115, 116, 117, 119, 123, 128, 132, 137, 146], "hope": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 21, 22, 25, 26, 31, 70, 98, 103], "widespread": [2, 22], "backward": [2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 16, 17, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 40, 49, 51, 54, 56, 59, 64, 70, 101, 102, 118, 123, 150], "remain": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 34, 37, 39, 40, 41, 45, 49, 50, 51, 52, 54, 56, 62, 64, 65, 67, 68, 70, 71, 77, 80, 84, 85, 90, 97, 101, 102, 104, 105, 119, 122, 123, 124, 128, 136, 138, 140, 141, 146, 147, 149, 150, 151, 152, 157, 161, 162], "plain": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 21, 23, 24, 25, 31, 33, 35, 37, 40, 49, 51, 54, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 76, 80, 82, 90, 98, 101, 102, 113, 117, 121, 123, 124, 129, 131, 135, 136, 137, 138, 140, 143, 146, 151, 155, 157], "321": [2, 76], "pend": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 31, 40, 57, 70, 77, 80, 85, 90, 97, 102, 123, 128, 132, 134, 138, 139, 140, 145, 146, 147, 149, 150, 151, 162, 163], "pair": [2, 3, 6, 7, 13, 18, 23, 26, 31, 32, 36, 37, 48, 67, 77, 80, 87, 88, 98, 103, 117, 122, 123, 137, 150, 155, 161], "212": 2, "lockmod": [2, 5, 20, 23, 90, 146], "with_lockmod": [2, 5, 6, 11, 20, 23], "lock": [2, 8, 9, 10, 11, 12, 13, 19, 24, 31, 51, 54, 64, 70, 71, 74, 80, 128, 137, 147, 152], "mode": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19, 22, 24, 31, 32, 35, 40, 41, 42, 44, 45, 46, 48, 49, 51, 54, 56, 57, 66, 67, 68, 71, 74, 77, 80, 90, 101, 102, 123, 137, 146, 147, 150, 155, 157, 160, 161], "Will": [2, 3, 5, 6, 7, 21, 22, 23, 24, 25, 31, 33, 37, 40, 49, 54, 56, 57, 58, 59, 67, 101, 123, 124, 132], "292": [2, 37], "version_id_col": [2, 3, 5, 7, 8, 9, 13, 21, 23, 64, 92, 94, 99, 132, 152], "208": 2, "kept": [2, 5, 10, 13, 24, 33, 51, 54, 61, 68, 85, 101, 124, 147], "setup": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 20, 21, 24, 26, 31, 39, 70, 97, 98, 118, 121, 123, 138, 150], "308": 2, "346": 2, "batch": [2, 3, 4, 5, 9, 10, 11, 12, 13, 18, 31, 48, 64, 66, 67, 76, 90, 97, 127, 132, 136, 137, 138, 141, 146], "before_xxxx": 2, "after_xxxx": 2, "column_prefix": [2, 4, 132], "prepend": [2, 5, 17, 19, 39, 40, 44, 48, 65, 132], "_": [2, 3, 5, 6, 7, 8, 11, 12, 13, 15, 19, 23, 25, 32, 37, 43, 49, 54, 56, 59, 101, 103, 123, 132, 137], "somewher": [2, 7, 8, 22, 52, 147], "315": 2, "thoughtfulli": 2, "outerjoin_to": 2, "transform": [2, 4, 5, 6, 10, 11, 13, 17, 22, 26, 33, 40, 48, 54, 56, 57, 59, 61, 67, 80, 122, 124, 137, 151, 157], "select_from": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 18, 19, 22, 24, 25, 26, 44, 49, 54, 56, 57, 70, 137, 138, 151, 155, 163], "latter": [2, 7, 9, 11, 12, 13, 16, 21, 25, 26, 31, 35, 51, 57, 61, 64, 65, 67, 70, 79, 117, 124, 132, 138, 151, 163], "interpret": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 20, 21, 22, 23, 26, 31, 33, 35, 37, 44, 48, 51, 54, 56, 57, 59, 64, 65, 66, 67, 70, 71, 76, 83, 84, 91, 95, 96, 98, 104, 118, 123, 124, 130, 137, 138, 140, 149, 151, 155, 160], "extract": [2, 3, 4, 5, 7, 8, 9, 10, 13, 22, 31, 33, 42, 44, 45, 54, 56, 58, 59, 64, 68, 90, 91, 103, 137, 146, 155], "expr": [2, 3, 4, 5, 6, 9, 11, 13, 19, 20, 22, 23, 33, 36, 44, 50, 54, 56, 57, 58, 59, 65, 67, 113, 115, 123, 126, 130, 137, 138, 140], "negat": [2, 3, 5, 7, 8, 9, 10, 11, 12, 23, 42, 49, 56, 101, 123, 155], "oppos": [2, 6, 7, 8, 9, 10, 11, 12, 13, 21, 22, 31, 35, 40, 54, 57, 59, 97, 113, 137, 138, 151, 155], "my_funct": 2, "172": 2, "fair": [2, 8, 9, 76], "amount": [2, 5, 10, 11, 13, 15, 21, 22, 23, 26, 31, 36, 54, 59, 70, 71, 76, 98, 128, 136, 137, 163], "constrain": [2, 3, 12, 17, 25, 32, 41, 59, 80, 98, 151], "emphasi": [2, 9, 13, 18, 19, 21, 26, 31, 90, 155, 163], "setlik": [2, 87], "columncollect": [2, 3, 9, 13, 18, 25, 32, 42, 49, 54, 56, 65, 67, 68], "deriv": [2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 15, 17, 21, 22, 30, 31, 36, 39, 44, 49, 50, 54, 57, 67, 70, 80, 85, 87, 90, 92, 94, 97, 103, 112, 115, 118, 121, 122, 128, 132, 133, 134, 137, 138, 146, 151, 155], "table1": [2, 19, 22, 25, 31, 36, 54, 57, 70, 155], "table2": [2, 22, 25, 31, 36, 54, 70], "alter": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 21, 23, 24, 25, 30, 31, 34, 37, 40, 41, 42, 48, 53, 54, 56, 61, 64, 66, 67, 68, 72, 77, 80, 87, 96, 97, 101, 102, 104, 117, 118, 123, 128, 133, 135, 136, 146, 148, 150, 151, 157, 161, 162], "append_item": 2, "append_foreign_kei": 2, "append_constraint": [2, 5, 8, 9, 17, 32, 49, 67], "uniqueconstraint": [2, 5, 7, 8, 9, 10, 11, 13, 17, 22, 23, 24, 32, 39, 49, 53, 64, 65, 66, 67, 68, 96, 133, 141], "goe": [2, 4, 7, 8, 11, 13, 21, 22, 24, 59, 70, 71, 75, 76, 84, 87, 92, 104, 128, 129, 147, 151], "checkconstraint": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 21, 23, 32, 34, 35, 49, 53, 67, 68, 70], "auto_incr": [2, 10, 13, 49, 52], "seq": [2, 13, 35, 44], "programmat": [2, 8, 9, 11, 20, 25, 38, 43, 48, 49, 56, 57, 66, 67, 78, 92, 97, 103, 131, 132, 149, 160], "empti": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 20, 22, 25, 31, 32, 33, 37, 42, 48, 49, 56, 61, 78, 87, 90, 97, 101, 102, 115, 117, 119, 123, 128, 136, 146, 148, 149], "sldate": [2, 3], "sltime": 2, "good": [2, 4, 5, 9, 15, 16, 20, 21, 24, 26, 31, 40, 51, 52, 57, 68, 74, 75, 84, 87, 90, 96, 104, 117, 122, 123, 128, 137, 139, 147, 151], "335": 2, "261": 2, "identity_insert": [2, 7, 8, 9, 11, 64], "lose": [2, 4, 5, 6, 7, 8, 11, 12, 13, 22, 25, 31, 68, 136], "fetchal": [2, 5, 9, 19, 20, 21, 23, 26, 31, 54, 57, 62, 67, 74, 76, 102], "effici": [2, 3, 5, 7, 8, 9, 11, 13, 17, 18, 19, 21, 23, 25, 31, 36, 51, 59, 65, 66, 70, 85, 98, 101, 121, 122, 128, 132, 135, 136, 137, 140, 147, 152, 155, 162, 163], "michael": [2, 11, 13, 28], "twomei": 2, "2008": [3, 4, 6, 8, 9, 15, 16, 18, 61, 64], "inherit_condit": [3, 4, 7, 13, 70, 103, 132], "versu": [3, 4, 5, 6, 7, 8, 9, 16, 17, 18, 19, 20, 22, 30, 31, 57, 65, 80, 85, 113, 129, 136, 138, 151, 163], "lead": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 20, 21, 23, 24, 25, 26, 31, 32, 51, 59, 68, 70, 75, 77, 78, 80, 87, 90, 102, 104, 117, 122, 126, 128, 130, 132, 137, 138, 147, 150, 151, 162, 163], "1039": 3, "sessionextens": [3, 4, 6, 12, 13, 16, 18], "before_flush": [3, 4, 7, 16, 22, 23, 97, 145, 146], "instrumentedattribut": [3, 4, 8, 9, 13, 19, 50, 70, 80, 100, 118, 123, 138], "someselect": [3, 4], "bleed": [3, 4], "1074": [3, 4], "msmediuminteg": [3, 4], "1146": [3, 4], "strftime": [3, 4], "1900": [3, 4, 7], "968": [3, 4], "unicodetext": [3, 4, 12, 21, 24, 59, 60, 64, 66], "itsystementwicklung": [3, 4], "de": [3, 4, 5, 7, 8, 9, 10, 11, 12, 19, 26, 31, 39, 70, 71, 85, 97, 102, 113, 124, 128, 132, 140, 141, 147, 148], "pipermail": [3, 4], "march": [3, 4, 7, 8, 9, 10, 11, 12, 13, 15, 19, 25], "000018": [3, 4], "html": [3, 4, 5, 6, 8, 15, 16, 17, 18, 20, 24, 54, 59, 62, 65, 66, 67, 68, 71], "has_sequ": [3, 4, 5, 13, 48, 52], "1155": [3, 4], "bfile": [3, 4, 66], "1121": [3, 4], "add_al": [3, 4, 5, 16, 17, 19, 20, 21, 22, 23, 25, 31, 59, 70, 77, 90, 98, 102, 139, 141, 146, 147, 148, 150, 151], "scoped_sess": [3, 4, 5, 8, 11, 13, 15, 16, 55, 90, 97, 102, 145], "workaround": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 25, 26, 51, 64, 67, 68, 90, 118, 146], "scopedsess": [3, 4, 5, 6, 13, 15, 17], "setattr": [3, 5, 6, 8, 101, 121, 128], "26": [3, 4, 7, 8, 10, 15, 21, 56, 70, 76], "1058": 3, "comparable_properti": [3, 4, 13], "subtyp": [3, 4, 8, 9, 10, 11, 13, 19, 21, 23, 41, 59, 98, 101, 113, 123, 127, 128], "unrel": [3, 4, 5, 6, 8, 9, 11, 12, 13], "is_act": [3, 4, 6, 90, 97, 102, 146, 150], "976": [3, 4, 76], "sqla": [3, 4, 5, 6, 9, 16, 17, 18, 62, 67, 76, 149], "catalog": [3, 5, 13, 34, 49, 57, 67, 80, 81, 151], "cannot": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 20, 21, 24, 25, 31, 32, 33, 34, 39, 41, 48, 49, 52, 54, 56, 58, 59, 64, 65, 67, 75, 77, 78, 80, 85, 87, 91, 96, 97, 99, 102, 113, 117, 118, 121, 122, 128, 129, 130, 132, 136, 137, 140, 141, 149, 150, 151, 162], "820": 3, "get_default_schema_nam": [3, 4, 5], "insensit": [3, 5, 6, 7, 11, 12, 13, 20, 23, 32, 37, 48, 49, 50, 56, 57, 66, 101, 113, 123, 151], "owner": [3, 4, 5, 7, 10, 11, 12, 13, 17, 23, 24, 32, 49, 64, 113, 123], "709": 3, "arrays": [3, 23, 66], "50": [3, 5, 9, 17, 18, 19, 21, 22, 23, 24, 30, 31, 32, 33, 34, 35, 49, 52, 57, 58, 64, 65, 66, 67, 70, 84, 91, 92, 94, 96, 98, 101, 103, 107, 113, 118, 121, 122, 123, 124, 129, 130, 132, 133, 134, 136, 141, 144, 149, 151, 152], "round": [3, 4, 5, 6, 8, 9, 10, 11, 13, 17, 23, 24, 51, 60, 62, 64, 112, 147, 151, 153, 161, 162], "trip": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 17, 23, 24, 62, 64, 147], "life": [3, 5, 51, 87, 147], "bufferedcolumnrow": 3, "less": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 24, 25, 26, 30, 31, 36, 37, 40, 54, 57, 66, 67, 68, 70, 77, 80, 82, 85, 90, 97, 102, 104, 123, 126, 128, 130, 135, 136, 137, 139, 140, 146, 151, 152, 155, 157, 160, 163], "1062": 3, "slfloat": [3, 4], "real": [3, 4, 5, 6, 7, 8, 9, 12, 13, 17, 21, 22, 24, 25, 26, 31, 35, 48, 52, 53, 54, 57, 59, 60, 64, 65, 67, 68, 70, 71, 78, 97, 102, 104, 137, 139, 146, 147, 150, 151, 160, 163], "affin": [3, 4, 6, 8, 9, 10, 12, 24, 56], "slnumer": 3, "fulfil": [3, 5, 7, 11, 26, 33, 59, 67, 141, 154], "repair": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 21, 22, 23, 24, 56, 65, 67, 68, 70, 136, 162], "pgcidr": 3, "1092": 3, "10": [3, 4, 5, 7, 15, 17, 19, 20, 21, 23, 24, 26, 31, 33, 35, 36, 37, 45, 49, 50, 51, 54, 56, 57, 58, 59, 63, 64, 65, 68, 70, 71, 76, 78, 79, 87, 90, 98, 101, 113, 123, 124, 136, 137, 138, 146, 155, 156, 157], "exot": [3, 5, 8, 9, 12, 20, 119, 124, 151], "common": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 44, 46, 47, 49, 50, 51, 52, 54, 56, 58, 59, 61, 62, 64, 65, 66, 67, 70, 71, 75, 76, 77, 78, 80, 81, 82, 84, 85, 87, 90, 91, 92, 94, 95, 97, 101, 102, 115, 117, 121, 122, 123, 124, 126, 128, 129, 132, 133, 134, 136, 137, 138, 139, 140, 144, 146, 147, 148, 149, 152, 157, 161], "_local_remote_pair": [3, 7, 123, 140], "complement": [3, 4, 7, 8, 9, 10, 11, 12, 13, 20, 22, 25, 151], "compris": [3, 7, 8, 20, 49, 53, 54, 67, 68, 75, 80, 95, 117, 132, 135, 137, 140], "610": [3, 19], "1036": 3, "concaten": [3, 5, 6, 10, 13, 19, 44, 49, 50, 54, 56, 57, 58, 59, 60, 67, 130, 133, 137, 146, 155, 157], "adapt": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 18, 25, 26, 31, 33, 37, 48, 51, 57, 58, 59, 60, 61, 64, 65, 67, 68, 70, 71, 79, 85, 87, 98, 102, 104, 123, 126, 132, 135, 136, 137, 146, 151], "taken": [3, 5, 7, 8, 9, 11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 37, 40, 43, 49, 54, 56, 59, 65, 66, 67, 68, 77, 85, 87, 90, 101, 102, 104, 117, 118, 123, 136, 137, 138, 139, 146, 147, 150, 151], "1027": 3, "ancient": [3, 6, 10, 11], "render": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 22, 23, 26, 30, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 48, 49, 50, 51, 54, 56, 57, 58, 59, 61, 64, 66, 67, 68, 71, 72, 74, 76, 80, 90, 101, 104, 113, 115, 121, 123, 124, 128, 129, 136, 137, 138, 146, 151, 155, 162, 163], "refin": [3, 4, 6, 8, 10, 11, 12, 13, 25, 31], "_save_obj": [3, 4], "__ne__": [3, 11, 12, 15, 49, 50, 56, 57, 67, 88, 101, 117, 123, 151], "btw": 3, "anonym": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 18, 21, 25, 32, 44, 49, 54, 56, 57, 61, 66, 70, 77, 98, 128, 137, 138, 151, 155, 163], "stricter": [3, 5, 13], "operand": [3, 10, 49, 50, 56, 57, 67, 78, 101, 123, 151], "frozenset": [3, 6, 48, 123], "duck": [3, 6, 25, 87, 101], "dynamic_dict": [3, 98], "simpl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 26, 31, 32, 33, 35, 37, 51, 52, 54, 56, 57, 59, 61, 67, 68, 70, 71, 74, 75, 76, 78, 80, 84, 85, 87, 88, 90, 92, 94, 96, 98, 101, 102, 104, 113, 115, 117, 118, 120, 121, 122, 123, 124, 128, 130, 131, 132, 133, 135, 137, 140, 143, 145, 146, 148, 149, 151, 154, 155, 157], "dynamic_load": [3, 4, 87, 140, 142], "1014": 3, "1021": 3, "odbc_autotransl": 3, "odbc": [3, 7, 9, 11, 12, 13, 21, 23, 24, 37, 51, 64, 65, 128], "autotransl": 3, "odbc_opt": 3, "simpli": [3, 5, 8, 9, 13, 15, 16, 17, 24, 25, 26, 30, 31, 33, 35, 57, 65, 67, 70, 77, 78, 87, 99, 101, 118, 132, 147, 148, 154, 155], "obviat": 3, "myriad": 3, "futur": [3, 5, 7, 8, 10, 11, 12, 13, 17, 18, 21, 22, 23, 24, 25, 27, 31, 32, 34, 35, 37, 40, 46, 48, 49, 51, 52, 54, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 76, 80, 85, 87, 90, 97, 101, 102, 103, 112, 117, 119, 126, 128, 132, 136, 137, 139, 146, 147, 148, 150, 158], "substr": [3, 6, 12, 16, 22, 68, 128, 129], "FOR": [3, 5, 6, 8, 9, 10, 12, 28, 34, 54, 90, 137, 146], "builtin": [3, 11, 12, 33, 41, 49, 56, 57, 58, 61, 67, 77, 78, 87, 97, 101, 117, 119, 123, 132], "relax": [3, 12], "ie": [3, 16], "myotherclass": [3, 19, 22, 87, 102, 107, 126, 128, 136, 137], "someattribut": [3, 123, 128], "listen": [3, 5, 6, 7, 8, 9, 11, 12, 13, 19, 20, 24, 31, 34, 37, 39, 40, 48, 49, 51, 64, 65, 68, 87, 97, 98, 117, 132, 146, 148], "callabl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 21, 24, 30, 31, 32, 33, 34, 35, 36, 37, 40, 44, 45, 48, 49, 51, 56, 58, 59, 61, 66, 67, 68, 84, 87, 88, 90, 91, 92, 94, 97, 101, 102, 103, 104, 112, 113, 115, 116, 118, 123, 126, 132, 134, 140, 146, 150, 152], "possibli": [3, 4, 5, 6, 8, 9, 10, 11, 13, 18, 22, 31, 33, 41, 43, 48, 49, 54, 56, 59, 70, 72, 94, 97, 112, 119, 128, 132, 146, 148, 149, 155], "poollisten": [3, 13, 18, 37], "rollback_return": 3, "myisam": [3, 5, 11, 17, 18, 32, 49, 51, 65, 140, 141], "04": [3, 4, 15, 25, 37], "necessarili": [3, 7, 8, 9, 10, 12, 13, 16, 18, 20, 22, 23, 24, 25, 26, 31, 33, 36, 37, 58, 64, 66, 67, 68, 70, 78, 80, 85, 90, 92, 97, 102, 103, 118, 132, 135, 136, 137, 138, 147, 155, 156, 161], "_instance_kei": [3, 4, 15], "sess": [3, 15, 20, 21, 22, 23, 25, 26, 70, 77, 85, 98, 117, 124, 126, 128, 137, 146, 149, 150], "fact": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 20, 21, 22, 23, 24, 25, 26, 31, 33, 40, 49, 51, 52, 57, 59, 64, 65, 66, 67, 70, 71, 75, 76, 77, 80, 85, 87, 90, 97, 98, 101, 104, 117, 123, 124, 128, 130, 132, 134, 135, 138, 140, 146, 147, 150, 151, 154, 155, 156, 157, 158, 161, 162, 163], "revert": [3, 6, 7, 8, 9, 12, 15, 24, 31, 39, 48, 66, 67, 71, 80, 123, 148, 150, 151], "destin": [3, 5, 6, 31, 37, 94, 97, 101, 123, 136, 148], "uncompil": [3, 40], "layer": [3, 5, 13, 15, 19, 25, 26, 31, 64, 65, 66, 67, 68, 70, 71, 76, 80, 82, 98, 147, 160], "995": 3, "primarili": [3, 4, 6, 11, 12, 13, 17, 23, 24, 32, 33, 37, 49, 54, 57, 59, 67, 85, 97, 101, 122, 127, 136, 137, 151, 160], "pare": [3, 8], "readabl": [3, 7, 8, 19, 24, 66, 68, 78, 96, 101], "In": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 70, 71, 75, 76, 77, 78, 79, 80, 82, 84, 85, 87, 90, 91, 94, 97, 98, 101, 102, 103, 104, 107, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163], "unmanag": 3, "machin": [3, 13, 20, 64, 82, 98, 102, 122], "compani": [3, 19, 20, 22, 107, 118, 121, 122, 123], "employe": [3, 19, 20, 23, 25, 49, 56, 70, 80, 92, 95, 103, 107, 118, 121, 122, 123, 132], "of_typ": [3, 4, 7, 8, 9, 10, 11, 12, 13, 20, 21, 26, 70, 122, 123, 128, 137, 138, 144, 151, 163], "with_polymorph": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 17, 18, 20, 21, 22, 121, 123, 127, 128, 132, 137], "It": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 75, 76, 77, 78, 80, 82, 83, 84, 85, 87, 88, 90, 94, 96, 97, 98, 101, 102, 103, 104, 113, 116, 117, 118, 119, 121, 122, 123, 126, 128, 130, 132, 135, 136, 137, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 160, 162, 163], "sever": [3, 5, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 20, 21, 22, 23, 24, 26, 31, 32, 34, 37, 51, 56, 57, 59, 64, 65, 66, 67, 68, 71, 76, 77, 80, 82, 84, 87, 94, 96, 97, 98, 102, 121, 132, 133, 137, 144, 149, 151, 163], "form": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 21, 23, 24, 25, 26, 30, 31, 32, 33, 36, 37, 40, 43, 44, 45, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 64, 65, 66, 67, 70, 71, 74, 75, 76, 78, 80, 83, 84, 87, 90, 91, 92, 94, 95, 96, 97, 98, 101, 102, 104, 113, 117, 121, 122, 123, 124, 127, 128, 130, 132, 133, 134, 136, 137, 138, 139, 140, 146, 147, 148, 151, 152, 154, 155, 156, 157, 161, 162], "gut": [3, 15], "flexibl": [3, 5, 6, 8, 11, 13, 15, 17, 18, 20, 25, 26, 37, 39, 54, 97, 113, 121, 122, 130, 132, 149, 151, 155, 157], "approach": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 36, 49, 51, 54, 57, 59, 65, 66, 67, 68, 70, 71, 77, 78, 80, 82, 84, 87, 90, 91, 94, 95, 96, 97, 98, 102, 103, 104, 107, 113, 117, 118, 124, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 146, 147, 148, 149, 150, 151, 154, 155, 160, 161, 163], "eagerload_al": [3, 5, 6, 16], "soon": [3, 5, 6, 7, 8, 13, 18, 19, 20, 23, 32, 70, 147, 148, 150, 151], "carv": 3, "stone": [3, 13], "_valu": [3, 113], "_from_self": [3, 5, 17], "feedback": [3, 13], "sens": [3, 8, 12, 13, 21, 25, 26, 33, 36, 54, 56, 57, 77, 90, 102, 118, 128, 129, 146, 147, 149], "group_bi": [3, 4, 5, 9, 10, 12, 16, 17, 21, 23, 24, 44, 54, 57, 96, 135, 137, 151, 155], "sit": 3, "uselessli": 3, "resultset": [3, 5, 10, 23], "continu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 31, 34, 40, 41, 48, 49, 51, 52, 56, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 80, 84, 85, 97, 102, 104, 118, 123, 129, 133, 134, 137, 138, 147, 148, 150, 155, 157, 162], "minu": [3, 5, 19, 24, 129, 136, 138, 141], "There": [3, 4, 5, 6, 7, 8, 12, 13, 15, 17, 18, 19, 20, 21, 22, 24, 25, 26, 31, 32, 37, 39, 40, 41, 48, 49, 51, 52, 54, 59, 64, 65, 66, 67, 68, 71, 74, 76, 77, 78, 80, 82, 84, 85, 87, 90, 92, 94, 96, 97, 102, 104, 113, 117, 121, 124, 128, 134, 136, 137, 139, 140, 144, 147, 148, 149, 151, 154, 155, 156, 157, 161, 162, 163], "controversi": [3, 6, 17, 102, 163], "here": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 48, 49, 51, 54, 56, 57, 58, 59, 62, 64, 65, 66, 67, 68, 70, 74, 76, 78, 81, 82, 84, 89, 90, 92, 94, 97, 98, 101, 102, 113, 117, 120, 121, 123, 124, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 160, 161, 162], "quickli": [3, 18, 21, 39, 62, 68, 70, 87, 101, 104, 139, 155, 163], "highli": [3, 5, 6, 7, 8, 9, 13, 16, 17, 24, 25, 26, 31, 49, 90, 102, 113, 132, 138, 140, 141, 146, 151, 155, 156], "conveni": [3, 7, 8, 16, 18, 21, 22, 25, 26, 31, 48, 49, 52, 54, 56, 57, 65, 67, 88, 90, 101, 117, 129, 132, 134, 137, 139, 146, 148, 149, 151, 155, 161], "descriptor": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 16, 18, 21, 22, 24, 47, 51, 80, 88, 92, 97, 101, 113, 117, 118, 123, 124, 131, 132, 133, 140, 143, 146, 149, 151], "whereclaus": [3, 8, 9, 10, 12, 25, 26, 36, 49, 54, 70, 137], "cover": [3, 4, 8, 9, 10, 11, 12, 13, 15, 16, 18, 22, 25, 37, 44, 49, 57, 64, 70, 71, 82, 85, 89, 106, 110, 118, 123, 139, 151, 155, 156, 160, 162, 163], "discrimin": [3, 4, 7, 8, 9, 10, 11, 13, 23, 25, 80, 94, 98, 107, 121, 122, 132, 137], "996": 3, "action": [3, 4, 5, 9, 12, 13, 25, 26, 28, 40, 49, 67, 68, 70, 80, 85, 90, 97, 102, 104, 117, 123, 146, 149, 151], "from_joinpoint": [3, 5, 8, 9, 13, 15, 137], "successfulli": [3, 8, 9, 13, 23, 25, 76, 90, 97, 128, 133, 136, 137, 146], "assort": [3, 68], "dynam": [3, 4, 5, 6, 7, 8, 11, 12, 13, 21, 23, 25, 32, 33, 35, 36, 38, 41, 50, 53, 54, 56, 57, 64, 65, 67, 68, 70, 83, 93, 96, 102, 118, 128, 131, 132, 140, 142, 151, 157], "895": 3, "config": [3, 5, 8, 9, 17, 37, 150], "dif": 3, "kick": [3, 20, 87, 151], "bulk_replac": [3, 11, 12, 87, 97, 142], "anyon": [3, 4, 8, 25], "deep": [3, 4, 8, 9, 10, 11, 12, 13, 15, 19, 22, 32, 33, 66, 117, 128, 140, 144, 154], "ahead": [3, 6, 8, 13, 23, 24, 25, 31, 49, 67, 90, 94, 128, 136, 146, 162], "cross": [3, 4, 5, 8, 9, 10, 11, 13, 20, 22, 25, 26, 42, 48, 64, 65, 66, 67, 68, 80, 97, 118, 141, 152], "999": [3, 18, 25], "ilik": [3, 12, 49, 50, 56, 57, 101, 123, 151], "791": 3, "993": 3, "random": [3, 6, 21, 22, 25, 31, 42, 44, 48, 54, 102, 104, 136], "rare": [3, 4, 5, 6, 7, 9, 10, 13, 16, 18, 20, 22, 25, 26, 31, 59, 64, 66, 82, 87, 97, 121, 123, 124, 129, 132, 144, 146], "intend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 24, 25, 26, 30, 31, 32, 33, 36, 39, 40, 48, 49, 54, 56, 58, 59, 67, 68, 75, 76, 77, 84, 90, 97, 101, 116, 118, 128, 129, 132, 136, 137, 140, 146, 147, 148, 154, 157], "cancel": [3, 4, 5, 10, 12, 13, 31, 54, 68, 97, 102, 104, 137, 146, 150, 162], "seen": [3, 7, 8, 9, 13, 20, 21, 22, 23, 24, 25, 32, 33, 35, 50, 57, 61, 65, 67, 70, 74, 76, 77, 87, 102, 137, 154, 157, 160, 163], "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 48, 49, 51, 52, 54, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 71, 73, 74, 76, 77, 78, 80, 81, 83, 84, 85, 87, 90, 91, 92, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 107, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163], "979": 3, "skip": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 24, 25, 34, 36, 49, 54, 57, 65, 70, 75, 76, 82, 90, 92, 97, 102, 103, 104, 119, 137, 138, 146, 147, 148, 150, 151, 155, 160, 161], "916": 3, "stub": [3, 13, 51, 69, 95, 118, 123], "884": 3, "max_identifier_length": [3, 4, 12, 13, 37, 48, 66], "unix": [3, 6, 7, 8, 9, 37], "If": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 45, 47, 48, 49, 51, 52, 54, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 74, 75, 76, 77, 80, 82, 84, 85, 87, 90, 91, 94, 96, 97, 98, 101, 102, 103, 104, 112, 113, 116, 117, 119, 120, 121, 122, 123, 124, 128, 130, 132, 135, 136, 137, 138, 140, 146, 147, 149, 150, 151, 152, 155, 158, 160, 161, 162, 163], "couldn": [3, 4, 9], "pleas": [3, 4, 7, 9, 13, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 31, 32, 36, 37, 40, 45, 48, 49, 51, 52, 54, 56, 62, 64, 65, 66, 67, 68, 69, 77, 87, 88, 90, 97, 98, 102, 103, 104, 118, 126, 128, 129, 132, 136, 137, 139, 140, 146], "magic": [3, 16, 26, 57, 77], "oracle_resolve_synonym": [3, 13, 66, 103], "messi": 3, "guess": [3, 4, 5, 6, 9, 12, 17, 18, 19, 21, 26, 52, 68, 103, 149, 151, 155], "stickier": 3, "somekei": [3, 22, 49, 56], "_somekei": 3, "simplest": [3, 35, 67, 87, 103, 139], "gain": [3, 5, 6, 12, 13, 15, 20, 22, 25, 35, 38, 43, 54, 56, 90, 136, 137, 139, 146, 148, 155], "synonym_for": [3, 25, 105, 129, 131, 132], "comparable_us": [3, 13], "front": [3, 4, 9, 10, 11, 12, 13, 23, 25, 26, 31, 54, 66, 70, 80, 82, 83, 92, 98, 121, 122, 126, 128, 130, 134, 138, 147, 150, 157, 163], "lack": [3, 5, 6, 9, 10, 11, 12, 13, 22, 24, 25, 30, 40, 66, 68, 76, 87, 117, 122], "dry": 3, "__tablename__": [3, 4, 5, 11, 13, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 35, 44, 64, 65, 66, 67, 70, 75, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 91, 92, 94, 95, 96, 98, 101, 102, 103, 107, 113, 115, 117, 118, 119, 121, 122, 124, 126, 128, 129, 130, 132, 133, 134, 136, 137, 139, 140, 141, 144, 148, 149, 151, 152, 161, 163], "__mapper_args__": [3, 4, 5, 6, 7, 8, 9, 11, 13, 19, 21, 22, 23, 64, 70, 75, 91, 92, 94, 95, 96, 102, 103, 107, 118, 121, 122, 132, 133, 134, 136, 152], "declarative_bas": [3, 5, 6, 7, 8, 17, 19, 20, 21, 22, 23, 25, 26, 31, 64, 70, 75, 76, 77, 78, 83, 84, 87, 88, 92, 94, 95, 96, 97, 98, 101, 102, 103, 105, 107, 113, 115, 117, 118, 119, 121, 124, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 148, 151, 161], "__mapper_cls__": 3, "shape": [3, 7, 87], "1001": [3, 25], "distinguish": [3, 6, 8, 9, 12, 22, 25, 31, 54, 130, 132, 136, 151], "985": 3, "cri": 3, "heard": 3, "flusherror": [3, 4, 8, 13, 16, 22, 25, 99, 100, 149], "knock": 3, "useless": [3, 6, 21, 25, 26, 54], "polymorphic_fetch": [3, 4, 5, 16, 17], "mark": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 20, 21, 22, 25, 31, 32, 34, 37, 49, 51, 53, 54, 57, 58, 59, 64, 65, 85, 87, 88, 90, 94, 97, 102, 112, 123, 124, 126, 130, 132, 133, 136, 137, 139, 140, 141, 146, 147, 148, 149, 151, 152, 157, 162], "unmark": [3, 11], "unexpir": [3, 10, 11, 13, 24, 146], "__dict__": [3, 4, 5, 9, 13, 21, 91, 97, 113, 117, 123, 128, 132, 149, 162], "succe": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 21, 22, 25, 35, 45, 64, 71, 147], "apply_min": [3, 16], "apply_avg": [3, 16], "assist": [3, 7, 8, 9, 11, 12, 13, 21, 22, 23, 26, 48, 66, 132, 146, 161], "higher": [3, 5, 7, 8, 9, 12, 13, 15, 16, 17, 18, 26, 31, 40, 44, 49, 54, 56, 59, 67, 70, 76, 77, 78, 82, 84, 90, 101, 113, 120, 123, 140, 146, 157], "somechild": [3, 84], "autoflush": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 19, 21, 40, 68, 76, 87, 90, 97, 102, 123, 128, 137, 140, 146, 147, 150, 162], "ride": 3, "975": [3, 25], "catchabl": 3, "978": 3, "begin_twophas": [3, 31, 40, 45], "prepar": [3, 5, 6, 7, 8, 10, 11, 13, 18, 19, 20, 25, 31, 40, 48, 51, 64, 70, 71, 80, 81, 87, 96, 103, 107, 119, 136, 146, 147, 150, 157], "936": 3, "cloneabl": 3, "986": 3, "ddl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 22, 24, 25, 26, 27, 31, 32, 37, 40, 42, 45, 46, 48, 49, 52, 53, 56, 58, 59, 61, 64, 65, 66, 67, 74, 78, 80, 81, 85, 90, 96, 98, 102, 120, 136, 146, 157], "assign": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 21, 22, 23, 24, 25, 31, 32, 33, 34, 35, 44, 48, 49, 51, 52, 53, 54, 57, 58, 59, 61, 64, 65, 66, 67, 70, 75, 76, 80, 84, 85, 87, 88, 90, 91, 92, 94, 96, 98, 101, 102, 103, 104, 113, 117, 118, 119, 122, 123, 124, 126, 128, 129, 130, 132, 133, 135, 136, 137, 138, 140, 146, 149, 151, 152, 157, 161, 162, 163], "INTO": [3, 4, 7, 8, 20, 21, 22, 23, 25, 26, 30, 31, 33, 35, 36, 48, 54, 56, 57, 64, 65, 66, 67, 68, 70, 76, 80, 88, 136, 139, 141, 151, 152, 154, 157, 162, 163], "vendor": [3, 11, 12, 49, 52, 60], "super": [3, 5, 12, 13, 25, 26, 33, 48, 67, 87, 115, 137], "underneath": [3, 5, 11, 37, 91], "elixir": [3, 4, 5], "981": 3, "pgarrai": [3, 4], "equal": [3, 4, 5, 7, 8, 9, 11, 12, 15, 18, 19, 20, 23, 24, 25, 31, 33, 44, 49, 54, 56, 57, 58, 59, 67, 70, 71, 79, 85, 88, 101, 117, 123, 124, 128, 132, 135, 139, 150, 151, 155, 157, 160, 163], "techniqu": [3, 5, 8, 11, 12, 13, 16, 18, 19, 20, 21, 22, 25, 26, 27, 31, 33, 34, 35, 37, 51, 52, 57, 59, 64, 65, 67, 68, 70, 71, 74, 76, 77, 78, 80, 84, 90, 91, 94, 95, 98, 101, 102, 103, 113, 116, 120, 121, 124, 125, 127, 129, 130, 132, 133, 137, 138, 140, 142, 144, 145, 148, 150, 151, 156, 157, 161, 163], "hidden": [3, 24, 37], "sawarn": [3, 21, 22, 25, 29, 33, 41, 58, 59, 70, 76, 124], "everi": [3, 5, 7, 8, 9, 11, 12, 13, 15, 17, 18, 20, 21, 22, 24, 25, 26, 31, 32, 33, 36, 37, 49, 57, 58, 59, 62, 68, 70, 71, 72, 75, 78, 80, 82, 84, 87, 94, 97, 102, 104, 121, 122, 136, 137, 138, 148, 151, 152, 162], "accompani": [3, 32, 34, 35, 157], "biggest": [3, 12, 25, 26], "transient": [3, 4, 5, 6, 7, 9, 10, 12, 13, 17, 19, 21, 80, 90, 97, 102, 123, 140, 145, 146, 147, 149, 151, 162, 163], "961": [3, 37], "dont_load": [3, 5, 7, 17], "query_properti": [3, 4, 90], "expire_al": [3, 9, 25, 77, 90, 102, 128, 146, 147, 149], "needless": [3, 4, 5, 6, 22], "strong": [3, 4, 7, 8, 10, 12, 13, 15, 20, 31, 57, 149], "dereferenc": [3, 4, 5, 6, 7, 148, 149], "938": 3, "eager_default": [3, 8, 9, 10, 20, 36, 102, 132, 136, 152], "mimic": [3, 8, 9, 56, 67, 101, 137], "natur": [3, 4, 5, 7, 8, 9, 10, 11, 19, 22, 24, 25, 26, 49, 51, 52, 54, 56, 59, 65, 67, 68, 70, 75, 77, 80, 96, 101, 102, 121, 123, 128, 132, 135, 137, 138, 141, 146, 147, 151, 155, 160, 163], "among": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 22, 25, 31, 32, 35, 49, 50, 51, 54, 56, 57, 58, 64, 67, 68, 71, 80, 96, 98, 101, 102, 121, 122, 123, 137, 149, 151], "933": 3, "946": 3, "polymorphic_on": [3, 4, 5, 6, 7, 8, 9, 10, 13, 21, 22, 70, 92, 94, 95, 96, 103, 121, 122, 131, 132, 137], "difficult": [3, 5, 6, 9, 13, 16, 19, 24, 25, 26, 31, 70, 118, 124, 137], "expens": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 22, 24, 25, 31, 61, 67, 68, 70, 76, 90, 98, 102, 128, 136, 137, 146, 163], "954": 3, "innermost": [3, 7, 8, 10, 71, 97, 102, 140], "inactiv": 3, "inact": [3, 5, 13, 77, 146, 147], "subtransact": [3, 5, 10, 11, 13, 31, 70, 90, 97, 146, 147, 148], "miscellan": 3, "940": [3, 76], "964": 3, "free": [3, 4, 7, 8, 28, 49, 75, 90, 102, 146, 151, 161], "useexist": [3, 6, 8, 13], "hook": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 22, 25, 26, 30, 31, 33, 37, 39, 40, 48, 49, 50, 51, 64, 67, 68, 71, 76, 92, 96, 97, 98, 100, 102, 103, 104, 107, 116, 118, 123, 132, 146, 148, 149, 150, 152, 157], "AND": [3, 6, 8, 9, 10, 13, 19, 21, 22, 23, 24, 28, 36, 43, 44, 49, 50, 54, 56, 57, 64, 67, 68, 78, 80, 83, 88, 101, 113, 122, 123, 124, 128, 137, 138, 139, 144, 151, 152, 155, 156, 161, 163], "727": [3, 67], "943": 3, "wildcard": [3, 8, 9, 11, 12, 25, 49, 56, 59, 101, 123, 127, 137], "962": 3, "deferr": [3, 5, 7, 8, 9, 13, 25, 32, 65, 66, 127, 141], "915": 3, "unnam": [3, 4, 9, 10, 13, 25, 26, 32, 49, 54, 67, 70], "represent": [3, 4, 7, 12, 13, 18, 21, 24, 25, 31, 33, 37, 43, 44, 49, 54, 56, 57, 58, 59, 62, 77, 80, 98, 113, 115, 151, 154, 155, 161], "compositeselect": 3, "union_al": [3, 4, 13, 30, 42, 54, 56, 57, 137, 138, 155], "conform": [3, 67, 123], "unlabel": [3, 7, 8, 9, 12, 13], "outward": [3, 7, 8, 13, 18, 25, 31, 45, 97, 147], "hand": [3, 5, 6, 9, 10, 11, 12, 13, 17, 18, 20, 23, 33, 37, 49, 52, 54, 56, 57, 58, 65, 66, 67, 70, 76, 84, 85, 90, 98, 101, 103, 118, 123, 128, 151, 155, 163], "rh": 3, "lh": [3, 49, 56, 101, 123], "quirk": [3, 6, 8, 13, 17, 23, 130], "past": [3, 5, 13, 25, 31, 54], "omit": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 19, 21, 23, 24, 25, 26, 34, 35, 36, 37, 44, 49, 51, 52, 54, 56, 57, 58, 59, 64, 65, 66, 67, 68, 84, 85, 90, 92, 96, 97, 102, 103, 118, 119, 121, 128, 130, 132, 136, 137, 140, 146, 151, 152, 158, 161, 163], "table_nam": [3, 4, 12, 13, 21, 24, 31, 32, 45, 48, 49, 52, 67], "temporari": [3, 4, 7, 9, 13, 18, 25, 48, 51, 52, 66, 71], "unspecifi": [3, 9, 21, 32, 48], "ansi_quot": [3, 5], "midstream": 3, "pgmacaddr": 3, "580": 3, "assembl": [3, 5, 7, 8, 9, 12, 19, 31, 32, 43, 49, 54, 57, 78, 113, 123, 128, 133, 138], "941": 3, "_is_select": 3, "procedur": [3, 4, 5, 6, 12, 17, 26, 30, 33, 34, 38, 51, 56, 59, 64, 67, 97, 136], "2005": [3, 4, 5, 6, 7, 8, 10, 12, 13, 18, 20, 28, 63, 64], "To": [3, 4, 5, 6, 7, 8, 9, 11, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 64, 65, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 82, 85, 87, 90, 91, 92, 94, 96, 97, 98, 101, 102, 103, 104, 107, 113, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 155, 156, 157, 161, 162, 163], "has_window_func": [3, 5], "09": [3, 4, 6, 20, 136], "easy_instal": [3, 4], "suppress": [3, 4, 5, 12, 13, 17, 21, 26, 54, 137], "instancest": [3, 4, 5, 7, 10, 11, 12, 13, 17, 18, 19, 21, 22, 47, 90, 97, 100, 101, 102, 117, 123, 128, 132, 134, 137, 146, 148, 149, 162], "__cleanup": 3, "922": 3, "925": 3, "commonli": [3, 8, 9, 11, 13, 25, 32, 35, 37, 44, 54, 56, 67, 70, 72, 80, 84, 85, 94, 97, 98, 123, 129, 132, 134, 137, 138, 139, 146, 151, 153, 154], "919": 3, "shouldn": [3, 6, 7, 8, 9, 13, 72, 128], "notic": [3, 4, 5, 6, 9, 10, 12, 13, 15, 16, 18, 25, 28, 35, 57, 75, 77, 139, 151, 157, 163], "fairli": [3, 4, 6, 7, 10, 11, 12, 13, 17, 24, 25, 26, 31, 35, 57, 71, 148, 154, 155, 157, 161, 163], "reproduc": [3, 8, 9, 13, 22, 31, 70], "_state": 3, "rudimentari": [3, 4, 6, 13, 20, 22, 25, 31, 33, 37, 98, 101, 103, 124, 157], "yield": [3, 11, 13, 18, 21, 26, 31, 43, 49, 51, 52, 54, 56, 61, 64, 70, 76, 77, 102, 122, 132, 137, 150, 155, 157], "yield_per": [3, 5, 7, 9, 11, 13, 23, 38, 76, 102, 128, 137, 138], "n": [3, 4, 6, 7, 8, 9, 10, 12, 13, 19, 25, 31, 37, 49, 54, 59, 64, 65, 66, 67, 76, 80, 98, 104, 128, 163], "extrem": [3, 4, 5, 7, 8, 9, 12, 13, 16, 17, 18, 22, 24, 25, 26, 31, 48, 57, 59, 64, 66, 68, 70, 90, 97, 118, 123, 124, 128, 132, 146, 147, 148, 149, 155], "caution": [3, 87], "920": 3, "912": 3, "unlength": [3, 5, 59, 64], "fromclaus": [3, 4, 6, 8, 9, 10, 13, 22, 25, 26, 36, 42, 44, 45, 49, 54, 56, 57, 61, 67, 70, 96, 122, 132, 133, 134, 137, 138, 155], "924": 3, "narrow": [3, 6, 12, 15, 18, 52, 57, 90, 122, 146, 151], "msdate": 3, "msdatetim": 3, "mi": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 25, 26, 70, 90, 146], "vice": [3, 5, 11, 37, 59, 80, 90, 101, 141], "versa": [3, 5, 11, 37, 59, 80, 90, 101, 141], "923": 3, "processor": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 22, 23, 31, 48, 56, 126], "913": 3, "queu": [3, 51], "app": [3, 6, 7, 8], "fewer": [3, 5, 6, 17, 18, 19, 21, 23, 25, 31, 57, 76, 104, 122, 128, 155], "871": 3, "freeli": [3, 5, 15, 16, 19, 25, 26, 48, 57, 102, 148, 150], "tandem": 3, "passive_cascad": 3, "As": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 36, 37, 43, 44, 49, 50, 51, 52, 54, 56, 57, 59, 64, 65, 66, 67, 68, 70, 71, 75, 76, 77, 78, 83, 84, 85, 87, 90, 91, 95, 96, 97, 98, 101, 102, 103, 104, 113, 117, 118, 119, 121, 122, 127, 128, 132, 134, 135, 136, 137, 138, 139, 141, 144, 146, 147, 150, 151, 155, 156, 157, 161, 162, 163], "ext_continu": [3, 16, 97], "ext_stop": [3, 97], "resolut": [3, 6, 7, 8, 9, 11, 12, 13, 19, 21, 24, 25, 32, 34, 49, 68, 70, 84, 90, 94, 112, 116, 134, 136, 146], "490": 3, "before_upd": [3, 7, 97, 135, 148], "after_upd": [3, 7, 97, 148], "symmetr": [3, 5, 8, 9, 49, 56, 101, 117, 123], "907": 3, "908": 3, "899": 3, "serializ": [3, 5, 6, 12, 13, 31, 37, 64, 65, 66, 67, 77, 80, 90, 146, 150], "deseri": [3, 4, 5, 8, 9, 10, 12, 13, 33, 42, 55, 59, 67], "map_column": [3, 5, 123, 129, 132], "somenam": [3, 26, 54, 132, 138], "_somenam": 3, "801": 3, "bys": 3, "ve": [3, 5, 8, 13, 15, 18, 20, 22, 31, 32, 33, 34, 49, 57, 67, 72, 75, 80, 90, 94, 103, 104, 136, 139, 147, 151, 152, 153, 156, 157, 161, 162, 163], "midwai": 3, "sizabl": 3, "chunk": [3, 13, 23, 25, 31, 76], "latenc": [3, 4, 13, 17, 18, 23, 51, 90, 146], "retain": [3, 5, 6, 7, 8, 12, 13, 16, 18, 22, 23, 24, 25, 31, 44, 49, 62, 65, 71, 113, 134, 146], "attrnam": [3, 6, 103], "del": [3, 6, 12, 19, 66, 85, 101, 115, 117, 148, 149, 151], "ing": 3, "someclass": [3, 6, 7, 11, 16, 18, 19, 21, 22, 26, 75, 77, 90, 92, 97, 98, 102, 113, 126, 136, 137, 140, 146, 150], "accordingli": [3, 13, 62], "helper": [3, 4, 5, 6, 7, 10, 11, 12, 13, 17, 18, 25, 31, 41, 76, 78, 90, 97, 102, 107, 113, 117, 119, 121, 129, 138, 146, 147, 151, 163], "disregard": [3, 13, 22, 37, 152, 161], "893": 3, "883": 3, "as_scalar": [3, 5, 6, 12, 13, 19, 22, 54, 104, 137], "get_attr_by_column": 3, "set_attr_by_column": 3, "pks_by_tabl": 3, "cascade_cal": 3, "canload": 3, "delete_obj": 3, "_mapper_registri": 3, "attributemanag": 3, "argumenterror": [3, 6, 8, 9, 10, 11, 12, 13, 22, 25, 29, 31, 32, 41, 43, 48, 49, 79, 121, 132], "bulk": [3, 4, 9, 10, 11, 12, 13, 18, 64, 76, 87, 90, 97, 98, 137, 145, 146, 148, 149], "mappedcollect": [3, 6, 7, 12, 87], "keyfunc": [3, 87], "886": 3, "newval1": 3, "newval2": 3, "stream": [3, 4, 13, 20, 24, 25, 38, 65, 67, 70, 76, 102, 117, 137, 138, 149], "dictcol": 3, "bar": [3, 4, 8, 15, 18, 19, 20, 21, 22, 23, 26, 31, 37, 49, 50, 54, 56, 57, 59, 61, 65, 67, 70, 75, 94, 96, 101, 103, 117, 123, 136, 137, 138, 147, 150, 151, 155], "sane": [3, 7, 8, 9, 11, 21, 48], "perspect": [3, 7, 9, 12, 13, 19, 24, 25, 26, 31, 54, 56, 57, 66, 67, 70, 103, 122, 132, 136, 138, 147, 148, 151, 153, 154, 156, 157, 160, 161, 162, 163], "872": 3, "904": 3, "join_depth": [3, 11, 15, 123, 140, 144], "clarif": [3, 5, 136], "uncommit": [3, 31, 37, 48, 51, 64, 65, 67, 68, 80, 123, 150], "newli": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 17, 18, 19, 20, 22, 23, 25, 26, 31, 35, 36, 37, 40, 45, 48, 49, 51, 54, 57, 64, 66, 67, 70, 77, 90, 94, 97, 121, 124, 128, 129, 132, 136, 137, 146, 149, 151, 152, 162, 163], "unaffect": [3, 5, 8, 9, 13, 22, 23, 24, 25, 26, 54, 87, 150], "aris": [3, 8, 9, 10, 11, 12, 13, 20, 22, 24, 25, 28, 33, 51, 57, 70, 78, 84, 85, 94, 102, 124, 133], "begin_nest": [3, 5, 7, 8, 9, 13, 16, 22, 25, 31, 45, 68, 71, 77, 90, 102, 146, 147, 150], "enclos": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 20, 31, 35, 49, 54, 56, 57, 77, 80, 97, 101, 102, 104, 113, 118, 122, 130, 137, 147, 150, 155, 157, 163], "914": 3, "coalesc": [3, 8, 21, 30, 42, 44, 136], "fashion": [3, 4, 6, 7, 9, 13, 18, 25, 31, 32, 37, 49, 52, 56, 67, 68, 70, 80, 87, 90, 95, 98, 107, 128, 138, 147, 150], "char_length": [3, 4, 5, 42, 44, 80], "few": [3, 4, 6, 8, 9, 12, 13, 17, 18, 19, 20, 21, 24, 25, 26, 31, 33, 35, 49, 56, 68, 80, 85, 87, 90, 98, 102, 104, 121, 134, 146, 157, 161, 162, 163], "615": 3, "assert_unicod": [3, 4, 5, 7, 17], "bytestr": [3, 5, 11, 12, 13, 17, 24, 25, 33, 67, 78], "advis": [3, 6, 22, 35, 40, 65, 66, 67, 68, 90, 102, 121, 140, 146, 160], "hello": [3, 157], "mechan": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 21, 22, 24, 25, 31, 33, 35, 37, 40, 44, 49, 51, 67, 70, 71, 82, 94, 102, 103, 113, 117, 123, 128, 136, 148, 155, 157, 160, 163], "hardcod": [3, 4, 5, 7, 8, 9, 10, 12, 13, 20, 21, 31, 33, 61, 65, 66, 155], "paramnam": [3, 48, 78], "num": [3, 21, 25, 31, 78, 98, 102], "bind1": 3, "bind2": 3, "process_bind_param": [3, 20, 23, 33, 41, 58, 59, 67, 117], "process_result_valu": [3, 17, 33, 58, 59, 64, 67, 68, 76, 117], "ideal": [3, 4, 6, 7, 8, 9, 13, 17, 18, 31, 37, 40, 70, 80, 148, 150], "890": 3, "param_1": [3, 20, 21, 22, 24, 25, 44, 54, 56, 57, 59, 64, 65, 66, 67, 113, 115, 137, 152, 155, 156, 163], "param_2": [3, 22, 24, 25, 44, 54, 56, 64, 65, 67, 115, 155], "columnam": [3, 54], "dot": [3, 4, 5, 8, 9, 10, 11, 12, 13, 19, 20, 44, 49, 56, 64], "backend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 34, 35, 36, 38, 40, 44, 45, 48, 50, 51, 52, 53, 54, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 76, 78, 79, 80, 90, 97, 98, 101, 103, 104, 112, 115, 123, 128, 132, 137, 138, 140, 141, 145, 146, 147, 150, 151, 152, 154, 155, 156, 157, 158, 162], "410": 3, "3562": 3, "poolclass": [3, 37, 51, 66, 68, 102], "udf": [3, 68], "strlen": 3, "microsecond": [3, 4, 6, 7, 16, 19, 68], "hoc": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 18, 20, 25, 31, 32, 40, 43, 44, 49, 54, 56, 67, 74, 76, 77, 88, 90, 103, 117, 122, 126, 130, 132, 137, 146, 155], "basi": [3, 4, 5, 8, 9, 10, 11, 12, 13, 18, 21, 22, 23, 25, 26, 31, 33, 36, 37, 49, 54, 56, 57, 59, 62, 63, 64, 65, 66, 67, 68, 74, 87, 90, 92, 97, 98, 102, 104, 122, 123, 128, 132, 136, 137, 138, 141, 146, 147, 148, 149, 150, 157, 162, 163], "902": 3, "nocount": 3, "824": 3, "839": 3, "842": 3, "901": 3, "18": [3, 4, 5, 23, 25, 54, 64, 70, 102, 113, 123, 126, 147], "elimin": [3, 5, 6, 8, 11, 12, 13, 18, 19, 20, 23, 24, 51, 57, 65, 77, 94, 104, 140], "843": 3, "attribute_nam": [3, 90, 102, 146], "802": 3, "767": 3, "__eq__": [3, 4, 5, 6, 8, 9, 11, 12, 15, 16, 17, 20, 33, 49, 50, 56, 57, 70, 79, 88, 91, 98, 113, 117, 123, 139, 151], "__hash__": [3, 5, 6, 9, 12, 13, 56], "__nonzero__": [3, 4, 7], "arbitrari": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 20, 26, 32, 33, 35, 36, 40, 49, 51, 54, 56, 57, 58, 59, 67, 70, 75, 87, 90, 96, 97, 101, 102, 117, 118, 119, 123, 127, 130, 131, 136, 137, 145, 146, 151, 155, 162, 163], "676": [3, 76], "explain": [3, 6, 39, 67, 76, 81, 151], "get_properti": [3, 131, 132], "iterate_properti": [3, 131, 132], "z": [3, 5, 6, 10, 15, 18, 19, 23, 24, 25, 26, 30, 31, 34, 43, 44, 49, 54, 56, 57, 78, 102, 103, 137, 141], "children": [3, 15, 20, 26, 70, 84, 85, 87, 98, 119, 128, 137, 140, 144], "777": 3, "my_custom_compar": 3, "unaryexpress": [3, 7, 33, 42, 54, 56], "848": 3, "786": 3, "858": [3, 76], "gc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13], "shutdown": [3, 5, 11, 51], "solidifi": [3, 13], "840": [3, 76], "carefulli": [3, 5, 10, 18, 20, 21, 22, 23, 24, 40, 57, 67, 71, 76, 87, 124, 136], "pylon": 3, "subset": [3, 5, 6, 7, 8, 9, 11, 13, 15, 18, 23, 26, 31, 32, 35, 37, 43, 45, 48, 49, 54, 56, 57, 59, 61, 67, 80, 90, 97, 102, 107, 122, 124, 128, 131, 132, 143, 146, 149, 151, 155, 157], "834": 3, "cruftifi": 3, "832": 3, "831": 3, "clear_mapp": [3, 131, 132], "841": 3, "unhash": [3, 7, 9, 10, 13, 33, 58, 59], "counterpart": [3, 6, 13, 18, 49, 56, 59, 101, 123, 155, 160], "__contains__": [3, 5, 6, 9, 13, 24, 25, 26, 31], "__iter__": [3, 4, 6, 7, 8, 11, 13, 15, 76, 77, 87], "hard": [3, 4, 6, 11, 12, 13, 16, 19, 22, 23, 24, 25, 57, 128, 147, 148, 163], "pollut": [3, 5, 8, 9], "852": 3, "shortnam": [3, 5], "anon_1": [3, 7, 8, 13, 17, 18, 19, 21, 22, 23, 25, 26, 44, 54, 57, 59, 64, 66, 67, 75, 122, 124, 128, 136, 137, 138, 151, 154, 155], "reliabl": [3, 6, 8, 9, 10, 11, 12, 13, 16, 22, 37, 48, 49, 51, 65, 80, 90, 113, 146, 147], "overload": [3, 8, 9, 13, 33, 50, 56], "adapt_oper": 3, "untyp": [3, 11, 13, 20, 23, 57], "819": 3, "833": 3, "last_inserted_param": [3, 7, 31, 35, 48], "last_updated_param": [3, 7, 31, 35, 36], "r": [3, 5, 9, 10, 22, 25, 26, 32, 37, 39, 57, 62, 66, 67, 68, 76, 78, 88, 97, 103, 128, 139, 151, 161], "postfetch": [3, 5, 11], "844": 3, "On": [3, 5, 12, 13, 17, 18, 20, 21, 22, 23, 24, 31, 32, 37, 38, 49, 50, 54, 56, 57, 59, 64, 66, 67, 70, 71, 76, 80, 101, 115, 123, 128, 130, 136], "573": 3, "writabl": [3, 32, 43, 49, 101, 102, 124], "853": 3, "_execute_clauseel": [3, 4, 76], "execute_clauseel": 3, "maxdb": [3, 7], "03": [3, 5, 15, 22, 37, 65, 68], "007": 3, "oracledatetim": 3, "someschema": 3, "847": 3, "decim": [3, 4, 5, 6, 7, 8, 11, 12, 13, 17, 20, 23, 24, 25, 33, 56, 59, 60, 62, 64, 65, 66, 67, 68], "dao": 3, "828": 3, "preexecute_sequ": [3, 16], "preexecute_pk_sequ": [3, 16], "tree": [3, 22, 66, 67, 96, 98, 113, 124, 144], "coverag": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 18, 25], "unknown": [3, 4, 5, 7, 8, 9, 10, 13, 22, 23, 26, 44, 56, 58, 61, 99, 103, 149], "folk": 3, "exploit": [3, 22, 78], "real_as_float": 3, "msfloat": 3, "msdoubl": 3, "unus": [3, 4, 7, 9, 12, 13, 19, 21, 22, 24, 26, 48, 51, 71], "whatsnewin04": 3, "sybas": [3, 5, 7, 9, 10, 11, 12, 13, 18, 23, 27, 54, 63, 137], "mxodbc": [3, 5, 7, 10, 13, 17], "785": 3, "postgresql": [3, 17, 26, 27, 30, 31, 32, 33, 34, 35, 36, 39, 40, 43, 44, 45, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 63, 64, 65, 66, 70, 71, 74, 78, 80, 81, 96, 98, 101, 102, 115, 122, 123, 124, 128, 137, 141, 145, 146, 147, 150, 151, 152, 155, 156, 157, 162], "postgres_wher": [3, 5], "parser": [3, 5, 11, 12], "wider": [3, 4, 7, 8, 9, 13, 19, 20, 31, 64, 67, 101, 123, 140], "817": 3, "__len__": [3, 4, 72], "818": 3, "locate_dirti": 3, "greatli": [3, 4, 5, 8, 9, 13, 16, 17, 18, 19, 21, 24, 25, 36, 64, 66, 77, 85, 90, 98, 104, 132, 136, 146, 147], "816": 3, "identifierpreprar": 3, "_requires_quot": 3, "regex": [3, 26], "legal_charact": 3, "illegal_initial_charact": 3, "supports_sane_multi_rowcount": [3, 12, 31, 48, 156], "fbdialect": 3, "oracledialect": [3, 57], "topic": [3, 80, 151, 160], "796": 3, "abc": [3, 6, 9, 11, 13, 31, 35, 87], "795": 3, "id_choos": [3, 11, 12, 98, 112], "shard": [3, 4, 5, 6, 7, 11, 12, 13, 21, 25, 27, 31, 97, 114, 120, 136, 137, 146, 148], "_row_processor": 3, "_process_row": 3, "797": 3, "convent": [3, 8, 9, 10, 11, 12, 13, 17, 26, 48, 53, 56, 59, 64, 65, 66, 68, 74, 84, 94, 98, 103, 151], "808": [3, 37], "m2o": [3, 5, 6, 11, 12, 20], "803": 3, "implicitli": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 19, 20, 24, 26, 31, 32, 34, 36, 48, 49, 53, 54, 57, 64, 65, 67, 68, 70, 72, 85, 102, 128, 132, 136, 137, 147, 148, 150, 156, 161, 163], "800": 3, "806": 3, "810": 3, "_scopedext": 3, "nativ": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 18, 23, 24, 25, 32, 33, 36, 48, 59, 64, 65, 66, 71, 98, 104, 113, 136, 152], "fbfloat": 3, "fbtime": 3, "sub_typ": 3, "vararg": 3, "address": [3, 6, 8, 10, 11, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 32, 36, 49, 50, 52, 54, 56, 57, 64, 66, 67, 68, 70, 75, 76, 77, 80, 83, 84, 85, 91, 92, 94, 95, 97, 98, 102, 103, 104, 118, 123, 124, 126, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 147, 149, 151, 154, 155, 156, 161, 162, 163], "caveat": [3, 5, 6, 7, 13, 21, 31, 35, 62, 65, 66, 69, 70, 78, 80, 90, 101, 102, 107, 122, 123, 128, 130, 137, 145, 146, 147, 149, 150, 152, 156], "758": 3, "hold": [3, 4, 5, 8, 9, 13, 25, 31, 48, 49, 56, 59, 62, 64, 66, 70, 74, 84, 85, 87, 90, 102, 123, 124, 136, 138, 139, 140, 146, 147, 151, 157, 158, 161], "grab": [3, 117], "meant": [3, 4, 7, 8, 9, 12, 13, 18, 21, 23, 25, 71, 135, 137], "column_kei": [3, 21, 32, 43, 48, 49, 54, 56], "By": [3, 10, 16, 17, 20, 21, 22, 24, 25, 26, 31, 33, 36, 37, 39, 48, 49, 54, 56, 57, 59, 64, 66, 67, 68, 70, 71, 85, 87, 90, 97, 101, 103, 104, 113, 115, 116, 117, 119, 122, 123, 124, 128, 132, 134, 137, 140, 146, 147, 154, 155], "adequ": [3, 5, 80, 88], "eq": [3, 10, 11, 44, 56, 59, 67, 113, 129], "560": 3, "is_modifi": [3, 4, 7, 13, 90, 97, 102, 133, 146], "include_collect": [3, 90, 97, 102, 146], "584": 3, "761": 3, "enum": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 48, 52, 53, 59, 60, 65, 155], "l": [3, 23], "o": [3, 4, 6, 10, 13, 16, 25, 27, 31, 38, 54, 61, 70, 72, 77, 85, 87, 90, 98, 114, 120, 123], "794": 3, "surpris": [3, 8, 13, 16, 17, 18, 21, 25, 57, 85, 139, 149], "793": 3, "shardedsess": [3, 4, 5, 6, 112], "771": 3, "shard_choos": [3, 98, 112], "728": 3, "757": 3, "779": 3, "beta4": [3, 6], "754": [3, 37], "engine_from_config": [3, 5, 8, 9, 13, 37, 38, 102], "coercion": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 21, 22, 23, 33, 49, 50, 56, 64, 67, 113, 115, 117, 137], "763": 3, "748": 3, "getter": [3, 8, 11, 13, 21, 24, 25, 90, 97, 101, 113, 123, 129], "setter": [3, 11, 13, 23, 101, 129], "malfunct": [3, 71], "orderedproperti": [3, 132, 134], "762": 3, "postfetch_col": [3, 7, 31, 35, 48], "759": 3, "concurr": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 31, 37, 51, 64, 70, 80, 90, 98, 119, 132, 144, 147, 149, 163], "742": 3, "760": 3, "tidi": 3, "glob": 3, "likewis": 3, "ish": [3, 15, 26, 160], "nulltypeengin": 3, "smallinteg": [3, 4, 8, 59, 60, 65], "connectionless": [3, 12, 13, 30, 38, 49, 51], "overhead": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 21, 22, 23, 24, 25, 31, 37, 51, 59, 66, 68, 76, 78, 87, 90, 104, 122, 132, 136, 137, 138, 146, 149], "prove": [3, 17, 26, 78], "stabil": [3, 13], "neg": [3, 10, 12, 13, 16, 20, 26, 30, 31, 51, 56, 57, 67, 70, 163], "with_prefix": 3, "752": 3, "legaci": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 17, 18, 22, 24, 25, 26, 27, 31, 33, 34, 35, 37, 40, 41, 44, 45, 48, 49, 52, 54, 56, 59, 65, 66, 76, 81, 82, 87, 90, 101, 102, 118, 120, 123, 128, 132, 134, 136, 137, 138, 140, 142, 146, 147, 150, 151], "convert_bind_param": [3, 4, 16], "convert_result_valu": [3, 4, 16], "prune": [3, 13, 21, 31, 37], "elsewher": [3, 5, 7, 10, 11, 13, 20, 25, 26, 31, 32, 33, 49, 72, 87, 138, 140, 147, 152], "ref": [3, 4, 6, 7, 149], "outermost": [3, 6, 10, 13, 15, 22, 26, 31, 45, 57, 90, 97, 102, 146, 150], "pickleabl": [3, 4, 5, 6, 12, 13, 17, 55, 59], "735": 3, "16": [3, 4, 6, 16, 17, 20, 33, 49, 52, 59, 63, 64, 65, 66, 67, 68, 71, 84, 128, 140, 146], "68": 3, "abstracttyp": [3, 5], "bind_processor": [3, 16, 18, 33, 56, 58, 59, 60, 67], "result_processor": [3, 5, 16, 17, 18, 33, 58, 59, 60, 67], "unneed": [3, 87], "inherit_foreign_kei": [3, 132], "738": 3, "739": 3, "743": 3, "744": 3, "infil": 3, "ini": [3, 13, 26], "base_mapp": [3, 6, 131, 132], "extrapol": [3, 52, 98], "730": 3, "732": 3, "733": 3, "734": 3, "perf": 3, "masseagerload": 3, "fewest": [3, 128], "membership": [3, 4, 15, 24, 31, 87, 123, 139], "expos": [3, 8, 9, 11, 12, 13, 25, 33, 62, 80, 101, 102, 123, 135, 136, 150, 152], "213": 3, "beyond": [3, 6, 7, 8, 9, 11, 13, 18, 20, 21, 22, 25, 31, 32, 37, 41, 48, 51, 58, 61, 68, 70, 75, 76, 77, 84, 87, 123, 129, 133, 137, 140, 162], "cours": [3, 5, 6, 10, 12, 16, 18, 19, 20, 21, 22, 23, 25, 31, 40, 52, 57, 65, 67, 75, 77, 85, 87, 113, 121, 123, 128, 148, 149, 162], "__setitem__": [3, 12, 24, 87, 101, 117], "itervalu": [3, 31, 87], "attributeextens": [3, 4, 13, 16, 18], "swap": [3, 12, 20, 22, 24], "selectxxx": 3, "docstr": [3, 4, 5, 10, 13, 25, 31, 49, 65, 67, 68, 70, 113, 132, 140, 146, 151, 155], "supersed": [3, 6, 7, 8, 9, 12, 13, 16, 17, 20, 22, 23, 25, 31, 36, 37, 44, 45, 48, 49, 54, 56, 57, 59, 67, 71, 77, 90, 97, 101, 112, 123, 126, 128, 137, 138, 146, 148], "mount": 3, "643": 3, "select_by_attributenam": 3, "yhi": 3, "ye": [3, 17, 64], "durat": [3, 4, 5, 6, 25, 31, 68, 80], "cl": [3, 4, 5, 6, 8, 13, 16, 17, 18, 19, 21, 23, 26, 48, 58, 61, 91, 92, 94, 97, 99, 107, 113, 117, 118, 121, 123, 129, 130, 132, 137, 148], "rightmost": [3, 5, 8, 9], "populate_exist": [3, 6, 11, 13, 16, 26, 90, 102, 126, 128, 130, 132, 136, 137, 138, 146, 147, 148, 149, 163], "touch": [3, 13, 31, 51, 130], "660": [3, 76], "sessionmak": [3, 4, 5, 6, 7, 8, 13, 15, 16, 17, 23, 25, 26, 45, 55, 70, 77, 80, 90, 97, 98, 102, 104, 136, 145, 148, 149, 151], "stereotyp": 3, "savepoint": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 16, 19, 25, 31, 40, 45, 48, 67, 71, 77, 90, 97, 102, 145, 146, 147, 148], "vertic": [3, 9, 15, 31, 88, 90, 102, 112, 117, 145, 146], "horizont": [3, 6, 7, 11, 12, 13, 21, 23, 25, 27, 31, 97, 114, 120, 137, 145, 146, 148], "partit": [3, 6, 7, 8, 10, 11, 12, 18, 21, 25, 31, 56, 67, 90, 102, 112, 124, 138, 145, 146, 155], "twophas": [3, 8, 10, 11, 146, 150], "whose": [3, 5, 6, 7, 8, 13, 15, 23, 33, 37, 48, 51, 57, 58, 59, 67, 77, 80, 117, 141, 146], "Or": [3, 16, 22, 24, 32, 49, 50, 52, 56, 70, 71, 75, 98, 101, 123, 141, 147, 148, 149, 151], "live": [3, 5, 11, 12, 15, 18, 22, 23, 31, 37, 43, 51, 64, 66, 70, 77, 78, 80, 136, 148, 161], "somet": [3, 5, 6, 17, 18, 19, 21, 32, 33, 49, 56, 57, 59, 67, 68, 96, 98, 101, 123], "emb": [3, 5, 9, 12, 19, 30, 33, 35, 56, 67, 75, 98, 155], "scale": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 17, 20, 22, 23, 25, 33, 39, 57, 59, 65, 66, 67, 96, 98, 147, 151], "distribut": [3, 5, 16, 19, 28, 31, 59, 68, 82, 98, 112], "robin": [3, 8, 10, 11, 24, 51, 112], "618": 3, "depth": [3, 6, 7, 9, 10, 11, 21, 76, 120, 128, 140, 142, 144, 149], "ey": 3, "659": [3, 76], "211": 3, "collaps": 3, "analyz": [3, 13, 31, 67, 151], "611": 3, "include_column": [3, 4, 8, 13, 49, 52], "exclude_column": [3, 8, 52], "696": 3, "undefer_group": [3, 9, 10, 11, 126, 128, 137], "undef": [3, 5, 8, 9, 11, 13, 15, 16, 17, 20, 25, 97, 126, 128, 133, 137], "streamlin": [3, 5, 6, 17, 18, 26, 70, 87], "type_": [3, 5, 13, 20, 22, 24, 31, 33, 44, 48, 49, 56, 57, 58, 59, 67, 94, 123, 132, 136, 155], "decent": [3, 6, 21, 52], "ever": [3, 6, 7, 8, 13, 18, 20, 23, 25, 26, 33, 39, 75, 81, 148], "temporarili": [3, 4, 5, 6, 13, 24, 66, 119, 147], "outparam": [3, 15, 42, 56], "out_paramet": [3, 15, 48, 56], "507": 3, "advanc": [3, 9, 11, 19, 24, 31, 35, 57, 90, 93, 98, 113, 124, 128, 134, 136, 137, 146, 148, 151, 154], "finer": [3, 5, 15, 17, 97], "asdecim": [3, 6, 7, 8, 11, 20, 23, 59, 64, 65, 66, 67], "646": 3, "concat": [3, 7, 10, 12, 23, 42, 44, 49, 50, 56, 57, 101, 113, 123, 124, 155], "475": 3, "hex": [3, 5, 18, 33, 37, 152], "unchang": [3, 4, 7, 8, 9, 11, 12, 13, 18, 19, 20, 21, 22, 25, 57, 80, 84, 91, 123, 126, 134, 146, 147, 152], "vastli": [3, 4, 6, 7, 17, 19, 21, 26, 31, 70, 136, 163], "never": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 33, 43, 44, 48, 49, 51, 54, 56, 65, 67, 68, 70, 77, 78, 85, 87, 104, 118, 123, 128, 132, 135, 136, 137, 140, 151, 157, 163], "52": [3, 22, 37], "569": 3, "obei": [3, 47, 124], "plai": [3, 8, 9, 13, 19, 25, 56, 59, 65, 66, 70, 77, 124, 128, 141, 149, 160, 163], "504": 3, "slice": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 19, 22, 25, 54, 57, 59, 67, 87, 98, 137, 151], "686": 3, "crud": [3, 9, 48, 56, 80, 160], "autoclos": [3, 4, 5, 10, 11, 12, 13, 26, 31, 57], "chanc": [3, 5, 7, 8, 9, 10, 13, 18, 48, 52, 58, 66, 75, 80, 104, 128], "dangl": 3, "someparam": 3, "affix": [3, 21], "559": 3, "nulltyp": [3, 5, 10, 11, 12, 13, 20, 22, 23, 31, 49, 56, 58, 60, 68, 155], "606": 3, "bench": [3, 13, 21], "rowset": [3, 20], "fast": [3, 11, 12, 13, 18, 21, 24, 25, 31, 49, 76, 136, 139], "lifecycl": [3, 5, 10, 12, 24, 39, 97, 145, 147, 149, 162], "content": [3, 6, 7, 8, 12, 13, 17, 18, 19, 20, 25, 26, 31, 32, 37, 40, 51, 57, 64, 66, 67, 70, 78, 81, 84, 85, 90, 94, 97, 98, 102, 117, 124, 128, 138, 146, 147, 149, 151, 152, 155, 156, 157, 160, 163], "lifetim": [3, 31, 87, 97], "auto_close_cursor": 3, "disallow_open_cursor": 3, "self_group": [4, 7, 9, 11, 12, 42, 43, 44, 49, 54, 56, 78], "1661": 4, "2010": [4, 5, 16, 17, 18], "uniniti": [4, 5, 13, 97], "position": [4, 8, 9, 10, 12, 13, 18, 25, 35, 37, 39, 45, 54, 56, 57, 70, 87, 134, 155, 157, 163], "arithmet": [4, 33, 42, 59], "clone": [4, 5, 6, 9, 11, 12, 13, 20, 61, 104], "stand": [4, 7, 8, 9, 10, 11, 12, 13, 18, 20, 21, 24, 25, 32, 51, 64, 68, 136], "exercis": [4, 9, 11, 17, 65, 67, 68, 121], "1568": [4, 5], "1617": 4, "typecast": 4, "1647": [4, 5], "recogn": [4, 5, 6, 7, 8, 9, 10, 11, 13, 18, 19, 25, 26, 31, 32, 44, 58, 59, 121, 144], "1646": [4, 5], "2009": [4, 16, 33], "somejoinedsubclass": 4, "1543": 4, "unserializ": 4, "1553": 4, "1054": 4, "1618": 4, "1585": 4, "get_committed_valu": 4, "compositeproperti": [4, 5, 88, 100, 123, 132], "1504": 4, "crash": [4, 6, 13, 80], "1602": 4, "thx": 4, "scott": [4, 5, 6, 7, 8, 17, 19, 21, 22, 23, 24, 25, 31, 33, 37, 40, 49, 51, 52, 64, 65, 66, 67, 71, 78, 98, 102, 136, 146, 147, 150], "torborg": [4, 5, 6, 7], "1480": 4, "1616": 4, "fallback": [4, 5, 6, 8, 9, 11, 12, 13, 17, 22, 48, 58, 68], "pgtext": 4, "1556": 4, "synchronize_sess": [4, 8, 9, 13, 25, 26, 113, 136, 137, 147, 162], "1436": 4, "1603": 4, "paramstyl": [4, 9, 11, 13, 23, 31, 37, 48, 78], "informixdb": [4, 8], "dedup": [4, 7, 9, 10, 56], "qmark": [4, 8, 13, 31, 37, 57, 78, 157], "1574": 4, "_cursorfairi": 4, "1632": 4, "1641": 4, "pgdoubleprecis": 4, "double_precis": [4, 5, 11, 66, 67], "1085": 4, "TO": [4, 5, 11, 23, 24, 28, 31, 32, 35, 56, 66, 67, 84, 124, 140, 150], "1576": 4, "parenthes": [4, 5, 7, 8, 9, 10, 11, 12, 13, 20, 23, 49, 54, 56, 70, 101, 123], "1611": 4, "1439": 4, "trustedconnect": 4, "trusted_connect": [4, 64], "1561": 4, "1637": 4, "1523": 4, "1570": 4, "inaccuraci": [4, 5, 6, 59, 66, 67], "accomplish": [4, 6, 8, 18, 22, 30, 34, 37, 48, 54, 57, 64, 68, 85, 90, 94, 102, 103, 135, 136, 137, 139, 140, 151, 155, 162], "shares_lineag": [4, 49, 56], "1491": 4, "shardedqueri": [4, 5, 6, 11, 12, 24, 26, 112], "1606": 4, "1300": [4, 65], "bidirect": [4, 5, 6, 7, 25, 80, 83, 84, 85, 97, 103, 144, 151, 161, 163], "1507": 4, "unload": [4, 5, 6, 8, 9, 10, 13, 19, 20, 22, 23, 25, 80, 85, 87, 90, 97, 99, 102, 123, 128, 132, 134, 140, 146, 147, 149, 163], "corrupt": [4, 5, 6, 8, 9, 10, 12, 13, 18, 21, 22, 68, 87], "1526": 4, "mutual": [4, 5, 9, 12, 13, 20, 21, 23, 25, 32, 34, 41, 49, 56, 64, 68, 70, 77, 80, 123, 129, 140, 142], "1519": 4, "1485": 4, "honor": [4, 5, 6, 7, 8, 9, 10, 11, 13, 17, 20, 21, 22, 23, 92, 116], "ymmv": 4, "1477": 4, "squeez": 4, "single_par": [4, 70, 85, 123, 140], "contract": [4, 5, 8, 9, 10, 11, 12, 13, 17, 18, 21, 25, 28, 33, 59, 64, 67, 90, 123, 146], "1483": 4, "won": [4, 5, 7, 8, 9, 12, 13, 17, 18, 20, 21, 25, 26, 31, 37, 51, 68, 75, 76, 77, 78, 84, 87, 90, 91, 102, 121, 128, 130, 133, 135, 136, 137, 139, 146, 149, 154, 162, 163], "randomli": [4, 11, 13, 54, 90, 98, 152], "collid": [4, 7, 12], "1488": 4, "1487": 4, "__all__": [4, 6, 7, 8], "1476": 4, "1440": 4, "enable_assert": [4, 137], "usagerecip": [4, 5, 16, 18, 98], "prefilteredqueri": 4, "1424": 4, "1501": 4, "strongidentitymap": [4, 22], "1506": 4, "pure": [4, 5, 6, 8, 9, 10, 17, 18, 22, 25, 26, 51, 56, 59, 65, 71, 94, 102, 103, 136], "1522": 4, "hypothet": [4, 12, 13, 20, 31, 44, 56, 85, 90, 102, 155], "wrong": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 23, 26, 70, 75, 76, 113, 128, 147], "1486": 4, "1373": 4, "unari": [4, 7, 12, 13, 33, 56, 155], "1420": 4, "1482": 4, "backport": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20], "1309": 4, "proxy_factori": [4, 5, 101], "__getstate__": [4, 9, 10, 12, 97, 117], "__setstate__": [4, 5, 9, 10, 11, 12, 97, 117], "1446": 4, "__table_args__": [4, 5, 6, 11, 13, 19, 21, 22, 24, 32, 49, 64, 66, 67, 70, 94, 96, 124, 132, 141, 144], "1468": [4, 6], "1527": 4, "rebuild": [4, 82], "regularli": [4, 118, 130], "coupl": [4, 15], "nose": [4, 6, 8, 12], "readm": [4, 5, 8, 17], "970": 4, "intention": [4, 37, 57, 76, 78, 104, 139], "aspect": [4, 5, 6, 8, 9, 13, 22, 26, 48, 52, 57, 61, 92, 102, 137, 139, 149, 151], "dii": 4, "sessionawaremapp": [4, 5, 17, 18], "1431": 4, "1461": 4, "whole": [4, 7, 8, 9, 10, 13, 15, 21, 24, 25, 31, 36, 45, 50, 51, 54, 56, 57, 64, 70, 71, 76, 77, 83, 90, 97, 113, 121, 126, 130, 132, 137, 140, 146, 147, 150, 155, 160], "1426": 4, "set_committed_valu": [4, 5, 128, 145, 146], "footprint": 4, "1463": 4, "short": [4, 5, 8, 11, 12, 13, 20, 31, 51, 56, 65, 68, 70, 71, 77, 98, 139, 147, 161, 163], "1458": 4, "inappropri": [4, 5, 6, 7, 8, 9, 10, 11, 13, 22, 25, 87, 163], "comput": [4, 7, 12, 13, 25, 31, 49, 52, 53, 54, 67, 80, 122, 137, 140, 155], "recreat": [4, 5, 6, 7, 8, 12, 49, 51, 52, 94, 151], "staticpool": [4, 5, 13, 38, 51, 68], "print": [4, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 33, 35, 36, 37, 39, 43, 44, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 62, 64, 65, 66, 67, 68, 70, 71, 74, 76, 77, 78, 79, 80, 83, 84, 87, 88, 90, 97, 98, 101, 102, 103, 113, 115, 117, 118, 124, 126, 129, 130, 136, 137, 138, 139, 148, 149, 150, 151, 154, 155, 156, 157, 162, 163], "platform": [4, 5, 6, 7, 8, 9, 11, 12, 30, 33, 35, 43, 44, 49, 54, 56, 57, 59, 64, 65, 67, 68, 73, 101, 123, 128, 141, 155], "incomplet": [4, 5, 66, 67], "scan": [4, 7, 9, 11, 12, 13, 16, 18, 19, 24, 25, 32, 56, 67, 76, 91, 92, 97, 107, 123, 132, 134, 148], "edg": [4, 5, 6, 7, 8, 9, 11, 12, 13, 21, 22, 23, 24, 25, 41, 49, 54, 61, 63, 77, 78, 98, 124, 128, 137], "unmodifi": [4, 13, 68, 90, 123, 134, 146], "resurrect": [4, 9], "publicli": [4, 5, 17, 20, 31, 45, 102], "tremend": 4, "interconnect": 4, "wast": [4, 13, 25, 70, 75, 77], "1398": 4, "query_cl": [4, 5, 6, 11, 16, 90, 112, 146], "dynamicattributeimpl": 4, "appenderqueri": [4, 13, 87, 140], "appendermixin": [4, 87], "1352": 4, "propertyopt": 4, "develop": [4, 7, 8, 10, 11, 12, 13, 21, 23, 24, 25, 26, 31, 37, 63, 65, 71, 76, 80, 90, 98, 102, 113, 117, 118, 128, 134, 146, 147], "1357": 4, "bundl": [4, 8, 9, 10, 11, 13, 18, 22, 76, 77, 101, 102, 123, 127, 137, 148, 154], "1391": 4, "interf": [4, 7, 8, 9, 10, 11, 12, 13, 23, 31, 51, 97], "1360": 4, "1406": 4, "un": [4, 5, 6, 8, 9, 10, 11, 12, 13, 22, 23, 25, 31, 32, 33, 37, 40, 43, 58, 59, 70, 90, 97, 98, 101, 103, 146, 149, 151], "1376": 4, "failur": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 22, 24, 25, 26, 31, 51, 64, 66, 70, 71, 77, 80, 90, 147, 149], "1378": 4, "nonsens": 4, "enorm": [4, 5, 24, 25, 26, 80], "fill": [4, 13, 17, 31, 37, 70], "screen": 4, "logfil": 4, "1413": 4, "idiomat": [4, 26, 80, 137, 150, 157], "__repr__": [4, 6, 7, 8, 9, 10, 11, 12, 13, 37, 88, 91, 101, 139, 151, 161], "_get_colspec": 4, "__clause_element__": [4, 7, 8, 9, 10, 12, 13, 22, 56, 70, 88, 113, 123, 130], "1353": 4, "1341": 4, "594": 4, "identifierprepar": [4, 20, 29, 48], "multipart": [4, 12, 23, 49], "1379": 4, "1405": 4, "slboolean": 4, "1402": 4, "1273": 4, "routin": [4, 7, 8, 9, 10, 11, 12, 13, 20, 21, 22, 25, 30, 31, 34, 38, 40, 51, 61, 67, 68, 71, 94, 97, 98, 101, 102, 117, 129, 136, 163], "prior": [4, 5, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 24, 25, 31, 40, 45, 51, 54, 57, 64, 65, 66, 67, 70, 71, 76, 84, 87, 97, 102, 129, 140, 146, 147, 150], "1310": 4, "1343": 4, "linkag": [4, 11, 13, 23, 32, 54, 74, 80, 87, 92, 122, 124, 132, 136, 137, 139, 141, 151, 163], "mislead": [4, 5, 9, 11, 12, 13, 21, 23, 25, 26, 40, 71], "1315": 4, "query1": 4, "query2": [4, 55], "Such": [4, 5, 13, 18, 22, 30, 31, 33, 35, 36, 39, 49, 52, 54, 56, 57, 59, 61, 66, 78, 80, 87, 101, 113, 117, 123, 124, 126, 128, 129, 137, 147, 152], "tack": [4, 6, 48, 129], "1337": 4, "1347": 4, "consid": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 21, 22, 23, 24, 26, 31, 33, 34, 35, 40, 44, 45, 49, 52, 54, 56, 57, 58, 59, 61, 62, 64, 66, 68, 69, 70, 76, 77, 80, 83, 84, 87, 90, 92, 97, 101, 102, 103, 104, 113, 116, 118, 121, 122, 123, 124, 128, 132, 133, 136, 137, 138, 140, 141, 144, 146, 147, 150, 151, 155, 157, 160, 162, 163], "tricki": [4, 113, 121, 154], "somelist": 4, "inadvert": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 21, 22, 24, 25, 26, 68, 130], "1306": 4, "post_configure_attribut": [4, 116], "instrumentationmanag": [4, 7, 13, 116], "listen_for_ev": [4, 98], "1314": 4, "onetomani": [4, 100, 103, 123], "manytoon": [4, 13, 100, 103, 123], "crazi": 4, "circulardependencyerror": [4, 5, 29, 32, 41], "simultan": [4, 7, 13, 23, 31, 36, 49, 51, 54, 64, 65, 68, 85, 90, 91, 102, 122, 124, 128, 134, 136, 137, 146, 147, 149, 152], "someb": 4, "1325": 4, "understood": [4, 5, 7, 8, 10, 11, 12, 17, 26, 35, 54, 64, 90, 95, 118, 146, 147], "homegrown": 4, "weakref": [4, 6, 8, 9, 10, 11, 12, 13, 21, 102, 117], "from_self": [4, 5, 6, 9, 10, 12, 13, 17, 18, 22, 137], "1302": 4, "__selectable__": 4, "weakkeydictionari": [4, 13, 117], "forev": [4, 24], "arbitrarili": [4, 8, 9, 13, 31, 37, 39, 64, 70, 128, 138, 144], "penalti": [4, 102], "1299": 4, "__bases__": 4, "__table__": [4, 5, 7, 13, 21, 70, 75, 76, 87, 91, 92, 96, 103, 107, 118, 121, 132, 133, 134, 135, 138, 151, 161], "remap": 4, "encount": [4, 6, 8, 9, 10, 11, 12, 21, 22, 23, 24, 25, 31, 40, 41, 49, 52, 56, 67, 68, 70, 77, 85, 94, 97, 99, 122, 140], "pguuid": 4, "pgbit": 4, "1327": 4, "refect": 4, "fetchon": [4, 5, 6, 9, 19, 21, 31, 36, 57, 62, 102, 138], "1292": 4, "prematur": [4, 9, 11, 12, 19, 20, 25, 68, 70, 149], "alex": [4, 6, 9, 10, 13], "k": [4, 13, 20, 22, 25, 38, 44, 65, 67, 70, 87, 91, 93, 101, 102, 111, 117, 121, 131, 133, 134, 137, 138], "needlessli": [4, 6, 11], "1293": 4, "percent": [4, 6, 8, 9, 11, 13, 25, 31, 54, 72], "sign": [4, 5, 6, 7, 8, 9, 11, 13, 17, 25, 31, 38, 64, 65, 67, 72], "1284": 4, "1291": 4, "1282": 4, "1289": 4, "repeatedli": [4, 5, 6, 11, 12, 13, 20, 21, 25, 56, 57, 58, 76, 87, 146, 148, 163], "expunge_al": [4, 5, 13, 16, 17, 70, 90, 97, 102, 128, 146, 147, 148, 149], "modern": [4, 5, 7, 8, 9, 11, 12, 13, 17, 18, 19, 20, 26, 31, 36, 37, 41, 54, 56, 57, 59, 61, 64, 65, 66, 67, 68, 71, 74, 78, 90, 95, 98, 103, 122, 129, 132, 134, 135, 137, 140, 146, 150, 151, 155, 157, 158, 163], "1237": 4, "back_popul": [4, 5, 10, 12, 13, 17, 25, 26, 70, 83, 84, 85, 87, 92, 95, 97, 101, 103, 118, 121, 123, 139, 140, 151, 161, 163], "781": [4, 76], "enable_eagerload": [4, 9, 21, 137], "1276": 4, "except_": [4, 5, 17, 42, 54, 57, 137, 138, 155], "intersect_al": [4, 13, 42, 54, 57, 137, 155], "except_al": [4, 42, 54, 57, 137, 155], "_compileonattr": 4, "__getattribute__": [4, 5, 12], "net": [4, 5, 6, 7, 8, 9, 10, 13, 21, 22, 31, 33, 59, 62, 64, 66, 68, 69, 80, 90, 97, 102, 128, 146], "1269": 4, "1281": 4, "1256": [4, 64], "1214": 4, "nonetyp": [4, 7, 8, 9, 10, 11, 13, 33], "stack": [4, 7, 9, 10, 11, 13, 24, 26, 40, 48, 51, 61, 71, 76, 97, 146, 148], "trace": [4, 7, 9, 10, 11, 13, 40, 71, 97], "virtual": [4, 9, 12, 21, 24, 25, 32, 35, 56, 59, 64, 66, 87, 101, 102, 107, 122, 135, 141, 150, 155], "1278": 4, "robust": [4, 5, 8, 140], "1280": 4, "do_begin": [4, 48, 68], "savepoint_releas": 4, "unsupport": [4, 5, 7, 8, 9, 10, 11, 13, 21, 31, 35, 52, 56, 63, 70, 119], "exclud": [4, 5, 6, 7, 10, 11, 12, 13, 31, 34, 54, 66, 92, 117, 132, 133, 136], "exclude_properti": [4, 5, 6, 10, 92, 132, 133], "06": [4, 5, 16, 17, 25, 76], "sphinx": [4, 5, 7, 9, 10, 12], "editori": [4, 25], "javascript": 4, "power": [4, 21, 67, 72, 80, 98, 104], "member": [4, 5, 6, 10, 11, 12, 13, 15, 21, 22, 23, 24, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 48, 49, 51, 52, 54, 56, 58, 59, 61, 64, 65, 66, 67, 68, 80, 85, 87, 90, 92, 97, 101, 102, 103, 104, 107, 112, 113, 115, 116, 117, 119, 121, 123, 128, 132, 133, 137, 139, 146, 151], "distutil": [4, 7, 8, 9, 13, 22, 82], "pip": [4, 12, 13, 73, 81, 102, 118], "recommend": [4, 5, 6, 7, 8, 9, 12, 13, 16, 18, 20, 22, 23, 26, 31, 37, 39, 49, 51, 57, 59, 64, 65, 66, 67, 68, 70, 72, 77, 84, 90, 101, 102, 113, 119, 122, 124, 128, 134, 137, 139, 141, 146, 147, 151, 152, 155, 157], "postgi": [4, 7, 19, 33, 124], "folder": [4, 19, 144], "third": [4, 6, 8, 9, 10, 11, 12, 13, 17, 19, 21, 27, 32, 37, 38, 43, 44, 47, 48, 49, 54, 56, 58, 59, 63, 64, 65, 67, 68, 70, 72, 76, 85, 90, 91, 101, 102, 119, 123, 137, 138, 146, 151, 156, 158, 161], "polymorphic_ident": [4, 5, 6, 21, 22, 70, 92, 94, 95, 103, 107, 121, 122, 131, 132], "prone": [4, 13, 25, 31, 66, 124], "query_class": [4, 13, 123, 140], "1079": 4, "sticki": [4, 128], "hasattr": [4, 5, 25, 31, 71], "reiter": [4, 5, 147], "unlik": [4, 6, 8, 9, 11, 12, 13, 20, 21, 22, 23, 24, 25, 31, 32, 33, 43, 48, 49, 51, 56, 59, 61, 65, 68, 70, 97, 102, 118, 122, 128, 146, 148, 149, 154, 156], "author": [4, 5, 9, 10, 11, 13, 17, 28, 31, 65, 67, 68, 84, 119, 126, 128, 130, 137, 151], "guilti": 4, "loosei": 4, "goosei": 4, "weak_instance_map": 4, "intercept": [4, 6, 7, 9, 10, 11, 13, 15, 16, 18, 19, 21, 24, 25, 31, 33, 35, 39, 40, 49, 51, 52, 56, 59, 66, 68, 70, 71, 76, 84, 85, 87, 96, 97, 98, 101, 116, 117, 118, 119, 123, 132, 133, 137, 140, 145, 146, 147, 149, 157], "1272": 4, "1268": 4, "__getattr__": [4, 12, 13, 137], "1262": 4, "1242": 4, "from_stat": [4, 5, 6, 7, 8, 13, 21, 22, 26, 54, 56, 136, 137, 138, 151, 155], "expand": [4, 5, 6, 8, 9, 10, 11, 12, 13, 17, 19, 20, 37, 49, 56, 57, 65, 78, 87, 101, 104, 117, 123, 137, 138], "1253": 4, "clauselist": [4, 6, 42, 44, 56, 67], "5rc4": 4, "violat": [4, 8, 51, 67, 68, 77, 85, 87, 141, 147], "polic": 4, "1232": 4, "manner": [4, 7, 8, 9, 11, 12, 13, 16, 17, 18, 23, 24, 25, 26, 31, 32, 35, 37, 49, 52, 56, 65, 70, 97, 102, 103, 104, 121, 128, 130, 136, 137, 138, 140, 152, 155, 157, 162], "not_": [4, 9, 11, 42, 50, 56, 57, 123], "1087": 4, "1236": 4, "comparator_factori": [4, 5, 6, 7, 17, 19, 33, 56, 58, 59, 60, 67, 88, 123, 129, 133, 140], "5051": 4, "relationproperti": [4, 5, 17], "bu": 4, "errant": [4, 5, 8, 12, 13], "1099": 4, "1228": 4, "band": 4, "indirect": [4, 5, 6, 7, 21, 123], "shard_id": [4, 6, 31, 112], "1072": 4, "rowproxi": [4, 5, 6, 8, 13, 17, 19, 22, 26, 31, 57], "friend": [4, 16], "935": [4, 76], "imper": [4, 13, 24, 80, 84, 86, 92, 93, 95, 111, 121, 123, 131, 132, 133, 151], "weird": 4, "__names__": 4, "1215": 4, "1238": 4, "notimplementederror": [4, 6, 7, 8, 9, 10, 12, 33, 36, 44, 48, 49, 52, 56, 57, 58, 101, 123, 138], "achiev": [4, 5, 8, 9, 11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 31, 33, 34, 35, 49, 51, 52, 57, 61, 66, 68, 77, 80, 82, 84, 85, 87, 94, 101, 102, 104, 107, 121, 128, 129, 130, 132, 134, 136, 137, 138, 147, 148, 151, 155, 157, 161, 163], "link_to_nam": [4, 8, 32], "interior": [4, 102], "whack": 4, "presum": 4, "emit": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 26, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 45, 48, 49, 51, 52, 54, 56, 57, 58, 59, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 78, 80, 84, 85, 87, 90, 94, 96, 97, 98, 99, 101, 102, 103, 104, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 162, 163], "1241": 4, "defaultclaus": [4, 5, 6, 7, 9, 16, 17, 21, 35, 40, 49, 53], "1266": 4, "msgenericbinari": 4, "special": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 44, 45, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 64, 65, 66, 68, 70, 74, 75, 79, 82, 85, 87, 90, 92, 94, 96, 97, 101, 102, 107, 113, 115, 117, 120, 121, 122, 123, 124, 126, 127, 128, 132, 135, 136, 137, 140, 142, 146, 150, 151, 152, 154, 156, 157, 162, 163], "width": [4, 65], "msvarbinari": 4, "msimag": 4, "1249": 4, "msreal": 4, "msntext": 4, "mssmalldatetim": 4, "mstime": 4, "msdatetimeoffset": 4, "msdatetime2": 4, "smalldatetim": [4, 64], "1254": 4, "len": [4, 24, 30, 64, 77], "msbinari": [4, 5], "imag": [4, 59, 64, 70], "1258": 4, "ntext": [4, 7, 59], "1248": [4, 25], "1243": 4, "create_xid": [4, 48], "oraclenvarchar": 4, "nvarchar2": [4, 5, 6, 11, 13, 24, 66], "1233": 4, "huddlej": 4, "wwu": 4, "edu": 4, "1265": 4, "description_encod": [4, 7, 8, 9], "1246": 4, "nullpool": [4, 6, 13, 37, 38, 51, 66, 68, 71, 102], "1094": 4, "dogpil": [4, 7, 11, 13, 76, 97, 104, 137, 147, 148, 149], "startup": [4, 8, 12, 13, 21, 68, 90], "799": 4, "connectionproxi": [4, 5, 13, 18], "1149": 4, "1200": [4, 31], "1267": 4, "neglect": 4, "submit": [4, 6, 13], "ken": [4, 9, 10], "kuhlman": 4, "714": 4, "aproxi": 4, "propig": 4, "tune": [4, 5, 6, 9, 13, 26, 51, 76, 147, 162], "rough": [4, 7, 9, 31], "guesstim": 4, "25": [4, 9, 11, 19, 35, 76, 113, 137, 155], "guard": [4, 5, 6, 8, 9, 10, 11, 12, 13, 64, 71, 128, 152], "1220": 4, "1140": 4, "1221": 4, "pendingdeprecationwarn": [4, 41], "1226": 4, "5rc3": 4, "load_dialect_impl": [4, 5, 33], "impl": [4, 5, 6, 7, 8, 12, 13, 17, 22, 23, 24, 33, 37, 41, 51, 58, 59, 64, 67, 68, 71, 76, 78, 117, 123], "notat": [4, 6, 10, 161], "1e": 4, "1216": 4, "1217": 4, "currenc": [4, 67, 113], "1017": 4, "07": [4, 5, 6, 76], "after_bulk_delet": [4, 8, 97], "after_bulk_upd": [4, 8, 97], "1171": 4, "often": [4, 5, 12, 13, 17, 18, 19, 20, 22, 23, 24, 25, 26, 31, 32, 33, 37, 49, 50, 51, 54, 56, 57, 58, 59, 62, 64, 67, 68, 70, 71, 75, 76, 77, 80, 84, 85, 87, 90, 96, 97, 104, 113, 122, 124, 126, 128, 130, 135, 136, 137, 139, 140, 146, 147, 148, 149, 150, 155, 157, 160, 161, 163], "hide": [4, 26, 38, 71, 128], "1218": 4, "dest": [4, 75], "source_id": 4, "1183": 4, "1213": 4, "granular": [4, 6], "intact": [4, 7, 19, 23, 25, 33, 36, 85, 91, 97, 98, 123], "1202": 4, "reduct": [4, 5, 7, 8, 9, 18, 23, 31], "label_length": [4, 6, 7, 9, 12, 37, 48], "1211": 4, "1212": 4, "1194": 4, "notion": [4, 23, 31, 52, 59, 64, 66, 67, 71, 85, 90, 136, 147], "default_order_bi": 4, "inequ": 4, "portabl": [4, 5, 13, 16, 23, 25, 31, 37, 59, 113], "No": [4, 5, 10, 13, 17, 18, 23, 31, 37, 64, 66, 67, 80, 84, 90, 97, 102, 112, 128, 136, 146, 151], "wrote": [4, 139], "ohloh": 4, "comment": [4, 9, 10, 11, 12, 13, 40, 48, 49, 52, 136], "sting": 4, "first_row": [4, 13, 25, 66], "optimize_limit": [4, 25, 66], "536": 4, "mirror": [4, 8, 11, 13, 18, 19, 22, 25, 36, 54, 56, 59, 66, 67, 70, 75, 97, 123, 129, 132, 148], "pickler": [4, 7, 59], "column_mapped_collect": [4, 5, 6, 15, 87], "1174": 4, "flatten_iter": 4, "pypi": [4, 5, 6, 7, 8, 9, 10, 13, 18, 62, 64, 65, 67, 68, 69, 76, 82], "1077": 4, "deadlock": [4, 5, 6, 13, 22, 64, 70, 80], "factori": [4, 9, 24, 31, 33, 37, 48, 56, 87, 90, 98, 101, 102, 104, 116, 119, 139, 146, 147, 151, 155, 158], "1177": 4, "celko": [4, 98], "1180": 4, "regress": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 22, 25, 26, 92, 118], "raiseerror": 4, "object_mapp": [4, 131, 132], "class_mapp": [4, 6, 7, 8, 9, 16, 47, 131, 132], "identity_map": [4, 7, 9, 102, 123, 132, 146, 149], "asynchron": [4, 5, 13, 26, 27, 62, 70, 71, 85, 87, 90, 98, 114, 120, 123], "protect": [4, 9, 10, 11, 70], "1182": 4, "strptime": [4, 25], "1187": 4, "11": [4, 7, 15, 20, 25, 35, 37, 52, 56, 59, 63, 64, 65, 66, 67, 76, 97, 98, 104, 137, 140, 157], "rowtupl": 4, "roughli": [4, 5, 20, 24, 37, 54, 70, 138, 152], "attributelisten": 4, "composite_properti": 4, "reconstructor": [4, 11, 13, 16, 97, 131, 132], "1127": 4, "proce": [4, 5, 6, 8, 9, 10, 11, 12, 13, 18, 20, 21, 22, 23, 24, 25, 26, 31, 34, 35, 51, 57, 61, 64, 77, 80, 82, 85, 90, 95, 97, 98, 99, 102, 116, 120, 128, 132, 133, 134, 135, 139, 140, 146, 148, 149, 150, 156, 157, 160, 162], "1128": 4, "serv": [4, 7, 8, 11, 12, 13, 16, 25, 26, 31, 32, 44, 47, 48, 54, 56, 59, 61, 64, 80, 96, 97, 101, 118, 121, 122, 123, 124, 132, 137, 146, 151, 155, 160, 161, 162, 163], "foolproof": [4, 57, 84, 151], "criteria": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 20, 22, 24, 26, 31, 34, 43, 44, 49, 54, 56, 57, 70, 75, 80, 87, 97, 98, 101, 104, 115, 122, 123, 124, 127, 136, 137, 138, 139, 145, 146, 147, 151, 155, 156, 157, 162], "reconstitut": [4, 13, 132], "reconstruct_inst": [4, 16], "1129": 4, "__set_composite_values__": 4, "1132": 4, "get_histori": [4, 5, 6, 8, 12, 17, 21, 123, 133, 140, 145, 146], "1151": 4, "get_instance_dict": [4, 116], "1150": 4, "echo_uow": [4, 5, 17], "kwaarg": 4, "1153": 4, "1068": [4, 8, 9, 10, 20], "and_": [4, 6, 7, 8, 9, 13, 15, 19, 20, 42, 50, 54, 56, 57, 68, 70, 72, 83, 88, 98, 122, 123, 124, 128, 130, 137, 138, 151, 155, 163], "or_": [4, 6, 7, 8, 9, 13, 19, 20, 42, 50, 56, 57, 72, 113, 122, 128, 151, 155], "798": 4, "1160": 4, "sorted_t": [4, 5, 7, 9, 12, 17, 32, 34, 41, 49, 52, 74], "table_iter": [4, 5, 17], "sort_tabl": [4, 7, 12, 34, 49, 53], "1033": 4, "msinteg": 4, "msbiginteg": 4, "mssmallinteg": 4, "msyear": 4, "display_width": [4, 18, 20, 52, 58, 65], "utc_timestamp": [4, 10, 11, 35], "1161": 4, "rational": [4, 5, 9, 11, 12, 13, 16, 17, 18, 19, 20, 21, 26, 31, 33, 40, 47, 48, 54, 56, 62, 65, 70, 71, 87, 123, 132, 135, 138, 146, 149, 150, 151], "tinyurl": 4, "6nm2ne": 4, "autoexpir": [4, 16], "expire_on_commit": [4, 6, 70, 76, 90, 102, 130, 146, 147, 152, 162, 163], "_enable_transaction_account": [4, 13], "mainten": [4, 13, 18, 19, 20, 21, 25, 49], "include_properti": [4, 5, 6, 132, 133], "after_attach": [4, 7, 22, 97], "reassign": [4, 7, 8], "base_id": 4, "subbas": 4, "submapp": 4, "unwork": 4, "1111": 4, "dev": [4, 6, 7, 13, 20, 26, 49, 65, 71, 98], "unsav": 4, "shown": [4, 6, 7, 10, 22, 26, 37, 54, 57, 66, 67, 70, 124, 150, 155, 161, 162], "demand": [4, 13, 25, 26, 31, 67, 101, 102, 155], "1110": 4, "870": 4, "proceed": [4, 13, 25, 35, 39, 64, 71, 97, 129, 139, 146, 147, 162, 163], "887": 4, "1082": 4, "allow_column_overrid": 4, "misunderstood": [4, 20], "Its": [4, 16, 23, 31, 41, 48, 49, 82, 102, 140], "__str__": [4, 11, 13, 37, 48, 113], "1066": 4, "1075": 4, "arg1": [4, 30], "arg2": [4, 30], "kwarg1": 4, "1096": 4, "str": [4, 5, 7, 8, 9, 10, 11, 12, 13, 16, 17, 22, 25, 30, 31, 32, 33, 37, 40, 43, 48, 49, 54, 56, 57, 59, 68, 76, 78, 91, 103, 118, 123, 151], "somedatetim": 4, "fraction": [4, 7, 8, 9, 11, 12, 16, 31, 59, 65, 66], "datetimemixin": [4, 16], "__legacy_microseconds__": [4, 5, 16, 17], "sldatetim": 4, "Then": [4, 15, 22, 31, 68, 78, 80, 88, 98, 101, 126, 139, 150, 151, 152, 153], "1090": 4, "encourag": [4, 5, 8, 10, 13, 21, 24, 25, 31, 59, 66, 67, 78, 97, 104, 114, 148, 151], "1199": 4, "939": 4, "_sa_sess": 4, "classstat": 4, "classmanag": [4, 8, 97, 100, 116, 123, 132], "__sa_instrumentation_manager__": [4, 116], "_sa_session_id": 4, "_prepare_instrument": [4, 16], "prepare_instrument": [4, 16, 87, 142], "exc": [4, 5, 6, 7, 8, 9, 12, 16, 18, 21, 22, 24, 25, 26, 31, 32, 40, 41, 47, 51, 70, 76, 94, 99, 121, 124, 132, 137, 146, 149, 150, 162, 163], "concurrentmodificationerror": [4, 5, 16, 99, 100], "unmappedcolumnerror": [4, 5, 6, 16, 99, 100], "transit": [4, 9, 10, 13, 20, 24, 25, 26, 45, 48, 80, 97, 127, 148, 149, 160], "sadeprecationwarn": [4, 16, 20, 26, 29, 41], "assertionerror": [4, 13, 16, 68, 129], "elig": [4, 54, 80], "instrument_class": [4, 9, 97, 123], "init_inst": 4, "init_fail": 4, "2012": [5, 6, 7, 9, 12, 13, 17, 18, 19, 20, 24, 56, 63, 64, 98], "importlat": [5, 6], "__import__": [5, 6, 11, 48], "done": [5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 21, 22, 23, 25, 26, 49, 51, 57, 62, 70, 80, 87, 90, 97, 102, 121, 146, 147, 152, 155, 157, 161, 162, 163], "2279": [5, 6], "2310": [5, 6], "2297": [5, 6], "2197": [5, 6], "illeg": [5, 6, 12, 19, 23], "2228": [5, 6], "inh": [5, 6, 7, 8, 9, 10], "2234": [5, 6], "2287": [5, 6], "consult": [5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 24, 31, 32, 33, 37, 40, 48, 49, 56, 65, 66, 67, 70, 76, 81, 87, 90, 112, 116, 117, 127, 136, 138, 146, 147, 163], "2215": [5, 6], "blow": [5, 6, 7, 21], "joinedload": [5, 6, 7, 8, 9, 11, 12, 13, 20, 22, 24, 25, 26, 72, 75, 76, 98, 122, 123, 126, 127, 128, 137, 140, 163], "2188": [5, 6], "2207": [5, 6], "2199": [5, 6], "1776": [5, 6], "dictlik": [5, 6, 9, 12, 98], "2266": [5, 6], "2317": [5, 6], "with_only_column": [5, 6, 13, 25, 54, 128, 137], "2270": [5, 6], "2141": [5, 6], "2291": [5, 6, 7, 8], "oursql": [5, 6, 13], "neutral": [5, 6, 31, 36, 48, 56, 57, 119], "symbol": [5, 6, 7, 8, 9, 10, 11, 12, 13, 23, 31, 32, 33, 37, 41, 48, 49, 54, 56, 58, 59, 61, 66, 67, 68, 78, 85, 97, 101, 113, 123, 146], "xa": [5, 6, 31], "2186": [5, 6], "charset": [5, 6, 7, 8, 9, 11, 12, 37, 52, 59, 64], "2225": [5, 6], "2269": [5, 6], "ora": [5, 6, 7, 8], "00028": [5, 6], "_error": [5, 6], "2200": [5, 6], "2220": [5, 6], "2212": [5, 6], "2011": [5, 6, 18, 68], "2144": [5, 6], "non_primari": [5, 6, 24, 131, 132], "_identity_class": [5, 6], "2151": [5, 6], "2148": [5, 6], "syncrul": [5, 6], "q": [5, 6, 13, 15, 19, 20, 21, 22, 23, 24, 25, 26, 31, 54, 57, 64, 67, 77, 78, 80, 88, 98, 104, 113, 115, 122, 128, 130, 135, 137, 140, 147, 151], "2163": [5, 6], "2149": [5, 6], "comprehens": [5, 8, 9, 11, 12, 13, 18, 31, 34, 40, 53, 65, 70, 74, 82, 98, 113, 123, 129, 136, 141, 148], "solut": [5, 7, 8, 11, 17, 20, 21, 23, 24, 25, 66, 70, 74, 75, 78, 81, 96, 103, 117, 124, 149], "2153": [5, 6], "unescap": [5, 6, 37], "2171": [5, 6], "2170": [5, 6], "becam": [5, 6, 10, 11, 18, 21, 24, 25, 26, 57, 135, 148, 155], "2182": [5, 6], "coerc": [5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 23, 24, 37, 51, 56, 58, 59, 60, 65, 66, 67, 78, 113, 136, 137], "2178": [5, 6], "fetchedvalu": [5, 6, 7, 10, 16, 22, 35, 40, 49, 53, 65, 136, 152], "server_onupd": [5, 6, 7, 35, 49, 65, 133, 136], "2147": [5, 6], "2167": [5, 6], "2175": [5, 6], "2169": [5, 6], "datetime2": [5, 9, 64], "2159": 5, "2087": [5, 6], "2030": [5, 6], "2019": [5, 6, 11, 12, 25], "middl": [5, 6, 7, 9, 13, 18, 22, 49, 51, 56, 59, 80, 101, 102, 119, 123, 124], "strang": [5, 6, 90], "2038": [5, 6], "1995": [5, 6], "unusu": [5, 6, 8, 9, 11, 12, 13, 18, 19, 20, 21, 23, 25, 26, 33, 48, 57, 59, 66, 78, 104, 147], "2046": [5, 6], "overlap": [5, 6, 9, 12, 13, 22, 23, 25, 26, 57, 67, 68, 85, 90, 123, 140, 142, 146, 151], "2098": [5, 6], "reword": [5, 6], "supertyp": [5, 6, 13], "2063": [5, 6], "richard": [5, 6], "murri": [5, 6], "2123": [5, 6], "2130": [5, 6], "beaker": [5, 6, 7, 19], "query_cal": [5, 6], "2090": [5, 6], "jython": [5, 7, 8, 9, 13, 17], "jaimi": 5, "azl": 5, "2102": 5, "2028": [5, 6], "2023": [5, 6, 13, 28], "_bindparamclaus": [5, 6, 7], "2042": [5, 6], "returns_row": [5, 6, 31], "is_insert": [5, 6, 31, 146], "2089": [5, 6], "2116": [5, 6], "implicit_return": [5, 6, 12, 13, 17, 37, 48, 49, 54, 64, 66, 67], "1083": [5, 6], "libpq": [5, 6, 7, 12, 13, 67], "2044": [5, 6], "reserved_word": [5, 6, 12], "2092": [5, 6], "vari": [5, 6, 12, 13, 17, 25, 31, 32, 36, 37, 40, 43, 48, 49, 56, 57, 64, 65, 67, 70, 98, 101, 123, 134, 149, 151], "2073": [5, 6], "mysqldb": [5, 6, 7, 8, 9, 11, 13, 18, 21, 37, 51, 71, 80, 98], "2047": [5, 6], "2115": [5, 6], "inspector": [5, 6, 7, 8, 9, 10, 11, 12, 13, 21, 22, 23, 24, 31, 33, 40, 45, 47, 48, 49, 53, 64, 65, 66, 67, 70, 101, 103, 133], "sql_modul": [5, 6], "4000": [5, 6, 64], "2071": [5, 6], "talk": [5, 6, 21, 37, 75, 77, 80, 90, 134, 147, 149, 151, 161], "2100": [5, 6], "use_binds_for_limit": [5, 6, 13, 66], "2083": [5, 6], "horizontal_shard": [5, 6, 7, 112], "2050": [5, 6], "classproperti": [5, 6], "declared_attr": [5, 6, 7, 9, 10, 11, 13, 18, 25, 26, 91, 92, 94, 96, 105, 107, 121, 131, 132], "2061": [5, 6], "hashabl": [5, 6, 7, 8, 9, 10, 13, 22, 33, 58, 59, 60, 61, 67, 90], "mistaken": [5, 6, 12], "2091": [5, 6], "2029": [5, 6], "unwarr": 5, "2013": [5, 6, 7, 8, 13, 19, 20, 25, 67], "slate": 5, "1997": 5, "active_histori": [5, 12, 13, 24, 88, 90, 97, 102, 123, 133, 140, 146], "1976": 5, "2002": [5, 6], "1987": 5, "innerjoin": [5, 8, 9, 11, 20, 122, 123, 128, 137, 140, 163], "1954": 5, "subqueryload": [5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 23, 25, 72, 76, 98, 122, 126, 127, 128, 137, 146, 151], "1964": 5, "indexerror": [5, 7, 8, 9, 10, 13, 117, 119], "1968": 5, "1971": 5, "1961": 5, "1977": 5, "1992": 5, "verbiag": [5, 9, 24], "suggest": [5, 8, 9, 11, 12, 13, 17, 18, 20, 21, 26, 31, 33, 57, 58, 64, 70, 76, 78, 90, 124, 140, 146], "1978": 5, "registr": [5, 6, 7, 8, 10, 12, 19, 29, 97], "1871": 5, "1998": 5, "contextmanag": [5, 7, 13, 26, 31, 76, 150], "2004": 5, "1984": 5, "1967": 5, "naiv": [5, 13, 60, 78, 98, 104], "_create_rul": [5, 32], "2000": [5, 6, 7, 8, 10, 13, 25, 64, 126], "pg8000": [5, 6, 8, 9, 11, 12, 13, 17, 37, 40], "1955": 5, "as_uuid": [5, 8, 9, 13, 67], "uuid": [5, 6, 8, 9, 11, 13, 32, 33, 67, 78, 152], "1956": 5, "1989": 5, "zxjdbc": [5, 6, 13, 17], "buildbot": 5, "sorri": 5, "1960": 5, "1851": 5, "theme": [5, 11, 17, 34, 57], "unfortun": [5, 8, 9, 13, 16, 19, 21, 23, 25, 68], "characterist": [5, 13, 17, 64, 66, 67, 80, 128, 150, 151], "nls_lang": [5, 66], "1953": 5, "inf": [5, 11, 13], "1972": 5, "map_to": 5, "master": [5, 12], "1975": 5, "with_label": [5, 7, 13, 54, 137], "immediateload": [5, 13, 25, 127, 128, 137], "offlin": [5, 6, 43, 49, 74, 146], "1914": 5, "with_ent": [5, 13, 128, 137], "ent": 5, "1920": 5, "1918": 5, "namedtupl": [5, 7, 13, 21, 25, 31, 37], "1925": 5, "beef": 5, "misnom": 5, "trade": [5, 119], "1935": 5, "1910": 5, "load_on_pend": [5, 6, 7, 22, 77, 123, 140, 146], "cascade_backref": [5, 13, 70, 83, 85, 102, 123, 140, 146, 149], "ones": [5, 6, 7, 9, 11, 12, 13, 17, 18, 20, 24, 31, 33, 51, 52, 71, 97, 128, 135, 140, 146, 148, 161], "suck": 5, "passive_upd": [5, 7, 12, 17, 66, 123, 132, 140, 141], "1924": 5, "cascade_iter": [5, 123, 131, 132], "cut": [5, 13, 18, 23, 31, 32, 43, 49, 54, 56, 61, 71], "1932": 5, "emphas": [5, 12, 26, 31, 157], "1936": 5, "use_native_unicod": [5, 9, 13, 17, 67], "1899": 5, "unintent": 5, "type_coerc": [5, 7, 8, 10, 12, 13, 33, 42, 49, 56, 57, 59, 78], "1862": 5, "singleton": [5, 9, 13, 52], "1907": 5, "as_tupl": [5, 22, 33, 59, 67], "1933": 5, "taavi": 5, "burn": 5, "1940": 5, "1946": 5, "1943": 5, "comma": [5, 6, 7, 9, 11, 13, 17, 25, 49, 56, 57, 67, 80, 101, 123, 137, 140, 151, 155], "1952": 5, "1878": 5, "nosesqlalchemyplugin": 5, "sqlalchemy_nos": 5, "nosetest": [5, 6, 18], "1922": 5, "marker": [5, 13, 26, 31, 32, 35, 39, 49, 54, 66, 70, 90, 97, 149], "1915": 5, "1930": 5, "1931": 5, "oystein": 5, "haaland": 5, "florian": 5, "apollon": 5, "1906": 5, "1890": 5, "staledataerror": [5, 6, 18, 99, 100, 132, 152], "revis": [5, 7, 8, 9, 10, 11, 12, 13, 19, 24, 25, 32, 136, 150], "forese": [5, 7, 17, 18], "1891": 5, "stick": [5, 7, 8, 10, 11, 52, 67, 77, 154], "disambigu": [5, 13, 18, 19, 21, 24, 26, 54, 75, 84, 135, 137], "1896": [5, 6, 18], "prohibit": [5, 64, 68], "make_transi": [5, 7, 8, 9, 17, 21, 145, 146], "mention": [5, 8, 9, 13, 18, 20, 25, 26, 31, 32, 37, 39, 45, 49, 55, 57, 59, 67, 78, 80, 84, 87, 136, 146, 155, 156, 157, 161, 162, 163], "ml": 5, "1877": 5, "o2m": [5, 8, 11], "1856": 5, "1857": 5, "1863": 5, "enforc": [5, 6, 9, 10, 11, 12, 18, 19, 32, 45, 48, 57, 58, 65, 67, 70, 79, 84, 85, 132, 140, 141, 147, 152], "1864": 5, "1852": 5, "unmappedinstanceerror": [5, 13, 99, 100, 132, 146], "unmap": [5, 7, 8, 11, 12, 13, 97, 121, 132, 137], "1881": 5, "memoiz": [5, 6, 9, 11, 12, 13, 21, 24, 43, 49, 54, 56, 80, 102, 104, 113, 117, 123, 137], "90": 5, "runtim": [5, 7, 13, 19, 26, 27, 29, 31, 41, 46, 66, 70, 76, 81, 91, 96, 102, 118, 123, 131, 137, 147], "_get_col_to_prop": [5, 7], "get_property_by_column": [5, 7, 131, 132], "beaker_cach": [5, 17, 19], "caching_queri": [5, 19, 98], "project": [5, 6, 7, 8, 10, 12, 13, 18, 19, 20, 22, 24, 25, 26, 31, 49, 52, 62, 63, 64, 65, 67, 68, 69, 70, 78, 80, 82, 118, 123], "history_meta": [5, 6, 8, 9, 98], "recip": [5, 6, 7, 8, 10, 11, 12, 13, 16, 17, 22, 23, 24, 25, 31, 40, 48, 49, 51, 60, 67, 68, 71, 74, 76, 77, 78, 85, 87, 101, 104, 113, 115, 118, 120, 121, 124, 135, 136, 137, 148, 149, 150], "1887": 5, "exhaust": [5, 6, 9, 13, 21, 31, 45, 70, 74, 102], "resourceclosederror": [5, 13, 21, 22, 29, 31, 41, 102], "invalidrequesterror": [5, 6, 7, 8, 10, 11, 22, 23, 24, 25, 29, 31, 41, 57, 70, 87, 90, 94, 99, 102, 126, 128, 140, 146, 155, 163], "programmingerror": [5, 7, 8, 9, 29, 41, 64, 79], "downstream": 5, "1894": 5, "condition": [5, 11, 17, 19, 31, 34, 48, 49, 103, 121, 122, 152], "math": [5, 9, 10, 11, 13, 23, 123, 155], "fragment": [5, 9, 12, 31, 56, 77, 78, 98, 135, 155], "1855": 5, "64": [5, 6, 12, 19, 101, 123, 130], "255": [5, 12, 33, 58, 59, 76, 113, 151], "1412": 5, "1865": 5, "whenev": [5, 6, 10, 13, 19, 20, 21, 23, 24, 25, 31, 32, 35, 40, 43, 45, 48, 56, 64, 65, 67, 68, 90, 102, 117, 124, 128, 132, 133, 136, 139, 146, 147, 149, 151, 162], "proxy_set": [5, 56], "set_isolation_level": [5, 48, 67], "1879": 5, "kent": [5, 6, 11], "bower": [5, 6, 11], "1867": 5, "1868": 5, "displai": [5, 6, 9, 10, 12, 21, 25, 30, 31, 37, 54, 65, 71, 98, 119, 132, 155, 162, 163], "1904": 5, "divid": [5, 155], "1845": 5, "1853": 5, "_sa_class_manag": 5, "unmappedclasserror": [5, 6, 99, 100, 132], "1142": 5, "column_descript": [5, 8, 9, 13, 36, 54, 97, 104, 137, 138, 148], "gui": [5, 147], "_extract_error_cod": 5, "connector": [5, 7, 8, 9, 10, 11, 12, 13, 17, 24, 33, 71], "watch": [5, 57, 98, 149, 151, 163], "1848": 5, "handler": [5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 24, 25, 26, 31, 33, 34, 35, 37, 39, 40, 48, 49, 51, 52, 64, 66, 67, 87, 90, 97, 102, 104, 113, 117, 123, 137, 146, 147, 148], "isinst": [5, 8, 17, 20, 22, 23, 33, 40, 68, 88, 92, 102, 113, 117, 123, 136], "reopen": 5, "1840": 5, "clause_express": 5, "1824": 5, "motiv": [5, 18], "transfer": [5, 8, 10, 11, 12, 13, 51, 52, 54, 65, 83, 90, 128, 146, 149], "undefin": [5, 8, 9, 11, 13, 18, 31, 52, 84, 91, 132, 151], "registri": [5, 6, 7, 8, 9, 12, 13, 18, 19, 20, 21, 25, 26, 31, 32, 43, 49, 80, 84, 90, 91, 92, 94, 95, 96, 102, 107, 118, 121, 124, 130, 131, 132, 133, 134, 140, 146, 147, 151], "grow": [5, 7, 8, 9, 13, 21, 37, 38, 39, 51, 59, 67, 72, 163], "1822": 5, "annot": [5, 6, 7, 8, 9, 11, 12, 13, 19, 24, 26, 43, 49, 54, 80, 91, 118, 123, 124, 137, 138, 140, 142], "render_literal_valu": [5, 48], "backslash": [5, 7, 8, 11, 13, 23, 32, 56, 68], "1400": 5, "blew": 5, "native_enum": [5, 6, 8, 9, 12, 13, 17, 59, 67], "_constructor": [5, 6], "1829": 5, "standard_conforming_str": [5, 8, 13], "supports_native_enum": [5, 48], "1836": 5, "1826": 5, "no_backslash_escap": [5, 23], "server_version_info": [5, 7, 8, 11, 13, 48, 64], "freetd": [5, 6, 7, 9, 10, 11, 64], "1825": 5, "1819": 5, "rownum": [5, 9, 10, 13, 25, 66], "lossless": 5, "do_execut": [5, 40, 48, 71], "1823": 5, "1813": 5, "solv": [5, 7, 8, 12, 17, 18, 20, 21, 24, 26, 70, 77, 79, 80, 103, 104, 118, 122, 124, 128, 136, 137, 148, 163], "1751": 5, "1796": 5, "1805": 5, "1821": 5, "1838": 5, "1820": 5, "memoized_properti": 5, "memoized_instancemethod": [5, 42, 43, 49, 54, 56, 102, 123, 137], "inserted_primary_kei": [5, 6, 7, 9, 10, 13, 17, 21, 31, 35, 36, 48, 49, 57, 154, 162], "1830": 5, "improp": [5, 9], "1782": 5, "1807": 5, "1789": 5, "collectionadapt": [5, 87, 97, 142], "unseri": 5, "1802": 5, "1797": 5, "lrucach": [5, 6, 31], "high": [5, 9, 17, 21, 24, 27, 31, 39, 40, 45, 50, 57, 64, 67, 68, 76, 78, 90, 104, 121, 128, 137, 146, 151], "1793": 5, "_binari": [5, 7, 59, 64, 65, 66], "largebinari": [5, 9, 13, 17, 21, 24, 33, 59, 60, 64, 65, 66, 67, 68], "basestr": [5, 113], "add_is_dependent_on": [5, 34, 49], "othert": [5, 49, 52, 56, 65, 101, 123], "placement": [5, 6, 13, 35, 57, 117], "1801": 5, "1778": 5, "1571": 5, "wrapper": [5, 7, 8, 9, 11, 18, 22, 31, 33, 34, 40, 48, 51, 56, 68, 102, 117], "threw": [5, 11], "1786": 5, "_make_proxi": [5, 6], "__class__": [5, 6, 22], "1798": 5, "sysdat": [5, 35, 42, 44], "1794": 5, "1812": 5, "accuraci": [5, 9, 13, 22, 59, 76], "1775": 5, "1790": 5, "nclob": [5, 6, 7, 12, 24, 59, 66], "1808": 5, "oracle_x": 5, "1670": 5, "syntact": [5, 20, 25, 31, 54, 65, 68, 155, 161], "1815": 5, "1521": [5, 37, 66], "type_conv": [5, 62], "kinterbasdb": [5, 7, 8], "1779": 5, "1781": 5, "pool_logging_nam": [5, 37], "execution_opt": [5, 6, 7, 8, 9, 10, 11, 12, 13, 22, 23, 25, 26, 31, 37, 40, 45, 48, 54, 56, 62, 64, 65, 66, 67, 68, 70, 71, 90, 102, 104, 123, 136, 137, 138, 146, 147, 148, 149, 150, 163], "update_execution_opt": [5, 8, 9, 31, 102, 148], "1783": 5, "interdepend": 5, "relianc": [5, 6, 17, 25, 66, 68, 94], "constant": [5, 6, 7, 8, 9, 10, 11, 13, 23, 24, 30, 33, 35, 37, 42, 50, 56, 58, 59, 65, 66, 67, 97, 101, 113, 123, 132, 155], "flow": [5, 11, 17, 25, 51, 90, 97, 102, 104, 147], "linear": [5, 13, 24, 54], "1081": 5, "1742": 5, "written": [5, 6, 7, 8, 10, 13, 17, 20, 22, 26, 35, 44, 57, 65, 67, 77, 80, 87, 124, 137, 160], "guido": 5, "1764": 5, "1495": [5, 10], "reach": [5, 11, 13, 19, 22, 25, 31, 35, 37, 51, 77, 102, 132], "1754": 5, "1756": 5, "1761": 5, "getcommit": 5, "relationshipproperti": [5, 11, 12, 19, 22, 47, 75, 100, 123, 132, 140], "attribute_shard": [5, 15], "columnnam": [5, 7, 8, 10, 12, 22, 32, 49, 54, 56, 65, 103, 137], "1755": 5, "somejoin": 5, "1729": [5, 7], "1759": 5, "compiled_cach": [5, 6, 25, 31, 54, 56], "get_pk_constraint": [5, 7, 13, 23, 48, 52], "get_primary_kei": [5, 7, 13], "1769": 5, "1771": 5, "kumar": 5, "mcmillan": 5, "1071": 5, "_pgnumer": 5, "perfect": [5, 158], "fixed_char": [5, 12], "enable_rowcount": [5, 62], "1757": 5, "28": [5, 6, 7, 8, 10, 11, 21, 33, 54, 58, 59, 63, 68, 76], "subqueryload_al": [5, 13, 17, 20], "1675": 5, "joinedload_al": [5, 13, 19, 20], "with_hint": [5, 6, 7, 9, 12, 36, 54, 65, 67, 137], "921": 5, "joinpoint": [5, 137], "hint": [5, 6, 9, 10, 11, 12, 25, 33, 36, 40, 49, 54, 56, 65, 67, 94, 101, 118, 123, 137], "1747": 5, "877": 5, "997": 5, "1752": 5, "varchar2": [5, 6, 13, 24, 66], "all_tab_column": 5, "data_length": 5, "1744": 5, "unpredict": [5, 21], "zope": [5, 90, 148], "1746": 5, "classdecor": 5, "1749": 5, "algebra": [5, 17, 80], "capac": [5, 7, 48, 70], "1740": 5, "version_id_gener": [5, 8, 9, 20, 64, 92, 132, 152], "1692": 5, "1188": 5, "1674": 5, "nobodi": [5, 6, 20], "respond": [5, 11, 13, 30, 31, 51, 71, 163], "1719": 5, "1681": 5, "allow_partial_pk": [5, 7, 17, 77, 132], "1680": [5, 17], "1737": 5, "1731": 5, "conceal": [5, 7, 8, 10, 18, 54, 57, 98, 101], "bonu": [5, 8, 9, 20, 26, 151], "1688": 5, "1727": 5, "1706": 5, "1362": 5, "detachedinstanceerror": [5, 13, 24, 99, 100, 162], "unboundexecutionerror": [5, 29, 41, 90, 112, 146], "1676": 5, "grant": [5, 7, 10, 11, 13, 25, 28, 67, 85, 155], "estim": [5, 38, 70, 76], "gave": [5, 19, 83], "solid": [5, 87, 139], "datamemb": [5, 11, 18, 21, 48], "1689": 5, "r6711": 5, "1736": 5, "1735": 5, "relationcach": 5, "lookup": [5, 6, 7, 8, 10, 12, 13, 33, 49, 58, 59, 67, 68, 79, 101, 102, 104, 128, 134, 140, 146, 163], "fromcach": [5, 98], "1714": 5, "schematyp": [5, 7, 8, 9, 10, 12, 21, 22, 32, 40, 59, 60], "1694": 5, "1698": 5, "92": [5, 48], "model": [5, 8, 9, 10, 12, 13, 19, 20, 21, 22, 23, 24, 25, 31, 33, 51, 54, 56, 57, 67, 68, 70, 71, 78, 80, 82, 87, 96, 97, 98, 102, 103, 104, 115, 120, 124, 128, 136, 138, 141, 144, 151, 161], "area": [5, 8, 9, 10, 12, 13, 17, 18, 22, 25, 26, 32, 35, 37, 40, 48, 52, 57, 64, 65, 66, 68, 70, 76, 77, 78, 82, 90, 92, 118, 124, 128, 135, 136, 137, 138, 150, 151], "unicode_error": [5, 59, 64, 66], "librari": [5, 7, 8, 10, 11, 12, 13, 17, 19, 23, 25, 30, 34, 37, 38, 44, 56, 59, 61, 64, 65, 66, 67, 68, 70, 71, 76, 82, 87, 90, 91, 102, 118, 124, 132, 158, 160], "guarante": [5, 7, 8, 9, 12, 13, 17, 18, 21, 22, 23, 31, 33, 35, 37, 40, 41, 47, 48, 54, 57, 59, 71, 80, 90, 97, 104, 123, 128, 140, 141, 146, 150, 151, 156], "absolut": [5, 7, 13, 26, 37, 54, 68, 113, 128, 151, 152], "resort": [5, 59, 124, 130], "functionel": [5, 6, 7, 8, 9, 10, 12, 13, 21, 22, 24, 30, 31, 42, 44, 54, 56, 57, 67, 124, 155], "coerce_compared_valu": [5, 33, 58, 60], "1683": 5, "_gener": [5, 88], "benefit": [5, 13, 18, 19, 25, 31, 57, 97, 104, 116, 134, 136, 163], "undesir": [5, 11, 12, 13, 25, 59, 136, 147], "1579": 5, "1705": 5, "1717": 5, "1655": 5, "unsign": [5, 65], "1668": 5, "1496": 5, "1634": 5, "1580": 5, "native_datetim": [5, 68], "parse_decltyp": [5, 68], "current_d": [5, 42, 44, 68, 155], "1685": 5, "1710": 5, "with_unicod": [5, 9, 10, 11], "At": [5, 6, 13, 17, 20, 23, 24, 25, 26, 51, 68, 85, 90, 102, 103, 128, 146, 147, 148, 149, 150, 151, 155, 161, 162, 163], "xx": [5, 8, 17, 18, 26, 82], "scari": 5, "serious": [5, 70], "1712": 5, "651": 5, "py3k": [5, 6, 7, 8, 9, 10, 11, 12, 13, 17], "distribute_setup": 5, "reimplement": [5, 17], "modest": [5, 12, 31], "isenabledfor": [5, 17], "neglig": [5, 13, 24], "unicodetyp": 5, "logging_nam": [5, 13, 31, 37, 45, 51], "1555": 5, "visit_pool": 5, "on_connect": [5, 13, 48], "first_connect": [5, 7, 8, 40, 65], "assertionpool": [5, 6, 12, 38, 51], "1728": 5, "1673": 5, "declarativemeta": [5, 12, 13, 17, 25, 95, 96, 118, 132], "exclus": [5, 11, 12, 13, 16, 17, 26, 49, 56, 57, 64, 67, 68, 80, 87, 94, 118, 151], "dict_": [5, 17, 97, 123], "_as_declar": 5, "theori": [5, 8, 9, 21, 23, 68, 113, 128], "metaclass": [5, 6, 12, 13, 17, 25, 61, 84, 95, 96, 117, 118, 132, 134, 151], "chri": [5, 7, 8], "wither": [5, 7, 8], "strife": 5, "1707": 5, "1393": 5, "1732": 5, "1700": 5, "use_get": [5, 10, 17], "myrelatedclass": [5, 17], "whichev": [5, 17, 121], "1186": [5, 17], "1492": [5, 17], "1544": [5, 17], "lazyili": 5, "essenti": [5, 7, 8, 9, 10, 11, 13, 16, 20, 21, 22, 24, 25, 26, 31, 34, 35, 36, 37, 45, 56, 57, 65, 68, 70, 71, 84, 85, 87, 92, 98, 101, 102, 104, 106, 107, 113, 117, 123, 124, 131, 136, 137, 140, 141, 146, 147, 149, 150, 155, 156, 157, 159, 161, 162, 163], "showcas": 5, "1671": 5, "1531": 5, "1643": 5, "1633": 5, "distinctli": [5, 7, 18, 21, 22, 67, 75, 94, 103, 131, 143], "1542": 5, "1537": [5, 17], "home": [5, 17, 26, 37, 65], "1135": 5, "1622": 5, "1415": 5, "instance_kei": [5, 17], "1052": [5, 17], "1339": 5, "grain": [5, 11, 12, 16, 17, 31, 40, 45, 53, 68, 97, 102, 137, 148], "_generate_backref": [5, 17], "1569": 5, "stream_result": [5, 9, 10, 13, 25, 38, 54, 65, 67, 137, 138], "iterate_inst": [5, 16, 17], "_get_join": [5, 17], "init_collect": [5, 9, 13, 17, 97, 145, 146], "minimum": [5, 11, 13, 23, 35, 65, 82, 128, 151, 155], "guesswork": [5, 18, 87], "1566": 5, "1665": [5, 17], "circumv": [5, 31, 36, 65, 98], "rout": [5, 13, 17, 21, 25, 37, 56, 77, 117, 127, 136, 148, 163], "1524": 5, "tuple_": [5, 7, 8, 13, 23, 24, 42, 44, 49, 50, 56, 57, 67, 101, 123, 151], "mismatch": [5, 7, 8, 9, 10, 11, 12, 13, 31, 59, 66, 118], "current_paramet": [5, 11, 23, 35, 48], "dbo": [5, 7, 8, 23, 49, 52, 64], "dbo_master_table_column": 5, "friendli": [5, 7, 10, 11, 12, 97], "1428": 5, "tablename_id": 5, "tablename_id_1": 5, "1628": 5, "postgres_return": 5, "firebird_return": 5, "1131": 5, "1541": 5, "append_el": [5, 17], "1545": 5, "some_par": [5, 22], "_constraint": [5, 32], "1605": 5, "pypostgresql": [5, 7, 8, 67], "tiger": [5, 17, 19, 21, 22, 23, 24, 25, 31, 33, 37, 40, 49, 51, 52, 64, 65, 66, 67, 71, 78, 98, 102, 136, 146, 147, 150], "localhost": [5, 12, 17, 19, 21, 22, 24, 25, 31, 33, 37, 39, 40, 49, 51, 52, 65, 67, 71, 78, 80, 98, 102, 136, 146, 147, 150], "dummi": [5, 78], "postgresql_return": 5, "postgresql_wher": [5, 8, 12, 13, 32, 43, 48, 49, 67], "volum": [5, 9, 21], "1511": 5, "foobar": [5, 18, 21, 22, 25, 49, 56, 59, 101, 113, 123, 147], "1279": 5, "nonexist": [5, 6, 9, 12, 41], "col_id_seq": 5, "1516": 5, "devel": [5, 62], "5devel": 5, "1636": 5, "1619": 5, "_detect_xxx": 5, "1539": 5, "storage_format": [5, 7, 8, 9, 17, 19, 20, 68], "sqlite_autoincr": [5, 6, 10, 68], "1016": 5, "100": [5, 6, 21, 22, 24, 25, 31, 32, 49, 54, 56, 58, 59, 62, 64, 65, 67, 76, 78, 98, 101, 102, 104, 113, 123, 128, 132, 141, 148], "1467": 5, "justlik": 5, "885": 5, "biginteg": [5, 59, 60, 65, 68], "19": [5, 6, 7, 8, 10, 16, 21, 25, 56, 64, 65, 66, 68, 71, 76, 102, 107, 128, 132, 137], "1125": 5, "migration_06": 5, "jython2": 5, "isolation_level": [5, 6, 7, 8, 9, 10, 13, 22, 26, 31, 37, 48, 51, 54, 64, 65, 66, 67, 68, 71, 150], "443": 5, "entrypoint": [5, 7, 8, 10, 13, 17, 19, 31, 48, 51, 54, 101], "driven": [5, 16, 18, 22, 25, 34, 77, 84, 147], "tb_info": 5, "1630": 5, "ga\u00ebtan": 5, "menten": 5, "dramat": [5, 6, 7, 9, 17, 22, 24, 25, 26, 77, 80, 104, 151], "1586": 5, "loglevel": 5, "notset": 5, "1554": 5, "begin_prepar": 5, "release_savepoint": [5, 40], "acquir": [5, 6, 7, 10, 11, 13, 19, 23, 26, 31, 40, 43, 45, 49, 50, 52, 54, 56, 57, 66, 70, 80, 90, 97, 102, 123, 134, 146, 149, 150, 151, 152, 154, 157], "unicode_result": 5, "1621": 5, "default_schema_nam": [5, 10, 48, 52], "run_cal": [5, 13, 31, 45], "four": [5, 12, 17, 22, 31, 34, 40, 49, 52, 65, 68, 80, 82, 128, 134, 150], "inspect": [5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 23, 24, 25, 27, 29, 30, 31, 34, 36, 40, 41, 45, 46, 49, 51, 52, 53, 54, 56, 59, 61, 66, 67, 68, 75, 77, 80, 81, 87, 96, 97, 98, 101, 103, 104, 123, 127, 130, 132, 133, 137, 139, 146, 147, 148, 149, 151, 163], "room": [5, 17, 18, 26, 31, 67, 119], "expans": [5, 12, 65], "ordinari": [5, 12, 13, 22, 56, 65, 67, 68, 91, 137, 140, 146, 151, 155], "maximum": [5, 6, 7, 8, 12, 13, 17, 24, 31, 35, 37, 48, 51, 64, 65, 66, 67, 78, 155], "ddlelement": [5, 17, 18, 30, 31, 37, 40, 45, 53, 102], "createt": [5, 13, 17, 21, 22, 31, 34, 52, 53, 58, 74], "droptabl": [5, 13, 34, 53], "addconstraint": [5, 13, 17, 24, 34, 49, 53], "dropconstraint": [5, 34, 53], "createindex": [5, 7, 13, 34, 53, 66], "dropindex": [5, 6, 13, 34, 53], "createsequ": [5, 34, 35, 53], "dropsequ": [5, 34, 35, 53], "schema_item": 5, "plu": [5, 6, 7, 8, 9, 13, 17, 20, 25, 26, 35, 37, 43, 64, 70, 75, 80, 115, 128, 137, 163], "opportun": [5, 12, 90, 97, 102, 146], "userdefinedtyp": [5, 9, 13, 17, 33, 58, 59, 60, 67, 70, 76], "get_col_spec": [5, 9, 17, 33, 58, 59], "coltyp": [5, 17, 33, 48, 58, 59, 67], "decid": [5, 6, 8, 12, 18, 25, 31, 40, 67, 70, 85, 98, 124, 148, 151, 163], "get_rowcount": [5, 48], "hardwir": 5, "defaultrunn": 5, "fire_sequ": 5, "dispatch": [5, 6, 7, 17, 18, 39, 42, 61], "visit_": [5, 17, 48], "opnam": [5, 17], "funcnam": [5, 13, 17], "_fn": [5, 17], "straightforward": [5, 8, 10, 13, 17, 20, 21, 22, 31, 33, 59, 70, 83, 97, 129, 136, 140, 152], "_function": [5, 17], "_binaryexpress": [5, 17], "type_migration_guidelin": [5, 17], "txt": [5, 17, 130], "bytea": [5, 17, 33, 59, 67], "agnost": [5, 8, 9, 10, 11, 13, 20, 22, 25, 26, 31, 36, 40, 49, 53, 56, 58, 59, 60, 67, 101, 113, 123, 147, 152], "1664": 5, "vast": [5, 6, 9, 10, 13, 23, 25, 26, 31, 37, 48, 51, 59, 64, 65, 66, 70, 76, 77, 85, 103, 104, 107, 134, 136, 155], "increas": [5, 10, 11, 17, 25, 31, 71, 80], "as_decim": 5, "1109": 5, "day_precis": [5, 59, 66], "second_precis": [5, 59, 66], "smallint": [5, 6, 17, 49, 59, 60, 64, 65, 67, 68], "create_constraint": [5, 10, 11, 12, 13, 22, 25, 59, 64, 65], "1589": 5, "defeat": [5, 13, 31, 70, 138, 147], "get_search_list": 5, "game": [5, 98, 136], "paradigm": [5, 6, 13, 24, 26, 46, 57, 82, 113, 146, 161], "association_proxi": [5, 13, 20, 21, 23, 24, 101, 113, 123], "lazy_collect": 5, "value_attr": [5, 101], "fourth": 5, "1259": 5, "1372": 5, "setslic": [6, 8], "2807": [6, 8], "baseclass": [6, 15, 21], "tend": [6, 7, 12, 19, 21, 23, 26, 31, 49, 56, 71, 101, 113, 123, 135, 137, 151, 155, 163], "2699": [6, 10, 11], "2689": 6, "2674": [6, 7], "question": [6, 7, 8, 11, 13, 18, 23, 25, 27, 31, 37, 70, 81, 84, 136, 138, 145, 151, 152, 157], "make_url": [6, 8, 13, 25, 37, 38], "ipv6": [6, 8], "surround": [6, 7, 8, 9, 12, 13, 21, 31, 33, 49, 59, 65, 90, 91, 102, 118, 146], "bracket": [6, 7, 8, 9, 11, 12, 13, 23, 25, 31, 59, 64, 67], "2851": [6, 8], "cte": [6, 8, 9, 10, 11, 12, 13, 20, 42, 46, 54, 56, 137, 138], "2801": [6, 8], "2783": [6, 8], "2784": [6, 8], "tradit": [6, 7, 8, 22, 25, 27, 36, 56, 70, 84, 90, 102, 103, 104, 120, 131, 136, 141, 146, 156, 161], "gunnlaugur": [6, 7, 8, 9], "\u00fe\u00f3r": [6, 7, 8, 9], "briem": [6, 7, 8, 9], "2676": 6, "hanno": [6, 8, 9, 10], "schlicht": [6, 8, 9, 10], "2791": [6, 8], "test_execut": [6, 7], "linux": [6, 7, 25, 64], "2669": [6, 7], "41": [6, 48], "2650": [6, 7], "merge_result": [6, 7, 100, 123, 137, 149], "2640": [6, 7], "mutablecomposit": [6, 7, 8, 9, 12, 13, 88, 117], "mutablebas": [6, 7, 9, 117], "intent": [6, 7, 9, 17, 19, 20, 21, 22, 25, 31, 64, 65, 68, 70, 75, 130, 134, 155, 156, 157], "brief": [6, 7, 54, 81, 123, 140, 151, 160], "2624": [6, 7], "2583": 6, "2604": [6, 7], "repr": [6, 7, 8, 10, 12, 22, 37, 43, 56, 78, 101], "alemb": [6, 8, 9, 11, 12, 13, 20, 21, 23, 32, 34, 49, 52, 58, 67, 74, 96, 161], "2584": 6, "2594": [6, 7], "2643": [6, 7], "server_default": [6, 7, 9, 10, 12, 16, 21, 30, 31, 35, 40, 49, 52, 58, 59, 64, 65, 102, 133, 136, 152], "whatev": [6, 7, 16, 17, 20, 22, 33, 35, 37, 49, 54, 57, 59, 65, 67, 75, 80, 112, 132, 151, 154, 155], "especi": [6, 7, 11, 12, 13, 20, 26, 31, 56, 57, 65, 67, 70, 72, 76, 90, 101, 121, 124, 128, 135, 136, 147, 160], "arrang": [6, 7, 8, 13, 24, 70, 84, 90, 140], "2631": [6, 7], "gae": [6, 7], "gaerdbm": [6, 7, 8, 9, 13], "rdbms_apiproxi": [6, 7], "rdbms_googleapi": [6, 7], "sean": [6, 7, 8, 9, 10, 11, 12], "lynch": [6, 7], "usernam": [6, 7, 8, 9, 10, 12, 13, 15, 20, 21, 31, 33, 36, 37, 49, 56, 57, 64, 65, 67, 68, 69, 104, 118, 141, 151, 154, 155, 156, 162], "2649": [6, 7], "raise_on_warn": [6, 7, 8, 9, 10], "2523": 6, "read_timeout": 6, "2554": 6, "backtick": [6, 7, 65], "2568": [6, 7], "2638": [6, 7], "2620": [6, 7], "henc": [6, 7, 8, 9, 21, 24, 51, 76, 104, 154, 162], "subject": [6, 7, 8, 9, 10, 12, 13, 16, 17, 23, 25, 26, 28, 31, 32, 34, 35, 36, 37, 41, 47, 49, 50, 51, 54, 56, 59, 61, 65, 66, 67, 68, 71, 74, 76, 77, 84, 85, 90, 97, 102, 124, 128, 132, 133, 134, 136, 146, 147, 149, 152, 155, 157, 163], "observ": [6, 7, 8, 9, 10, 12, 13, 17, 24, 25, 31, 32, 40, 57, 65, 66, 68, 70, 72, 76, 96, 97, 104, 137, 147, 148, 155, 161, 162, 163], "2611": [6, 7], "exclude_setinputs": [6, 7, 11, 23, 24], "2561": [6, 7], "01": [6, 20, 25, 61], "abstractconcretebas": [6, 8, 9, 10, 11, 12, 21, 25, 107, 121], "concretebas": [6, 8, 12, 13, 25, 107, 121], "classic": [6, 9, 11, 13, 16, 20, 24, 25, 26, 61, 88, 95, 98, 101, 117, 122, 124, 126, 129, 131, 132, 134, 140, 161], "2539": 6, "after_flush": [6, 12, 16, 97, 145], "after_flush_postexec": [6, 16, 97, 145], "2566": [6, 7], "2516": 6, "wait": [6, 7, 8, 12, 13, 24, 25, 26, 37, 51, 70, 102, 107], "timeout": [6, 7, 8, 9, 12, 13, 24, 31, 37, 51, 68, 71, 146], "indefinit": [6, 13, 20, 147], "notifi": [6, 12, 13, 117, 148], "waiter": [6, 7, 8, 102], "2522": [6, 7, 8], "absenc": [6, 13, 19, 20, 26, 30, 49, 118, 128, 147], "2529": 6, "cextens": [6, 8, 17, 22, 82], "2553": 6, "autogener": [6, 8, 9, 11, 13, 23, 32, 58], "2571": 6, "partition_bi": [6, 18, 44, 56, 124, 155], "2574": 6, "2521": 6, "intuit": [6, 13, 18, 19, 22, 24, 25, 53, 77], "loosen": [6, 7, 9, 68], "2512": 6, "2518": 6, "interfer": [6, 8, 9, 10, 11, 12, 13, 21, 24, 25, 33, 57, 68, 70, 76, 97, 122, 155], "2552": 6, "mytabl": [6, 15, 16, 17, 18, 19, 20, 22, 23, 25, 30, 31, 32, 33, 34, 35, 36, 49, 52, 54, 56, 59, 64, 65, 66, 67, 74, 96, 107, 117, 118, 123, 136, 137], "some_stat": [6, 26], "instat": 6, "2558": 6, "is_": [6, 7, 9, 11, 21, 49, 50, 56, 57, 101, 123, 151], "isnot": [6, 13, 49, 56, 101, 123], "columnoper": [6, 7, 8, 9, 10, 11, 12, 13, 19, 20, 21, 22, 23, 24, 25, 33, 42, 49, 50, 56, 57, 58, 59, 68, 78, 101, 104, 113, 123, 124, 139, 151], "2544": 6, "2531": 6, "termin": [6, 13, 19, 20, 64], "2570": 6, "mysqlconnector": [6, 7, 8, 9, 21, 65], "client": [6, 9, 11, 12, 13, 22, 31, 37, 40, 48, 49, 52, 53, 57, 64, 65, 67, 71, 80, 128, 138, 145], "david": [6, 8, 9, 10, 11], "mcneli": 6, "mitchel": 6, "foreign_key_list": [6, 161], "pragma": [6, 10, 12, 13, 21, 31, 33, 49, 65, 68, 139, 141, 161], "deliv": [6, 9, 11, 12, 13, 20, 22, 23, 24, 25, 26, 31, 37, 44, 47, 49, 51, 54, 56, 57, 59, 65, 66, 67, 70, 71, 92, 95, 102, 113, 117, 118, 127, 134, 136, 138, 147, 148, 155, 157], "2265": 6, "sayap": 6, "2538": 6, "2545": 6, "incur": [6, 7, 8, 13, 17, 20, 22, 31, 54, 59, 66, 70, 77, 78, 128, 140, 163], "invoc": [6, 9, 10, 13, 17, 21, 25, 31, 36, 39, 40, 48, 56, 57, 58, 64, 67, 78, 97, 102, 104, 132, 136, 137, 148, 155], "2480": 6, "1892": [6, 8, 9, 18], "2491": 6, "2508": 6, "2497": 6, "refcount": 6, "promin": [6, 7, 11, 12, 13, 25, 67, 82, 103, 151, 155, 163], "2489": 6, "2503": 6, "2499": 6, "btbuilder": 6, "2490": 6, "2482": 6, "2510": 6, "googl": [6, 7, 8, 9, 16, 63, 128, 151], "richi": 6, "foreman": 6, "2484": 6, "2483": 6, "prefix_with": [6, 7, 18, 19, 30, 36, 54, 65, 137], "diana": [6, 7, 9, 10, 11], "clark": [6, 7, 9, 10, 11, 12], "2443": 6, "include_remov": [6, 129], "is_remov": [6, 129], "former": [6, 7, 8, 9, 10, 13, 16, 18, 25, 26, 35, 56, 61, 63, 64, 117, 123, 132, 133, 137, 138], "2477": 6, "2409": 6, "2449": 6, "2453": 6, "dairiki": [6, 8], "2454": 6, "unimpl": [6, 13], "somerelationship": [6, 7], "dbapi_error": [6, 8, 9, 13], "onward": [6, 35, 67, 68], "2474": 6, "read_nowait": 6, "2445": 6, "2473": 6, "2460": 6, "get_view_nam": [6, 9, 10, 13, 21, 22, 48, 52, 67, 102], "matthew": [6, 12], "turland": 6, "therefor": [6, 8, 9, 12, 13, 17, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 37, 48, 52, 53, 57, 59, 65, 66, 67, 68, 70, 77, 85, 94, 97, 102, 117, 119, 121, 124, 128, 136, 138, 146, 148, 150, 151, 155, 157], "2467": 6, "sqlite_raw_colnam": [6, 22, 68], "2475": 6, "extend_exist": [6, 8, 9, 10, 11, 13, 49], "2525": 6, "supports_unicode_bind": [6, 7], "2468": 6, "no_autoflush": [6, 10, 90, 102, 138, 146, 147], "1859": 6, "2400": [6, 76], "2424": 6, "deepli": [6, 7, 9, 10, 11, 16, 54, 70, 118], "2425": 6, "notabl": [6, 7, 8, 9, 13, 22, 25, 51, 70, 73, 90, 95, 128, 136, 137, 155], "2403": [6, 8], "attribute_mapped_collect": [6, 15, 87, 101], "internally_instru": [6, 87], "2406": 6, "2419": 6, "cascadeopt": [6, 9, 100, 123], "2417": 6, "2390": 6, "__get__": [6, 12, 24, 80, 123], "2352": 6, "_params_from_queri": [6, 18], "quick": [6, 8, 16, 17, 20, 25, 27, 30, 54, 57, 78, 81, 84, 90, 98, 103, 120, 129, 131, 134, 149, 151, 160, 161, 163], "no_paramet": [6, 31], "2407": 6, "pool_reset_on_return": [6, 37, 51, 64, 67], "reset_on_return": [6, 7, 8, 9, 12, 37, 40, 51, 71], "2378": 6, "mockconnect": 6, "dml": [6, 10, 13, 22, 23, 30, 31, 35, 42, 54, 70, 71, 76, 80, 82, 127, 136, 137, 147, 155, 157, 162], "2427": 6, "2398": 6, "2392": 6, "2413": 6, "exce": [6, 24], "2396": 6, "autoload_replac": [6, 7, 8, 49], "2402": 6, "2380": 6, "mysql_us": [6, 65], "2386": 6, "mu_mind": 6, "2394": 6, "2432": 6, "updatebas": [6, 8, 13, 30, 36, 42, 54, 65, 80, 136, 138, 147], "2430": 6, "coerce_to_decim": [6, 23, 66], "2399": 6, "2401": 6, "2435": 6, "class_registri": [6, 132], "contributor": [6, 19, 28], "2351": 6, "2356": 6, "restore_snapshot": 6, "2389": [6, 8, 9], "2345": 6, "xyzload_al": 6, "2370": 6, "2367": 6, "hybrid_properti": [6, 7, 10, 11, 12, 13, 21, 22, 23, 75, 101, 113, 115, 123, 129, 130, 132], "multiprocess": [6, 13, 31, 38, 72], "2371": 6, "delattr": 6, "hybrid": [6, 7, 8, 9, 10, 11, 12, 13, 16, 21, 25, 26, 27, 30, 81, 91, 92, 93, 114, 115, 120, 123, 124, 131, 132, 133, 134, 137, 143, 161], "fset": [6, 113], "fdel": [6, 113], "2353": 6, "enough": [6, 8, 9, 10, 13, 19, 20, 25, 26, 31, 37, 49, 57, 67, 68, 70, 83, 85, 113, 124, 137, 149, 155], "2362": 6, "2374": 6, "2313": 6, "large_collect": [6, 98], "2346": 6, "__reduce__": [6, 13], "statementerror": [6, 7, 8, 12, 22, 29, 31, 37, 40, 41, 70], "2382": 6, "2377": 6, "visit": [6, 9, 10, 11, 32, 43, 49, 54, 56, 61], "2384": 6, "compileerror": [6, 7, 8, 10, 12, 13, 21, 24, 25, 29, 31, 32, 35, 41, 54, 58, 64, 137], "problemat": [6, 7, 8, 16, 21, 25, 77, 119, 132, 162], "2361": 6, "2381": 6, "georg": [6, 12, 13], "reilli": [6, 16], "2376": 6, "2364": 6, "2368": 6, "sqlite_temp_mast": [6, 161], "digit": [6, 8, 13, 65, 66, 90, 137, 146], "2340": 6, "hasn": [6, 7, 8, 9, 19, 21, 52, 151], "flux": 6, "2347": 6, "03135": 6, "2388": 6, "2379": 6, "callback": [6, 102, 117], "exit": [6, 13, 22, 31, 71, 98, 150], "2383": 6, "py3k_warn": 6, "2348": 6, "2238": 6, "identityset": [6, 151, 162], "2301": 6, "ignore_fk": [6, 49, 141], "2315": 6, "face": [6, 10, 11, 13, 16, 22, 25, 31, 48, 56, 58, 59, 67, 80, 82, 92, 102, 134, 157], "tracker": [6, 11, 68, 117], "2264": 6, "passive_return_never_set": 6, "2304": 6, "regener": [6, 7, 8, 10, 11, 104], "2309": 6, "_parent": [6, 117, 146], "2308": 6, "2312": 6, "2316": 6, "2328": 6, "fayaz": 6, "yusuf": 6, "khan": 6, "2339": 6, "2325": 6, "userland": [6, 16, 97, 123, 129], "t1": [6, 19, 20, 22, 30, 40, 54, 67, 80, 92, 102, 137], "t2": [6, 19, 20, 22, 54, 67, 80], "1944": 6, "2166": 6, "python_typ": [6, 8, 9, 13, 58, 59, 60], "77": 6, "_from": 6, "world": [6, 8, 12, 22, 24, 25, 26, 150, 157], "wish": [6, 17, 21, 22, 23, 24, 25, 26, 31, 33, 34, 37, 48, 49, 51, 57, 58, 59, 64, 65, 66, 68, 80, 82, 94, 96, 102, 104, 122, 124, 137, 149, 151, 162], "2261": 6, "2319": 6, "1410": 6, "_type_affin": [6, 17], "get_table_nam": [6, 7, 9, 10, 12, 13, 19, 21, 24, 31, 45, 48, 49, 52, 66, 67, 70, 102], "2305": 6, "createschema": [6, 34, 53], "dropschema": [6, 34, 53], "has_schema": 6, "manlio": 6, "perillo": 6, "1679": 6, "create_typ": [6, 67], "2311": 6, "pymysql": [6, 7, 8, 9, 10, 11, 12, 13, 18, 22, 23, 24, 25, 31, 37, 51, 70, 71, 78], "822": 6, "nolock": [6, 68], "snapshot": [6, 11, 12, 13, 22, 23], "2336": 6, "_need_decimal_fix": 6, "2318": 6, "dark": [6, 17, 160], "incant": 6, "91": [6, 7], "2343": 6, "with_transform": [6, 113, 137], "line": [6, 9, 10, 11, 12, 13, 15, 16, 17, 18, 22, 23, 24, 25, 26, 30, 31, 33, 35, 37, 40, 49, 54, 57, 58, 59, 68, 98, 102, 104, 113, 122, 124, 137, 138, 139, 147, 151, 157], "gem": 6, "py3": [6, 8, 9], "brianrhud": 6, "irc": 6, "2298": 6, "after_soft_rollback": [6, 97, 148], "2241": 6, "adapt_on_nam": [6, 10, 11, 13, 122, 137], "expire_on_flush": [6, 133], "readonli": [6, 13, 31, 63, 67, 137], "fn": [6, 20, 39, 43, 44, 48, 49, 54, 56, 71, 87, 98, 102, 104, 123, 132, 137], "2237": 6, "interlink": 6, "sometim": [6, 7, 9, 11, 12, 13, 18, 37, 39, 50, 56, 57, 64, 66, 68, 70, 76, 78, 80, 85, 97, 124, 133, 136, 144, 155, 162], "road": [6, 98], "2282": 6, "teardown": [6, 13, 39, 146, 150], "2267": 6, "2253": 6, "reinstat": 6, "2248": 6, "dave": [6, 7, 12], "vitek": 6, "2247": 6, "2260": 6, "2196": 6, "mapperev": [6, 8, 9, 12, 18, 39, 92, 97, 132, 135, 136, 148], "after_configur": [6, 8, 92, 97, 107, 132], "theoret": [6, 8, 21, 22, 23, 25, 54, 77, 97], "session_kei": 6, "2281": 6, "__declare_last__": [6, 8, 9, 93, 107], "__abstract__": [6, 8, 9, 11, 19, 93, 95, 96, 107, 118, 121, 132, 136], "semi": [6, 7, 8, 9, 10, 11, 13, 17, 31, 40, 54, 116, 123, 131], "2239": 6, "2283": 6, "2280": 6, "flatten": [6, 8, 11, 20, 122], "2257": 6, "2254": 6, "compress": [6, 9, 10, 21, 24], "2243": 6, "sa_pool_kei": 6, "2286": 6, "2299": 6, "2284": 6, "nicer": 6, "2223": 6, "postgresql_us": [6, 9, 48, 67], "ryan": [6, 7, 8, 9], "p": [6, 9, 12, 13, 15, 16, 19, 22, 24, 51, 54, 61, 68, 76, 78, 84, 135, 137, 140, 155], "kelli": [6, 7, 8, 9], "2290": 6, "client_encod": [6, 21, 67], "set_client_encod": [6, 67], "1839": 6, "2256": 6, "atom": [6, 31, 65, 80, 136, 147], "search_path": [6, 8, 31, 49, 52], "2249": 6, "mysql_length": [6, 7, 8, 9, 65], "2293": 6, "valueerror": [6, 9, 10, 11, 97, 117, 119, 129], "character": 6, "crappi": 6, "osx": [6, 11, 64], "memoryerror": 6, "abound": 6, "2273": 6, "visit_binari": 6, "2277": [6, 7, 19], "2222": 6, "returningresultproxi": 6, "2272": 6, "polici": [6, 16, 62], "claim": [6, 13, 26, 28], "imho": 6, "2252": 6, "2258": 6, "focus": [6, 7, 8, 18, 24, 25, 34, 97, 98, 154, 162], "parti": [6, 8, 9, 10, 11, 12, 13, 19, 20, 21, 25, 27, 32, 37, 38, 43, 44, 47, 48, 49, 54, 56, 58, 59, 63, 64, 65, 67, 68, 70, 72, 76, 90, 91, 101, 102, 123, 151, 156, 158], "2262": [6, 19], "local_attr": [6, 101], "remote_attr": [6, 101], "2236": 6, "discern": [6, 9, 21], "misinterpret": [6, 8, 9, 12], "2275": 6, "unpopul": [6, 19], "matter": [6, 7, 9, 13, 15, 20, 21, 22, 23, 37, 56, 65, 66, 67, 68, 80, 128, 156, 163], "_with_invoke_all_eag": 6, "2213": 6, "multipli": [6, 13, 25, 76, 90, 112, 128, 146, 163], "2195": 6, "obvious": [6, 7, 31, 157], "2205": 6, "objectdeletederror": [6, 90, 99, 100, 132, 137, 146], "2191": 6, "2224": 6, "immut": [6, 13, 18, 26, 31, 33, 37, 49, 54, 56, 61, 82, 87, 97, 117, 123, 132], "stefano": 6, "fontanelli": 6, "2240": 6, "2190": 6, "_decl_class_registri": 6, "2194": 6, "cfg": [6, 13, 118], "urllib": [6, 25, 37, 65], "1682": 6, "dontwrapmixin": [6, 29, 41], "statementexcept": 6, "is_disconnect": [6, 7, 8, 12, 13, 22, 31, 40, 48, 51, 71], "connection_invalid": [6, 41, 51], "retryabl": 6, "01033": 6, "2201": 6, "with_vari": [6, 7, 8, 9, 12, 20, 24, 58, 59, 60, 64, 68], "variant": [6, 7, 8, 9, 10, 11, 12, 13, 20, 22, 25, 26, 31, 33, 35, 44, 49, 54, 57, 58, 59, 60, 64, 65, 77, 78, 84, 96, 98, 104, 113, 117, 121, 122, 124, 128, 136, 137, 146, 154, 155, 156, 161, 163], "2187": 6, "append_ddl_listen": 6, "unexpect": [6, 9, 10, 11, 12, 13, 18, 20, 21, 25, 40, 70, 76, 87, 99, 119, 149], "somecollect": 6, "2206": 6, "site": [6, 18, 68], "deviat": [6, 118], "2209": 6, "postgresql_op": [6, 48, 67], "filip": 6, "zyzniewski": 6, "2198": 6, "2189": 6, "easysoft": 6, "segfault": 6, "caught": [6, 8, 9, 12, 13, 18, 26, 31, 41, 85, 97, 150], "7511": 6, "vc": 6, "2184": 6, "1912": [6, 18], "2180": 6, "reflectt": [6, 8, 13, 52], "experi": [6, 9, 22, 31, 59, 158], "os": 6, "punt": 6, "2181": 6, "read_uncommit": [6, 68], "2173": 6, "7b4": [6, 18], "someopt": 6, "tailor": [6, 21, 23, 25, 36, 37, 49, 56, 57, 67, 87, 101, 123, 124, 129, 136, 162], "2069": 6, "2162": 6, "myself": 6, "2155": [6, 65], "unresolv": [6, 8, 9, 11, 12, 13, 21, 32, 65, 67, 68], "conserv": [6, 24, 30, 37, 58, 66, 70, 132], "fundament": [6, 12, 13, 16, 25, 26, 45, 49, 56, 57, 65, 66, 70, 105, 128, 147, 157, 161], "with_sess": [6, 104, 137], "2131": 6, "cast_nul": [6, 132], "1502": 6, "unord": 6, "ordereddict": [6, 87], "generic_associ": [6, 7, 8, 9], "layout": [6, 8, 13, 124], "That": [6, 7, 8, 9, 10, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 31, 32, 35, 40, 57, 59, 67, 68, 70, 75, 77, 85, 103, 118, 124, 130, 132, 135, 140, 141, 147, 148, 149, 151, 155, 157, 162], "t3": [6, 20], "procur": [6, 12, 25, 26, 31, 37, 45, 48, 51, 74, 90, 102, 146, 150], "2140": 6, "psycopg2_vers": 6, "overview": [6, 10, 13, 17, 25, 27, 31, 49, 54, 57, 58, 70, 76, 77, 80, 81, 83, 95, 107, 120, 123, 129, 131, 132, 137, 138, 139, 140, 148, 150, 151, 161], "migration_07": 6, "mutablemap": [6, 117], "2152": 6, "2143": 6, "changes_pre_06": 6, "changes_pre_05": 6, "branch": [6, 7, 9, 11, 12, 13, 31, 40, 45, 49, 51, 52, 132, 140], "unflush": [6, 138], "2122": 6, "2127": 6, "cpython": [6, 7, 8, 9, 12, 17, 18, 51, 68, 76, 82], "2129": 6, "2104": 6, "gather": [6, 12, 32, 98], "itertool": [6, 12, 21], "2134": 6, "2105": 6, "2117": 6, "keep_exist": [6, 49], "With": [6, 17, 18, 19, 21, 22, 23, 24, 25, 26, 31, 37, 44, 49, 56, 57, 59, 65, 66, 67, 68, 70, 71, 76, 80, 82, 84, 90, 92, 95, 96, 101, 113, 117, 118, 119, 121, 122, 123, 124, 130, 131, 133, 134, 136, 139, 144, 147, 148, 149, 151, 152, 155, 157, 161], "2109": 6, "2132": 6, "2081": 6, "listens_for": [6, 8, 19, 20, 22, 23, 31, 33, 37, 39, 40, 48, 49, 51, 52, 64, 65, 66, 67, 68, 71, 76, 87, 97, 102, 103, 104, 117, 128, 132, 133, 135, 137, 148, 149, 150], "2106": 6, "traceback": [6, 7, 17, 22, 25, 31, 33, 57, 58, 59, 68, 70, 71, 132, 151, 155, 162], "checkout": [6, 9, 11, 13, 17, 23, 26, 31, 37, 40, 41, 45, 51, 68], "2103": 6, "2118": 6, "gaynor": 6, "2093": [6, 18], "perhap": [6, 10, 18, 19, 20, 25, 30, 68, 78, 92, 124, 128, 138], "exceedingli": [6, 7, 18, 20], "inter": [6, 24, 65, 128, 132], "2082": 6, "dict_of_sets_with_default": [6, 98], "envelop": 6, "2097": 6, "2060": 6, "column_reflect": [6, 7, 8, 10, 13, 33, 40, 49, 52, 58, 103, 133], "2095": 6, "eventnam": [6, 49], "next_valu": [6, 12, 13, 35, 42, 44], "2085": 6, "2084": 6, "2053": 6, "2052": 6, "engineev": [6, 13, 18], "connectionev": [6, 7, 8, 9, 10, 13, 21, 22, 23, 31, 38, 39, 40, 45, 51, 76, 97], "strictli": [6, 8, 9, 12, 20, 25, 32, 67, 84, 97, 101, 103, 121, 130, 132, 136, 137, 138, 150, 161], "2059": 6, "2055": 6, "2064": 6, "2065": 6, "2058": 6, "2054": 6, "1902": [6, 18], "1926": [6, 18], "1949": [6, 18], "succinct": [6, 21, 24, 49, 56, 91, 101, 104, 114, 122, 123, 124, 157, 163], "onclaus": [6, 13, 20, 21, 49, 54, 70, 137, 138], "1923": [6, 18], "1903": [6, 18], "1980": [6, 18, 115], "1895": [6, 18], "2041": 6, "1973": [6, 18], "1876": [6, 18], "1942": [6, 18], "1875": [6, 18], "configure_mapp": [6, 8, 10, 11, 13, 22, 70, 97, 131, 132], "1966": [6, 18], "aliasedclass": [6, 7, 8, 9, 10, 11, 12, 18, 26, 47, 101, 113, 122, 123, 127, 132, 137, 138, 142], "2018": [6, 10, 11, 12, 18, 136], "2027": [6, 18], "particip": [6, 8, 9, 11, 13, 18, 23, 26, 30, 31, 32, 35, 43, 48, 49, 54, 56, 57, 65, 67, 68, 76, 80, 97, 112, 122, 123, 146, 147, 150, 155], "1996": [6, 18], "2031": 6, "endpoint": [6, 8, 11, 21, 30, 98, 101, 113, 157], "2032": [6, 18], "weak_instance_dict": 6, "1473": 6, "1069": [6, 18], "2049": 6, "_over": 6, "1844": [6, 18], "805": [6, 18], "distinctrow": 6, "1897": [6, 18], "1893": [6, 18], "1917": [6, 18], "1950": [6, 18, 98], "type_map": 6, "_type_map": 6, "1870": [6, 18], "1982": [6, 18], "asc": [6, 11, 12, 18, 20, 42, 49, 52, 56, 57, 101, 123, 155], "desc": [6, 7, 9, 11, 12, 18, 20, 22, 32, 42, 49, 52, 56, 57, 64, 65, 67, 84, 97, 101, 104, 123, 155], "nullsfirst": [6, 10, 12, 13, 18, 49, 56, 101, 123], "nullslast": [6, 10, 12, 13, 18, 49, 56, 101, 123], "723": [6, 18], "2001": [6, 18], "2020": [6, 12, 13, 18, 25, 26, 37, 71], "2021": [6, 12, 13, 18, 37, 56, 65, 68, 76], "meaning": [6, 7, 12, 13, 16, 18, 97, 146], "2015": [6, 8, 9, 11, 20, 21, 35], "2048": 6, "1921": [6, 18], "abspath": 6, "directori": [6, 13, 16, 18, 59, 64, 65, 67, 98], "rel": [6, 8, 9, 10, 11, 12, 13, 19, 20, 21, 24, 25, 26, 30, 36, 37, 45, 54, 56, 57, 58, 59, 61, 67, 68, 70, 76, 80, 85, 90, 98, 128, 130, 137, 146, 151, 155], "2036": [6, 18], "1991": 6, "1833": [6, 18], "interbas": [6, 62], "588": 6, "1885": 6, "juli": [7, 8, 9, 10, 11, 12, 13, 18], "3055": [7, 8, 9], "mask": [7, 8, 9, 65, 80], "3047": [7, 8, 9], "3124": [7, 8, 9], "mro": [7, 8, 9, 12], "3102": [7, 8, 9], "3044": [7, 8, 9], "3045": [7, 8, 9], "hstore": [7, 8, 9, 10, 13, 20, 56, 59, 115], "3053": [7, 8, 9], "unexpectedli": [7, 8, 9, 70, 76], "antti": [7, 8, 9], "haapala": [7, 8, 9], "3101": [7, 8, 9], "3085": [7, 8, 9], "key_block_s": [7, 8, 9, 65], "mcgivern": [7, 8, 9], "interject": [7, 8, 9], "py2k": [7, 8, 9, 10, 11, 13], "3091": [7, 8, 9], "abstract": [7, 8, 9, 10, 11, 13, 15, 16, 21, 31, 51, 57, 59, 80, 92, 94, 101, 107, 131, 134, 151, 157, 160], "3062": [7, 8, 9], "mutabledict": [7, 8, 9, 22, 23, 33, 59, 67, 115, 117], "setdefault": [7, 8, 9, 76, 87, 117], "3051": [7, 8, 9], "3093": [7, 8, 9], "thoma": [7, 8, 9, 10], "herv\u00e9": [7, 8, 9], "disable_sqlalchemy_cext": [7, 8, 22, 82], "2986": [7, 8], "3006": [7, 8], "2818": [7, 8], "2995": [7, 8], "2975": [7, 8], "heterogen": [7, 8, 22], "2977": [7, 8], "9": [7, 14, 19, 21, 22, 23, 24, 25, 26, 27, 31, 32, 36, 37, 39, 40, 43, 48, 49, 54, 56, 57, 59, 62, 63, 65, 66, 67, 68, 75, 92, 97, 98, 101, 104, 123, 124, 126, 128, 129, 132, 137, 140, 152, 157], "int2vector": [7, 8], "3000": [7, 8], "flag_modifi": [7, 8, 11, 23, 97, 117, 145, 146], "2997": [7, 8], "februari": [7, 8, 9, 10, 11, 12, 13, 118], "2951": [7, 8], "pullreq": [7, 8, 9], "kyle": [7, 8], "stark": [7, 8, 10, 11], "begun": [7, 8, 9, 25, 26, 31, 45, 51, 68, 77, 90, 97, 102, 146, 147, 150, 151], "2887": [7, 8], "2885": [7, 8], "2889": [7, 8], "2880": [7, 8], "2964": [7, 8], "2944": [7, 8], "__getitem__": [7, 8, 9, 13, 25, 56, 57, 155], "2957": [7, 8], "2896": [7, 8], "from_select": [7, 8, 9, 13, 20, 21, 22, 30, 36, 54, 154], "2895": [7, 8], "bindparamet": [7, 8, 10, 11, 12, 13, 22, 23, 25, 30, 31, 33, 40, 42, 48, 56, 58, 61, 66, 78], "2936": [7, 8], "redshift": [7, 8, 9, 13, 63], "refus": [7, 8, 9, 13, 18, 21, 22, 77], "hacki": [7, 8], "geert": [7, 8], "jm": [7, 8], "vanderkelen": [7, 8], "2941": [7, 8], "mysql_partition_bi": [7, 8], "mysql_partit": [7, 8], "marcu": [7, 8], "mccurdi": [7, 8], "2966": [7, 8], "character_set_nam": [7, 8], "2933": [7, 8], "cymysql": [7, 8], "_get_server_version_info": [7, 8], "_detect_charset": [7, 8], "hajim": [7, 8], "nakagami": [7, 8, 65], "roman": [7, 8, 10], "podolyaka": [7, 8], "peer": [7, 8], "john": [7, 8, 10, 11, 13, 31, 130], "anderson": [7, 8, 12], "treev": [7, 8], "jelbert": [7, 8], "2897": [7, 8], "rdb": [7, 8], "field_posit": [7, 8], "binary_typ": 7, "andrea": 7, "zeidler": 7, "2888": [7, 8], "decemb": [7, 8, 9, 11, 12, 13, 20], "2881": [7, 8], "monitor": [7, 8, 76], "abort": [7, 8, 40, 68, 77, 150], "notify_al": [7, 8], "slim": [7, 8, 21, 25], "stress": [7, 8, 13, 31], "stringif": [7, 8, 10, 12, 13, 20, 48, 56, 70, 78], "2871": [7, 8], "get_unique_constraint": [7, 8, 9, 11, 21, 23, 48, 49, 52, 65, 66, 67], "1443": [7, 8], "indkei": [7, 8], "2855": [7, 8], "derek": [7, 8], "harland": [7, 8], "02396": [7, 8], "idl": [7, 8, 13, 51, 65, 70, 71], "2864": [7, 8], "2870": [7, 8], "2869": [7, 8], "octob": [7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19], "distinct_target_kei": [7, 8, 20, 123, 140], "alexand": [7, 8], "koval": [7, 8], "2836": [7, 8, 20], "inher": [7, 8, 12, 59, 64, 66], "2813": [7, 8], "vladimir": [7, 8], "magamedov": [7, 8], "2779": 7, "2794": [7, 8], "2786": [7, 8], "network": [7, 8, 12, 64, 65, 71, 76, 102, 124, 163], "2778": [7, 8], "2773": [7, 8], "as_declar": [7, 8, 10, 13, 25, 105, 131, 132], "nifti": [7, 8], "discriminator_on_associ": [7, 8, 9, 98], "popular": [7, 8, 12, 13, 20, 24, 25, 26, 31, 59, 82, 90, 91, 97, 98, 148, 155, 161, 163], "forego": [7, 8, 9, 10, 13, 25, 84, 85, 90, 113, 146], "autoinc": [7, 8, 68], "patrick": [7, 8, 9, 12, 102, 138, 139, 154, 155, 156, 162, 163], "schmid": [7, 8], "asterisk": [7, 8, 13, 21, 122, 126], "2821": [7, 8], "2776": [7, 8], "2772": [7, 8], "722": [7, 8, 20, 76], "ins": [7, 8, 20, 34, 36, 54, 57, 87], "somemappedclass": [7, 8, 39, 123, 137, 146], "del_": [7, 8], "upd": [7, 8, 31, 36], "2849": [7, 8], "2842": [7, 8], "2825": [7, 8], "2742": [7, 8, 11], "2815": [7, 8], "2831": [7, 8], "2811": [7, 8], "notin_": [7, 8, 11, 23, 49, 56, 101, 123], "unsupportedcompilationerror": [7, 8, 12, 29, 41, 70, 78], "2780": [7, 8], "128": [7, 8, 12, 13, 66, 76], "2844": [7, 8], "enterprisedb": [7, 8], "schaefer": [7, 8], "2819": [7, 8], "2721": [7, 8], "mariadb": [7, 8, 10, 11, 12, 21, 23, 27, 31, 32, 35, 37, 49, 56, 57, 63, 101, 123, 136, 155], "2839": [7, 8], "2515": [7, 8, 9, 21], "practic": [7, 8, 9, 13, 16, 18, 25, 31, 33, 48, 49, 58, 66, 70, 76, 77, 80, 85, 87, 90, 98, 103, 128, 135, 137, 138, 147], "2781": [7, 8], "derr": [7, 8], "2853": [7, 8], "xmin": [7, 8, 20, 34, 152], "createcolumn": [7, 8, 34, 49, 53, 67], "select_entity_from": [7, 8, 10, 11, 12, 13, 20, 25, 137], "2736": [7, 8, 9, 20], "2750": [7, 8], "2759": [7, 8], "2754": [7, 8], "2755": [7, 8], "2730": [7, 8], "2682": [7, 9, 21], "2737": 7, "loos": 7, "2481": 7, "2718": 7, "2761": [7, 8], "meaningless": [7, 8, 20], "matt": [7, 8, 9, 11, 12], "chisholm": [7, 8, 9], "eeve": [7, 8], "2732": 7, "coerce_to_is_typ": [7, 8, 33], "2734": [7, 8], "2744": [7, 8], "satisfi": [7, 8, 10, 12, 18, 22, 34, 137], "compatibli": [7, 8, 9], "smart": [7, 8, 20, 70, 83, 124, 163], "maxim": [7, 8, 12], "correlate_except": [7, 8, 12, 13, 54, 57, 130, 155], "enter": [7, 8, 13, 15, 20, 48, 87, 102, 123, 148, 149], "2668": [7, 8, 19], "2746": [7, 8], "2738": [7, 8], "2728": [7, 8], "2726": [7, 8], "2072": [7, 8], "inject": [7, 8, 19, 25, 33, 37, 40, 59, 80, 128, 129, 155, 157], "2740": [7, 8], "2766": [7, 8], "2767": [7, 8], "dmitri": 7, "mugtasimov": 7, "2735": 7, "2704": [7, 8], "supplement": [7, 8, 26, 40], "2768": [7, 8], "rdbms_mysqldb": [7, 8], "brett": [7, 8], "slatkin": [7, 8], "2715": [7, 8], "opinion": [7, 8, 57, 151], "russel": [7, 8], "stuart": [7, 8], "2764": [7, 8], "2747": [7, 8], "fdb": [7, 8], "histor": [7, 8, 10, 11, 13, 19, 21, 22, 23, 24, 25, 49, 50, 51, 54, 59, 64, 65, 66, 68, 98, 104, 122, 132, 134, 150, 161], "concern": [7, 8, 9, 10, 12, 24, 26, 31, 51, 56, 57, 59, 64, 65, 70, 76, 128, 147, 150, 151], "2763": [7, 8, 20], "int64": [7, 8, 72], "2757": [7, 8], "asldevi": [7, 8], "april": [7, 9, 10, 11, 12, 13, 21], "2673": 7, "2698": 7, "decisionmak": [7, 13, 70], "farther": 7, "2714": [7, 9], "_sa_instance_st": [7, 149, 162], "2229": 7, "2710": 7, "safer": [7, 9, 78], "2708": 7, "2697": 7, "has_inherited_t": [7, 21, 25, 94, 105, 131, 132], "answer": [7, 23, 24, 77, 94, 136, 151], "2656": 7, "_key_from_queri": 7, "apply_label": [7, 13, 25, 54, 137], "bar_id": [7, 75], "foo_bar": 7, "2702": 7, "2691": 7, "exc_info": [7, 12, 71, 97], "coroutin": 7, "2703": 7, "memoryview": 7, "autorollback": [7, 10, 11], "2695": 7, "eli": [7, 12], "collin": [7, 12], "2712": 7, "dimens": [7, 10, 19, 22, 59, 67, 78], "2681": 7, "2680": 7, "ben": [7, 11], "trofatt": 7, "2663": 7, "v1": [7, 24, 31, 67, 76, 117], "dan": [7, 9], "ring": 7, "reject": [7, 10, 12, 13, 22, 25, 26, 54, 59, 64, 80, 118, 155], "harmless": [7, 11], "2355": [7, 8], "marc": 7, "abramowitz": 7, "2683": 7, "consider": [7, 9, 11, 13, 21, 22, 25, 34, 49, 55, 68, 70, 132, 147, 149], "queryableattribut": [7, 8, 11, 12, 22, 23, 47, 100, 101, 113, 123, 132], "stabl": [7, 9, 19, 65, 116, 117, 118], "2675": 7, "demonstr": [7, 12, 13, 18, 19, 20, 21, 22, 24, 25, 31, 52, 57, 64, 67, 70, 71, 75, 76, 77, 85, 98, 104, 139, 148, 153, 155, 157, 161, 162, 163], "was_delet": [7, 22, 123, 145, 146, 148], "2658": 7, "all_orm_descriptor": [7, 9, 10, 11, 12, 21, 22, 24, 75, 101, 113, 123, 131, 132, 134], "after_commit": [7, 11, 23, 97, 102, 148], "viabl": [7, 11, 13, 51, 103], "2662": 7, "2665": 7, "2661": 7, "1768": 7, "legacy_is_orphan": [7, 19, 132], "discuss": [7, 11, 13, 23, 25, 26, 30, 31, 32, 34, 35, 49, 52, 56, 59, 64, 65, 67, 70, 71, 74, 77, 78, 83, 85, 90, 92, 97, 102, 121, 122, 124, 126, 132, 137, 138, 139, 140, 142, 143, 146, 147, 149, 151, 155, 156, 157, 159, 160, 161, 162, 163], "2655": [7, 19], "linker": [7, 9, 13], "luca": 7, "wehrstedt": 7, "2653": 7, "mainli": [7, 9, 13, 78], "predict": [7, 9, 13, 17, 20, 25, 68, 77, 147, 149, 157], "2654": 7, "2637": 7, "__instrumentation__": 7, "datastructur": [7, 40, 59, 61, 117, 118], "untest": [7, 9, 11, 13], "simplif": [7, 8, 24], "dogpile_cach": [7, 19, 98], "2614": 7, "inherit_schema": [7, 59], "2657": 7, "695": 7, "analogu": [7, 56, 58, 59, 122, 132], "legal": [7, 22, 31, 70, 77, 137], "2660": 7, "2496": 7, "2629": 7, "2648": 7, "2664": [7, 19], "audriu": 7, "ka\u017eukauska": 7, "terrif": 7, "owen": 7, "nelson": [7, 9], "mssql_includ": [7, 64], "mssql_cluster": [7, 8, 10, 22, 32, 64], "cluster": [7, 8, 10, 11, 13, 32], "2644": 7, "keyedtupl": [7, 9, 13, 26], "_asdict": [7, 31], "_field": [7, 31], "2601": 7, "ua": [7, 22, 26], "unalias": [7, 11], "users_nam": [7, 20, 23, 24, 25, 54, 128, 137, 151], "users_1": [7, 17, 23, 24, 57], "contrast": [7, 25, 26, 31, 32, 36, 40, 46, 49, 51, 54, 57, 59, 94, 97, 101, 102, 132, 134, 136, 139, 151, 155, 157], "restat": [7, 24, 71], "user_t": [7, 25, 31, 32, 36, 49, 50, 52, 54, 56, 65, 67, 68, 96, 102, 132, 133, 134, 135, 138, 154, 155, 156, 161], "anon_1_nam": [7, 20, 137], "id_1": [7, 18, 20, 25, 26, 56, 57, 70, 137, 138, 155, 163], "2635": 7, "hop": [7, 8, 20, 84], "2617": 7, "2602": 7, "contextual_connect": [7, 13, 24], "symmetri": [7, 31], "idan": 7, "kamara": 7, "legwork": 7, "2623": [7, 19], "2410": 7, "2633": 7, "smaller": [7, 18, 45, 59], "2610": 7, "2618": 7, "x1": [7, 15, 56, 88, 117], "x2": [7, 15, 56, 88, 117], "expr1": 7, "mycolumn": [7, 17, 23, 30, 56], "2621": 7, "gotcha": 7, "2603": 7, "2597": 7, "2606": [7, 19], "moor": [7, 10, 11], "2600": 7, "sampl": [7, 13, 18, 21, 22, 25, 49, 54, 57, 67, 77, 98, 104, 147], "uncertainti": 7, "user_db_link": 7, "2619": 7, "2622": 7, "1753": 7, "poolev": [7, 8, 9, 13, 18, 31, 37, 38, 39, 40, 41, 48, 49, 51, 64, 67, 102], "captur": [7, 21, 40, 70], "cruft": 7, "2433": [7, 19], "_orm": 7, "1401": [7, 19], "2333": [7, 19], "1106": [7, 19], "2438": [7, 19], "2585": [7, 19], "deferredreflect": [7, 8, 12, 20, 25, 93, 103, 107, 133], "2485": [7, 19], "gatewai": [7, 49, 54], "introspect": [7, 8, 10, 13, 19, 25, 33, 52, 64, 81, 96, 101, 131], "2208": [7, 19], "2452": [7, 19], "enable_relationship_load": [7, 22, 77, 140, 146], "2372": 7, "after_transaction_cr": [7, 13, 25, 97, 102, 148, 150], "after_transaction_end": [7, 25, 97, 148, 150], "deactiv": [7, 11, 22, 70], "2592": 7, "2179": [7, 19], "before_attach": [7, 22, 97], "2464": [7, 19], "familiar": [7, 17, 24, 25, 26, 37, 56, 57, 70, 80, 90, 94, 136, 138, 148, 151, 156, 160, 161], "mayb": [7, 78], "unwrap": [7, 9, 12, 48], "2245": [7, 19], "2526": 7, "2472": 7, "2517": 7, "deferenc": [7, 15], "2338": [7, 19], "2535": 7, "reduce_column": [7, 54, 137], "2476": 7, "2527": 7, "class_instru": [7, 97], "class_uninstru": [7, 97], "attribute_instru": [7, 97], "2590": [7, 19], "intermediari": [7, 12, 13, 20, 36, 66, 78, 80, 98, 101, 124, 140], "2320": [7, 19], "2405": [7, 19], "signal": [7, 48, 65, 136], "2350": 7, "carri": [7, 8, 11, 12, 13, 16, 24, 51, 56, 128, 137], "set_committed_st": 7, "2582": 7, "slowli": [7, 18], "evolv": [7, 24, 26, 122], "2565": 7, "2549": 7, "poorli": [7, 13, 18, 23, 97, 113, 141], "2442": [7, 19], "seldom": [7, 8, 15, 19, 21, 23, 26, 128], "bootstrap": [7, 98], "2589": [7, 19], "2511": 7, "before_cursor_execut": [7, 8, 18, 31, 40, 76, 97], "_cursor_execut": [7, 8], "2459": 7, "fixtur": [7, 9, 10, 11, 31, 98], "complianc": [7, 118], "2462": 7, "2556": 7, "akiban": 7, "2422": [7, 19], "depende": 7, "colkei": 7, "2397": [7, 19], "prefetch_col": [7, 31, 48], "2498": 7, "redefinit": [7, 11, 123, 129], "cleanli": [7, 13, 52], "2547": [7, 19], "encrypt": [7, 8, 9, 12, 13, 33, 68, 113], "decrypt": [7, 9, 33], "1534": [7, 19], "getitem": [7, 10, 22, 59], "lshift": 7, "rshift": 7, "smallest": [7, 65], "customiz": [7, 49, 121, 129], "2537": 7, "2276": [7, 19], "custom_op": [7, 13, 33, 42, 56], "genericfunct": [7, 12, 13, 42, 44, 67], "2562": 7, "servic": [7, 9, 12, 25, 31, 34, 35, 45, 46, 48, 51, 54, 59, 64, 66, 67, 80, 82, 94, 137, 151], "2418": [7, 19], "allevi": [7, 19, 23, 62, 80, 119], "earli": [7, 9, 11, 12, 13, 18, 19, 21, 23, 24, 25, 26, 31, 40, 70, 76, 97, 122, 123, 135], "case_insensit": 7, "2423": [7, 19], "unconsum": [7, 9, 13, 26, 31, 70, 102], "2415": [7, 19], "2502": 7, "assumedli": 7, "2507": 7, "2431": [7, 19], "with_only_synonym": 7, "2470": 7, "2463": 7, "ss": 7, "esoter": [7, 57], "2455": 7, "notlik": [7, 13, 49, 50, 56, 101, 123], "notilik": [7, 12, 13, 49, 50, 56, 101, 123], "2580": 7, "selectbas": [7, 13, 25, 42, 49, 54, 56, 57, 70, 137, 155], "2593": 7, "2595": 7, "2564": 7, "compos": [7, 12, 13, 15, 21, 22, 26, 27, 30, 31, 37, 43, 44, 49, 54, 56, 57, 59, 75, 80, 82, 91, 92, 93, 97, 98, 101, 109, 115, 117, 121, 123, 131, 132, 138, 140, 143, 148, 151, 154, 155, 160, 161, 163], "2591": 7, "2520": 7, "faith": 7, "2168": 7, "2441": [7, 19], "2506": 7, "ischema_nam": 7, "unoffici": 7, "broad": [7, 10, 13, 156], "\u00e9ric": 7, "lemoin": 7, "fst": 7, "2534": 7, "2404": [7, 19], "nathan": [7, 8], "wright": 7, "2363": [7, 19], "rc3addcc9ffad": 7, "mydatabas": [7, 20, 23, 37, 49, 64, 103], "split": [7, 8, 10, 11, 12, 23, 25, 48, 64, 67, 113], "db_name": 7, "2437": 7, "2504": [7, 8, 20], "2505": 7, "bitbucket": [7, 8, 19, 21], "readi": [7, 12, 20, 26, 31, 51, 77, 97, 103, 139, 150, 151, 157, 161, 163], "zzzeek": [7, 18, 19, 21, 61, 113], "3403": [8, 9], "unreleas": [8, 9, 21], "3320": [8, 9], "0b5": 8, "3349": [8, 9, 21], "3352": [8, 9], "3375": [8, 9], "3248": [8, 9], "3418": [8, 9], "3362": [8, 9], "3354": [8, 9], "interpol": [8, 9, 78], "3337": [8, 9], "ord": [8, 9], "marin": [8, 9], "3333": [8, 9], "alphabet": [8, 9, 119], "3495": [8, 9], "3406": [8, 9], "3408": [8, 9], "3324": 8, "3296": [8, 9], "gevent": [8, 9, 13, 22, 25, 70, 71, 102, 146], "3310": [8, 9], "after_rollback": [8, 9, 11, 97, 148], "3309": [8, 9], "malth": [8, 9], "borch": [8, 9], "3300": [8, 9], "load_onli": [8, 9, 11, 12, 13, 126, 128, 137], "3287": [8, 9, 12], "3285": [8, 9], "3251": [8, 9], "3241": [8, 9], "3232": [8, 9], "addressassoci": [8, 9], "get_isolation_level": [8, 9, 10, 12, 13, 31, 48, 66], "default_isolation_level": [8, 9, 31, 48], "3302": [8, 9], "til": [8, 9], "dimitri": [8, 9], "theodor": [8, 9], "3278": [8, 9], "transmiss": [8, 40, 80], "1765": [8, 20], "3298": 8, "postgresql_concurr": [8, 9, 10, 67], "iuri": [8, 9, 10], "silvio": [8, 9, 10], "emploi": [8, 9, 11, 13, 22, 23, 31, 51, 54, 65, 66, 75, 102, 129, 132, 140, 141, 148, 152], "register_uuid": [8, 9], "2940": [8, 9], "jsonb": [8, 9, 10, 12, 13, 22, 33, 59], "register_default_jsonb": [8, 9, 67], "json": [8, 9, 10, 11, 12, 13, 19, 23, 25, 37, 57, 58, 59, 60, 64, 65, 68, 115, 117, 136, 155], "json_deseri": [8, 9, 12, 37, 59, 67], "mateusz": [8, 9], "susik": [8, 9], "array_oid": [8, 9], "register_default_json": [8, 9, 67], "3174": [8, 9], "3275": [8, 9], "utf8_bin": [8, 9, 56], "3274": [8, 9], "kai": [8, 9, 13], "groner": [8, 9], "sqlcipher": [8, 9, 68], "pysqlciph": [8, 9, 10, 12, 13], "gill": [8, 9], "dartiguelongu": [8, 9], "3199": [8, 9], "3197": [8, 9], "dedupl": [8, 9, 10, 11, 12, 13, 21, 22, 25, 26, 31, 56, 77, 102, 137, 151], "board": [8, 9, 13, 16, 19, 33, 40, 58, 66, 70], "3194": [8, 9], "3185": [8, 9], "3200": [8, 9], "cost": [8, 9, 13, 90, 146], "3165": [8, 9], "3195": [8, 9], "3180": [8, 9], "literal_bind": [8, 9, 10, 11, 13, 25, 30, 43, 49, 54, 56, 58, 59, 78], "3154": [8, 9], "3067": [8, 9, 12, 13], "3144": [8, 9], "toni": [8, 9, 13, 83], "revisit": [8, 9], "syscal": [8, 9, 10, 11, 13], "eof": [8, 9, 10], "3021": [8, 9], "none_as_nul": [8, 9, 10, 22, 58, 59, 64, 65, 67, 68], "3159": [8, 9], "transactionrollbackerror": [8, 9], "closest": [8, 9, 12, 146], "3075": [8, 9], "andrew": [8, 9, 13], "3141": [8, 9], "3137": [8, 9], "modulu": [8, 9, 11, 24, 78], "pyformat": [8, 9, 11, 12, 13, 18, 23, 31, 37, 78], "robert": [8, 9], "3211": [8, 9], "microsoft": [8, 9, 12, 13, 21, 23, 24, 25, 27, 30, 35, 36, 49, 51, 57, 59, 63, 81], "azur": [8, 9, 10, 11, 12, 13], "3151": [8, 9], "2138": [8, 9], "3208": [8, 9], "reorder_on_append": [8, 9, 119], "3191": [8, 9], "setlevel": [8, 9, 37, 67, 76], "3168": [8, 9], "2976": [8, 9, 20], "sibl": [8, 9, 10, 11, 12, 13, 49, 132], "3131": [8, 9], "3083": [8, 9], "promot": [8, 13, 147], "3117": [8, 9, 21], "3108": [8, 9], "3106": [8, 9, 10, 11], "3060": [8, 9, 21], "3099": 8, "handle_error": [8, 9, 10, 13, 22, 31, 40], "3076": [8, 9], "constraint_nam": [8, 9, 32, 49], "3090": [8, 9], "3069": [8, 9], "dialect_kwarg": [8, 9, 32, 42, 43, 49], "3123": [8, 9], "3122": [8, 9], "postgresql_regconfig": [8, 9, 67], "reg": [8, 9, 48, 92, 95, 130], "to_tsqueri": [8, 9, 49, 56, 67, 101, 123], "jonathan": [8, 9], "vanasco": [8, 9], "3078": [8, 9], "damian": [8, 9], "dimmich": [8, 9], "3134": [8, 9], "3130": [8, 9], "multivalu": [8, 9, 31, 36, 90, 102, 146], "albert": [8, 9], "cervin": [8, 9], "3025": [8, 9], "3128": [8, 9], "3097": [8, 9], "june": [8, 9, 10, 11, 12, 13, 17, 20, 21], "3061": [8, 9, 21, 22], "stretch": [8, 9], "proof": [8, 9, 22, 71, 77], "materi": [8, 9, 10, 12, 31, 44, 54, 57, 67, 90, 102, 142, 144, 146, 151], "3029": [8, 9], "make_transient_to_detach": [8, 9, 11, 90, 145, 146], "manufactur": [8, 9, 104, 121, 146, 155], "3017": [8, 9], "3042": [8, 9], "3080": [8, 9], "3057": [8, 9], "2804": [8, 9, 13, 20], "3013": [8, 9], "jack": [8, 9, 10, 25, 26, 56, 57, 77, 87, 128, 151, 156], "zhou": [8, 9, 10], "quash": [8, 9], "3063": [8, 9], "2907": [8, 9], "2985": [8, 9], "quicker": [8, 9, 155], "halt": [8, 9, 20, 40, 77, 97, 129], "3043": [8, 9], "liber": [8, 9, 13, 23, 30, 58, 77, 137, 155], "3028": [8, 9], "notbetween_op": [8, 9], "2990": [8, 9], "3023": [8, 9], "__and__": [8, 9, 13, 50, 56], "__or__": [8, 9, 13, 50, 56], "__invert__": [8, 9, 33, 50, 56], "3012": [8, 9], "dialectkwarg": [8, 9, 32, 36, 42, 43, 48, 49], "argument_for": [8, 9, 32, 42, 43, 49], "3024": [8, 9], "3020": [8, 9], "zero_index": [8, 9, 59, 67], "interoper": [8, 9, 25, 134], "alexei": [8, 9], "terentev": [8, 9], "2785": [8, 9], "dirk": [8, 9], "mueller": [8, 9, 13], "3002": [8, 9], "database_principal_id": [8, 9], "database_princip": [8, 9], "login": [8, 9, 13, 49, 64], "3038": 8, "imp": [8, 9], "2830": [8, 9], "testsuit": [8, 9, 17], "40": [8, 9, 20, 31, 32, 34, 35, 37, 48, 49, 64, 67, 92, 102, 107, 121, 133], "stringtest": [8, 9], "test_literal_backslash": [8, 9], "pytest": [8, 12, 13, 24, 98], "rst": [8, 13], "background": [8, 11, 15, 17, 24, 25, 26, 30, 31, 32, 34, 35, 36, 37, 44, 45, 49, 52, 53, 54, 57, 59, 61, 64, 65, 67, 68, 70, 71, 73, 76, 80, 81, 85, 90, 92, 95, 96, 97, 102, 104, 121, 123, 128, 132, 133, 137, 138, 139, 140, 146, 147, 148, 150], "2979": 8, "confirm_deleted_row": [8, 132], "confirm": [8, 11, 18, 25, 49, 90, 146], "3007": 8, "before_configur": [8, 39, 92, 97, 132], "parent_id": [8, 15, 18, 19, 20, 22, 23, 70, 80, 84, 85, 87, 98, 113, 123, 144], "yank": 8, "2948": [8, 9], "2965": 8, "categori": [8, 12, 13, 21, 25, 26, 48, 52, 54, 57, 59, 70, 71, 128, 144, 155], "2973": 8, "2967": 8, "intric": [8, 12, 13, 17, 25, 40, 57, 67, 103, 148, 149, 155], "bear": 8, "2969": 8, "versioned_histori": [8, 10, 98], "upcom": [8, 11, 12, 13, 31, 118, 161], "2978": 8, "wake": 8, "after_cursor_execut": [8, 12, 18, 31, 40, 76], "executor": [8, 37, 102], "behalf": [8, 13, 24, 31, 32, 43, 49, 51, 56, 90, 94, 97, 98, 101, 102, 103, 113, 123, 124, 136, 146, 148], "conv": [8, 24, 32, 53], "idx": [8, 68], "mysql_someargu": 8, "someargu": 8, "2866": 8, "2962": 8, "podoliaka": [8, 10], "2988": 8, "naming_convent": [8, 21, 24, 32, 49, 66], "2991": 8, "2974": 8, "_all_column": [8, 22], "textclaus": [8, 10, 13, 20, 21, 42, 45, 54, 56, 57, 59, 64, 102, 137, 138, 151], "textasfrom": [8, 20, 54, 57], "coerce_to_unicod": [8, 24, 66], "outputtypehandl": [8, 23, 66], "2911": 8, "uncondit": [8, 9, 49, 146], "christoph": [8, 10], "zwerschk": [8, 10], "se": 8, "2987": 8, "arfrev": 8, "freht": 8, "taifersar": 8, "arahesi": 8, "2980": 8, "automap": [8, 9, 10, 11, 12, 13, 27, 40, 81, 93, 114, 120, 133], "3004": 8, "jd23": 8, "2810": [8, 20], "__declare_first__": [8, 9, 93], "2949": 8, "2935": 8, "2932": 8, "2950": 8, "jplaverdur": 8, "farvour": 8, "2946": 8, "33a": 8, "schmidt": 8, "2934": 8, "datatype3": [8, 68], "five": [8, 13, 25, 37, 51, 68, 71, 115, 137, 151], "erich": 8, "blume": 8, "automapbas": [8, 10, 11, 13, 20, 103], "is_comparison": [8, 11, 13, 23, 33, 49, 56, 101, 123, 124], "mistak": [8, 18, 25, 26, 104, 162], "2921": 8, "2918": 8, "flat": [8, 13, 20, 22, 24, 32, 43, 49, 54, 70, 122, 124, 137, 144], "2908": 8, "autom": [8, 9, 13, 32, 40, 49, 66, 76, 82, 88, 96, 103, 119, 120, 131, 132, 134, 137, 143, 146, 147, 149, 151, 163], "2923": 8, "alon": [8, 9, 10, 11, 12, 13, 16, 21, 24, 35, 41, 51, 54, 56, 58, 64, 80, 113, 121, 128, 136, 137, 148, 163], "2910": 8, "unrecogn": [8, 59], "uninstal": 8, "opt": [8, 12, 13, 15, 18, 21, 22, 25, 26, 31, 36, 39, 40, 43, 48, 52, 61, 102, 128, 136, 137], "schema_a": 8, "schema_b": 8, "buggi": [8, 22], "referred_schema_fn": [8, 13, 49], "2913": 8, "defaultdialect": [8, 9, 13, 16, 29, 31, 32, 43, 48, 49], "2927": 8, "sortabl": [8, 12, 59], "2848": [8, 20], "2924": 8, "2912": 8, "schemavisitor": 8, "dagu": 8, "postgresql_ignore_search_path": [8, 67], "pg_get_constraintdef": [8, 11, 67], "qualif": [8, 31, 52], "2922": 8, "tool": [8, 9, 10, 11, 12, 13, 16, 19, 20, 24, 25, 31, 32, 35, 47, 49, 58, 67, 71, 74, 82, 90, 95, 96, 98, 118, 123, 160], "sqlacodegen": 8, "downcast": 8, "counteract": 8, "2917": 8, "2906": 8, "roottransact": [8, 13, 31, 38, 45], "twophasetransact": [8, 31, 38, 40, 48, 146], "_connectionfairi": [8, 13, 31, 38, 40, 51, 71, 102], "span": [8, 11, 12, 16, 17, 25, 31, 51, 64, 97, 149, 160], "xaer_rmfail": 8, "laurenc": 8, "inordin": [8, 76], "primit": [8, 57, 76, 98, 151], "var": [8, 12, 13, 66, 67], "requisit": 8, "3x": [8, 25], "One": [8, 9, 12, 13, 22, 24, 25, 31, 33, 47, 57, 61, 64, 67, 68, 76, 77, 80, 85, 91, 92, 96, 101, 102, 121, 124, 128, 131, 136, 137, 138, 140, 142, 147, 148, 151, 163], "tradeoff": [8, 128], "burden": 8, "dbapi_connect": [8, 9, 13, 31, 37, 39, 40, 48, 49, 51, 64, 65, 67, 68, 71, 102], "connection_record": [8, 37, 39, 40, 49, 51, 64, 65, 67, 68, 102], "4b2": 8, "pymodinit_func": 8, "void": 8, "pyobject": 8, "cgohlk": 8, "januari": [8, 9, 10, 11, 12, 13, 16, 17], "functool": [8, 10], "getargspec": [8, 9], "sessionev": [8, 10, 11, 12, 13, 18, 22, 23, 25, 26, 97, 98, 102, 137, 146, 147, 148, 149, 150], "2905": 8, "schoonov": 8, "unpack": [8, 48], "2901": 8, "dial": [8, 10, 22], "2903": 8, "held": [8, 20, 31, 51, 64, 68, 70, 80, 90, 102, 136, 147, 149, 152], "quasi": [8, 20], "bookkeep": [8, 10, 18, 76, 77, 97, 116], "2789": [8, 20], "2900": 8, "generatortyp": 8, "integrityerror": [8, 10, 13, 25, 29, 41, 48, 149, 150], "include_backref": [8, 129], "1535": [8, 20], "with_for_upd": [8, 9, 10, 11, 12, 13, 20, 22, 23, 24, 54, 90, 102, 128, 137, 146], "generativeselect": [8, 10, 13, 20, 22, 42, 54, 137], "mario": 8, "lassnig": 8, "eduardo": 8, "schettino": 8, "myclass_1": 8, "2872": 8, "2833": [8, 20], "2369": [8, 20], "2587": [8, 20], "2858": 8, "2828": 8, "2865": 8, "2875": 8, "2873": [8, 20], "__lt__": [8, 12, 20, 49, 50, 56, 101, 123], "embedd": 8, "2877": [8, 20], "2882": 8, "OF": [8, 9, 10, 12, 20, 24, 28, 54, 137], "decimal_return_scal": [8, 20, 59, 65, 66, 67], "2867": [8, 20], "2883": 8, "2879": [8, 20], "2812": [8, 20], "2868": 8, "huge": [8, 13, 17, 19, 21, 25], "rice": [8, 13], "2581": [8, 20], "tsvector": [8, 67], "noufal": 8, "ibrahim": 8, "unicodearrai": 8, "2878": [8, 20], "2893": 8, "relation_field": 8, "view_rel": 8, "faq": [8, 13, 21, 70, 137, 147], "blog": [8, 26, 66, 87, 98, 113, 136, 151], "2898": 8, "repositori": [8, 25], "ibm": [8, 63], "2161": [8, 20], "codebas": [8, 13, 25, 70, 81], "2to3": [8, 19], "2671": [8, 20], "attributest": [8, 12, 19, 20, 47, 100, 123, 134, 146, 148], "load_histori": [8, 20, 123, 146], "2787": [8, 20], "1418": [8, 20], "rearchitect": 8, "_all": [8, 20], "some_composit": [8, 123], "2824": [8, 20], "2793": [8, 20], "2268": [8, 20], "attributeimpl": [8, 20, 123], "emul": [8, 11, 13, 25, 30, 38, 59, 67, 101], "passive_off": [8, 20, 123, 146], "invers": [8, 98], "somevalu": [8, 20, 76], "2751": [8, 20], "outlin": [8, 67], "shift": [8, 26, 70], "_queri": 8, "set_connection_execution_opt": [8, 40], "set_engine_execution_opt": [8, 40], "2770": 8, "2748": 8, "ijl": 8, "2183": 8, "valuesbas": [8, 12, 20, 31, 35, 36, 42, 57, 61], "2850": [8, 20], "circuit": [8, 20, 56], "2823": 8, "literal_processor": [8, 12, 20, 25, 33, 58, 59, 60], "process_literal_param": [8, 20, 33, 58, 59, 78], "2838": [8, 20], "2716": 8, "highlight": [8, 17, 18, 26, 57, 151], "2835": 8, "rich": [8, 25, 80, 151], "quoted_nam": [8, 9, 11, 12, 20, 23, 31, 42, 44, 45, 48, 49, 52, 56, 67], "db2": [8, 10, 12, 20, 22, 31, 56, 63, 136, 150], "upshot": [8, 21], "smallseri": [8, 9, 10], "2840": 8, "2817": 8, "publish": [8, 13, 28, 33, 39, 48, 58, 59, 70, 95, 118], "return_default": [8, 9, 12, 13, 31, 35, 36, 65, 67, 68, 76, 90, 136, 146], "returned_default": [8, 31, 36], "2752": 8, "august": [9, 10, 11, 12, 13, 16], "2017": [9, 10, 11, 13, 25, 63, 64], "3937": [9, 10, 11], "4035": [9, 10, 11], "uncov": [9, 10], "4034": [9, 10, 11], "isa": [9, 10, 131, 132], "3611": [9, 10], "3884": [9, 10], "deprecationwarn": [9, 10, 12, 20, 24, 26, 41], "3886": [9, 10], "novemb": [9, 10, 11, 12, 13], "2016": [9, 10, 22, 25, 59, 64], "bulk_update_map": [9, 10, 11, 90, 136, 146], "3849": [9, 10, 11], "3800": [9, 10], "bind_mapp": [9, 10, 13, 90, 112, 146, 150], "bind_tabl": [9, 10, 90, 112, 146, 150], "3798": [9, 10], "bulk_sav": [9, 10], "3781": [9, 10], "3778": [9, 10], "princip": [9, 10], "schema_nam": [9, 10, 49, 67], "unavail": [9, 10, 13, 51, 70, 146], "warehous": [9, 10, 11], "edit": [9, 10, 154], "authent": [9, 10, 12, 13, 64], "3810": [9, 10], "serverproperti": [9, 10], "sql_dbms_ver": [9, 10], "unreli": [9, 10, 16, 70], "3814": [9, 10], "20017": [9, 10], "robbin": [9, 10], "3791": [9, 10], "semicolon": [9, 10, 12, 64, 67], "3762": [9, 10], "3797": [9, 10], "septemb": [9, 10, 11, 13, 25, 65], "3773": [9, 10], "3774": [9, 10], "_reset_export": [9, 10], "3755": [9, 10], "connection_timeout": [9, 10], "connect_timeout": [9, 10], "pool_siz": [9, 10, 37, 51, 70], "get_warn": [9, 10], "consume_result": [9, 10], "ssl_verify_cert": [9, 10], "force_ipv6": [9, 10], "pool_reset_sess": [9, 10], "allow_local_infil": [9, 10], "use_pur": [9, 10], "3787": [9, 10], "bake": [9, 10, 11, 12, 13, 25, 27, 31, 56, 97, 114, 120, 146], "unbak": [9, 10], "hahnenberg": [9, 10], "3743": [9, 10], "3704": 9, "blank_schema": [9, 13, 49], "3716": 9, "3735": [9, 10], "__slots__": [9, 10, 21, 91, 123], "pieter": [9, 10, 11], "mulder": [9, 10, 11], "3728": [9, 10], "3724": [9, 10], "3722": 9, "3721": 9, "3739": [9, 10], "topmost": [9, 10, 12, 90, 146], "3741": [9, 10], "3700": 9, "3710": 9, "3706": 9, "3663": 9, "3658": 9, "3698": 9, "3690": 9, "3682": 9, "athena": [9, 63], "yao": 9, "3666": 9, "mac": [9, 37], "3715": 9, "3711": 9, "3657": 9, "sqlplu": 9, "3705": 9, "3699": 9, "to_list": 9, "3660": 9, "never_set": [9, 13, 21, 97], "searchabl": 9, "3647": 9, "3623": 9, "2696": [9, 10, 11, 22], "interrupt": [9, 13, 22, 71], "rerais": 9, "tim": 9, "tate": 9, "3643": 9, "3642": 9, "3632": 9, "colon": [9, 13, 32, 56, 57, 151, 157], "3644": 9, "guillaum": 9, "doumenc": 9, "3624": 9, "eras": [9, 12, 25, 54, 80, 90, 132, 137, 138, 146, 147, 149], "3622": 9, "rudimentarili": 9, "carlo": [9, 10], "riva": 9, "3621": 9, "ipython": [9, 12], "3625": 9, "3593": 9, "poly_subclass": 9, "poly_baseclass": 9, "bump": [9, 10, 11, 13], "3610": 9, "3609": 9, "3606": 9, "amazon": [9, 13, 63], "rd": 9, "3613": 9, "optimizer_cost": 9, "3605": 9, "systemwid": 9, "3612": 9, "3599": 9, "3592": 9, "nil": [9, 11, 12, 13], "philippsen": [9, 11, 12, 13], "preserve_parameter_ord": [9, 26, 36, 57, 137], "update_arg": [9, 137], "gorka": 9, "eguileor": 9, "_raw_column": [9, 31], "3603": 9, "3598": 9, "3573": 9, "excludeconstraint": [9, 10, 12, 13, 67], "aisch": 9, "3571": 9, "fsp": [9, 65], "3602": 9, "20006": 9, "3585": 9, "avi": 9, "datetimeoffset": [9, 12, 13, 64], "jacobo": 9, "vera": 9, "popitem": [9, 87, 117], "py36": 9, "stopiter": [9, 11], "jacob": [9, 10, 11], "macdonald": 9, "luri": 9, "phil": 9, "jone": [9, 56, 57, 151], "fly": [9, 13, 20, 23, 31, 52, 68, 90, 103, 135, 146, 149], "3597": 9, "one_or_non": [9, 25, 26, 31, 102, 104, 137, 151], "esiegerman": 9, "3556": 9, "3539": 9, "bulk_save_object": [9, 10, 12, 13, 76, 90, 136, 146], "3525": 9, "3510": 9, "fraser": 9, "3288": [9, 21], "3520": 9, "storag": [9, 19, 22, 31, 57, 59, 66, 68, 80, 85, 87, 90, 91, 104, 119, 141, 144, 151, 162], "3455": 9, "relopt": 9, "pete": 9, "hollobon": 9, "3491": 9, "3548": [9, 10], "2971": [9, 21], "3551": 9, "eugen": [9, 138, 162, 163], "zapolski": 9, "verifi": [9, 11, 13, 57, 64, 151, 160], "3508": 9, "3509": 9, "3497": 9, "ironpython": 9, "3494": 9, "geoalchemi": [9, 19, 98], "numpi": [9, 13, 72], "3469": 9, "3468": 9, "3466": 9, "3480": 9, "3175": 9, "3481": 9, "foo_1": [9, 17], "918": [9, 22, 25], "3483": 9, "sebastian": [9, 10, 11, 12, 13], "bank": [9, 10, 11, 12], "3459": 9, "3490": 9, "3485": 9, "__rmod__": [9, 50, 56], "gittik": 9, "minvalu": [9, 35, 48], "maxvalu": [9, 35, 48], "NO": [9, 10, 13, 28, 35, 54], "jakeogh": 9, "version_id_count": [9, 20], "3465": 9, "3222": [9, 21], "3462": 9, "hay": [9, 10, 11, 12], "3451": 9, "3448": 9, "unadapt": 9, "3445": 9, "postgresql_with": [9, 67], "dialect_opt": [9, 12, 13, 23, 32, 36, 42, 43, 49, 52, 64], "get_index": [9, 13, 21, 23, 48, 49, 52, 65, 66, 67], "max_row_buff": [9, 31, 67, 138], "alloc": [9, 21, 70], "mcclurem": 9, "psycopg2cffi": 9, "suddenli": [9, 67, 151], "3439": 9, "3454": 9, "3039": 9, "3464": 9, "2077": 9, "instanceev": [9, 12, 13, 18, 23, 89, 97, 117, 128, 132, 148], "refresh_flush": [9, 11, 23, 97, 117], "3167": 9, "3427": 9, "lightweight": [9, 21, 24, 54, 56, 87, 102, 138], "3420": 9, "engine_dispos": [9, 40, 51], "get_dialect": [9, 37], "caller": [9, 13, 40, 61, 70, 71, 80, 90, 102, 146], "get_dialect_cl": [9, 48], "3379": 9, "pool_threadloc": [9, 16], "3435": 9, "misbehav": 9, "pep": [9, 10, 11, 12, 13, 21, 22, 25, 26, 27, 31, 48, 49, 56, 59, 65, 70, 71, 80, 83, 84, 95, 101, 102, 114, 120, 123, 140], "dbapi_exception_translation_map": [9, 48], "3421": 9, "freed": [9, 21], "checkin": [9, 11, 13, 17, 31, 37, 40, 51, 64, 67], "3419": 9, "legacy_schema_alias": [9, 10, 13, 64], "obsolet": [9, 12, 18, 21, 24, 26, 66, 67], "sophist": [9, 13, 17, 18, 23, 25, 85, 101, 121, 149], "3424": [9, 10], "3430": 9, "bakedqueri": [9, 11, 12, 23, 26, 76, 104], "add_criteria": [9, 31, 42, 43, 56, 104], "with_criteria": [9, 104], "pr": [9, 12, 76, 137], "naoki": 9, "inada": 9, "_get_listen_kei": [9, 117], "odd": [9, 26, 104], "3368": 9, "3416": 9, "3347": 9, "splice": 9, "3412": 9, "3409": 9, "3341": [9, 21], "mixtur": [9, 12, 21, 26, 32, 126], "unattach": 9, "3411": [9, 21], "3405": 9, "3402": 9, "2992": [9, 21], "anticip": [9, 10, 11, 12, 13, 22, 23, 24, 25, 34, 51, 70, 147], "3392": 9, "opposit": [9, 19, 49, 55, 65, 80, 83, 121, 149], "3388": 9, "queryev": [9, 11, 12, 97, 104, 148], "before_compil": [9, 11, 12, 97, 148], "3387": 9, "soft": [9, 13, 40, 51, 97], "_connectionrecord": [9, 38, 40, 51], "soft_invalid": [9, 40], "exceptioncontext": [9, 21, 31, 38, 40], "invalidate_pool_on_disconnect": [9, 31, 40], "do_connect": [9, 37, 40, 64, 68], "engine_cr": [9, 31, 48], "3355": 9, "compare_against_backend": [9, 58, 60], "threshold": [9, 11, 31], "shorter": [9, 18, 31, 66, 104], "3396": 9, "3282": [9, 21], "ddlevent": [9, 10, 13, 18, 30, 33, 34, 38, 40, 49, 52, 58, 59, 103, 133], "before_cr": [9, 30, 34, 40], "after_cr": [9, 24, 30, 34, 40], "before_drop": [9, 34, 40], "after_drop": [9, 40], "3391": 9, "some_collection_to_attribut": 9, "3397": 9, "3383": 9, "misconstru": 9, "forgotten": [9, 13], "3338": 9, "3385": 9, "3374": [9, 21], "3371": [9, 21], "anon": [9, 12, 13, 25], "3372": 9, "said": [9, 18, 23, 37, 80, 132, 149, 162, 163], "happili": [9, 155], "unsort": [9, 59], "3378": 9, "3034": 9, "effem": 9, "git": 9, "3380": 9, "3381": 9, "mysql_limit": [9, 36, 65, 137], "amir": 9, "sadoughi": 9, "3233": [9, 21], "3367": [9, 21], "heurist": [9, 12, 13, 19, 24, 33, 58, 137, 146], "parentent": [9, 123], "3364": 9, "3084": [9, 21], "3360": 9, "ramiro": 9, "moral": 9, "sqla_nos": [9, 12, 18], "head": [9, 142], "no_user_sit": 9, "tox": [9, 12, 13, 26], "pythonnousersit": 9, "3356": 9, "3139": [9, 21], "3008": [9, 21], "travel": [9, 31, 146], "ancestor": [9, 49, 54, 56], "3346": 9, "3184": [9, 21], "3343": 9, "3340": 9, "prioriti": 9, "3335": 9, "defens": [9, 19, 90, 102, 146], "2771": 9, "github": [9, 13, 25, 26, 64, 65, 66, 67], "137": 9, "julien": 9, "castet": 9, "3327": 9, "3150": [9, 21], "stage": [9, 11, 12, 13, 31, 66, 76, 84, 118, 132, 148, 163], "3331": 9, "3329": [9, 21], "3330": [9, 21], "utf8mb4": [9, 11, 37, 52, 65], "koi8u": 9, "eucjpm": 9, "grainger": 9, "gear": [9, 19, 21, 32, 57, 97, 103, 151], "__module__": [9, 10, 48], "3218": 9, "advent": [9, 24, 26, 123], "3317": 9, "3249": [9, 21], "callcount": [9, 10, 17, 18], "3307": [9, 65], "3262": 9, "expert": [9, 21], "rival": [9, 21], "3100": [9, 21], "isout": [9, 49, 54, 137, 155], "3217": 9, "attributeev": [9, 10, 11, 12, 13, 18, 20, 22, 23, 39, 97, 98, 100, 117, 123, 129, 148], "dispose_collect": [9, 13, 97], "offer": [9, 10, 11, 13, 17, 18, 31, 34, 35, 49, 56, 59, 62, 64, 65, 67, 71, 76, 77, 102, 117, 121, 135, 136, 141, 147, 151], "3176": [9, 21], "synonymproperti": [9, 100, 123, 132], "comparableproperti": 9, "2963": [9, 21], "inspectionattr": [9, 12, 21, 100, 101, 113, 123, 129, 132, 137], "undeferr": [9, 21], "spend": [9, 17, 21, 128], "obtain": [9, 21, 28, 51, 54, 80, 101, 102, 130, 155], "proc": [9, 21, 51, 123, 126, 137], "create_row_processor": [9, 21, 123, 126, 137], "3301": 9, "get_bind": [9, 13, 18, 90, 102, 112, 136, 146], "1326": [9, 21], "3227": [9, 21], "3242": [9, 21], "propcompar": [9, 11, 12, 13, 15, 18, 19, 20, 26, 56, 70, 100, 101, 113, 122, 123, 128, 129, 137, 138, 140, 151, 163], "bsub1": 9, "bsub2": 9, "3256": 9, "deepcopi": [9, 10, 12, 13], "duesenfranz": 9, "overcom": [9, 10, 18, 25, 31, 82], "3230": 9, "3228": [9, 21], "3035": [9, 21], "some_col_prop": 9, "some_prop": [9, 21, 123], "entity_alia": 9, "occurr": [9, 10, 11, 12, 21, 23, 26, 31, 49, 51, 54, 56, 59, 64, 66, 67, 101, 117, 118, 119, 122, 123, 128, 137, 148, 151], "3148": [9, 21], "3188": [9, 21], "3177": [9, 10, 21], "joinload": 9, "mixup": 9, "3145": 9, "3171": 9, "technic": [9, 13, 20, 102, 118, 129, 140, 141, 147], "squash": 9, "dobe": 9, "vanderm": 9, "3219": 9, "3240": 9, "2670": [9, 21], "studi": [9, 136], "profil": [9, 12, 18, 21, 72, 104, 118], "consol": [9, 21, 98], "graphic": 9, "runsnak": [9, 12, 21], "parameter": [9, 26, 56, 104, 154, 157, 161], "squelch": 9, "3178": [9, 21], "revalid": 9, "3266": [9, 21], "runtimeerror": [9, 21, 102], "dequ": [9, 21, 39, 77], "3163": [9, 21], "discrep": [9, 26], "3087": [9, 21], "interest": [9, 13, 19, 37, 52, 57, 124, 136, 154, 161, 162], "parker": 9, "spif": 9, "3172": 9, "suffici": [9, 13, 24, 26, 31, 33, 51, 56, 58, 59, 65, 117, 118, 124, 128], "pg_index": [9, 21], "pg_constraint": [9, 21, 34, 67], "duplicates_constraint": [9, 21, 67], "duplicates_index": [9, 21], "johann": 9, "erdfelt": 9, "with_statement_hint": [9, 54, 137], "3206": 9, "autoload_with": [9, 13, 26, 33, 40, 49, 52, 65, 66, 67, 96, 103, 107, 133, 137, 161], "malik": 9, "diarra": 9, "3027": [9, 21], "builder": [9, 57, 104], "usefulli": [9, 49, 138], "3260": 9, "3243": 9, "todai": [9, 12, 17, 19, 20, 24, 26, 54, 71, 148], "3245": 9, "goldberg": 9, "3170": [9, 21], "3215": 9, "3190": 9, "3169": [9, 21], "generictypecompil": [9, 29, 48], "type_express": [9, 33], "get_column_specif": 9, "3074": 9, "foreign_key_constraint": [9, 49, 54], "referred_t": [9, 23, 32, 48, 52], "column_0_nam": [9, 32, 49], "3299": [9, 21], "shaun": 9, "3052": 9, "ilja": [9, 10, 12], "everil\u00e4": [9, 10, 12], "pginspector": [9, 10, 13, 21, 22, 67], "get_foreign_table_nam": [9, 13, 21, 67], "rodrigo": 9, "menez": 9, "2891": [9, 21], "tablespac": [9, 10, 21, 67], "malikdiarra": 9, "2051": [9, 21], "get_enum": [9, 12, 13, 67], "ilya": 9, "pekelni": 9, "enumer": [9, 10, 11, 12, 13, 20, 21, 22, 59, 64, 65, 67, 80, 82], "3319": [9, 21], "pgdialect": [9, 31], "pg_catalog": [9, 67], "pg_table_is_vis": 9, "3264": [9, 21], "explicit_defaults_for_timestamp": [9, 11, 21, 35, 49], "3155": [9, 21], "supports_unicode_stat": 9, "3121": 9, "3237": 9, "legitim": [9, 25], "bitwis": [9, 21, 49, 56, 57, 65, 101, 113, 123], "retrieve_as_bitwis": [9, 21, 65], "bitflag": [9, 146], "3283": [9, 21], "matchtyp": [9, 59, 60], "notmatch_op": 9, "3263": [9, 21], "3186": [9, 21], "skip_user_error_ev": [9, 21, 40], "jon": [9, 11, 12], "3244": [9, 21], "3261": [9, 21], "date_char": [9, 68], "time_char": [9, 68], "datetime_char": [9, 68], "alpha": [9, 12, 24, 25, 68, 118], "3257": 9, "temp": [9, 12, 13, 18, 21, 31, 67], "3203": [9, 21], "get_temp_table_nam": [9, 21, 48, 52, 66], "get_temp_view_nam": [9, 21, 48, 52], "3204": [9, 21], "deprecate_large_typ": [9, 64], "3182": [9, 21], "service_nam": [9, 66], "s\u0142awomir": 9, "ehlert": 9, "bitmap": [9, 21], "gabor": 9, "gomba": 9, "suffix_with": [9, 21, 54, 137], "3220": [9, 21], "3054": [9, 21], "generate_relationship": [9, 103], "3210": 9, "drizzl": [9, 18], "4006": [10, 11], "4208": [10, 11], "maxscal": [10, 11], "server_vers": [10, 11], "4205": [10, 11], "4185": [10, 11], "choos": [10, 11, 17, 25, 31, 35, 52, 57, 59, 68, 87, 98, 116, 137, 139, 152, 157], "4187": [10, 11], "4116": [10, 11], "4151": [10, 11], "lele": 10, "gaifax": 10, "aubrei": [10, 11], "toller": [10, 11], "4162": [10, 11], "andr\u00e9": [10, 11], "cruz": [10, 11], "4136": 10, "seriou": [10, 11, 21, 75], "disconnectionerror": [10, 11, 29, 40, 41, 51], "pre_p": [10, 11, 12, 31, 40, 51, 71], "4184": [10, 11], "4078": [10, 11], "4103": [10, 11], "4124": [10, 11], "nicola": [10, 11, 12], "caniart": [10, 11, 12], "4126": [10, 11], "any_": [10, 11, 13, 22, 42, 49, 56, 59, 101, 123], "unintuit": [10, 11], "4093": [10, 11], "multidimension": [10, 11, 12, 67], "array_agg": [10, 11, 12, 42, 44, 59, 67], "4107": [10, 11], "on_conflict_do_upd": [10, 11, 13, 22, 54, 67, 68, 136], "4074": [10, 11], "retroact": [10, 11], "4097": [10, 11], "tx_isol": [10, 11], "transaction_isol": [10, 11, 12], "4120": [10, 11], "4096": [10, 11], "upstream": [10, 11, 12, 65], "4098": [10, 11], "4099": [10, 11], "08s01": [10, 11], "01002": [10, 11], "08003": [10, 11], "08007": [10, 11], "08s02": [10, 11], "08001": [10, 11], "hyt00": [10, 11], "hy010": [10, 11], "4095": [10, 11], "4030": [10, 11], "4069": [10, 11], "led": [10, 11, 16, 18, 25], "3915": [10, 11], "4048": [10, 11], "4068": 10, "4056": [10, 11], "4067": [10, 11], "4053": 10, "4011": [10, 11], "4033": [10, 11], "3514": [10, 11, 22], "4031": [10, 11, 13], "weakinstancedict": [10, 11], "infrequ": [10, 11, 26], "mondai": 10, "3893": [10, 11], "withingroup": [10, 11, 42, 44, 56], "4012": [10, 11], "10devel": [10, 11], "10beta1": [10, 11], "risk": [10, 11, 12, 21, 25], "4005": [10, 11], "sql_mode": [10, 11, 39], "4007": [10, 11], "notimpl": [10, 11], "resili": [10, 11, 12, 71], "3994": [10, 11], "xml": [10, 11, 19, 64, 144], "3973": [10, 11], "3997": [10, 11], "fridai": 10, "3986": [10, 11], "3949": [10, 11], "revok": [10, 11], "3966": [10, 11], "3961": [10, 11], "3975": [10, 11], "3980": [10, 11], "3859": [10, 11], "3952": [10, 11], "3955": [10, 11], "3950": [10, 11], "3956": 10, "mcculli": [10, 11], "as_mut": [10, 11, 23, 33, 59, 67, 117], "schemaeventtarget": [10, 11, 33, 35, 38, 40, 49, 59], "pat": [10, 11, 156], "deegan": [10, 11], "3933": [10, 11], "3947": [10, 11], "3946": [10, 11], "2892": [10, 12], "umber": 10, "3931": 10, "creatabl": [10, 67], "3924": 10, "unattend": 10, "accumul": [10, 21, 31, 80, 162], "worst": [10, 98], "42": [10, 26, 35, 67, 76, 102], "ineffici": [10, 13, 16, 19, 26, 122], "nevertheless": [10, 22, 24, 33, 66], "3909": 10, "3908": 10, "3895": 10, "3905": 10, "frazer": [10, 11], "mclean": [10, 11], "pawe\u0142": 10, "stiasni": 10, "3804": 10, "3900": 10, "3898": 10, "3896": [10, 11, 12, 23], "3901": 10, "3431": [10, 22], "3811": 10, "3854": 10, "emin": 10, "arakelian": 10, "3874": 10, "3856": 10, "lifespan": [10, 18, 31, 37, 40, 51, 67, 70, 80, 90, 147], "garc\u00eda": 10, "montoro": 10, "3872": 10, "3861": 10, "3882": 10, "spell": [10, 13, 20, 25, 67, 126, 154, 161], "3878": 10, "valeri": 10, "yundin": 10, "bg": 10, "3880": 10, "set_": [10, 13, 22, 54, 67, 68, 136], "3888": 10, "ionu\u021b": 10, "cioc\u00eerlan": 10, "mysql_prefix": [10, 12, 65], "fulltext": [10, 12, 65, 126], "joseph": 10, "schorr": 10, "roadmap": 10, "3867": 10, "3876": 10, "3877": 10, "all_tabl": [10, 13, 66], "9i": 10, "3875": 10, "3457": 10, "3852": 10, "3845": 10, "benjamin": 10, "doppling": 10, "3216": [10, 22], "3842": 10, "3807": 10, "3846": 10, "mysqlclient": [10, 11, 12, 13, 22, 24, 37, 78], "3841": 10, "cipher": [10, 68], "kevin": [10, 13], "jurczyk": 10, "pysqlcipher3": [10, 13, 68], "2677": [10, 22], "3839": 10, "3836": 10, "3833": 10, "2919": [10, 12, 22], "3832": [10, 11, 12], "3835": 10, "3824": 10, "3822": 10, "3823": 10, "3250": [10, 22], "3827": 10, "3828": 10, "3820": 10, "raise_on_sql": [10, 12, 13, 128, 140, 163], "raiseload": [10, 12, 13, 22, 127, 133, 137, 140, 142], "3812": 10, "diniz": 10, "3802": 10, "arriv": [10, 12, 20, 21, 70, 104], "persistent_to_delet": [10, 22, 97, 148, 149], "3808": 10, "3767": 10, "3801": 10, "3788": 10, "3776": [10, 22], "perkin": 10, "3805": 10, "3809": [10, 22], "3806": 10, "baseexcept": [10, 13, 40, 71], "keyboardinterrupt": [10, 13, 22, 40], "greenlet": [10, 13, 22, 41, 70, 71, 72, 82, 90, 102], "greenletexit": [10, 13, 22, 71], "3803": [10, 22], "ne": 10, "passaro": 10, "3799": 10, "3789": 10, "objectnotexecutableerror": [10, 13, 29, 41], "3786": 10, "jsonindextyp": [10, 59], "jsonpathtyp": [10, 59], "3766": 10, "3765": 10, "3763": 10, "3813": 10, "3749": [10, 22], "oninsert": 10, "3745": 10, "3744": 10, "3730": [10, 22], "validate_str": [10, 22, 59], "3725": 10, "__visit_name__": [10, 61], "3732": 10, "3726": 10, "jeong": 10, "yunwon": 10, "bulk_insert_map": [10, 22, 76, 90, 136, 146], "render_nul": [10, 90, 146], "tobia": [10, 13], "sauerwein": 10, "init_scalar": [10, 97, 98], "1311": [10, 22], "josh": 10, "marlow": 10, "2349": [10, 22], "approxim": [10, 12, 19, 25, 36, 54, 67, 71, 137, 138], "3631": [10, 22], "3081": [10, 22], "grai": 10, "3321": [10, 22], "adrian": 10, "moennich": 10, "3512": [10, 22], "3394": [10, 22], "3708": [10, 22], "3488": 10, "vanish": [10, 22], "3680": [10, 22], "3677": [10, 22], "3662": [10, 22], "redundantli": [10, 54], "3641": [10, 22], "3630": [10, 22], "3601": [10, 22], "3582": [10, 22], "evaluates_non": [10, 11, 22, 58, 59, 60, 136], "extent": [10, 12, 13, 37, 136, 141], "3526": 10, "close_detach": [10, 40], "2837": [10, 22], "tenanc": [10, 31], "schema_translate_map": [10, 12, 13, 22, 31, 48], "2685": [10, 22], "createengineplugin": [10, 11, 26, 31, 37, 38], "3536": 10, "tablesampl": [10, 12, 13, 42, 49, 54], "3718": [10, 22], "range_": [10, 11, 22, 44, 56], "3049": [10, 11, 22], "get_check_constraint": [10, 11, 12, 22, 23, 48, 52, 66], "gr\u00f6nholm": [10, 13], "is_distinct_from": [10, 12, 22, 49, 50, 56, 101, 123], "isnot_distinct_from": [10, 12, 13, 22, 49, 50, 56, 101, 123], "ddlcompil": [10, 29, 30, 48], "visit_create_t": 10, "create_table_suffix": 10, "sandan": 10, "emanuel": 10, "gaifa": 10, "2857": [10, 22], "stefan": 10, "urbanek": 10, "1957": [10, 22], "2551": [10, 22], "3095": [10, 22], "3292": [10, 22], "forth": [10, 18, 19, 31], "3501": [10, 22], "3619": [10, 22], "within_group": [10, 13, 22, 42, 44, 56, 155], "percentile_cont": [10, 22, 42, 44, 56, 155], "dense_rank": [10, 22, 42, 44, 56, 155], "1370": [10, 22], "aggregate_order_bi": [10, 11, 12, 13, 22, 67], "3132": [10, 22], "sadli": 10, "3516": [10, 22], "3616": 10, "fledg": [10, 54], "3531": [10, 22], "2528": [10, 22], "update_wrapp": 10, "hsum": 10, "3529": [10, 22], "3588": [10, 22], "postgresql_tablespac": [10, 22, 67], "bertrand": 10, "3720": [10, 22], "key_shar": [10, 22, 54, 137], "sergei": 10, "skopin": 10, "skip_lock": [10, 12, 13, 22, 54, 137], "pygresql": [10, 13], "kaolin": 10, "imago": 10, "get_view_definit": [10, 48, 52], "3587": 10, "2729": [10, 22], "fetchabl": 10, "3499": [10, 22], "3487": [10, 22], "3503": 10, "someindex": [10, 22, 32], "astext": [10, 67, 98, 115], "astext_typ": [10, 22, 67], "text_typ": [10, 22, 67], "3332": [10, 22], "getpath": [10, 22], "json_extract": [10, 22, 24, 57, 65, 68, 155], "3547": [10, 22], "michal": 10, "petrucha": 10, "3629": [10, 22], "get_schema_nam": [10, 13, 17, 22, 52], "brian": 10, "van": [10, 13], "klaveren": 10, "3634": [10, 22], "deliveri": 10, "3633": [10, 22], "nonclust": [10, 22, 64], "sauliu": 10, "\u017eemaita": 10, "3534": [10, 22], "3434": [10, 22], "binarynul": 10, "sheila": 10, "allen": 10, "varlength": 10, "3504": [10, 22], "mutableset": [10, 11, 117], "mutablelist": [10, 11, 12, 59, 67, 117], "3297": [10, 22], "autodoc": [10, 12], "3653": [10, 22], "2278": 10, "introduct": [11, 13, 16, 26, 31, 36, 40, 42, 45, 49, 57, 71, 81, 90, 93, 97, 127, 128, 131, 140, 142, 151, 160, 163], "4507": 11, "large_resultset": [11, 98], "reformat": 11, "schuchhardt": 11, "4528": 11, "python2": [11, 26], "4406": 11, "4536": [11, 12], "4506": 11, "4468": [11, 12], "pending_to_persist": [11, 97, 148, 149], "4489": 11, "should_evaluate_non": [11, 22, 58, 59, 60], "sanjana": [11, 12], "4485": 11, "4344": [11, 12], "4361": 11, "88718": [11, 12], "meanwhil": 11, "4492": 11, "bartlomiej": 11, "biernacki": 11, "4474": 11, "4499": 11, "before_compile_upd": [11, 97, 148], "before_compile_delet": [11, 97, 148], "4461": 11, "4454": 11, "consrc": 11, "stevenson": 11, "tip": [11, 17, 70, 84, 124, 145, 155], "4463": 11, "native_int": 11, "32": [11, 25, 33, 37, 64, 65, 66, 67, 152], "4457": 11, "sqlalchemyerror": [11, 12, 29, 41, 99], "2k": 11, "__unicode__": 11, "4429": 11, "droptablecom": 11, "4436": 11, "4416": 11, "4431": 11, "4394": 11, "4367": 11, "4349": 11, "4366": 11, "jump": 11, "4365": [11, 12, 24], "4363": [11, 12], "4400": 11, "4374": 11, "write_timeout": 11, "4381": 11, "jakub": 11, "synowiec": 11, "4377": 11, "4380": 11, "insuffici": [11, 13, 19], "flaw": 11, "4357": 11, "4347": 11, "lower_case_table_nam": 11, "4326": [11, 124], "4350": 11, "4352": 11, "sqlcompil": [11, 12, 13, 25, 29, 30, 31, 48, 70, 78], "group_by_claus": [11, 12, 48], "order_by_claus": [11, 12, 48], "limit_claus": [11, 12, 31], "samuel": [11, 12], "chou": [11, 12], "4341": 11, "4337": 11, "4348": 11, "languag": [11, 13, 19, 23, 25, 27, 31, 32, 34, 36, 42, 44, 46, 50, 56, 65, 66, 67, 79, 80, 81, 82, 94, 129, 148, 151, 154, 155, 157, 159, 160, 161, 162], "joe": 11, "urciuoli": 11, "xtreak": 11, "4339": 11, "romuald": 11, "brunet": 11, "correlat": [11, 12], "4304": [11, 12], "4334": [11, 12], "3472": [11, 23], "updated_at": [11, 24, 65, 118], "unreach": [11, 12, 13, 87], "4327": 11, "4325": 11, "4324": 11, "4323": 11, "getvalu": [11, 76], "dml_ret_array_v": 11, "4335": 11, "4328": 11, "intermedi": 11, "4321": 11, "3639": 11, "4320": 11, "functionfilt": [11, 21, 42, 44, 56], "4322": 11, "4313": 11, "advic": [11, 23, 24], "loss": [11, 59, 71, 80], "4309": 11, "nathaniel": 11, "knight": 11, "phillip": 11, "cloud": 11, "4295": 11, "4287": 11, "4298": 11, "4300": 11, "3505": 11, "selectin": [11, 12, 13, 25, 127, 128, 132, 140], "4286": 11, "4256": 11, "4228": 11, "4269": 11, "4270": 11, "4147": 11, "4279": 11, "4293": 11, "utf8mb3": [11, 12, 13, 65], "4283": 11, "3645": 11, "typereflectiontest": 11, "dunn": 11, "4288": 11, "dm_exec_sess": [11, 13], "dm_pdw_nodes_exec_sess": [11, 13], "unboundlocalerror": 11, "4273": 11, "dialectev": [11, 12, 13, 37, 38, 40, 59, 64, 66, 71], "setiputs": [11, 12], "visibl": [11, 12, 13, 15, 17, 21, 25, 26, 41, 52, 66, 67, 87, 97, 149, 151], "4290": [11, 12], "segment": [11, 31], "4275": 11, "lazy_loaded_from": [11, 12, 137, 146], "4243": [11, 12], "formatargspec": [11, 12], "4291": 11, "_param": 11, "tempor": [11, 80, 148], "_generate_cache_kei": [11, 30, 31], "relationshipcach": [11, 98], "4258": 11, "4128": 11, "with_post_criteria": [11, 104], "relationship_cach": [11, 98], "4252": 11, "olivi": 11, "grisel": 11, "miguel": [11, 12, 13], "ventura": 11, "4061": 11, "goal": [11, 13, 17, 24, 25, 26, 51, 54, 70, 154], "bigger": [11, 13, 21, 31, 59, 70, 147], "4250": 11, "binary_float": 11, "binary_doubl": 11, "native_float": 11, "nan": 11, "4264": 11, "4259": 11, "4249": 11, "4137": [11, 23], "4247": 11, "unfinish": 11, "4266": 11, "identity_token": [11, 23, 90, 102, 132, 146], "4241": 11, "4231": 11, "regclass": [11, 12, 67], "4160": [11, 12], "daterang": [11, 67], "4229": 11, "4060": 11, "4234": 11, "associate_with": [11, 117], "4215": 11, "4225": [11, 13], "4204": 11, "postgresql_partition_bi": [11, 24, 67], "vsevolod": 11, "solovyov": 11, "4227": 11, "4211": 11, "4221": 11, "only_return_tupl": [11, 12, 25, 137], "eric": [11, 12, 13], "atkin": [11, 12], "4199": 11, "4209": 11, "4210": 11, "ctenam": 11, "aliasnam": [11, 54, 132], "4198": 11, "3673": 11, "4193": 11, "4181": 11, "optionengin": [11, 12], "4190": 11, "4197": 11, "set_attribut": [11, 145, 146], "initit": 11, "selectinload": [11, 12, 13, 23, 25, 26, 75, 102, 124, 127, 128, 137, 138, 146, 148, 151, 163], "4175": 11, "4188": 11, "4178": 11, "4170": 11, "snyder": 11, "3906": 11, "knell": 11, "4180": 11, "neither": [11, 19, 22, 23, 24, 25, 26, 32, 34, 56, 57, 65, 70, 118, 140], "pysqlite2": [11, 25], "miroslav": 11, "shubernetskii": 11, "databaseerror": [11, 29, 41], "4182": 11, "thought": [11, 24, 77, 104], "8743": 11, "associationset": 11, "3265": 11, "4171": 11, "riccardo": 11, "magliocchetti": 11, "10054": 11, "4164": 11, "nls_nchar_characterset": 11, "4163": 11, "_unboundload": 11, "4159": 11, "3954": [11, 23], "4153": 11, "4156": 11, "3785": [11, 23], "4154": 11, "4157": 11, "group_by_complex_express": 11, "3769": [11, 23], "4150": 11, "differenti": [11, 12, 13, 16, 21, 22, 31, 37, 54, 59, 80, 94, 98, 103, 121], "unwant": [11, 13, 22, 25, 87, 126, 127, 163], "4130": 11, "4032": 11, "password_origin": 11, "4089": 11, "autoescap": [11, 49, 56, 59, 101, 123], "slash": [11, 13, 23, 37, 68], "2694": [11, 23], "column_el": 11, "4142": 11, "4141": 11, "4140": 11, "959": [11, 23], "cleber": 11, "santo": 11, "4115": 11, "nullparam": 11, "4121": 11, "infin": 11, "4064": 11, "4135": 11, "3934": [11, 23], "4050": 11, "4084": 11, "4040": 11, "4026": 11, "lru": [11, 13, 31, 56, 104], "antipattern": 11, "inconveni": [11, 13, 25, 26, 77], "4071": 11, "4049": 11, "3366": 11, "unevaluatableerror": 11, "4073": 11, "4091": 11, "4092": 11, "__next__": 11, "slower": [11, 12, 13, 21, 25, 68], "4077": 11, "recoveri": [11, 13, 71], "4028": 11, "defaultexecutioncontext": [11, 23, 29, 35, 48], "get_current_paramet": [11, 23, 35, 48], "4075": [11, 23], "4087": 11, "poll": 11, "consensu": 11, "4102": [11, 22, 23], "return_typ": [11, 49, 56, 101, 123], "bool_op": [11, 23, 49, 56, 57, 101, 123, 124], "4063": 11, "4088": 11, "use_batch_mod": [11, 12, 23, 25], "execute_batch": [11, 25, 67], "magnitud": [11, 12, 13, 67, 163], "4109": [11, 23], "py_typ": 11, "4041": 11, "4016": 11, "4072": 11, "rowvers": [11, 64], "4086": 11, "4058": 11, "4057": 11, "4062": 11, "sane_rowcount": 11, "heap": 11, "4059": 11, "took": [11, 13, 21, 25, 26, 31, 57, 76, 85, 148], "came": [11, 13, 25, 26, 71, 91, 147, 149, 155], "ret_nnn": 11, "allow_twophas": [11, 23, 24], "4042": 11, "interfaceerror": [11, 13, 29, 41], "unclos": 11, "4045": 11, "4076": 11, "underl": 11, "fagin": 11, "with_express": [11, 12, 13, 23, 126, 128, 130, 137, 138], "3058": [11, 23], "3948": [11, 23], "3944": [11, 23], "update_express": [11, 13, 23, 113], "3229": 11, "3303": [11, 23], "3496": [11, 23], "3471": [11, 23], "3996": 11, "3796": [11, 23], "demot": 11, "3988": 11, "3991": [11, 23], "unexpiri": [11, 13, 25], "3984": 11, "3967": 11, "attent": [11, 17, 26, 151], "brought": [11, 13, 25], "3963": 11, "flag_dirti": [11, 145, 146], "3753": [11, 23], "3891": [11, 23, 25], "3913": [11, 23], "from_ent": [11, 137], "3607": 11, "3848": 11, "pessimist": [11, 24, 37, 38, 71], "pool_pre_p": [11, 13, 23, 31, 37, 40, 51], "ping": [11, 12, 13, 23, 31, 37, 40, 65, 71], "3919": [11, 23], "3938": 11, "3953": [11, 23], "1546": [11, 23], "longstand": [11, 12], "empty_in_strategi": [11, 23, 25, 37, 49, 56, 101, 123], "3907": [11, 23], "stronger": 11, "4018": [11, 23], "4020": [11, 23], "4017": [11, 23], "3999": [11, 23], "3873": 11, "3969": 11, "3740": [11, 23], "sqltext": [11, 32, 35, 48, 52], "ago": [11, 13, 18, 22, 31, 70, 76, 148], "3957": 11, "uncommon": [11, 13, 26, 31, 51, 70, 77, 85, 102, 132], "3923": 11, "3939": 11, "3964": 11, "minut": [11, 19, 68], "3959": [11, 23], "doronin": 11, "4009": [11, 23], "unreflect": 11, "3871": 11, "2626": [11, 23], "eloi": 11, "felix": 11, "4003": [11, 23], "commonplac": [11, 20], "3932": 11, "3276": [11, 23], "enable_baked_queri": [11, 104, 146], "bakeri": [11, 21, 104], "__ior__": [11, 23], "__iand__": [11, 23], "__ixor__": [11, 23], "__isub__": [11, 23], "__iadd__": [11, 23], "3853": [11, 23], "3847": 11, "3941": 11, "repurpos": [11, 23, 24, 25, 31, 59, 77, 84, 113, 136], "3911": [11, 23], "3912": [11, 23], "highest_protocol": [11, 59], "3918": 11, "6392": [12, 13], "6135": [12, 13], "6023": [12, 13], "some_schema_typ": [12, 13], "6182": [12, 13], "richter": [12, 13], "7115": [12, 13], "7136": [12, 13], "6589": [12, 13], "5983": [12, 13], "noreferenceerror": [12, 13, 29, 41], "nonetheless": [12, 13, 19, 24, 25, 26, 78, 132, 155], "5952": [12, 13], "6001": [12, 13], "5929": [12, 13], "nnd": 12, "6152": 12, "unintend": [12, 13, 22, 23, 25], "6007": [12, 13], "5919": [12, 13], "6071": [12, 13], "5989": [12, 13], "6161": [12, 13], "asyncpg": [12, 13, 25, 37, 40, 102], "sp_column": 12, "5921": 12, "5816": 12, "pin": [12, 13, 19, 25], "giusepp": 12, "lumia": 12, "5645": 12, "to_metadata": [12, 13, 40, 49, 59], "5850": 12, "usecas": [12, 13], "5808": 12, "5860": 12, "5898": 12, "aros": [12, 26], "5821": 12, "5462": 12, "5800": 12, "4894": 12, "5813": 12, "5812": 12, "5836": 12, "5755": [12, 13], "gracefulli": [12, 13, 16, 22, 31, 37, 51], "5784": [12, 13], "warrant": [12, 13, 76], "5774": [12, 13], "_ormsess": 12, "5664": 12, "restore_load_context": [12, 13, 97], "5737": [12, 13], "5691": 12, "5656": 12, "menczer": [12, 13], "5604": [12, 13], "5729": [12, 13], "5744": [12, 13], "oscar": 12, "batori": 12, "5696": 12, "sqlite_with_rowid": [12, 68], "5685": 12, "mssql_where": [12, 13, 64], "adiorz": 12, "5751": 12, "01000": 12, "5646": 12, "fulpm": 12, "5661": 12, "ramon": [12, 13], "william": [12, 13, 57, 151], "4428": 12, "uninform": [12, 13], "4589": 12, "andrzej": 12, "bartosi\u0144ski": 12, "5599": 12, "5632": 12, "5644": 12, "5618": 12, "4392": [12, 13, 78], "5518": 12, "5520": 12, "cube": [12, 42, 44], "5539": 12, "5568": [12, 13], "leftmost": [12, 137, 151, 155], "5617": 12, "dw": 12, "activedirectoryintegr": [12, 64], "5592": 12, "5635": 12, "use_lifo": [12, 51], "5582": [12, 13], "5541": 12, "5542": 12, "5494": 12, "jess": 12, "bakker": 12, "5513": 12, "5470": 12, "lookuperror": [12, 22, 59], "ellips": 12, "4733": 12, "5500": 12, "jim": [12, 57, 156], "bosch": 12, "5476": 12, "dual": [12, 13, 48, 66, 130, 155], "5481": 12, "5411": 12, "1927": 12, "5493": 12, "sweep": [12, 119], "5456": 12, "5467": 12, "487": 12, "__init_subclass__": [12, 13], "ewen": 12, "gilli": 12, "5357": 12, "5326": 12, "query_express": [12, 13, 23, 126, 130], "default_expr": [12, 126, 130], "appl": [12, 20, 73, 82], "haoyu": 12, "5198": 12, "consumpt": 12, "visual": [12, 20, 102], "agent": [12, 13], "grinberg": [12, 13], "5341": [12, 25], "dylan": 12, "modesitt": 12, "5309": 12, "alan": [12, 13], "snow": 12, "5294": 12, "5344": 12, "5353": 12, "identityopt": [12, 35], "5324": [12, 13], "5276": 12, "quentin": 12, "somervil": 12, "4860": 12, "5297": 12, "thodori": 12, "sotiropoulo": 12, "5395": [12, 13], "supports_sane_rowcount_return": [12, 48], "pyodbcconnector": 12, "msdialect_pyodbc": 12, "5321": 12, "brack": 12, "5364": 12, "5366": 12, "drivernam": [12, 13, 25, 37], "5346": 12, "brace": [12, 13], "5373": 12, "5339": 12, "5359": 12, "5421": 12, "5262": 12, "sync_backref": [12, 13, 25, 26, 123, 140], "5149": [12, 25], "5237": [12, 13, 25], "relationshipcompar": 12, "5288": 12, "5303": 12, "5304": 12, "5269": 12, "5298": 12, "5316": 12, "4138": 12, "5265": 12, "5266": 12, "td": [12, 63], "protocol": [12, 17, 48, 51, 55, 59, 65, 66, 80, 102, 113], "5255": 12, "5271": 12, "5314": 12, "outputtyp": 12, "5246": 12, "5278": 12, "planner": [12, 23, 67], "5162": 12, "slot": [12, 56, 87, 91], "5228": 12, "5210": 12, "eval": [12, 75, 84, 124, 140], "5238": 12, "5052": 12, "get_column": [12, 13, 21, 22, 23, 24, 40, 48, 52, 64, 66], "5063": 12, "4458": [12, 13], "marat": 12, "sharafutdinov": 12, "5205": 12, "pseudo": [12, 25], "proxysql": 12, "5239": 12, "5164": 12, "5137": 12, "5200": 12, "5146": 12, "all_tab_com": 12, "5201": 12, "5183": 12, "pyproject": 12, "toml": 12, "517": [12, 13], "distro": 12, "5207": 12, "5194": 12, "4849": 12, "5196": 12, "stacktrac": [12, 26], "__suppress_context__": 12, "loaded_as_persist": [12, 97, 148, 149], "5129": 12, "5056": [12, 25], "pathregistri": [12, 146], "5110": 12, "5080": 12, "5121": 12, "5182": 12, "5181": 12, "5158": 12, "newlin": 12, "borczuk": 12, "5170": 12, "on_duplicate_key_upd": [12, 13, 23, 24, 65], "5173": 12, "4983": 12, "5045": 12, "5132": 12, "hirschfeld": 12, "5114": 12, "5085": 12, "5180": 12, "formatannot": 12, "5138": 12, "averag": [12, 90, 102, 146, 155], "70": [12, 104], "carson": 12, "ip": [12, 67, 80], "5050": 12, "5071": 12, "5082": 12, "5107": 12, "5068": 12, "5065": 12, "_bind_processor": 12, "reusabl": [12, 16, 31, 121], "5048": 12, "4467": 12, "5079": 12, "hasct": [12, 13, 36, 42, 54, 137], "5040": 12, "5039": 12, "federico": 12, "caselli": 12, "4946": 12, "max_prepared_transact": 12, "5057": 12, "uniquifi": [12, 13, 56, 138], "5086": 12, "4353": [12, 24], "4997": 12, "4351": [12, 24], "5000": [12, 22, 113], "4993": [12, 13, 25], "__setslice__": 12, "4990": 12, "unpref": 12, "5034": 12, "5028": 12, "5014": 12, "is_single_ent": [12, 137], "4934": 12, "omit_join": [12, 24, 123, 140], "4954": 12, "lev": 12, "izraelit": 12, "4915": 12, "bake_ok": [12, 97, 104], "4947": 12, "4974": 12, "4902": 12, "4955": 12, "as_str": [12, 59, 64, 67], "as_boolean": [12, 59, 64], "as_float": [12, 13, 59, 64], "as_integ": [12, 59, 64, 67], "4276": 12, "4933": 12, "backslashreplac": 12, "4931": 12, "foo_id": [12, 18, 26, 72, 75, 96], "column_0_label": [12, 32, 49], "4911": 12, "internalerror": [12, 29, 41], "4945": 12, "4973": 12, "4923": 12, "encoding_error": [12, 66], "encodingerror": [12, 66], "4799": 12, "upper": [12, 13, 49, 56, 98, 101, 103, 123, 155], "european": 12, "fixed_nchar": 12, "4913": 12, "luken": 12, "4903": 12, "4920": 12, "msvc": 12, "grace": [12, 25, 71], "4967": 12, "4857": [12, 13], "remaind": [12, 146], "4898": 12, "4775": 12, "4872": 12, "4481": [12, 24], "4873": 12, "4890": 12, "4847": 12, "4837": 12, "4863": 12, "4883": 12, "4886": 12, "4285": 12, "sort_key_funct": [12, 33, 58, 59, 60], "picklabl": [12, 13, 15, 17, 117, 137], "4823": 12, "hide_paramet": [12, 31, 37, 41, 45], "4815": 12, "4807": 12, "not_valid": 12, "finn": 12, "4824": 12, "execute_valu": [12, 13, 67], "4623": [12, 25], "contained_bi": [12, 13, 22, 67], "4822": 12, "4810": 12, "4777": 12, "4803": 12, "4778": 12, "column_express": [12, 19, 22, 31, 33, 58, 60, 67], "_select": [12, 13, 25, 49, 54, 56], "compoundselect": [12, 13, 25, 42, 48, 54, 57, 138, 155], "4787": 12, "4780": 12, "executemany_mod": [12, 13, 25, 67], "yuval": 12, "dinari": 12, "4783": 12, "4804": 12, "php": [12, 24, 28, 62], "96365": 12, "4751": 12, "json_seri": [12, 37, 59, 67], "_json_seri": [12, 37, 59], "_json_deseril": 12, "4798": 12, "table_info": [12, 31, 33, 49], "4793": 12, "try_cast": [12, 64], "leonel": 12, "atencio": 12, "4782": 12, "4794": 12, "hierarch": [12, 98, 113, 126, 128, 144], "defaultload": [12, 20, 126, 127, 128, 137], "alessio": 12, "bogon": 12, "4736": 12, "4340": [12, 24], "4773": 12, "_ormjoin": 12, "deni": 12, "kataev": 12, "4713": 12, "4772": 12, "unconfigur": [12, 132], "4767": 12, "4754": 12, "__members__": [12, 59], "4758": 12, "4760": 12, "4747": 12, "4771": 12, "4756": 12, "4743": 12, "alphanumer": [12, 13], "mariadbv1": 12, "4624": 12, "tuple_in_valu": 12, "4766": 12, "4745": 12, "4723": 12, "__mapper__": [12, 134], "is_attribut": [12, 101, 113, 123], "4729": 12, "elementtre": [12, 98], "4704": 12, "getfullargspec": 12, "4674": 12, "4694": 12, "Not": [12, 26, 31, 49, 56, 65, 102, 136, 137], "4730": 12, "4717": 12, "4701": 12, "luk\u00e1\u0161": 12, "bani\u010d": 12, "4715": 12, "4695": 12, "4690": 12, "4686": 12, "4647": 12, "4676": 12, "wilk": 12, "4663": 12, "adrien": 12, "berchet": 12, "4653": 12, "4618": 12, "4569": [12, 13], "psycogp2": 12, "4661": 12, "hann": 12, "hansen": 12, "4650": 12, "4657": 12, "20047": 12, "schuff": 12, "4680": 12, "manifest": [12, 13], "4625": 12, "fold": [12, 25, 48], "4584": 12, "treatment": [12, 21, 22, 102], "4606": 12, "4562": 12, "4601": 12, "lewellyn": 12, "4587": 12, "4585": 12, "__reduce_ex__": 12, "4603": 12, "classifi": [12, 80], "prox": 12, "ambiguousassociationproxyinst": 12, "4573": 12, "4574": 12, "4537": 12, "4566": 12, "bind_express": [12, 13, 19, 22, 33, 56, 58, 60, 67], "arrayofenum": [12, 67], "4580": 12, "julian": 12, "mehnl": 12, "raymond": 12, "lu": 12, "4550": 12, "4522": 12, "4393": [12, 24], "4525": 12, "4316": 12, "3133": 12, "nate": [12, 19], "4500": [12, 24], "4509": 12, "resolve_fk": [12, 13, 49, 52], "4517": 12, "4469": 12, "4470": 12, "cve": 12, "7164": 12, "7548": 12, "punctuat": 12, "on_delet": 12, "on_upd": 12, "gist": [12, 67], "btree": 12, "4473": 12, "unmaintain": [12, 13, 65], "parth": 12, "shandilya": 12, "4460": 12, "2642": [12, 24], "4423": [12, 24], "before_mapper_configur": [12, 39, 97], "ext_skip": [12, 97], "4397": 12, "close_all_sess": [12, 90, 145, 146], "close_al": [12, 90, 102, 146], "classmethod": [12, 13, 15, 32, 37, 43, 48, 49, 52, 54, 56, 88, 90, 92, 101, 102, 103, 104, 107, 117, 123, 137, 146, 147], "augustin": 12, "trancart": 12, "4412": 12, "1103": [12, 24], "somesubclass": 12, "4373": 12, "explan": [12, 22, 140, 149, 161], "4433": 12, "__delitem__": [12, 24, 87, 117], "get_execution_opt": [12, 31, 54, 102, 137], "lister": 12, "4464": 12, "3423": [12, 24], "4446": 12, "3777": 12, "4372": 12, "irina": 12, "delamar": 12, "3689": 12, "amend": [12, 13], "ansifunct": [12, 42, 44], "4386": 12, "marshal": [12, 19, 35, 60, 67, 80, 87, 117], "compel": 12, "4442": 12, "4401": 12, "preserve_ord": [12, 13, 90, 146], "alessandro": 12, "cucci": 12, "jayson": 12, "rei": 12, "4257": [12, 24], "3844": [12, 24], "4359": [12, 24], "4246": [12, 24], "saw": [12, 155, 157], "4232": 12, "3604": 12, "oversight": [12, 13], "__delete__": [12, 80, 123], "4354": [12, 24], "4133": 12, "lifo": [12, 24, 37, 38, 87, 117], "pool_use_lifo": [12, 24, 37, 51], "taem": 12, "park": 12, "my_sequ": [12, 136], "nextvalu": 12, "4144": 12, "column_0n_nam": [12, 24, 32, 49, 66], "column_0_n_nam": [12, 24, 32, 49], "shorten": [12, 104], "column_0_kei": [12, 24, 32, 49], "referred_column_0_nam": [12, 24, 32, 49], "3989": [12, 13, 24], "4271": [12, 24, 26], "dir": 12, "autocomplet": 12, "uw": 12, "korn": 12, "as_comparison": [12, 24, 44, 124], "3831": [12, 24], "4302": 12, "3981": [12, 24], "relkind": [12, 21, 67], "4237": [12, 24], "mysql_with_pars": [12, 65], "spatial": 12, "4219": 12, "bubli": 12, "3850": [12, 24], "4360": [12, 24], "fast_executemani": [12, 13, 64], "4158": [12, 24], "mssql_identity_start": [12, 13, 24, 25, 64], "mssql_identity_incr": [12, 13, 24, 25, 64], "4362": [12, 24], "4369": [12, 13, 24], "use_nchar_for_unicod": [12, 24, 66], "mitig": [12, 24, 66, 67, 70, 71, 76, 128], "4242": [12, 24], "to_queri": [12, 104], "4318": 12, "_execute_crud": 12, "4196": [12, 24], "intrins": [12, 13, 22, 24, 31, 84], "for_class": [12, 24, 101], "4268": [12, 24], "cascade_scalar_delet": [12, 101], "4308": [12, 24], "narr": [13, 25, 70], "uber": 13, "sqlalchemy_warn_20": [13, 25, 26], "alert": [13, 18, 57, 67, 117], "silenc": [13, 70], "sqlalchemy_silence_uber_warn": 13, "8983": 13, "secur": [13, 26, 55, 67, 78, 80, 84], "8995": 13, "lambda": [13, 15, 21, 24, 25, 38, 43, 48, 56, 59, 70, 78, 84, 87, 91, 92, 94, 101, 102, 103, 104, 132, 137, 140, 148, 152], "9033": 13, "eventlet": [13, 22, 25, 70, 71, 102], "harden": 13, "niklau": 13, "tenaci": 13, "8974": 13, "column_valu": [13, 44, 54, 67, 155], "joins_implicitli": [13, 44], "table_valu": [13, 44, 49, 54, 67, 155], "7845": 13, "9009": 13, "8989": 13, "9029": 13, "macaddr8": [13, 67], "asim": 13, "farooq": 13, "8393": 13, "9023": 13, "8804": 13, "index_list": [13, 21, 161], "8969": 13, "passenv": 13, "unusual_column_name_charact": 13, "9002": 13, "2022": [13, 118], "suspend": 13, "4994": [13, 25], "8862": 13, "thorni": 13, "8881": 13, "freez": [13, 31, 102, 123, 148], "exec_driver_sql": [13, 26, 31, 68, 102], "8963": 13, "8800": 13, "regexp_replac": [13, 25, 49, 50, 56, 101, 123], "4123": 13, "8827": 13, "asyncresult": [13, 25, 31, 102], "8952": 13, "format_typ": 13, "8748": 13, "gorven": 13, "8903": 13, "pfeiffer": 13, "4379": 13, "8866": 13, "8708": 13, "8945": 13, "rollo": 13, "konig": 13, "brock": 13, "patient": [13, 113], "8790": 13, "6718": 13, "6710": 13, "8770": 13, "some_t": [13, 21, 22, 23, 24, 25, 26, 35, 36, 40, 44, 49, 54, 56, 57, 58, 61, 64, 65, 66, 67, 68, 70, 78, 87, 92, 97, 123, 132, 133, 136, 146, 150, 156, 157, 161], "8793": 13, "990": 13, "8738": 13, "join_from": [13, 25, 26, 54, 96, 135, 137, 138, 155, 163], "with_loader_criteria": [13, 31, 98, 123, 127, 128, 137, 138, 147, 148], "8721": 13, "8711": 13, "8753": 13, "selectin_polymorph": [13, 23, 122, 127, 128, 137], "8704": 13, "generatorexit": 13, "scalarresult": [13, 31, 38, 90, 102, 139, 146, 155], "mappingresult": [13, 31, 38, 102, 157], "8710": 13, "8717": 13, "8724": 13, "barri": 13, "8714": 13, "8700": 13, "nls_session_paramet": 13, "8744": 13, "bind_argu": [13, 90, 102, 112, 123, 136, 146, 148], "8614": 13, "7094": 13, "7545": 13, "8569": 13, "8507": 13, "8536": 13, "shield": 13, "8145": 13, "8516": 13, "8574": 13, "starrock": 13, "bodlei": 13, "8588": 13, "8231": 13, "8475": 13, "crm": 13, "system_view": 13, "8525": 13, "8467": 13, "8401": 13, "6595": 13, "8456": 13, "8446": 13, "closur": [13, 31, 56, 137], "8399": 13, "8441": 13, "abandon": [13, 23, 51], "8419": 13, "8357": 13, "amongst": [13, 139, 146], "8235": 13, "8190": 13, "filterresult": [13, 31, 38, 102], "8199": 13, "8253": 13, "tchapi": 13, "8196": 13, "__aexit__": 13, "asyncconnect": [13, 25, 70, 71, 102], "asyncsess": [13, 25, 70, 85, 90, 98, 123, 146], "anyio": 13, "uvloop": 13, "async": [13, 25, 41, 68, 70, 71, 90, 102], "host1": [13, 25, 37], "port1": 13, "host2": [13, 25, 37], "port2": 13, "host3": [13, 25], "port3": 13, "multihost": 13, "unintention": 13, "h1": 13, "h2": 13, "h3": 13, "p1": [13, 20, 21, 84], "p2": [13, 20], "p3": 13, "inspir": [13, 17, 21, 22, 25, 26, 37, 51], "upsert": [13, 22, 23, 24, 54, 57, 90, 138, 145, 146, 147], "8210": 13, "synaps": 13, "analyt": 13, "ignore_no_transaction_on_rollback": [13, 64], "111214": [13, 64], "valuabl": [13, 98], "ww2406": 13, "7249": 13, "8133": 13, "8064": 13, "8162": 13, "8091": 13, "8109": 13, "__weakref__": 13, "getmemb": 13, "8115": 13, "lambda_stmt": [13, 25, 31, 42, 43, 56], "8098": 13, "8084": 13, "8056": 13, "construct_param": [13, 48], "escape_nam": [13, 48], "8113": 13, "8100": 13, "8101": 13, "8111": 13, "8001": 13, "8053": 13, "5653": [13, 25], "stacklevel": 13, "7612": 13, "8019": 13, "8014": 13, "8073": 13, "7979": 13, "8018": 13, "7871": 13, "7966": 13, "exceed": 13, "valievkarim": 13, "8036": 13, "8062": 13, "8035": 13, "oracledb": 13, "8066": 13, "7861": 13, "7936": 13, "7900": 13, "__array__": 13, "cython": 13, "berg": 13, "7875": 13, "7953": 13, "referred_column_0": 13, "reveal": [13, 16, 22, 25, 70, 76, 77, 85, 128, 158], "7958": 13, "contextvar": 13, "7937": 13, "6515": 13, "7943": 13, "7930": 13, "7518": 13, "simpleupdatedeletetest": 13, "7919": 13, "tablevaluedalia": [13, 42, 44, 54, 67, 155], "render_deriv": [13, 44, 54, 67], "7890": 13, "7823": 13, "7903": 13, "7878": 13, "6581": 13, "7880": 13, "7805": 13, "returning_column_descript": [13, 36, 138], "entity_descript": [13, 36, 54, 138], "7868": 13, "7801": 13, "7799": 13, "7862": 13, "7842": 13, "fork": [13, 31, 37, 38, 63, 72, 147], "7815": 13, "7877": 13, "7853": 13, "lint": [13, 37, 48], "json_each": [13, 44, 67, 155], "literal_execut": [13, 25, 56], "7876": 13, "7760": 13, "textualselect": [13, 42, 45, 54, 56, 102, 138], "7798": 13, "retain_schema": [13, 49], "7860": 13, "5463": 13, "7160": 13, "low": [13, 19, 22, 24, 25, 31, 40, 52, 68, 76, 77, 80, 97], "80": [13, 23], "lin": 13, "7812": 13, "7827": 13, "7594": 13, "7697": 13, "lineno": [13, 76, 98], "formatt": 13, "marku": 13, "gerstel": 13, "7721": 13, "yuki": 13, "nishimin": 13, "7598": 13, "7720": 13, "7789": 13, "add_ct": [13, 54], "asyncmi": 13, "7667": 13, "gilbert": 13, "gilb": 13, "7600": 13, "mariadbconnector": [13, 65], "cursorresult": [13, 25, 31, 35, 36, 38, 40, 45, 48, 49, 56, 57, 62, 65, 67, 68, 76, 97, 102, 132, 136, 137, 147, 154, 156, 157, 162], "proactiv": 13, "7738": 13, "7736": 13, "_id": 13, "7676": 13, "dpi": 13, "1080": 13, "1010": [13, 25], "7748": 13, "xdist": 13, "pytest_disable_plugin_autoload": 13, "7599": 13, "discoveri": [13, 39, 40], "7045": 13, "7591": 13, "7148": 13, "7590": 13, "7567": 13, "ci": [13, 63, 64, 65, 66, 67, 68, 150], "7593": 13, "filestream": [13, 64], "7243": 13, "7507": 13, "map_imp": [13, 25, 26, 84, 85, 88, 91, 121, 124, 126, 131, 132, 133, 134], "7579": 13, "7524": 13, "polymorphic_load": [13, 122, 132], "7557": 13, "subuqueri": 13, "7576": 13, "7514": 13, "7505": 13, "psycopg3": 13, "7537": 13, "typograph": 13, "7032": 13, "daemon": [13, 147], "7321": 13, "adaptedconnect": [13, 29, 48, 51, 102], "run_async": [13, 48, 102], "analog": [13, 31, 56, 57, 98, 102, 137, 147], "run_sync": [13, 25, 70, 98, 102], "7580": 13, "jose": 13, "duart": 13, "7561": 13, "7382": 13, "7418": 13, "long2ic": [13, 65], "7410": 13, "7489": 13, "7491": 13, "__class_getitem__": 13, "inaccess": 13, "7368": 13, "7462": 13, "7447": 13, "7432": 13, "7446": 13, "930": 13, "__builtins__": 13, "unqualifi": 13, "7496": 13, "async_engine_config": 13, "7301": 13, "7457": 13, "compareandcopytest": 13, "test_all_pres": 13, "artifact": [13, 26, 97, 123], "7450": 13, "632": 13, "59": 13, "7311": 13, "7425": 13, "484": [13, 26, 27, 49, 56, 83, 84, 95, 101, 114, 120, 123, 140], "1763": [13, 25], "7318": 13, "userdefinedopt": [13, 98, 146], "executableopt": 13, "hascachekei": [13, 30, 42, 43, 49, 54, 56, 61, 65, 67, 68, 70, 76, 123], "7394": 13, "7389": 13, "cancellederror": 13, "7388": 13, "4390": 13, "tom": 13, "ritchford": 13, "7400": 13, "masseran": 13, "7259": 13, "unifi": [13, 18, 31, 50, 54, 80, 98, 102, 134, 151, 160], "7386": 13, "cache_ok": [13, 33, 58, 59, 60, 64, 68, 70, 76], "6436": 13, "externaltyp": [13, 33, 58, 59, 60, 70, 76], "cacheabl": [13, 23, 25, 31, 33, 56, 58, 59, 104, 148], "7319": 13, "lesser": [13, 20, 31, 77, 136, 140], "dunder": 13, "aliased_b": 13, "7224": 13, "7274": 13, "7239": 13, "7304": 13, "7244": 13, "rowmap": [13, 31, 38, 102, 157], "7291": 13, "7272": 13, "tupletyp": 13, "7292": 13, "7269": 13, "anywher": [13, 15, 31, 57, 63, 64, 140, 151, 156], "7287": 13, "7295": 13, "pgdialect_asyncpg": 13, "setup_asyncpg_json_codec": 13, "setup_asyncpg_jsonb_codec": 13, "codec": [13, 25], "7284": 13, "7283": 13, "7167": 13, "diverg": [13, 18, 26, 65, 66], "kirsch": 13, "cristian": 13, "sabaila": 13, "7281": 13, "postcompil": [13, 50, 56], "7300": 13, "7189": 13, "7205": 13, "6991": 13, "async_scoped_sess": [13, 90, 102], "7103": 13, "everywher": [13, 20], "6972": 13, "6974": 13, "prebuffer_row": [13, 70], "prebuff": 13, "7128": 13, "7153": 13, "6259": 13, "7154": 13, "7134": 13, "ordered_valu": [13, 26, 36, 57, 156], "7209": 13, "6284": 13, "versioned_row": [13, 98], "do_orm_execut": [13, 26, 97, 98, 137, 146, 147, 148], "7169": 13, "seven": [13, 20], "7130": 13, "reflect_t": [13, 52], "3247": 13, "7077": 13, "6520": 13, "fullnam": [13, 15, 20, 21, 22, 24, 25, 26, 34, 36, 56, 57, 65, 67, 68, 91, 92, 95, 96, 113, 118, 126, 128, 130, 133, 134, 136, 138, 139, 141, 147, 151, 154, 155, 156, 161, 162, 163], "7061": 13, "flip": [13, 31, 56], "7140": 13, "7177": 13, "hiroshi": 13, "ogawa": 13, "6435": 13, "zeke": 13, "brechtel": 13, "5387": 13, "anton": 13, "kovalevich": 13, "7144": 13, "7204": 13, "get_foreign_kei": [13, 22, 23, 48, 52, 66], "tempdb": 13, "6910": 13, "7168": 13, "type_descriptor": [13, 33, 48], "6366": 13, "7129": 13, "7024": 13, "aarch64": [13, 102], "amd64": [13, 102], "dow": 13, "platform_machin": 13, "6955": 13, "6979": 13, "6924": 13, "driver_connect": [13, 48, 51, 71, 102], "6832": 13, "stream_scalar": [13, 102], "6990": 13, "before_execut": [13, 31, 40, 97, 102], "6913": 13, "6958": 13, "6983": 13, "insertmani": [13, 49], "6963": 13, "pylint": 13, "7052": 13, "7055": 13, "7036": 13, "7060": 13, "6950": 13, "6937": 13, "aiomysql": 13, "6993": 13, "sync_session_class": [13, 102], "6746": 13, "immutabledict": [13, 25, 32, 37], "6943": 13, "shadow": [13, 54], "6912": 13, "6106": 13, "all_tab_constraint": 13, "4486": 13, "x86_64": [13, 102], "ppc64le": [13, 102], "win32": [13, 102], "6136": 13, "columns_clause_from": [13, 54], "deannot": 13, "candid": [13, 20, 49, 54, 56, 57, 65, 67, 68, 75, 80], "maintain_column_from": [13, 54], "get_final_from": [13, 54], "6503": 13, "6808": 13, "6824": 13, "overli": [13, 26], "importantli": [13, 24, 25, 64, 70, 146, 155], "6869": 13, "ormexecutest": [13, 97, 112, 137, 145, 146, 148], "user_defined_opt": [13, 146], "6887": 13, "6812": 13, "6881": 13, "6079": 13, "6889": 13, "6752": 13, "cachekei": [13, 30, 31, 42, 43], "to_offline_str": [13, 42, 43], "6858": 13, "linter": [13, 57, 151], "6886": 13, "behaviour": [13, 35, 62], "omit_alias": [13, 59], "6146": 13, "sqlalchemy2": [13, 95, 118, 123], "type_check": [13, 118], "6759": 13, "6804": 13, "6863": 13, "6816": 13, "tablevaluedcolumn": [13, 49, 54], "6775": 13, "6769": 13, "6771": 13, "6793": 13, "shut": [13, 22, 24, 80], "6740": 13, "6786": 13, "6770": 13, "troublesom": 13, "6708": 13, "6698": 13, "6060": 13, "6762": 13, "6735": 13, "on_conflict_do_noth": [13, 22, 67, 68, 70], "6755": 13, "6739": 13, "6696": 13, "6697": 13, "6680": 13, "6661": 13, "6678": 13, "reconstruct": [13, 132], "__func__": 13, "__call__": [13, 34, 90, 102, 146], "methodtyp": 13, "functiontyp": 13, "mi\u0142osz": 13, "stypi\u0144ski": 13, "6538": 13, "5348": 13, "6665": 13, "jason3gb": 13, "6646": 13, "statementrol": [13, 54], "6668": 13, "6685": 13, "tidb": 13, "dani\u00ebl": 13, "eeden": 13, "6659": 13, "6679": 13, "6052": 13, "6253": 13, "selected_column": [13, 25, 31, 54, 56, 57], "xyz": [13, 65], "6663": 13, "6476": 13, "6583": 13, "6652": 13, "majordalla": 13, "6649": 13, "6621": 13, "6132": 13, "6658": 13, "6596": 13, "bake_queri": [13, 23, 123, 140], "foundat": [13, 25, 27, 42, 46, 160, 161], "analysi": [13, 76, 95], "win": 13, "6072": 13, "6487": 13, "flask": [13, 90], "6285": 13, "6591": 13, "6400": 13, "async_object_sess": [13, 102], "async_sess": [13, 102, 123], "in_nested_transact": [13, 31, 102, 146], "get_transact": [13, 31, 71, 102, 146, 147], "get_nested_transact": [13, 31, 102, 146], "6319": 13, "aiosqlit": [13, 102], "6575": 13, "6592": 13, "5848": 13, "on_connect_url": [13, 48], "unhandl": [13, 31, 40, 85], "6586": 13, "6550": 13, "6558": 13, "6540": 13, "6543": 13, "append_wo_mut": [13, 97], "6471": 13, "6495": 13, "greatest": [13, 26, 37, 42, 59, 98], "6484": 13, "6482": 13, "6329": 13, "repetit": [13, 34], "6549": 13, "6464": 13, "automap_bas": [13, 20, 103], "6529": 13, "pep484": 13, "wors": [13, 18, 20, 23, 71, 80, 163], "outdat": [13, 65], "6461": 13, "unregist": [13, 116, 123], "6390": 13, "6241": 13, "6449": 13, "satur": 13, "6459": 13, "6397": 13, "6460": 13, "ssl_check_hostnam": [13, 65], "jerri": 13, "zhao": 13, "5397": 13, "6426": 13, "6155": 13, "propos": [13, 22, 26, 65, 67, 68], "asyncengin": [13, 25, 70, 102], "6288": 13, "resourceclosedexcept": 13, "_cursor": 13, "legacycursorresult": [13, 31, 38, 45, 57], "6427": 13, "6428": 13, "6410": 13, "6414": 13, "6419": 13, "6420": 13, "nestedtransact": [13, 31, 38, 45], "autobegin": [13, 31, 45, 64, 71, 90, 102, 146, 147, 150, 162], "6408": 13, "6337": 13, "6409": 13, "6198": 13, "6391": 13, "6350": 13, "6378": 13, "6359": 13, "6360": 13, "6386": 13, "6401": 13, "dataclass": [13, 26, 27, 95, 96, 120, 131, 132, 134], "6346": 13, "6353": 13, "6361": 13, "OR": [13, 20, 21, 24, 28, 43, 44, 49, 50, 54, 56, 57, 113, 122, 123, 128, 151, 155, 163], "visit_empty_set_op_expr": 13, "expand_op": 13, "visit_empty_set_expr": 13, "element_typ": [13, 41], "6258": 13, "subuqeri": 13, "6343": 13, "6261": 13, "6300": 13, "6338": 13, "6373": 13, "precent": 13, "6379": 13, "as_gener": [13, 52, 58, 60], "6345": 13, "6306": 13, "6331": 13, "5497": 13, "6232": 13, "6320": 13, "6326": 13, "scalar_on": [13, 25, 26, 31, 102, 162], "scalar_one_or_non": [13, 31, 102], "6299": 13, "6327": 13, "_no_label": 13, "6256": 13, "6287": 13, "downgrad": 13, "6255": 13, "instrument_declar": [13, 25], "6291": 13, "synoynm": 13, "assocaitionproxi": 13, "assoc": [13, 84], "6267": 13, "growth": [13, 31, 117], "uniqifi": 13, "6304": 13, "6272": 13, "6290": 13, "6303": 13, "6252": 13, "3314": 13, "6249": 13, "6254": 13, "6205": 13, "typo": 13, "6220": 13, "6173": 13, "6184": 13, "with_ti": [13, 54], "6265": 13, "6221": 13, "merge_frozen_result": [13, 31, 100, 123, 137, 148], "6211": 13, "5226": 13, "6233": 13, "6215": 13, "some_kei": [13, 19, 57, 59, 67, 155], "legacyrow": [13, 25, 26, 31, 38, 57], "soften": 13, "6218": 13, "infer": [13, 17, 56, 67, 68, 84, 118, 138, 161, 163], "6222": 13, "multirow": [13, 31, 152], "squar": [13, 35], "delimit": [13, 48, 64, 140], "6216": 13, "supports_schema": 13, "6203": 13, "fit": [13, 28, 64, 77, 113], "6206": 13, "6202": 13, "errat": 13, "6204": 13, "declarative_mixin": [13, 94, 118, 131, 132], "definifit": 13, "6147": 13, "sqlstate": 13, "pgcode": 13, "orig": [13, 41], "6199": 13, "6172": 13, "5171": 13, "6171": 13, "6183": 13, "scalarselect": [13, 42, 54, 57, 130, 155], "6181": 13, "supports_statement_cach": [13, 31, 48, 70, 76], "pep435": 13, "6166": 13, "6099": 13, "get_table_oid": [13, 17, 67], "6170": 13, "6163": 13, "6139": 13, "6144": 13, "6138": 13, "hamdi": 13, "burak": 13, "usul": 13, "importlib_metadata": 13, "cento": 13, "exec_": 13, "6069": 13, "6131": 13, "6124": 13, "6115": 13, "6128": 13, "6119": 13, "as_declarative_bas": [13, 131, 132], "6109": 13, "6129": 13, "5920": 13, "sqlcipher3": [13, 68], "6100": 13, "6093": 13, "6088": 13, "6086": 13, "6092": 13, "6095": 13, "_concrete_discriminator_nam": [13, 107], "6090": 13, "packagenam": [13, 44], "6101": 13, "6097": 13, "6982": 13, "6066": 13, "hamlett": 13, "night": 13, "6055": 13, "6076": 13, "6067": 13, "6054": 13, "absent": [13, 20, 118, 150], "6074": 13, "use_setinputs": [13, 40, 64], "do_setinputs": [13, 40, 59, 64, 66], "6058": 13, "4753": [13, 25], "6068": 13, "5981": 13, "6003": 13, "5998": 13, "5984": 13, "worthwhil": 13, "demarc": [13, 26, 31, 149, 150], "6002": 13, "6004": 13, "6016": 13, "5979": 13, "_map": [13, 25, 26, 31, 57], "6008": 13, "_copi": 13, "5953": 13, "4609": 13, "threadsaf": [13, 31], "realm": [13, 17, 22, 26, 65, 122, 149], "safeti": [13, 39, 48, 56, 68, 70, 84], "5967": 13, "reflection_opt": [13, 103], "5942": 13, "6020": 13, "5933": 13, "5941": [13, 25], "onconflictdoupd": 13, "5939": 13, "5924": 13, "5934": 13, "compliment": [13, 59], "oliv": 13, "5935": 13, "spent": [13, 21, 31, 43, 76, 80, 104, 156], "5681": 13, "all_mapp": [13, 146], "in_transact": [13, 26, 31, 90, 102, 146, 147, 150], "5796": 13, "5797": 13, "5802": 13, "5897": 13, "entrant": [13, 146], "5845": 13, "toplog": 13, "5735": 13, "single_ent": [13, 137], "5702": 13, "5750": 13, "5760": 13, "5766": 13, "5762": 13, "is_column_load": [13, 137, 146, 148], "5761": 13, "is_relationship_load": [13, 137, 146, 148], "5764": 13, "esoh": 13, "5781": 13, "5867": 13, "5745": 13, "logging_token": [13, 31, 37], "5911": 13, "get_dbapi_typ": [13, 33, 58, 59, 60], "preval": [13, 22, 25, 26, 37, 76, 163], "json_to_recordset": [13, 54], "ordin": [13, 44, 54, 67, 155], "with_ordin": [13, 44, 54, 67], "scalar_table_valu": [13, 44], "3566": 13, "5695": 13, "outerjoin_from": [13, 54], "5888": 13, "5858": 13, "5754": 13, "5763": 13, "5770": 13, "5765": 13, "5768": 13, "5169": 13, "5785": 13, "removedin20warn": [13, 25, 29, 41, 70], "5717": 13, "5722": 13, "get_label_styl": [13, 54, 137], "set_label_styl": [13, 54, 56, 137], "label_style_disambiguate_onli": [13, 42, 54], "label_style_tablename_plus_col": [13, 42, 54, 56, 137], "label_style_non": [13, 42, 54], "align": [13, 25, 137, 144, 148], "4757": 13, "hannigan": 13, "5659": 13, "5712": 13, "if_not_exist": [13, 34], "if_exist": [13, 34], "IF": [13, 34, 52, 76], "2843": 13, "5775": 13, "asynctransact": [13, 102], "statefulli": 13, "coordin": [13, 15, 20, 70, 77, 80, 84, 145, 150], "5615": 13, "5811": 13, "5827": 13, "io": [13, 26, 65, 66, 67, 68, 70, 76, 85, 90, 146], "asyncadaptedqueu": 13, "dpapi": 13, "5823": 13, "preparedstat": 13, "5698": 13, "5824": 13, "5747": 13, "4010": 13, "regexp_match": [13, 25, 49, 50, 56, 68, 101, 123], "5699": 13, "as_numer": [13, 59], "5788": 13, "xid": [13, 31, 40, 45, 48, 146, 152], "5884": 13, "sys_context": 13, "userenv": 13, "current_schema": [13, 49, 67], "5716": 13, "jordan": 13, "pittier": 13, "5708": 13, "5684": 13, "fell": 13, "5842": 13, "pypa": 13, "4789": 13, "pycharm": [13, 118], "4656": [13, 25], "4689": [13, 25], "5400": 13, "5404": 13, "eol": [13, 25, 26], "5634": 13, "5094": 13, "5159": [13, 25], "4472": 13, "3rd": [13, 20, 25], "5508": [13, 25], "resembl": [13, 21, 25, 26, 31, 53, 54, 56, 57, 64, 65, 102, 118, 122, 128, 149], "v\u00e1clav": 13, "klus\u00e1k": 13, "5027": [13, 25], "4826": [13, 25], "1653": 13, "unavoid": [13, 71], "3903": 13, "5018": 13, "4662": [13, 25], "clariti": [13, 22, 26, 84, 132, 155, 156], "4395": [13, 25], "4617": [13, 25], "4710": [13, 25], "identit": 13, "unevalu": 13, "5401": [13, 25], "5263": [13, 25], "5122": [13, 25], "no_valu": [13, 87, 97, 123], "4696": 13, "think": [13, 30, 54, 77, 151], "4194": 13, "3858": 13, "5074": [13, 25], "leverag": [13, 65, 102, 154, 163], "4829": 13, "4212": 13, "4718": 13, "4699": 13, "4195": 13, "4836": 13, "4519": [13, 25], "ground": 13, "5150": [13, 25], "5606": 13, "4719": 13, "4705": 13, "5202": 13, "5134": 13, "5573": 13, "5192": 13, "4638": 13, "lazyload_al": 13, "selectinload_al": 13, "4642": 13, "stronginstancedict": 13, "4643": 13, "4959": [13, 25], "5087": [13, 25], "feasibl": [13, 21, 22, 25, 58, 59, 67, 68, 75, 101, 128, 137, 149], "3414": [13, 25], "alchemy2": 13, "4644": 13, "5649": 13, "get_sequence_nam": [13, 48, 52], "2056": 13, "4755": 13, "upfront": 13, "returns_unicode_str": [13, 48], "returns_condit": [13, 59], "returns_byt": [13, 59], "5315": 13, "4524": 13, "hundr": [13, 21, 24, 25, 31, 76, 136, 137, 155], "4645": [13, 25], "4808": [13, 25], "5004": [13, 25], "har": [13, 25], "4712": 13, "5526": [13, 25], "4634": 13, "unbuff": [13, 65, 67, 70], "5131": 13, "4878": 13, "4846": 13, "4877": 13, "review": [13, 20, 21, 22, 23, 24, 37, 59, 63, 66, 70, 76, 100, 124, 150, 163], "_run_visitor": 13, "5244": 13, "4737": [13, 25], "1390": [13, 25], "5221": [13, 26], "decreas": [13, 20, 25, 76, 77], "encapsul": [13, 31, 70, 122, 137], "5380": [13, 25], "527": 13, "__str": 13, "5191": 13, "ti": [13, 54, 68, 74, 90], "5576": 13, "4449": [13, 25], "4868": 13, "col3": [13, 32, 34, 64], "5284": [13, 25], "conceptu": [13, 25, 70, 80, 140], "eas": [13, 57], "encompass": [13, 21, 24, 25, 32, 49, 64, 97, 149], "dql": [13, 31, 76, 80], "program": [13, 15, 16, 21, 22, 25, 26, 31, 61, 65, 70, 72, 77, 80, 82, 90, 102, 113, 147], "4639": [13, 25], "5001": 13, "4649": 13, "5054": 13, "surprisingli": [13, 18, 26], "challeng": [13, 25, 26, 121, 147], "5127": 13, "myfunc": 13, "myfunc_1": 13, "4887": 13, "4336": 13, "4002": 13, "4621": 13, "5010": 13, "replace_exist": [13, 49], "contains_column": [13, 32, 56], "create_mock_engin": [13, 37, 38, 74], "4632": 13, "iterate_depthfirst": 13, "traverse_depthfirst": 13, "column_collect": 13, "schema_visitor": 13, "decad": 13, "mustexist": 13, "must_exist": [13, 49], "scalar_subqueri": [13, 36, 54, 57, 104, 130, 137, 154, 155, 156], "isfals": 13, "is_fals": 13, "is_not_distinct_from": [13, 49, 56, 101, 123], "istru": 13, "is_tru": 13, "notbetween": 13, "not_between": 13, "notcontain": 13, "not_contain": 13, "notendswith": 13, "not_endswith": 13, "not_ilik": [13, 49, 56, 101, 123], "not_lik": [13, 49, 56, 101, 123], "notmatch": 13, "not_match": 13, "notstartswith": 13, "not_startswith": 13, "nulls_first": [13, 42, 49, 52, 56, 101, 123], "nulls_last": [13, 42, 49, 52, 56, 101, 123], "is_not": [13, 49, 50, 56, 57, 101, 123, 151], "not_in_": 13, "not_in": [13, 49, 50, 56, 57, 101, 123, 151], "5429": 13, "5435": 13, "data_typ": [13, 35], "5498": 13, "4741": 13, "5527": 13, "5367": [13, 25], "4262": 13, "5413": 13, "5360": 13, "5362": 13, "5142": 13, "5549": 13, "bufferedrowresultproxi": 13, "1000": [13, 21, 25, 31, 67, 76, 94, 98, 132, 137], "soumaya": 13, "mauthoor": 13, "4914": 13, "5189": 13, "5459": 13, "mysqldialect": 13, "is_mariadb": 13, "5496": 13, "4976": [13, 25], "4189": 13, "4895": [13, 25], "gord": [13, 65], "thompson": 13, "4384": 13, "4235": [13, 24, 25], "4633": [13, 25], "4966": 13, "pound": 13, "5506": 13, "elkin": 13, "5084": 13, "5597": 13, "4980": 13, "4809": 13, "nominvalu": [13, 35, 48], "nomaxvalu": [13, 35, 48], "4971": 13, "changelog": [14, 22, 27, 81], "1": [14, 15, 16, 17, 18, 19, 20, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 80, 81, 83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 97, 98, 101, 102, 103, 104, 105, 107, 112, 113, 115, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 152], "4": [14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 77, 80, 81, 83, 88, 90, 91, 92, 95, 97, 98, 101, 102, 103, 104, 105, 107, 112, 117, 118, 119, 122, 123, 126, 127, 128, 131, 132, 133, 134, 137, 138, 139, 140, 144, 145, 146, 147, 148, 150, 151], "3": [14, 15, 16, 17, 18, 19, 21, 23, 27, 31, 32, 33, 34, 35, 37, 40, 44, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 70, 71, 75, 76, 77, 78, 80, 81, 84, 87, 88, 90, 91, 92, 97, 98, 101, 102, 104, 107, 117, 118, 119, 122, 123, 124, 126, 128, 132, 134, 135, 137, 138, 139, 140, 144, 145, 146, 150, 151, 155, 156, 162, 163], "7": [14, 16, 19, 20, 21, 24, 27, 31, 33, 35, 37, 40, 43, 49, 54, 56, 57, 59, 63, 64, 65, 67, 68, 70, 71, 72, 76, 78, 80, 82, 91, 104, 113, 123, 128, 136, 137, 138, 151, 156], "6": [14, 16, 18, 19, 21, 22, 23, 24, 26, 27, 31, 37, 56, 57, 59, 62, 63, 65, 66, 67, 68, 78, 82, 88, 104, 113, 126, 128, 129, 132, 137, 138, 144, 157, 163], "5": [14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 35, 36, 37, 40, 43, 44, 45, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 63, 64, 65, 66, 67, 68, 70, 71, 75, 76, 77, 78, 80, 87, 88, 90, 97, 98, 101, 102, 107, 113, 117, 118, 122, 123, 124, 128, 130, 136, 137, 138, 141, 144, 146, 147, 151, 155, 162, 163], "21": [15, 16, 48, 54, 63, 66, 67, 68, 76], "secondli": [15, 20, 90, 112, 128, 146], "myengin": [15, 37], "meta": [15, 52, 102, 132], "meta2": 15, "95": [15, 25], "utcdatetim": 15, "palpabl": 15, "fred": [15, 19, 57, 80, 104, 137, 151], "dont": [15, 59], "email_address": [15, 20, 21, 22, 23, 25, 26, 32, 36, 49, 50, 56, 57, 59, 70, 80, 84, 91, 92, 95, 102, 103, 123, 126, 128, 129, 134, 135, 137, 138, 139, 149, 151, 154, 155, 156, 161, 162, 163], "email": [15, 21, 22, 24, 26, 49, 54, 56, 57, 76, 80, 83, 103, 104, 128, 129, 137, 138, 139, 141, 151, 155, 161, 163], "j1": [15, 129], "j2": 15, "treenod": [15, 98], "tree_nod": 15, "n1": [15, 26, 87, 137], "n12": 15, "n122": 15, "blah": 15, "pwhash": 15, "hashing_t": 15, "our": [15, 17, 18, 20, 21, 22, 25, 26, 31, 32, 33, 34, 44, 52, 54, 56, 57, 67, 68, 77, 78, 84, 85, 90, 91, 94, 96, 97, 98, 101, 102, 103, 104, 107, 113, 117, 118, 121, 122, 124, 128, 129, 130, 133, 134, 136, 137, 138, 139, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163], "fu": 15, "nodes_3": 15, "nodes_3_id": 15, "nodes_3_parent_id": 15, "nodes_3_nam": 15, "nodes_2": 15, "nodes_2_id": 15, "nodes_2_parent_id": 15, "nodes_2_nam": 15, "nodes_1": 15, "nodes_1_id": 15, "nodes_1_parent_id": 15, "nodes_1_nam": 15, "nodes_id": 15, "nodes_parent_id": 15, "nodes_nam": 15, "camp": 15, "__composite_values__": [15, 88, 117, 123], "y1": [15, 88, 117], "y2": [15, 88, 117], "vertex": [15, 20, 23, 88, 117], "__le__": [15, 49, 50, 56, 101, 123], "foo_tabl": 15, "lala": [15, 26, 31, 150], "group1": 15, "bat": [15, 21, 26, 31, 49, 56, 59, 101, 123, 150], "bar_tabl": 15, "bat_tabl": 15, "mapped_collect": [15, 87], "freeform": 15, "quietli": [15, 22, 87], "firstnam": [15, 65, 92, 130, 133], "lastnam": [15, 65, 92, 130, 133], "numpost": 15, "user_id": [15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 34, 36, 49, 50, 54, 56, 57, 67, 75, 80, 83, 85, 91, 92, 95, 101, 103, 104, 113, 118, 124, 128, 130, 132, 133, 134, 135, 137, 138, 139, 141, 149, 151, 152, 154, 155, 156, 161, 162, 163], "users_id": [15, 20, 23, 24, 25, 54, 75, 128, 137, 151], "users_firstnam": 15, "users_lastnam": 15, "browser": [15, 70], "trunk": [15, 16, 17], "shebang": 15, "feel": [15, 18, 49, 154], "someobject": [15, 21, 22, 23, 24, 26, 90, 97, 102, 136, 146, 147, 148, 150], "wendi": [15, 25, 56, 57, 151, 156], "everyon": [15, 147], "sess2": [15, 85], "users_t": [15, 25, 31, 52, 56, 65, 102], "weakli": [15, 68, 149], "perman": [15, 31, 80, 117, 132, 147, 162], "unitofwork_manag": 15, "advdatamapping_mapper_inheritance_join": 15, "ormtutori": 15, "sqlexpress": [15, 17], "htt": 15, "sql_transf": 15, "sql_oper": 15, "my_tabl": [15, 17, 21, 22, 23, 24, 32, 33, 34, 40, 44, 52, 56, 59, 64, 65, 66, 67, 68, 70, 78, 123, 129, 132, 136], "2": [15, 16, 17, 18, 21, 22, 24, 27, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 62, 63, 64, 65, 67, 68, 71, 72, 74, 75, 77, 78, 80, 81, 82, 83, 85, 87, 88, 90, 91, 92, 97, 98, 101, 102, 103, 104, 107, 112, 113, 117, 118, 119, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 137, 138, 139, 140, 144, 145, 146, 148, 149, 150, 151, 152], "listofid": 15, "table_a": [15, 21, 54, 103], "table_b": [15, 21, 54, 103], "table_c": [15, 54], "fresh": [15, 23, 40], "75": [15, 21, 23, 59, 155], "3ism": 16, "test_deprec": 16, "numaddress": 16, "subq": [16, 19, 22, 24, 26, 54, 56, 57, 70, 96, 124, 135, 137, 138, 155], "keyword_id": [16, 19, 84, 101, 151], "bean": [16, 151], "carrot": 16, "recipe_keyword": 16, "recipe_id": 16, "person": [16, 19, 20, 22, 23, 28, 92, 94, 95, 96, 98, 113, 115, 154], "someothert": [16, 19], "mixabl": 16, "mapped_t": [16, 75, 131, 132], "person_id": [16, 20, 22, 92, 95], "recov": [16, 23, 31, 48, 51, 67], "item_keyword": 16, "mydeclarativebas": 16, "someitem": [16, 140], "bindnam": 16, "your_queri": 16, "summari": [16, 22, 25, 104, 126, 128, 137], "before_xxx": 16, "ambiti": [16, 98, 124, 137], "trelli": 16, "toolkit": [16, 82, 160], "custom_attribut": 16, "book": [16, 22, 25, 57, 67, 126, 128, 130, 137], "adaptoldconvertmethod": 16, "mytyp": [16, 17, 33, 58, 59, 76], "val": [16, 49, 67], "coexist": [16, 118], "idiom": [16, 94], "influenc": [16, 49, 67], "dt": [16, 68], "125": 16, "usec": 16, "000125": 16, "somedatecol": 16, "1000000": [16, 21], "entitynam": [16, 98], "om": 16, "browse_thread": 16, "9e23a0641a88b96d": 16, "hl": [16, 61], "myqueri": 16, "ad1": 16, "attributeext": 16, "is_backref": 16, "select_whereclaus": 16, "join_bi": 16, "select_stat": 16, "select_text": 16, "address_alia": [16, 25, 138], "sessioncontextext": 16, "ext_pass": 16, "engine_descriptor": 16, "declared_synonym": 16, "get_version_info": 16, "py2app": 16, "hood": [16, 128], "upward": [17, 35, 154], "python3": 17, "subcompon": 17, "jdbc": 17, "dbengin": 17, "ww": 17, "databasenot": 17, "2x": 17, "difficulti": [17, 21], "macaddr": [17, 67], "0x1252490": 17, "stdin": [17, 31, 33, 58, 59], "mind": [17, 21, 40, 68, 70, 102, 104, 136, 137, 151], "twofold": [17, 47], "c1": [17, 20, 25, 51, 54, 57, 70, 84], "c2": [17, 20, 25, 54, 57, 70], "row1": [17, 19], "row2": [17, 19], "row3": 17, "r6690": 17, "percentag": [17, 54], "modestli": 17, "eg": [17, 137], "000": [17, 72, 98], "260": 17, "600": [17, 76], "790": 17, "030": 17, "33": [17, 31, 36, 44, 49, 51, 54, 122, 136, 138], "67": 17, "users_trigg": [17, 34], "execute_at": [17, 18], "addcontraint": 17, "altercolumn": [17, 30], "cmd": [17, 30], "visit_alter_column": [17, 30], "commenc": 17, "central": [17, 26, 61, 75, 97, 102, 128, 138, 147, 151, 158, 161], "insp": [17, 19, 21, 22, 23, 52, 67, 77, 123, 134, 137, 149], "from_engin": [17, 47, 52], "my_engin": [17, 35, 39], "pg_insp": 17, "wildli": [17, 116], "awkward": [17, 19, 25, 31, 64, 67, 80, 101, 104, 121], "nextval": [17, 35, 66, 136], "truth": 17, "told": [17, 128, 144, 149], "sqlalc": 17, "hemi": 17, "plainli": 17, "utf8encod": 17, "largest": [17, 51], "mediumblob": [17, 65], "obviou": [17, 121, 136], "_compare_type_affin": 17, "emptiv": 17, "asap": 17, "painless": 17, "300": [17, 76], "addresses_user_id": [17, 23, 75, 128, 151], "necessit": 17, "erecip": 17, "undergo": [18, 19, 20, 21, 40], "hack": [18, 19, 49, 56, 101, 123], "matur": [18, 25], "weaker": 18, "component": 18, "boilerpl": [18, 56, 91, 151], "learn": [18, 24, 26, 51, 57, 120, 151, 153, 157, 160], "radic": 18, "subsystem": [18, 159], "divers": 18, "jqueri": 18, "blinker": 18, "occas": 18, "confer": 18, "twitter": 18, "rate": 18, "customari": 18, "fed": 18, "thousand": [18, 21, 24, 31, 76, 137], "benchmark": [18, 21, 67], "techspot": [18, 61, 113], "tale": 18, "lighter": 18, "weight": 18, "2024": 18, "parentclass": 18, "some_id": [18, 22, 23, 65, 67, 68], "annoi": [18, 78], "somerel": [18, 90, 102, 123, 146], "mytarget": 18, "idx_nam": 18, "hasnamemixin": 18, "rank": [18, 22, 42, 44, 56, 155], "replic": [18, 22, 51], "empsalari": 18, "depnam": 18, "empno": [18, 54, 137], "salari": [18, 22, 56, 62], "resourc": [18, 21, 25, 26, 31, 40, 45, 48, 51, 57, 62, 68, 70, 71, 77, 80, 90, 102, 139, 146, 147, 150, 151, 157, 162], "pymsql": 18, "convolut": 18, "count_1": [18, 21, 44, 57, 137, 151, 155], "user_nam": [18, 20, 21, 25, 34, 49, 59, 101, 103, 113, 128, 132, 133, 137, 149], "vinai": 18, "sajip": 18, "disassoci": 18, "realiz": [18, 24], "some_db_funct": 18, "asid": [18, 49], "pickled_data": 18, "holdov": [18, 26], "99": [18, 151], "blazingli": 18, "examin": [18, 20, 31, 34, 51, 56, 66, 90, 103, 124, 146, 149, 162], "spam": [18, 25], "qa": 18, "qb": 18, "qu": 18, "foo_spam": 18, "child_id": [18, 84, 123], "some_rel": 18, "some_lookup_t": 18, "some_lookup_id": 18, "unknowingli": 18, "tinker": 18, "worth": [18, 68, 163], "timer": [18, 76], "morph": 18, "high_prior": [18, 65], "tap": 18, "busi": [18, 33, 57, 70, 82], "grei": [18, 22], "create_connect": 18, "_create_connect": 18, "do_get": 18, "_do_get": 18, "do_return_conn": 18, "_do_return_conn": 18, "do_return_invalid": 18, "return_conn": 18, "_return_conn": 18, "_cleanup": 18, "dispose_loc": 18, "hous": 18, "closet": 18, "overus": [18, 26, 31], "settl": [19, 24], "movabl": 19, "ternari": 19, "baselin": 19, "child_id_on": 19, "child_id_two": 19, "child_on": 19, "child_two": 19, "canon": [19, 57, 61, 71, 94, 149], "account_id": [19, 75, 144], "folder_id": [19, 144], "parent_fold": [19, 144], "child_fold": [19, 144], "folder_account_id": 19, "folder_folder_id": 19, "folder_parent_id": 19, "folder_nam": 19, "folder_1": 19, "folder_1_account_id": 19, "folder_1_folder_id": 19, "folder_1_parent_id": 19, "folder_1_nam": 19, "hostentri": [19, 124], "host_entri": [19, 124], "ip_address": [19, 124], "inet": [19, 67, 124], "parent_host": [19, 124], "galor": 19, "aliasedinsp": [19, 47, 123, 127, 137], "walkthrough": [19, 25, 84, 137, 139], "name_syn": 19, "0x101521950": 19, "column_attr": [19, 75, 131, 132, 134], "0x1015212d0": 19, "0x101525090": 19, "0x101521fd0": 19, "0x101525810": 19, "u1": [19, 20, 21, 22, 24, 25, 26, 78, 97, 103, 134, 136, 137, 138, 147, 149, 150, 152, 163], "0x10152bed0": 19, "0x10152bf90": 19, "__main__": [19, 22, 24, 25, 30, 33, 58, 59, 70, 71, 76, 77, 87, 98, 101, 121, 132, 149], "0x101701150": 19, "palia": 19, "java": 19, "hair": 19, "pointi": [19, 154], "job_p": 19, "subjob": 19, "extrajob": 19, "datacontain": 19, "parentth": 19, "job_a": 19, "on_load": [19, 97], "snack": [19, 101], "peanut": 19, "nut": [19, 71], "snack_id": 19, "reflectedon": [19, 107], "reflectedtwo": [19, 107], "myothert": [19, 107], "yetanotherclass": [19, 107], "yetanothert": [19, 107], "engine_on": [19, 107], "engine_two": [19, 107], "stmt": [19, 20, 21, 22, 23, 25, 26, 31, 33, 35, 36, 43, 44, 49, 50, 54, 56, 57, 59, 61, 62, 64, 65, 67, 68, 70, 78, 80, 98, 101, 102, 112, 118, 123, 128, 130, 136, 137, 138, 139, 147, 148, 149, 151, 154, 155, 156, 157, 163], "someent": [19, 23, 148], "someotherent": [19, 23, 148], "dilbert": [19, 20], "engineer_data": 19, "2365": 19, "expiri": [19, 70, 133], "222": [19, 76], "_current_path": 19, "class_": [19, 22, 30, 88, 97, 98, 101, 102, 116, 123, 131, 132, 134, 136, 146], "_relationship_opt": 19, "drive": [19, 68], "logarithm": 19, "customnumer": 19, "pave": 19, "lowerstr": 19, "bindvalu": [19, 24, 33, 58, 67], "test_tabl": 19, "data_1": [19, 21, 22, 25, 33, 36, 80, 115, 137], "fluentli": 19, "snortev": 19, "sig_count": 19, "has_kei": [19, 31, 67], "has_ani": [19, 67], "matrix": [19, 67], "data_t": [19, 59, 64, 67], "hstore_data": 19, "my_arrai": 19, "arraycol": 19, "freestand": [19, 68], "sometimestamp": 19, "truncate_microsecond": 19, "04d": [19, 20, 68], "02d": [19, 20, 68], "hour": [19, 30, 31, 37, 51, 65, 67, 68, 71], "06d": [19, 68], "somed": 19, "dub": 19, "sprint": 19, "pycon": 19, "somechar": 19, "low_prior": [19, 54, 137], "bridg": [19, 56, 87, 101, 141], "realiti": [19, 25, 68, 147], "judgment": 19, "omiss": 19, "userkeyword": 19, "user_keyword": [19, 101], "uncom": [19, 76], "k1": [19, 67], "uk1": 19, "some_necessary_attribut": 19, "widget": [19, 21, 22, 92, 128, 137, 141, 147], "widget_nam": 19, "entity_id": 19, "s2": [19, 25], "mssql": [19, 20, 21, 22, 24, 25, 30, 31, 32, 35, 36, 37, 40, 48, 51, 54, 57, 59, 71], "rescu": 19, "scalar_subq": [19, 154, 156], "table1_col1": 19, "table1_col2": 19, "column_on": [19, 23], "table1_column_on": 19, "listen_for_col": 19, "column_info": [19, 33, 40, 49, 103, 133], "_detect_col": 19, "_detect_cas": 19, "pk_constraint": 19, "constrained_column": [19, 23, 48, 52], "instrumentationfactori": [19, 116], "extendedinstrumentationregistri": [19, 116], "lowest": [20, 33, 49, 56, 58, 80, 101, 123], "select_stmt": [20, 48, 118, 137, 154], "name_1": [20, 36, 50, 56, 57, 70, 122, 137, 138, 154, 155, 156, 163], "believ": 20, "anon_1_id": [20, 25, 26, 124, 137, 151], "user_from_stmt": 20, "a_id": [20, 21, 22, 23, 24, 25, 31, 54, 70, 75, 77, 87, 101, 102, 124, 128, 137, 140], "has_chang": [20, 146], "b_id": [20, 21, 22, 23, 24, 25, 31, 54, 75, 101, 124, 128], "b_valu": [20, 23], "a_b_id": [20, 22, 124, 128], "bname": 20, "a1": [20, 21, 22, 23, 24, 25, 57, 70, 77, 87, 97, 102, 103, 124, 128, 137, 138, 149, 163], "init_ok": 20, "backstop": 20, "piecem": [20, 70], "cond": 20, "unquote_plu": 20, "dbtype": [20, 48], "3aword": 20, "orang": 20, "2forang": 20, "hostspec": 20, "40orang": 20, "en_en": 20, "x_1": [20, 23, 30, 50, 57, 64, 70, 78, 79], "myenum": [20, 21, 22, 59, 65, 67], "createenumtyp": 20, "before_insert": [20, 39, 97, 136, 148], "my_before_insert": 20, "chainabl": 20, "resum": [20, 147], "afterward": [20, 34, 84, 90, 96, 98, 146, 149, 150, 152], "isopen": 20, "35": [20, 25, 33], "pointless": 20, "procrastin": 20, "y_1": [20, 50, 57, 156], "posgtresql": 20, "double_valu": 20, "45": [20, 37, 57], "768392065789": 20, "7683920658": 20, "heavyweight": 20, "validate_b": [20, 23], "validate_a": 20, "_collect": [20, 103, 134], "address_collect": [20, 103], "famou": [20, 103, 163], "expedi": [20, 31, 33, 90, 96, 103, 137, 146, 147], "53": 20, "unpleas": 20, "fortun": [20, 113], "troubl": 20, "c_id": [20, 22, 24, 77, 124], "lest": [20, 75, 102], "compact": 20, "subitem": 20, "order_item": [20, 138], "order_id": [20, 137, 138], "item_id": [20, 32, 87, 138], "base_t": [20, 21, 49], "subclass_t": 20, "base_table_1": 20, "subclass_table_1": 20, "shoulder": 20, "base_table_id": 20, "base_table_parent_id": 20, "subclass_table_id": 20, "subclass_table_1_id": 20, "base_table_1_id": 20, "base_table_1_parent_id": 20, "order_item_1": 20, "order_item_1_order_id": 20, "order_item_1_item_id": 20, "item_typ": [20, 59, 67], "employee_alia": 20, "primary_languag": [20, 94], "manager_nam": [20, 23, 121, 122], "company_id": [20, 22, 107, 118, 121, 122], "companies_company_id": 20, "companies_nam": 20, "people_1": 20, "engineers_1": 20, "managers_1": 20, "primary_language_1": 20, "manager_name_1": 20, "boat": 20, "b_name": 20, "endlessli": 20, "furthermor": [20, 74, 78, 91, 163], "inline_liter": 20, "exhibit": [20, 33, 85, 118], "And": [20, 21, 23, 25, 32, 37, 57, 65, 70, 87, 149], "eq_": 20, "bp": 20, "some_col": [20, 31], "lazili": [20, 70, 128, 140], "stuck": [20, 57], "solidli": 20, "t1id": 20, "t1a": 20, "t1b": 20, "t2t1id": 20, "analys": 20, "pythonhost": [20, 62], "search_for_us": [21, 104], "baked_queri": [21, 104], "hasfoobar": 21, "foobar_prop": 21, "hasidmixin": [21, 94], "mysubclass": 21, "something_id": 21, "cca": 21, "3149": 21, "2952": 21, "3050": 21, "undergon": 21, "1m": 21, "macbookpro": 21, "overtak": 21, "hedg": 21, "outperform": 21, "lag": 21, "sweet": 21, "smoke": 21, "10000": [21, 25, 30, 31, 67, 76, 98, 104], "60302400589": 21, "255059957504": 21, "lw": 21, "582715034485": 21, "365247011185": 21, "24896979332": 21, "0889317989349": 21, "572599887848": 21, "54251694679": 21, "613876104355": 21, "79669594765": 21, "856498003": 21, "74346804619": 21, "heapi": 21, "measur": [21, 31, 76, 80, 102, 113, 135, 156], "nova": 21, "meg": 21, "46": [21, 44, 136], "summat": 21, "26477": 21, "7975712": 21, "18181": 21, "4236456": 21, "355558": 21, "61661760": 21, "346034": 21, "57808016": 21, "somemixin": 21, "some_engin": [21, 26, 40, 51, 52, 55, 66, 78, 90, 92, 103, 133, 146, 150], "concretesubclass": 21, "concrete_t": 21, "some_other_engin": [21, 92], "readili": [21, 136], "foob": 21, "score": [21, 23], "max_1": [21, 31, 136], "a_1": [21, 24, 124], "a_1_id": [21, 24, 124], "max_2": 21, "anon_2": [21, 22, 25, 57, 122, 155], "a_typ": 21, "heisenbug": 21, "sel": [21, 36], "mylimit": 21, "myoffset": 21, "_limit": [21, 31], "_offset": [21, 31], "_limit_claus": [21, 31], "_offset_claus": [21, 31], "bufferedcolumnresultproxi": 21, "_soft_clos": 21, "ck": [21, 32, 49], "ck_": [21, 32], "s_": [21, 24, 32, 39, 49], "ck_foo_valu": [21, 32], "uq": [21, 24, 32, 49], "0b3": [21, 22, 122], "autoattach": 21, "somefunct": 21, "somefunction_1": 21, "include_default": [21, 36], "tbl": [21, 34, 49, 67, 68], "derp": 21, "arr": 21, "baz": [21, 65], "infinit": 21, "__warningregistry__": 21, "onceregistri": 21, "ten": [21, 22, 25, 26, 37, 51, 59, 66, 67, 87, 124, 128], "filterwarn": [21, 26], "foo_": [21, 40], "randint": [21, 22], "186": 21, "foo_4852": 21, "earnest": 21, "moonbeam": 21, "address_id": [21, 49, 94, 128, 129, 135, 137, 139, 162, 163], "address_user_id": [21, 137, 139, 162, 163], "address_email_address": [21, 139, 162, 163], "beta": [21, 22, 23, 102], "3373": 21, "b_a_id": [21, 24, 25, 31], "a_id_1": 21, "someattr": [21, 126], "primary_key_from_inst": [21, 131, 132], "trump": 21, "a2": [21, 23, 49, 54, 57, 97, 102, 103, 137, 138, 163], "b1": [21, 23, 24, 70, 87, 102, 137], "b2": [21, 23, 24, 70, 137], "some_manytoon": 21, "b_1": [21, 25, 124, 128], "asub1": 21, "asub2": 21, "bottom": [21, 68], "type_1": [21, 22, 70], "type_2": 21, "asub2_alia": 21, "dictbundl": [21, 126], "zip": [21, 88, 123, 124, 126, 133], "unnest": [21, 22, 44, 54, 67, 128, 140, 155], "anon_1_a_id": [21, 124], "b_1_id": [21, 25, 128], "b_1_a_id": [21, 25], "ceas": 21, "widget_t": 21, "foowidget": [21, 22], "widgets_id": 21, "anon_1_widgets_id": 21, "widgets_typ": 21, "anon_1_widgets_typ": 21, "related_id": [21, 26, 123], "knew": [21, 33], "meantim": 21, "incept": 21, "commun": [21, 26, 31, 63, 65, 66, 67, 81, 147, 158, 162], "unabl": [21, 64], "simplefilt": 21, "rid": [21, 26], "id_count": 21, "some_label": 21, "accid": [21, 23], "d1": [21, 126], "d2": 21, "d3": 21, "data_0": 21, "data_2": [21, 22], "boundparamet": 21, "some_enum": [21, 67], "my_enum": [21, 67], "f": [21, 22, 23, 31, 64, 67, 76, 80, 87, 88, 92, 94, 98, 102, 117, 118, 136, 138, 139, 150, 155, 157, 161, 163], "pg_class": [21, 67], "user_tmp": 21, "m2": [21, 49, 155], "roundtrip": 21, "use_unicod": 21, "matchtabl": 21, "titl": [21, 25, 57, 67, 126], "agil": 21, "rubi": 21, "dive": [21, 149, 157], "web": [21, 51, 68, 70, 78, 145, 147, 151, 162], "rail": 21, "Into": 21, "matz": 21, "django": [21, 98, 136], "nutshel": [21, 90], "ubiquit": 21, "attic": 21, "polish": 21, "index_info": 21, "pictur": 21, "myhost": [21, 64], "databasenam": [21, 64], "guidelin": [21, 37, 42, 49, 54, 67, 70, 76, 81, 87, 97, 102, 116, 147], "with_suffix": 21, "included_part": [21, 54, 137], "sub_part": [21, 54, 137], "quantiti": [21, 22, 54, 137], "ord1": 21, "y_cycl": [21, 54, 137], "unheard": 22, "3489": 22, "3500": 22, "quicki": [22, 80, 123, 145, 148, 151], "intro": [22, 80, 123, 139, 140, 145, 148, 151], "murki": 22, "deleted_to_persist": [22, 97, 148, 149], "deleted_to_detach": [22, 97, 148], "myobj": [22, 87], "some_valu": 22, "active_column_default": [22, 97, 98], "smoothli": [22, 26, 64, 97, 151], "some_th": 22, "date_cr": [22, 56], "some_us": [22, 24, 37, 85, 118, 129, 130, 137], "0x103167e90": 22, "index_properti": [22, 115], "err": [22, 51], "0x7f0287eca4d0": 22, "test_transact": 22, "0x7f02889c70d0": 22, "b_table_id": 22, "bid": 22, "some_b": 22, "a1_id": 22, "asub": 22, "a_sub": 22, "some_nam": [22, 30], "hybrid_propertyproxi": 22, "0x7fde03888230": 22, "went": [22, 24, 75, 139], "elabor": [22, 26, 33, 49, 130, 137, 155, 161, 163], "o1": [22, 85], "o2": 22, "o3": 22, "some_object": [22, 23, 24, 90, 102, 137, 146, 147, 150], "discourag": [22, 25, 31, 132], "elbonia": 22, "inc": 22, "people_nam": 22, "unpolish": 22, "palias": 22, "d_id": [22, 24, 124], "c_alias_1": 22, "c_alias_2": 22, "c_1": [22, 124], "c_1_id": 22, "c_1_d_id": 22, "b_c_id": 22, "c_2": 22, "c_2_id": 22, "c_2_d_id": 22, "a_c_id": 22, "sql_onli": [22, 128, 137, 163], "systemexit": [22, 40], "incid": 22, "cancel_disconnect": 22, "ctx": 22, "original_except": [22, 31, 40], "draw": [22, 54], "region": [22, 54, 98], "region1": 22, "product1": 22, "region_1": 22, "param_3": [22, 54, 56, 67], "anon_3": 22, "param_4": [22, 67], "anon_4": 22, "people_id": [22, 54, 57], "book_id": [22, 25, 57, 126, 130], "owner_id": [22, 57], "book_subq": [22, 57], "bernoulli": [22, 54], "seed": [22, 49, 54], "bernoulli_1": [22, 54], "thorough": 22, "multicolumn": [22, 94], "fun": 22, "ua_id": 22, "mere": [22, 49, 54, 56, 67, 75, 90, 102, 146, 161], "compliant": [22, 24, 48, 59, 65, 102], "homogen": 22, "infeas": [22, 25, 135], "0b2": [22, 23, 31, 34, 36, 37, 40, 44, 49, 54, 58, 59, 67, 102, 103, 132, 137, 146], "forgiv": 22, "tbd": 22, "chr": 22, "85": 22, "027": 22, "e6": 22, "9hpojb": 22, "bhr": 22, "5ilu": 22, "jlm": 22, "b9": 22, "s48ptng9": 22, "tstla": 22, "9k": 22, "9fpm4m8m": 22, "nm6gu": 22, "luaebt9qghnhthr5ep75": 22, "oer4": 22, "skc": 22, "tfumd": 22, "c6u": 22, "jlm6r67gek": 22, "a6": 22, "j7": 22, "gj7hq6": 22, "4702": 22, "j6ik546ajmb4n6s9l": 22, "9aki": 22, "rjp": 22, "hdssotnbueec9": 22, "rcl": 22, "fo": 22, "kjagao": 22, "a7ji8o": 22, "j7b69t6": 22, "4beijs9hm": 22, "5olpm": 22, "jr": 22, "j6": 22, "sottt": 22, "7t": 22, "otdc": 22, "cc": [22, 56], "ngp6c": 22, "bc8n": 22, "nm6guluaebt9qghnhthr5ep75": 22, "pgj7hq": 22, "4703": 22, "rjphdssotnbueec9": 22, "nm6": 22, "guluaebt9qghnhthr5ep75": 22, "4beijs9h": 22, "mk": 22, "json_valu": [22, 33, 59, 64], "some_other_valu": 22, "array_agg_1": 22, "percentile_disc": [22, 42, 44, 155], "depart": [22, 49, 56, 80], "percent_rank": [22, 42, 44], "cume_dist": [22, 42, 44], "_set_tabl": 22, "per_us": 22, "account_on": 22, "me": [22, 24, 26, 51, 72, 137, 151], "typecoerc": [22, 42, 56], "stringasint": 22, "pet": 22, "pets_1": 22, "pets_1_id": 22, "pets_1_person_id": 22, "pets_id": 22, "pets_person_id": 22, "a_fullnam": 22, "a_nam": 22, "_validate_data_on": 22, "_validate_data_two": 22, "riski": 22, "stmt1": [22, 25, 56, 155], "stmt2": [22, 25, 56, 155], "model1": [22, 84], "model2": [22, 84], "parallel": [22, 81, 102], "insert_stmt": [22, 23, 24, 54, 65, 67, 68, 70, 154], "do_update_stmt": [22, 65, 67, 68], "index_el": [22, 54, 67, 68, 70, 136], "int_expr": 22, "json_expr": 22, "json_col": 22, "key1": [22, 59, 67], "attr1": [22, 149], "place_admin": 22, "carwash_admin": 22, "parking_admin": 22, "service_admin": 22, "tire_admin": 22, "carwash": 22, "tire_mechan": 22, "work_place_rol": 22, "workplac": 22, "work_plac": 22, "plain_view": 22, "all_view": 22, "idx_autoinc_i": 22, "iron": 22, "cryptic": 22, "colus": 22, "sqlite3_index_info": 22, "sqlite3_modul": 22, "xbestindex": 22, "lessen": [22, 119], "sqlite_mast": [22, 161], "ms_2008": [22, 64], "account_t": [22, 64], "customer_schema": [22, 64], "eng": [22, 31, 64, 65, 68, 150], "mydsn": [22, 37, 64, 71], "account_1": [22, 64], "suffix": [22, 24, 32, 54, 76, 137, 155], "0": [23, 24, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 71, 75, 76, 77, 78, 80, 81, 82, 83, 85, 87, 88, 90, 91, 92, 94, 97, 98, 101, 102, 103, 104, 112, 113, 117, 118, 119, 123, 124, 126, 127, 128, 129, 131, 132, 134, 136, 137, 138, 139, 140, 145, 146, 148, 149, 150, 151, 152], "baked_select": 23, "addresses_id": [23, 75, 128, 151], "addresses_email_address": [23, 128, 151], "anon_1_users_id": [23, 75, 128], "users_1_id": 23, "disadvantag": [23, 64, 70, 128, 130], "table_column_two": 23, "opensql": [23, 31, 32, 50, 52, 57, 65, 67, 68, 70, 75, 85, 121, 122, 124, 128, 136, 138, 139, 144, 149, 154, 155, 156, 157, 161, 162, 163], "employee_id": [23, 49, 80, 107, 122], "employee_nam": [23, 49, 56, 92, 118, 122], "employee_typ": [23, 122, 132], "engineer_id": [23, 122], "engineer_nam": [23, 121, 122], "engineer_engineer_nam": [23, 122], "manager_id": [23, 70, 122], "manager_manager_nam": [23, 122], "first_nam": [23, 36, 113], "last_nam": [23, 36, 113], "dr": 23, "firstnameonli": [23, 113], "firstnamelastnam": [23, 113], "maxsplit": 23, "Be": [23, 97, 100, 124, 136], "_set_nam": 23, "op_bulk_replac": [23, 97, 123], "process_collect": [23, 97], "_make_valu": [23, 97], "retval": [23, 39, 40, 97, 104], "mydataclass": [23, 117], "my_data": [23, 33, 64, 117], "jsonencodeddict": [23, 33, 117], "modified_json": [23, 117], "mymodel": [23, 84, 94, 118, 132, 136], "json_set": 23, "atob": [23, 128], "bvalu": 23, "c_valu": 23, "value_1": [23, 24, 44], "co": [23, 61], "weatherloc": 23, "weatherreport": 23, "tokyo": 23, "asia": 23, "newyork": 23, "north": 23, "america": 23, "york": 23, "quito": 23, "newyork_report": 23, "tokyo_report": 23, "north_america": 23, "liberalboolean": 23, "retri": [23, 41, 51, 67, 72], "tautologi": 23, "theoriz": 23, "th": [23, 61, 71], "urg": 23, "predic": [23, 49, 56, 59, 67, 124], "burdensom": [23, 104], "agre": [23, 136], "null_expr": 23, "dynamic_warn": 23, "appreci": [23, 25], "get_table_com": [23, 48, 52], "email_address_1": [23, 25, 57, 138, 155, 156, 163], "standard_confirming_str": 23, "float_valu": 23, "56": [23, 25], "grouping_set": [23, 42, 44], "sum_1": [23, 113], "3429": 23, "isolate_multiinsert_group": [23, 48], "mydefault": [23, 35], "metadata_obj": [23, 24, 26, 31, 32, 33, 35, 49, 52, 57, 59, 67, 70, 74, 91, 92, 96, 121, 124, 134, 135, 161], "counter_plus_twelv": [23, 35], "should_rollback": 23, "a3": [23, 97, 102], "previous_collect": 23, "convert_dict_to_b": 23, "b3": [23, 137], "idempot": [23, 102], "adf": 23, "favorite_b_id": 23, "favorite_b_fk": 23, "favorite_b": 23, "my_onupdate_funct": 23, "a_fk": 23, "favorite_node_id": 23, "favorite_nod": 23, "favorit": 23, "fr_fr": 23, "some_interv": 23, "on_conflict_stmt": 23, "status_1": [23, 67], "ret_0": [23, 136], "ret_1": 23, "bufferedcolumnresultset": 23, "column_nam": [23, 48, 52], "address_idx": 23, "pk_con": 23, "referred_column": [23, 48, 52], "referred_schema": [23, 48, 49, 52], "user_id_fk": [23, 32], "somedb": [23, 34], "mydb": [23, 51, 64, 65, 68], "restructur": [24, 76], "attitud": 24, "blend": [24, 161], "tent": 24, "cognit": 24, "bolt": 24, "wall": 24, "piec": 24, "b_viacd": [24, 124], "d_c_id": 24, "d_b_id": 24, "stori": 24, "some_attribut": [24, 47, 97, 123, 147], "user_info": 24, "query_choos": [24, 98, 112], "test_a": [24, 101], "ab": [24, 101, 113], "test_b": [24, 101], "test_ab": [24, 101], "some_descriptor": 24, "shortcom": [24, 25, 26], "associationproxyinst": [24, 101], "ap": 24, "proxy_st": [24, 101], "target_class": [24, 101], "user_el": 24, "userel": 24, "element_id": [24, 32], "spin": [24, 163], "b_data": [24, 31], "b_rel": 24, "0x7f047af5fb70": 24, "u_alia": 24, "current_timestamp_1": 24, "users_fullnam": [24, 25, 128, 151], "users_password": 24, "philosophi": [24, 77, 102, 128], "a_data": [24, 25, 31], "b_alia": 24, "90693": 24, "archiv": 24, "column_0n_kei": [24, 49], "column_0_n_kei": [24, 49], "referred_column_0n_nam": [24, 49], "referred_column_0_n_nam": [24, 32, 49], "uq_": [24, 32, 39, 49], "uq_info_a_b_c": 24, "long_nam": [24, 32], "information_channel_cod": [24, 32], "billing_convention_nam": [24, 32], "product_identifi": [24, 32], "uq_long_names_information_channel_code_billing_conventi_a79": [24, 32], "a79": [24, 32], "identifiererror": [24, 29, 41], "this_is_too_long_of_a_name_for_any_database_backend_even_postgresql": 24, "this_is_too_long_of_a_name_for_any_database_backend_eve_ac05": 24, "suitabl": [24, 25, 31, 43, 44, 48, 56, 64, 67, 78, 80, 87, 119, 124, 137, 150, 151], "venu": [24, 44], "instr": [24, 44], "venue_id": 24, "venue_nam": 24, "parent1": [24, 44], "venue_1": 24, "venue_1_id": 24, "venue_1_nam": 24, "geometr": [24, 44, 117], "_empty_set": 24, "drill": [24, 63], "compressedlargebinari": 24, "uncompress": 24, "mylargebinari": 24, "downsid": [24, 96], "stackpool": 24, "fifo": [24, 37, 38], "retrospect": 24, "absurd": 24, "pretend": 24, "era": 24, "ordeal": 24, "obsolesc": 24, "test_unicode_return": 24, "confid": 24, "arguabl": 24, "dv": 24, "data_valu": 24, "data_values_4_10": 24, "some_existing_id": [24, 65, 67, 68], "on_duplicate_key_stmt": [24, 65], "json_quot": [24, 68], "json1": [24, 68], "sqlite_on_conflict": [24, 68], "sqlite_on_conflict_primary_kei": [24, 68], "trunc": 24, "puriti": [24, 66], "inaccur": 24, "mssql2017": [24, 51, 64], "1433": [24, 51, 64], "nwhere": [24, 78], "sqlalch": [24, 26], "cd3x": 24, "focu": [25, 76, 90, 146], "mainstream": 25, "hinder": 25, "sandi": [25, 50, 136, 138, 139, 148, 154, 155, 161, 162, 163], "primer": 25, "inde": 25, "broadli": 25, "land": 25, "cpu": [25, 70, 73], "id_": [25, 31, 104], "dell": 25, "xps13": 25, "test_orm_queri": [25, 104], "440652": 25, "sec": [25, 65, 76, 98, 104], "367934": 25, "future_select": 25, "test_orm_query_newstyle_w_lambda": 25, "247092": 25, "query_cache_s": [25, 31, 37, 45, 102], "generate_bas": [25, 26, 92, 94, 95, 131, 132, 134, 161], "map_declar": [25, 131, 132], "asyncio": [25, 27, 31, 40, 48, 51, 65, 67, 68, 72, 81, 85, 87, 90, 114, 120, 123, 146, 163], "unfamiliar": [25, 77], "vet": 25, "judici": 25, "greenlet_orm": [25, 98], "dependency_for": 25, "gradual": [25, 26], "aliasedreturnsrow": [25, 42, 54], "sq1": 25, "unif": 25, "outright": 25, "42000": 25, "beginn": [25, 81, 104], "veteran": [25, 81], "lightli": 25, "addresses_t": [25, 52, 133], "formal": [25, 128, 158], "urlpars": 25, "calculu": [25, 31, 70], "weigh": 25, "mysql_url": 25, "update_query_dict": [25, 37], "sslcert": 25, "crt": [25, 37], "2fpath": [25, 37], "2fto": [25, 37], "2fcrt": [25, 37], "set_url_drivernam": 25, "some_url": 25, "some_drivernam": 25, "set_ssl_cert": 25, "ssl_cert": [25, 65], "alt_host": [25, 37], "normalized_queri": [25, 37], "update_query_pair": [25, 37], "update_query_str": [25, 37], "update_url": [25, 31], "myplugin": [25, 31], "my_argument_on": [25, 31], "my_argument_two": [25, 31], "my_argument_thre": [25, 31], "difference_update_queri": [25, 31, 37], "permit": [25, 28, 65], "superior": [25, 26, 31, 128], "suffer": [25, 75, 76], "postcompile_id_1": 25, "compile_kwarg": [25, 43, 48, 49, 54, 56, 78], "render_postcompil": [25, 78], "id_1_1": [25, 78], "id_1_2": [25, 78], "id_1_3": [25, 78], "outcom": [25, 56, 97], "uncorrel": 25, "nicknam": [25, 49, 57, 91, 95, 96, 118, 123, 128, 134, 151], "users_nicknam": [25, 128, 151], "addresses_1": [25, 57, 128, 151], "dread": 25, "table3": 25, "enable_from_lint": [25, 37], "from_lint": 25, "user_obj": [25, 26, 138, 163], "map_": 25, "aim": 25, "summar": [25, 26, 31, 62, 63, 64, 65, 66, 68, 69, 70], "row_proxi": 25, "58": 25, "272106": 25, "plug": [25, 37, 136], "cdecim": 25, "wild": 25, "c3": 25, "c4": 25, "0x7fa540bcca20": 25, "0x7fa540bcc9e8": 25, "0x7fa540b3e2e8": 25, "0x7fa540897048": 25, "dedupecolumncollect": [25, 56], "s1": 25, "003": 25, "comfort": 25, "hello_data": 25, "pagin": 25, "outlier": 25, "ora_rn": 25, "postcompile_param_1": [25, 31, 50], "postcompile__ora_frow_1": 25, "postcompile_param_2": [25, 31], "postcompile_": 25, "excerpt": [25, 37, 126, 128, 137, 160], "book_w_excerpt": [25, 126], "batch_insert": 25, "5x": 25, "flavor": [25, 57, 66, 80], "bulk_insert": [25, 98], "dburl": [25, 98], "test_flush_no_pk": 25, "100000": [25, 76], "051527": 25, "test_bulk_save_return_pk": 25, "002470": 25, "test_flush_pk_given": 25, "863680": 25, "test_bulk_sav": [25, 98], "780378": 25, "test_bulk_insert_map": 25, "363070": 25, "test_core_insert": 25, "362647": 25, "820807": 25, "176378": 25, "037789": 25, "604446": 25, "204897": 25, "958976": 25, "166": 25, "00698": 25, "4999": 25, "4998": 25, "254": 25, "169": 25, "edt": 25, "26960": 25, "175": 25, "1002": 25, "1003": 25, "1004": 25, "1006": 25, "1007": 25, "1008": 25, "1009": 25, "1011": 25, "executemany_values_page_s": [25, 67], "age_int": 25, "age_int_1": 25, "age_int_2": 25, "00060": 25, "00043": 25, "00102": 25, "multiplex": 25, "_base": 25, "eleg": 25, "_transact": 25, "subscrib": [25, 34, 39, 118, 123], "sought": 25, "u2": [25, 78, 103, 136, 147, 150, 152], "merged1": 25, "merged2": 25, "rollout": 25, "likelihood": 25, "ineffect": 25, "l1": 25, "0x7f49b725eda0": 25, "admittedli": [25, 67, 77, 124], "0x7f1ff65e0ba8": 25, "0x7f1ff60a4550": 25, "anon_1_typ": 25, "524": 25, "0x7f7f5b9a9810": 25, "0x7f7f5b9a9750": 25, "140205120401296": 25, "0x7ff1b0200d50": 25, "140700085268432": 25, "49": 25, "770": 25, "0x7f70e13fca90": 25, "5451": 25, "0beta3": [25, 26], "400": [25, 72, 113], "fivefold": 25, "229326": 25, "944007": 25, "values_onli": [25, 67], "values_plus_batch": [25, 67], "page_s": 25, "inserted_primary_key_row": [25, 31, 36], "returned_default_row": 25, "bisect": 25, "deploi": [25, 64], "some_seq": [25, 66], "readjust": [26, 70], "minimalist": [26, 49, 70], "emerg": 26, "hardcor": 26, "programm": [26, 31, 70], "scientist": 26, "student": 26, "disciplin": 26, "residu": 26, "leftov": 26, "proven": [26, 31], "lesson": 26, "subsect": [26, 31, 33, 68, 76, 85, 118, 124, 155, 157], "trivial": [26, 31, 56, 76, 87], "subtli": 26, "provis": [26, 48], "runnabl": [26, 98, 139], "test3": [26, 87, 118], "offend": 26, "b8d9": 26, "2856": 26, "multiparam": [26, 31, 37, 40, 54, 74, 102, 137], "1639": 26, "_commit_impl": 26, "create_legacy_select": [26, 49, 54], "guidanc": [26, 70, 81], "subgroup": 26, "msg": [26, 41, 99], "some_x": 26, "mypi": [26, 27, 81, 93, 94, 114, 120, 123, 131, 132], "synopsi": [26, 42], "my_procedural_th": [26, 56], "some_other_t": 26, "hoho": 26, "spirit": 26, "fifteen": 26, "acid": [26, 51, 80], "rise": [26, 49, 137], "nuanc": 26, "earliest": [26, 97], "advertis": 26, "scrutini": 26, "untrust": [26, 32, 35, 56, 67, 78, 84, 124, 140, 157], "some_column": [26, 49, 56, 59, 65, 67, 68, 80, 101, 123, 126, 128], "case_claus": 26, "somerelatedclass": 26, "mapper_reg": 26, "uniformli": 26, "buildabl": 26, "change_4639": 26, "n2": [26, 98], "aa": 26, "pack": [26, 64, 113], "succinctli": [26, 30, 95, 124, 129, 137, 138, 147], "anon_1_id_1": 26, "anon_1_user_id": [26, 137, 151], "anon_1_email_address": [26, 151], "select_from_ent": 26, "wherev": [26, 57, 66], "welcom": [26, 154], "headlin": [26, 87, 151], "appeal": [26, 144, 148], "contextlib": [26, 31, 76, 150], "method_a": [26, 31, 150], "method_b": [26, 31, 150], "glossari": [27, 81, 149], "mit": 28, "licens": 28, "opensourc": 28, "bayer": 28, "trademark": 28, "herebi": 28, "charg": 28, "softwar": [28, 66, 80, 102, 158], "sublicens": 28, "sell": 28, "whom": [28, 119], "furnish": 28, "shall": [28, 140], "substanti": [28, 31, 48], "THE": 28, "warranti": 28, "BUT": 28, "merchant": 28, "noninfring": 28, "holder": 28, "BE": 28, "liabl": 28, "damag": 28, "liabil": 28, "tort": 28, "ambiguousforeignkeyserror": [29, 41, 124], "awaitrequir": [29, 41], "base20deprecationwarn": [29, 41], "dataerror": [29, 41], "hasdescriptioncod": [29, 41], "invalidatepoolerror": [29, 41], "legacyapiwarn": [29, 41], "missinggreenlet": [29, 41], "movedin20warn": [29, 41], "multipleresultsfound": [29, 31, 41, 102, 104, 137, 151], "noforeignkeyserror": [29, 41], "noinspectionavail": [29, 41, 47, 132, 146], "noreferencedcolumnerror": [29, 41], "noreferencedtableerror": [29, 41], "noresultfound": [29, 31, 41, 102, 137, 151], "nosuchmoduleerror": [29, 32, 41, 43, 49], "notsupportederror": [29, 41], "pendingrollbackerror": [29, 41], "sapendingdeprecationwarn": [29, 41], "unreflectabletableerror": [29, 41], "strsqlcompil": [29, 41, 48], "inherit_cach": [30, 42, 43, 44, 49, 54, 56, 65, 67, 68, 70, 76, 123], "compile_mycolumn": 30, "visit_alter_t": 30, "insertfromselect": 30, "visit_insert_from_select": 30, "asfrom": 30, "sql_compil": [30, 48], "myconstraint": 30, "compile_my_constraint": 30, "recal": [30, 31, 57, 90, 144, 151, 163], "_execution_opt": [30, 31, 45], "frozen": [30, 31, 148], "myinsertth": 30, "visit_xxx": 30, "prefix_insert": 30, "visit_insert": 30, "compile_varchar": 30, "visit_varchar": 30, "nvl": 30, "implic": [30, 31, 33, 39, 62, 71, 76, 90, 98], "daylight": 30, "utcnow": [30, 97], "pg_utcnow": 30, "ms_utcnow": 30, "getutcd": 30, "highest": [30, 56, 78, 136, 155], "default_greatest": 30, "visit_funct": 30, "case_greatest": 30, "checking_bal": 30, "savings_bal": 30, "sql_fals": 30, "default_fals": 30, "int_fals": 30, "exp": 30, "enrol": [30, 56], "king": 31, "queen": 31, "r1": [31, 98], "openstack": 31, "dialogu": 31, "indent": 31, "cyclomat": [31, 80], "novel": 31, "frame": [31, 70, 77, 104, 145, 157], "seealso": [31, 65], "nonloc": 31, "connectivti": 31, "0249": [31, 49], "my_mutating_procedur": 31, "tradition": [31, 65, 150, 156], "famili": [31, 57, 122, 155], "shallow": [31, 33, 40, 150], "autocommit_engin": [31, 150], "autobegun": 31, "scroll": 31, "richer": [31, 33], "transferr": [31, 83], "user_schema_on": 31, "special_schema": 31, "schema_engin": 31, "run_my_stat": 31, "150": 31, "1800": 31, "a_rec": 31, "statist": [31, 37], "badg": 31, "uncach": [31, 104], "recompil": 31, "proport": [31, 104], "86400": 31, "00007": 31, "00006": 31, "00011": 31, "0003533": 31, "0005326": 31, "00010": 31, "0003232": 31, "0004887": 31, "terminologi": 31, "evict": [31, 97, 148], "21600": 31, "00009": 31, "0005922": 31, "ux": 31, "occupi": [31, 87, 118], "250": [31, 37], "moder": [31, 90], "12k": 31, "20k": 31, "my_cach": 31, "render_literal_execut": [31, 56], "mydialect": [31, 32, 43, 48, 49], "mydbapiformydialect": 31, "offset_claus": 31, "_simple_int_claus": 31, "elif": [31, 33, 68, 77, 102, 103, 113, 117, 136], "__": [31, 50, 91], "experienc": [31, 70], "metaprogram": 31, "novic": 31, "statementlambdael": [31, 42, 43, 56], "some_connect": [31, 150], "lambdael": [31, 42, 43], "prime": [31, 58, 155], "newnam": [31, 57, 103, 156], "select_us": 31, "my_stmt": [31, 43], "00057": 31, "002059": 31, "get_x": 31, "get_i": 31, "0x7fed15f350e0": 31, "x_param": 31, "y_param": 31, "0x7fed15f35450": 31, "track_on": [31, 43, 56], "track_closure_vari": [31, 43, 56, 137], "where_criteria": [31, 43, 137], "cache_kei": [31, 48, 104, 148], "paraphras": 31, "0x7fed1617c710": 31, "__code__": 31, "0x7f07323c50e0": 31, "0x7f07323c5190": 31, "linkedlambdael": 31, "139668884281280": 31, "short_select": [31, 98, 104], "resid": [31, 49, 112], "brand": [31, 49, 104, 147], "multiten": 31, "norm": [31, 77], "intervent": [31, 51], "dbapi_conn": [31, 40, 48], "impos": [31, 51], "raw_connect": [31, 102], "diminish": 31, "callproc": [31, 56], "cursor_obj": [31, 37, 49, 51, 71], "my_procedur": 31, "nextset": 31, "results_on": 31, "results_two": 31, "foodialect": 31, "entry_point": 31, "myapp": [31, 76, 84], "mymysqldialect": 31, "close_with_result": [31, 45, 48, 90, 146], "_branch_from": [31, 45], "_dispatch": [31, 45, 51], "_has_ev": [31, 45], "_allow_revalid": [31, 45], "schema_for_object": [31, 48], "trans2": 31, "outstand": 31, "schema1": 31, "schema2": 31, "insul": 31, "v2": [31, 80], "after_execut": [31, 40], "conting": 31, "getlogg": [31, 37, 67, 76], "pipe": 31, "callable_": [31, 34, 56], "dealt": [31, 45, 162], "object_": [31, 146, 148], "do_someth": [31, 45, 97], "logcursoreventsplugin": 31, "log_cursor_logging_nam": 31, "log_cursor": 31, "_log_ev": 31, "log_cursor_plugin": 31, "mylogg": 31, "plugin_on": 31, "plugin_twp": 31, "plugin_thre": 31, "handle_dialect_kwarg": 31, "handle_pool_kwarg": 31, "dialect_cl": 31, "dialect_arg": 31, "pool_cl": 31, "pool_arg": 31, "clear_compiled_cach": [31, 102], "my_special_procedur": [31, 102], "query_cach": [31, 102], "facad": [31, 48, 51, 57, 59, 80, 98, 123, 150, 157, 161], "primary_engin": 31, "shard1": 31, "shard2": 31, "shard_1": 31, "db1": [31, 136, 150], "shard_2": 31, "_switch_shard": 31, "current_shard": 31, "_connect": 31, "chained_except": [31, 40], "execution_context": 31, "sqlalchemy_except": 31, "mimick": 31, "transactionalcontext": [31, 146], "basecursorresult": [31, 38], "chunkediteratorresult": [31, 38], "iteratorresult": [31, 38], "frozenresult": [31, 38, 102, 123, 148], "mergedresult": [31, 38], "cursor_strategi": 31, "cursor_descript": 31, "lastrow_has_default": [31, 48], "returned_defaults_row": [31, 36], "contrari": [31, 151], "cursor_metadata": 31, "source_supports_scalar": 31, "dynamic_yield_p": 31, "refil": 31, "resultintern": 31, "43": [31, 51, 64, 67, 102], "unfrozen_result_on": 31, "unfrozen_result_two": 31, "_source_supports_scalar": 31, "keymap": 31, "key_styl": 31, "iterkei": 31, "_withkei": [31, 102], "col_express": [31, 102], "reorder": [31, 119], "int_id": 31, "datasourc": [31, 64], "real_result": [31, 102], "introductori": [31, 90, 102, 133, 140, 146], "baserow": 31, "joint": 32, "user_prefer": [32, 49], "pref_id": [32, 49], "pref_nam": [32, 49], "pref_valu": [32, 49], "spread": 32, "invoic": [32, 49], "invoice_id": 32, "ref_num": 32, "invoice_item": [32, 49], "item_nam": 32, "node_id": [32, 113, 144], "primary_el": 32, "parent_node_id": 32, "fk_element_parent_node_id": 32, "haven": [32, 48, 57, 121, 132], "sort_tables_and_constraint": [32, 34, 49, 52, 53], "rev_id": 32, "note_id": 32, "uix_1": 32, "check1": 32, "mytable_pk": 32, "templat": [32, 34, 49, 70, 123], "ix": [32, 49, 66], "embellish": 32, "ix_": [32, 49, 66], "fk_": 32, "referred_table_nam": [32, 49], "pk_": 32, "uq_user_nam": 32, "create_unique_constraint": 32, "default_naming_convent": 32, "fk_guid": 32, "str_token": 32, "target_fullnam": 32, "uuid5": 32, "namespace_oid": 32, "address_t": [32, 49, 50, 54, 133, 135, 138, 154, 155, 156, 161], "user_version_id": [32, 152], "fk_0cd51ab5": 32, "8d70": 32, "56e8": 32, "a83c": 32, "86661737766d": 32, "value_gt_5": 32, "ck_foo_value_gt_5": 32, "columns_0_nam": 32, "ck_foo_flag": 32, "flag_bool": 32, "ck_foo_flag_bool": 32, "columncollectionconstraint": [32, 53, 67], "columncollectionmixin": [32, 53], "_type_bound": 32, "dialect_kw": [32, 36, 65, 67, 68], "dialectnam": [32, 49], "argnam": [32, 49], "dialect_nam": [32, 36, 43, 49, 54, 58, 67, 137], "argument_nam": [32, 43, 49], "some_index": [32, 43, 49], "mydialect_length": [32, 43, 49], "construct_argu": [32, 43, 48, 49], "target_t": [32, 35], "my_object": [32, 43, 49, 67, 90, 97, 137, 146, 149], "omit_attr": [32, 43, 49, 54, 56, 61], "_autoattach": 32, "verbatim": [32, 35, 56], "trust": [32, 35, 56, 67, 78], "_unresolv": 32, "remote_t": [32, 96], "remote_id": 32, "main_tabl": 32, "get_refer": 32, "columnkei": 32, "refcolumn": 32, "frill": 32, "x5": 32, "ck_t_x5": 32, "ck_t_ck_t_x5": 32, "ix_mytable_col1": 32, "ix_mytable_col2": 32, "col4": [32, 34], "col5": [32, 34], "col6": [32, 34], "idx_col34": 32, "myindex": 32, "idx_col12": 32, "compile_binary_sqlit": 33, "epoch": [33, 59], "myepochtyp": 33, "1970": [33, 59], "myjsontyp": 33, "myarraytyp": 33, "reverse_oper": [33, 49, 56, 58, 101, 123], "compare_valu": [33, 58, 59, 60], "type_engin": 33, "internal_onli": [33, 58, 59], "_static_cache_kei": [33, 58, 59], "lookuptyp": [33, 58, 59], "no_cach": [33, 58, 59], "some_cach": [33, 58, 59], "_lookup": [33, 58, 59], "mycompar": [33, 49, 56, 58, 101, 123], "expres": 33, "__add__": [33, 50, 56, 123], "dialect_impl": [33, 58, 60], "coerceutf8": 33, "choke": 33, "safenumer": 33, "quantiz": 33, "quantize_int": 33, "denorm": 33, "tzdatetim": 33, "astimezon": 33, "32x": 33, "hexstr": [33, 37, 51], "simplejson": 33, "json_typ": 33, "json_data": [33, 59], "like_op": 33, "not_like_op": 33, "outgo": [33, 90, 102], "geograph": 33, "geometri": [33, 44, 49, 57, 98, 101, 124], "st_geomfromtext": 33, "st_astext": 33, "geom_id": 33, "geom_data": 33, "linestr": 33, "189412": 33, "252431": 33, "189631": 33, "259122": 33, "geom_data_1": 33, "geom_data_2": 33, "pgpstring": 33, "pgcrypto": 33, "passphras": [33, 68], "pgp_sym_encrypt": 33, "pgp_sym_decrypt": 33, "pgp_sym_encrypt_1": 33, "pgp_sym_decrypt_1": 33, "message_1": 33, "username_1": 33, "myint": 33, "goofi": 33, "special_addit": 33, "log_1": 33, "log_2": 33, "is_frobnozzl": 33, "myinteg": 33, "metadata_two": 33, "my_reflected_t": 33, "cid": 33, "notnul": 33, "dflt_valu": 33, "metadata_thre": 33, "_setup_pickletyp": 33, "cst_user_name_length": 34, "execute_if": 34, "my_func": 34, "plpgsql": 34, "dt_in": 34, "should_creat": 34, "connam": 34, "should_drop": 34, "_createdropbas": [34, 53], "skip_fn": 34, "extra_depend": 34, "filter_fn": 34, "_warn_for_cycl": 34, "ddlrole": 34, "_ddlcompil": 34, "ddl_listen": 34, "my_ddl": 34, "uid": [34, 64, 65, 75], "spow": 34, "secretpow": 34, "drop_spow": 34, "_legacy_bind": 34, "include_foreign_key_constraint": 34, "redirect": [34, 56], "visit_create_column": [34, 67], "type_compil": [34, 48], "get_column_default_str": 34, "const": [34, 39, 67], "skip_xmin": 34, "crude": 35, "chapter": [35, 59, 97, 151], "last_upd": [35, 65], "create_d": [35, 102], "keyvalu": 35, "type1": 35, "last_modifi": 35, "ourselv": [35, 52, 57, 68, 103, 104, 128, 136, 163], "created_at": [35, 36, 94, 102, 123], "index_valu": 35, "cartitem": 35, "cart_id": 35, "cart_id_seq": 35, "created": 35, "some_schema": [35, 96], "_dml": 35, "next_val": 35, "some_sequ": 35, "nextid": 35, "my_seq": 35, "next_value_1": 35, "my_general_seq": 35, "perimet": 35, "on_nul": [35, 66], "_reflect": 35, "some_table_seq": 35, "ascend": [35, 54, 56, 57, 117, 155], "rac": 35, "dmlwherebas": 36, "server_flag": 36, "updated_timestamp": 36, "first_name_1": 36, "name_2": [36, 50, 56, 155], "name_3": 36, "exported_column": [36, 44, 49, 54, 56], "with_dialect_opt": 36, "dmlrole": 36, "hascompilest": [36, 54], "hasprefix": [36, 42, 54, 61, 137], "returnsrow": [36, 42, 54], "paglock": 36, "newdata": 36, "server_created_at": 36, "insert_executemany_return": 36, "5432": [37, 67, 102], "letter": [37, 57, 87], "kx": 37, "jj5": 37, "2f": 37, "dbuser": 37, "40jj5": 37, "2fg": 37, "pghost10": 37, "appdb": 37, "quote_plu": [37, 65], "url_object": 37, "127": [37, 39, 51], "sidnam": 37, "tnsname": 37, "nohostnam": 37, "name_or_url": 37, "latin1": [37, 52, 65], "stdout": [37, 51, 67], "boundexpress": 37, "executiontim": 37, "pertain": [37, 121], "_json_deseri": [37, 59], "max_identfier_length": 37, "eight": [37, 65, 71], "millisecond": [37, 51], "peak": [37, 51], "750": 37, "engine_config_typ": 37, "get_backend_nam": 37, "get_driver_nam": 37, "render_as_str": 37, "translate_connect_arg": [37, 48], "ssl_cipher": [37, 65], "mutable_query_opt": 37, "update_queri": 37, "parse_q": 37, "hide_password": 37, "_replac": 37, "query_paramet": 37, "key_value_pair": 37, "query_str": 37, "create_connect_arg": [37, 48], "some_pass": 37, "some_host": 37, "client_flag": 37, "connection_factori": 37, "myconnectionfactori": 37, "sqlsrvr": 37, "receive_do_connect": [37, 40], "conn_rec": [37, 40, 64], "carg": [37, 40, 48, 64], "cparam": [37, 40, 48, 64], "get_authentication_token": 37, "provide_token": [37, 64], "basicconfig": [37, 67, 76], "pool_echo": 37, "54": 37, "57": [37, 68], "701": 37, "0x7f287819ac60": 37, "702": 37, "703": 37, "704": 37, "47": 37, "291": 37, "track1": 37, "48": [37, 76], "755": 37, "e1": [37, 57, 141], "e2": [37, 57], "track2": 37, "51": 37, "960": 37, "518": 37, "519": 37, "520": 37, "privaci": 37, "some_private_nam": 37, "pii": 37, "optimist": [38, 71, 90, 98, 102, 123, 146], "my_on_connect": [39, 102], "dbapi_con": [39, 102], "my_pool": 39, "validate_phon": [39, 97], "oldvalu": [39, 97], "phone": [39, 97], "usercontact": [39, 97], "unique_constraint_nam": 39, "after_parent_attach": [39, 40, 59], "veloc": 39, "deassoci": [39, 41, 84, 85], "on_config": 39, "do_config": 39, "my_listener_funct": 39, "my_on_checkout": 40, "connection_rec": 40, "connection_proxi": [40, 51], "someengineorpool": 40, "receive_checkin": 40, "receive_checkout": 40, "receive_clos": 40, "receive_close_detach": 40, "receive_connect": 40, "receive_detach": 40, "receive_first_connect": 40, "receive_invalid": 40, "receive_reset": 40, "receive_soft_invalid": 40, "comment_sql_cal": 40, "commit_twophas": 40, "prepare_twophas": 40, "rollback_savepoint": 40, "rollback_twophas": 40, "someengin": [40, 52, 78, 107], "receive_after_cursor_execut": 40, "receive_after_execut": 40, "receive_before_cursor_execut": 40, "receive_before_execut": 40, "receive_begin": 40, "receive_begin_twophas": 40, "receive_commit": 40, "is_prepar": [40, 48], "receive_commit_twophas": 40, "receive_engine_connect": 40, "receive_engine_dispos": 40, "exception_context": 40, "receive_handle_error": 40, "handle_except": 40, "myspecialexcept": 40, "receive_prepare_twophas": 40, "receive_release_savepoint": 40, "receive_rollback": 40, "receive_rollback_savepoint": 40, "receive_rollback_twophas": 40, "receive_savepoint": 40, "receive_set_connection_execution_opt": 40, "receive_set_engine_execution_opt": 40, "do_execute_no_param": [40, 48, 71], "do_executemani": [40, 48], "some_password": 40, "receive_do_execut": 40, "receive_do_execute_no_param": 40, "receive_do_executemani": 40, "inputs": [40, 66], "receive_do_setinputs": 40, "new_tabl": [40, 49], "new_metadata": 40, "before_parent_attach": [40, 59], "someschemaclassorobject": 40, "receive_after_cr": 40, "receive_after_drop": 40, "receive_after_parent_attach": 40, "receive_before_cr": 40, "receive_before_drop": 40, "receive_before_parent_attach": 40, "receive_column_reflect": 40, "spawn": [41, 70, 71, 90, 147], "deprecated_sinc": 41, "ismulti": 41, "_code_str": 41, "mycustomexcept": 41, "myspecialtyp": [41, 57], "await_": 41, "tname": [41, 52], "cname": 41, "runtimewarn": 41, "funcfilt": [42, 44, 56], "false_": [42, 56], "wrapscolumnexpress": [42, 56], "true_": [42, 56], "hassuffix": [42, 54, 61, 137], "label_style_default": [42, 54], "register_funct": [42, 44], "current_tim": [42, 44], "current_us": [42, 44], "rollup": [42, 44], "session_us": [42, 44], "utc": [42, 60, 136], "unique_param": [42, 43, 49, 54, 56, 57], "spoil": [42, 43, 104], "externaltravers": [42, 61], "visitor_iter": [42, 61], "internaltravers": [42, 61], "dp_annotations_kei": [42, 61], "dp_anon_nam": [42, 61], "dp_boolean": [42, 61], "dp_clauseel": [42, 61], "dp_clauseelement_list": [42, 61], "dp_clauseelement_tupl": [42, 61], "dp_dialect_opt": [42, 61], "dp_dml_multi_valu": [42, 61], "dp_dml_ordered_valu": [42, 61], "dp_dml_valu": [42, 61], "dp_fromclause_canonical_column_collect": [42, 61], "dp_fromclause_ordered_set": [42, 61], "dp_has_cache_kei": [42, 61], "dp_has_cache_key_list": [42, 61], "dp_named_ddl_el": [42, 61], "dp_oper": [42, 61], "dp_plain_dict": [42, 61], "dp_plain_obj": [42, 61], "dp_prefix_sequ": [42, 61], "dp_propagate_attr": [42, 61], "dp_statement_hint_list": [42, 61], "dp_string": [42, 61], "dp_string_clauseelement_dict": [42, 61], "dp_string_list": [42, 61], "dp_string_multi_dict": [42, 61], "dp_table_hint_list": [42, 61], "dp_type": [42, 61], "dp_unknown_structur": [42, 61], "traversibletyp": [42, 61], "cloned_travers": [42, 61], "replacement_travers": [42, 61], "traverse_us": [42, 61], "statement_cach": 43, "sqlrole": 43, "supportswrappingannot": 43, "memoizedhascachekei": [43, 123, 132, 137], "hascopyintern": [43, 123], "guideslin": [43, 49, 54, 56, 65, 67, 68, 123], "hasmemo": [43, 49, 54, 56, 102, 123, 137], "optionaldict": [43, 49, 54, 56], "lambdaopt": 43, "apply_propagate_attr": 43, "allowslambdarol": 43, "enable_track": [43, 56], "track_bound_valu": [43, 56], "track_closure_valu": 43, "mypackag": [44, 147], "some_funct": [44, 102, 113], "entity_namespac": [44, 49, 54, 56], "within_group_typ": [44, 56], "data_view": 44, "unnest_1": 44, "left_index": 44, "right_index": 44, "is_equ": 44, "functionasbinari": 44, "child1": [44, 144], "parent2": 44, "generate_seri": [44, 67, 155], "generate_series_1": [44, 67], "generate_series_2": [44, 67], "generate_series_3": [44, 67], "json_array_el": [44, 67, 155], "myfunct": 44, "jsonb_each": 44, "jsonb_each_1": 44, "function_el": 44, "gen": 44, "as_utc": 44, "geobuff": 44, "geo": 44, "st_buffer": 44, "_default": 44, "_genericmeta": 44, "returntypefromarg": 44, "concat_2": [44, 57], "concat_3": 44, "concat_1": [44, 57], "col_1": 44, "col_2": 44, "col_3": 44, "orderedsetagg": 44, "breadth": [46, 61, 82], "instance_st": [47, 145, 146], "raiseerr": 47, "messeng": 48, "render_schema_transl": 48, "compile_st": [48, 123, 128, 137], "dml_compile_st": 48, "compilest": [48, 128, 137], "extracted_paramet": 48, "isinsert": 48, "isupd": 48, "isdelet": 48, "ormfromstatementcompilest": 48, "define_constraint_remote_t": 48, "supports_native_boolean": 48, "compiler_lint": 48, "ddl_compil": 48, "denormalize_nam": 48, "do_begin_twophas": 48, "do_clos": 48, "do_commit": 48, "do_commit_twophas": 48, "do_prepare_twophas": 48, "do_recover_twophas": 48, "do_release_savepoint": 48, "do_rollback": 48, "do_rollback_to_savepoint": 48, "do_rollback_twophas": 48, "do_savepoint": 48, "do_set_input_s": 48, "do_termin": 48, "execute_sequence_format": 48, "execution_ctx_cl": 48, "get_default_isolation_level": 48, "get_driver_connect": 48, "has_index": 48, "load_provis": 48, "normalize_nam": 48, "reset_isolation_level": 48, "statement_compil": 48, "supports_default_metavalu": 48, "supports_default_valu": 48, "supports_empty_insert": 48, "nad": 48, "postgresql_": 48, "requires_name_norm": 48, "do_autocommit": 48, "list_of_tupl": 48, "use_inputs": 48, "view_nam": [48, 52], "index_nam": 48, "sequence_nam": [48, 52], "strateg": 48, "importerror": 48, "do_on_connect": 48, "returns_unicod": [48, 59], "typeobj": 48, "colspec": 48, "adapt_typ": 48, "supports_alt": 48, "preexecute_autoincrement_sequ": 48, "supports_sequ": 48, "sequences_opt": 48, "myexcept": 48, "create_cursor": 48, "get_lastrowid": 48, "get_out_parameter_valu": 48, "get_result_processor": 48, "handle_dbapi_except": 48, "post_exec": 48, "pre_exec": 48, "should_autocommit_text": 48, "has_out_paramet": 48, "isoutparam": [48, 56], "visit_bindparam": [48, 61, 78], "get_result_proxi": 48, "last_insert_id": 48, "committ": 48, "root_connect": [48, 71], "should_autocommit": 48, "out_param_nam": 48, "typecompil": 48, "initial_quot": 48, "final_quot": 48, "escape_quot": 48, "quote_case_sensitive_col": 48, "omit_schema": 48, "format_column": 48, "format_label_nam": 48, "format_schema": 48, "format_t": 48, "format_table_seq": 48, "quote_identifi": 48, "unformat_identifi": 48, "validate_sql_phras": 48, "use_t": 48, "use_schema": 48, "anon_map": 48, "attrgett": [48, 87], "for_executemani": 48, "no_lint": 48, "ansi_bind_rul": 48, "current_execut": 48, "default_from": 48, "delete_extra_from_claus": 48, "escaped_bind_nam": 48, "get_select_precolumn": 48, "insert_single_values_expr": 48, "literal_execute_param": 48, "positiontup": [48, 78], "post_compile_param": 48, "postfetch_lastrowid": 48, "render_table_with_column_in_update_from": 48, "returning_precedes_valu": 48, "translate_select_structur": 48, "update_from_claus": 48, "update_limit_claus": 48, "update_tables_claus": 48, "_group_numb": 48, "_check": 48, "nestabl": 48, "update_stmt": [48, 156], "from_tabl": 48, "extra_from": 48, "from_hint": 48, "classwid": 48, "create_async_engin": [48, 65, 67, 68, 71, 102], "sync_engin": [48, 102], "register_custom_typ": [48, 102], "set_type_codec": [48, 102], "mycustomtyp": [48, 76, 102], "aptli": 49, "denot": [49, 68, 75, 129, 139], "employee_dept": 49, "department_id": 49, "fkei": 49, "ordinarili": [49, 62, 104, 124, 136, 137], "user_pref": 49, "tenant": 49, "constrast": [49, 102], "financial_info": 49, "remote_bank": 49, "financial_info_id": 49, "refers_to_financial_info": 49, "fiid": 49, "tsn_name": 49, "set_current_schema": 49, "engine_email_address": 49, "remote_user_id": 49, "anon_key_label": [49, 56], "anon_label": [49, 56], "timetupl": [49, 56, 101, 123], "meet": [49, 56, 67, 68, 87, 123, 132, 157], "signifi": 49, "ix_some_table_x": 49, "biz": 49, "bang": 49, "bash": 49, "cleft": [49, 56, 101, 123], "cright": [49, 56, 101, 123], "opstr": [49, 56, 101, 123], "column_t": [49, 56], "expanding_valu": [49, 56, 101, 123], "0xff": [49, 56, 57, 101, 123], "infix": [49, 56, 101, 123], "regexp_lik": [49, 56, 101, 123], "othercolumn": [49, 56], "is_bound": 49, "mnemon": 49, "column_0n_label": 49, "column_0_n_label": 49, "zeroth": 49, "referred_column_0_kei": 49, "referred_column_0n_kei": 49, "someurl": 49, "get_sorted_table_and_fkc_nam": [49, 52], "mytable_id": [49, 65], "listen_for_reflect": 49, "is_derived_from": [49, 54], "replace_select": [49, 54], "require_embed": [49, 54, 56], "row_to_json": [49, 54, 67], "row_to_json_1": [49, 54, 67], "retain_schemasymbol": 49, "_schema": [49, 126], "meth": [49, 54, 97, 113], "m1": [49, 73, 80, 82, 117, 118, 129, 155], "user_copi": 49, "newschema": 49, "user_copy_on": 49, "m3": 49, "user_copy_two": 49, "to_schema": 49, "__gt__": [50, 56, 88, 123], "__ge__": [50, 56], "x_2": [50, 57], "postcompile_x_1": 50, "user_account": [50, 80, 132, 136, 138, 139, 154, 155, 156, 161, 162, 163], "mathemat": 50, "tup": 50, "spongebob": [50, 136, 138, 139, 147, 154, 155, 163], "paricularli": 50, "complementari": [50, 151, 163], "m\u00fcller": 50, "__radd__": [50, 56], "__sub__": [50, 56], "__rsub__": [50, 56], "__mul__": [50, 56], "__rmul__": [50, 56], "__div__": [50, 56], "__rdiv__": [50, 56], "squidward": [50, 136, 138, 147, 155, 162, 163], "partner": 50, "invert": 50, "congratul": 51, "dataset": 51, "perfectli": [51, 52, 98, 102, 147], "rundown": [51, 57, 151], "getconn": 51, "mypool": 51, "inexpens": 51, "non_acid_engin": 51, "sp_reset_connect": [51, 64], "dealloc": [51, 67], "unlisten": [51, 67], "mssql_engin": [51, 64], "5hhh": [51, 64], "_reset_mssql": [51, 64], "reset_st": [51, 64, 67], "mid": [51, 71], "pw": 51, "ping_connect": 51, "bother": 51, "save_should_close_with_result": 51, "should_close_with_result": 51, "dictat": [51, 77, 103], "postgreql": 51, "tcp": [51, 66, 67, 71, 80], "socket": [51, 67, 68, 70, 76], "shot": 51, "run_in_process": 51, "some_data_record": 51, "pid": 51, "getpid": 51, "surpass": [51, 70], "danger": [51, 119], "aliv": 51, "sleep": [51, 71, 76], "fairi": 51, "transitori": 51, "invis": 51, "_connection_record": 51, "is_valid": 51, "record_info": 51, "connectionrecord": 51, "knowledg": [51, 139, 162], "message_id": 52, "message_nam": 52, "shopping_cart_item": 52, "shopping_cart": 52, "Of": [52, 57, 149], "mydata": [52, 67], "my_view": 52, "some_view": 52, "view_id": 52, "related_th": [52, 90, 102, 146], "thing_id": 52, "ramif": 52, "messages_table_1": 52, "messages_table_2": 52, "project_id": [52, 80], "projects_table_1": 52, "projects_table_2": 52, "remedi": 52, "get_table_opt": 52, "column_sort": 52, "fkname": 52, "_extend_on": 52, "chosen": [52, 67, 68, 136], "data1": [52, 66, 126], "data2": [52, 66, 126], "data3": 52, "my_mysql_t": 52, "genericize_datatyp": 52, "column_dict": 52, "my_generic_t": 52, "pg_engin": 52, "idiosyncrasi": 52, "exists_criteria": 54, "value_expr": 54, "my_valu": 54, "name1": [54, 56, 57], "name2": [54, 56, 57], "name3": [54, 57], "dmltablerol": 54, "noinit": 54, "append_group_bi": 54, "append_order_bi": 54, "indirectli": [54, 80, 132, 155, 161], "delete_statement_ct": 54, "update_stat": 54, "c1_1": 54, "deprecatedselectbasegener": 54, "regional_sal": 54, "total_sal": 54, "top_region": 54, "product_unit": 54, "product_sal": 54, "incl_alia": [54, 137], "parts_alia": [54, 137], "total_quant": [54, 137], "product_id": 54, "update_ct": 54, "value_a": 54, "value_a_nest": 54, "value_b": 54, "value_ab": 54, "root_nod": 54, "left_edg": 54, "right_edg": 54, "subgraph_ct": 54, "subgraph": 54, "tie": [54, 59, 148], "mandatori": 54, "stat": [54, 56, 76], "new_col": [54, 137], "new_stmt": [54, 57], "iscterol": 54, "anonymizedfromclauserol": 54, "_label_styl": 54, "hascterol": 54, "bka": [54, 137], "table_a_id": 54, "table_b_id": 54, "table_b_a_id": 54, "table_a_1": 54, "table_b_1": 54, "table_c_1": 54, "returnsrowsrol": 54, "inelementrol": [54, 56], "_sql": 54, "inner_column": 54, "hashint": [54, 137], "deprecatedselectgener": 54, "_selectfromel": [54, 137], "my_select": 54, "new_column": 54, "from_": 54, "only_synonym": 54, "booleanclauselist": 54, "ix_myt": [54, 137], "selectstatementrol": [54, 56], "dmlselectrol": 54, "compoundelementrol": 54, "supportscloneannot": [54, 137], "bodi": [54, 95, 113, 123, 132, 151], "json_array_elements_text": 54, "json_array_elements_text_1": 54, "some_func": 54, "with_typ": [54, 67], "json_to_recordset_1": 54, "value2": [54, 59, 67], "columna": 54, "columna_1": 54, "tablea": 54, "columnb": 54, "columnc": 54, "table1_columna": 54, "table2_columna": 54, "table1_columnb": 54, "table2_columnc": 54, "intrus": 54, "somedata": [55, 122], "sortkei": 55, "basemost": [56, 107, 121], "lmb": 56, "no_arg": 56, "_compared_to_oper": 56, "_compared_to_typ": 56, "_is_crud": 56, "smith": [56, 130], "4327771088": 56, "orderlin": 56, "qty": 56, "greaterthan100": 56, "greaterthan10": 56, "lessthan10": 56, "qty_1": 56, "qty_2": 56, "product_t": [56, 64], "unit_pric": [56, 64, 137], "natural_self_preced": 56, "eager_group": 56, "logged_t": 56, "remind": 56, "_functiongener": 56, "yield_curv": 56, "yield_curve_1": 56, "yield_curve_2": 56, "my_str": 56, "my_string_1": 56, "my_string_2": 56, "my_string_3": 56, "global_track_bound_valu": 56, "lambda_cach": 56, "_express": 56, "or_criteria": 56, "log_tabl": 56, "date_str": [56, 57], "stringdatetim": 56, "mystringtyp": 56, "some_integ": 56, "someint": 56, "some_str": [56, 155], "someint_1": 56, "some_dsn": [56, 64], "langhelp": [56, 123, 146], "memoizedslot": [56, 123, 146], "lower_bound": 56, "upper_bound": 56, "somearrai": 56, "id_2": [56, 70], "0x101029dd0": 56, "effective_valu": 56, "orderbyrol": 56, "columnsclauserol": 56, "dmlcolumnrol": 56, "ddlreferredcolumnrol": 56, "labeledcolumnexprrol": 56, "strasplaincolumnrol": 56, "namedcolumn": 56, "employee_t": [56, 121], "payment": 56, "tablename_columnnam": 56, "t_c": 56, "0x7f59dcf04fa0": 56, "as_immut": 56, "iter_": 56, "allows_lambda": 56, "base_column": 56, "is_clause_el": [56, 101, 123, 137], "is_select": [56, 101, 123, 137, 146, 148], "stringify_dialect": 56, "uses_inspect": 56, "columnargumentorkeyrol": 56, "statementoptionrol": 56, "wherehavingrol": 56, "binaryelementrol": 56, "limitoffsetrol": 56, "ddlconstraintcolumnrol": 56, "ddlexpressionrol": 56, "__lshift__": 56, "__neg__": 56, "__rshift__": 56, "__rtruediv__": 56, "__truediv__": 56, "singletonconst": 56, "constexprrol": 56, "fromclauserol": 56, "names_to_valu": 56, "gap": [56, 101], "st": 56, "wraps_column_express": 56, "modicum": 57, "superfici": [57, 134, 151], "prompt": [57, 64, 82, 151, 162], "prerequisit": [57, 68, 152, 162], "popup": [57, 151], "click": [57, 151, 158], "lai": 57, "user_id_seq": [57, 151], "stringent": [57, 151], "peek": [57, 149], "drawn": 57, "yahoo": [57, 128, 151], "msn": 57, "aol": [57, 128, 138, 154, 155, 156, 163], "saniti": 57, "wow": 57, "stumbl": 57, "interestingli": 57, "fear": 57, "tiddlywink": 57, "edsnicknam": [57, 151], "windi": [57, 151], "pep8": [57, 151], "hurri": 57, "lump": 57, "email_address_2": [57, 138, 155, 163], "jigger": 57, "vocabulari": 57, "num_address": [57, 155], "u1a": 57, "u1b": 57, "users_2": 57, "fullname_1": [57, 155], "anytim": 57, "someothernam": 57, "addresses_2": [57, 151], "address_subq": [57, 137, 138, 155], "halfwai": 57, "cornerston": 57, "reader": [57, 134, 138, 154, 155, 156, 157, 160, 161], "gig": 57, "secret": 57, "tribe": 57, "dba": 57, "black": 57, "users_ct": 57, "neatli": 57, "tuck": 57, "users_recurs": 57, "xyz_my_goofy_funct": 57, "maxemail": 57, "calc1": 57, "calc2": 57, "y_2": 57, "address_count": [57, 130, 151, 155], "enclosing_stmt": 57, "_name": 57, "oldnam": [57, 156], "mari": [57, 151, 156], "jake": [57, 156], "wood": 57, "assur": [57, 59, 157], "allow_nulltyp": 58, "colexpr": 58, "conn_typ": 58, "my_special_object": 58, "tinytext": [59, 65], "bio": [59, 126], "_create_ev": [59, 64, 65], "_lookupexpressionadapt": 59, "values_cal": 59, "longest": 59, "adapt_to_emul": 59, "_abstractinterv": [59, 66, 67], "impltyp": 59, "cpickl": 59, "_mysql": [59, 65, 71], "_warn_on_bytestr": [59, 64, 66], "_expect_unicod": [59, 64, 66], "returns_unknown": 59, "transmit": [59, 128], "dimension": [59, 67], "someormclass": [59, 67], "subarrai": [59, 67], "lt": [59, 113], "myarrai": [59, 67], "irrelev": [59, 67], "value1": [59, 67, 117], "key2": [59, 67], "key_1": [59, 67], "key_2": [59, 67], "key_n": [59, 67], "caster": 59, "some_integer_kei": 59, "some_boolean": 59, "55": 59, "ensure_ascii": 59, "as_json": [59, 64], "json_column": 59, "some_data": 59, "jsonelementtyp": 59, "jsonintindextyp": 59, "jsonstrindextyp": 59, "json_nul": 59, "camelcas": 60, "ast": 61, "_traverse_intern": 61, "_copy_intern": 61, "_gen_cache_kei": 61, "visit_symbol": 61, "ak": 61, "_annotations_cache_kei": 61, "_annot": [61, 80], "ce": 61, "ct": 61, "dml_mv": 61, "dml_ov": 61, "dml_v": 61, "fc": 61, "hc": 61, "dd": 61, "pd": 61, "po": [61, 80, 119], "pa": 61, "sh": 61, "_statement_hint": 61, "cd": [61, 98], "sl": 61, "md": 61, "_hint": 61, "uk": 61, "clsname": 61, "clsdict": 61, "_compiler_dispatch": 61, "_children_travers": 61, "_cache_key_travers": 61, "_copy_internals_travers": 61, "markmark": 61, "bind_param": 61, "collector": 62, "reclaim": 62, "empl": 62, "sale": 62, "download": [62, 64, 65, 66, 67, 68, 69, 82, 102], "firebirdsql": 62, "concurrency_level": 62, "sourceforg": [62, 69], "dist_doc": 62, "adv_param_conv_dynamic_type_transl": 62, "special_issue_concurr": 62, "18c": [63, 66], "actian": 63, "avalanch": 63, "vector": 63, "ingr": 63, "pyathena": 63, "apach": 63, "druid": 63, "pydruid": 63, "hive": 63, "presto": 63, "pyhiv": 63, "solr": 63, "cockroachdb": 63, "cratedb": 63, "crate": 63, "exasolut": 63, "sqlalchemy_exasol": 63, "elasticsearch": 63, "firebolt": 63, "bigqueri": 63, "pybigqueri": 63, "sheet": 63, "gsheet": 63, "netezza": 63, "nzalchemi": 63, "turbodbc": 63, "monetdb": 63, "opengauss": 63, "sap": 63, "ASE": 63, "hana": 63, "sqlani": 63, "snowflak": 63, "teradata": 63, "vantag": 63, "teradatasqlalchemi": 63, "testtabl": 64, "numericasinteg": 64, "auxiliari": 64, "9223372036854775808": 64, "my_n_data": 64, "latin1_general_ci_a": 64, "mssql_rn": 64, "myowner": 64, "my_index": [64, 65, 66, 67], "sql2000": 64, "sql2005": 64, "mildli": 64, "allow_snapshot_isol": 64, "read_committed_snapshot": 64, "msdn": 64, "ms175095": 64, "aspx": 64, "trycast": 64, "_datetimebas": 64, "json_queri": 64, "convert_int": 64, "xml_schema_collect": 64, "dsnname": [64, 65, 69], "connectionstr": 64, "pwd": [64, 65], "trustservercertif": 64, "ampersand": 64, "connection_url": 64, "odbc_connect": [64, 65], "connection_str": [64, 65], "dagger": 64, "credenti": 64, "snippet": [64, 78], "struct": 64, "sql_copt_ss_access_token": 64, "msodbcsql": 64, "h": [64, 98, 138, 162, 163], "token_url": 64, "azure_credenti": 64, "defaultazurecredenti": 64, "raw_token": 64, "get_token": 64, "le": 64, "token_struct": 64, "attrs_befor": 64, "sbc": 64, "sql_server": 64, "longasmax": 64, "mssqlserver": 64, "egenix": [64, 69], "executedirect": 64, "sqldescribeparam": 64, "native_odbc_execut": 64, "freetds_nam": 64, "some_mariadb": 65, "mariadb_engin": 65, "textdata": 65, "textdata_ix": 65, "mariadb_prefix": 65, "max_row": 65, "row_format": 65, "insert_method": 65, "mysql_argument_nam": 65, "1024": 65, "mysql_charset": 65, "mysql_key_block_s": 65, "mariadb_charset": 65, "mariadb_key_block_s": 65, "mysql_keyword_nam": 65, "keyword_nam": 65, "mysql_data_directori": 65, "mysql_character_set": 65, "mysql_index_directori": 65, "gid": 65, "sscursor": 65, "cnf": 65, "codepoint": 65, "f9876a": 65, "binary_prefix": 65, "websit": [65, 67, 161], "some_identifi": 65, "strict_all_t": 65, "plaintext": 65, "sql_small_result": 65, "mariadb_limit": 65, "no_range_optim": 65, "t4": 65, "in_boolean_mod": 65, "jlh": [65, 67, 68], "contradict": 65, "found_row": 65, "mariadb_length": 65, "a_b_idx": 65, "nonbinari": 65, "mariadb_us": 65, "refman": [65, 71], "ngram": 65, "mariadb_with_pars": 65, "visit_foreign_key_constraint": 65, "insidi": [65, 75], "other_id": 65, "ts_test": 65, "match_expr": 65, "in_natural_language_mod": 65, "with_query_expans": 65, "longtext": 65, "mediumtext": 65, "mediuminteg": 65, "1901": 65, "_integertyp": 65, "zerofil": 65, "pad": 65, "bdb": 65, "_stringtyp": 65, "_numerictyp": 65, "_floattyp": 65, "nativeforemul": [65, 66, 67], "ucs2": 65, "myset": 65, "192": [65, 67], "168": [65, 67], "134": 65, "ca": 65, "pem": 65, "cert": 65, "ssl_ca": 65, "ssl_kei": 65, "ssl_capath": 65, "connection_uri": 65, "certif": [65, 67], "unix_socket": 65, "cloudsql": 65, "projectid": 65, "instancenam": 65, "readthedoc": [65, 66], "mediat": [65, 67, 68, 97, 98], "aio": 65, "supplementari": [65, 81, 141], "emoji": 65, "cx": 66, "id_seq": 66, "local_transaction_id": 66, "oracle122": 66, "crucial": 66, "some_column_name_1": 66, "some_column_name_2": 66, "some_column_name_3": 66, "oracle_dialect": 66, "ix_some_column_name_1s_70cd": 66, "ix_some_column_name_1some_column_name_2some_column_name_3": 66, "12c": 66, "oraclemagazin": 66, "asktom": 66, "tkyte": 66, "update_cascad": 66, "all_synonym": 66, "include_al": 66, "all_check_constraint": 66, "sys_nc": 66, "exclude_tablespac": 66, "some_tablespac": [66, 67], "xe": 66, "oracle_on_commit": 66, "oracle_compress": 66, "oracle_bitmap": 66, "myservic": 66, "nencod": 66, "myalia": 66, "mymachin": 66, "connect_data": 66, "orclpdb1": 66, "wallet": 66, "autononm": 66, "sysdba": 66, "pool_class": 66, "orclpdb": 66, "scalabl": [66, 77], "cclass": 66, "attr_purity_self": 66, "idiosyncrat": [66, 113, 136], "american_america": 66, "al32utf8": 66, "nl": 66, "profoundli": 66, "api_manu": 66, "_log_setinputs": 66, "dbapityp": 66, "_remove_clob": 66, "poor": 66, "0b1": [66, 82], "oci": 66, "buri": 66, "some_id_seq": 67, "use_ident": 67, "postgresql_readonli": 67, "postgresql_deferr": 67, "postgresql_engin": 67, "pyscopg2": 67, "_reset_postgresql": 67, "set_search_path": 67, "existing_autocommit": 67, "test_schema": 67, "referred_id": 67, "pg_namespac": 67, "relnamespac": 67, "conrelid": 67, "relnam": 67, "contyp": 67, "0x101612ed0": 67, "0x1016126d0": 67, "_updatebas": 67, "do_nothing_stmt": [67, 68], "pk_my_tabl": 67, "index_wher": [67, 68], "user_email": [67, 68], "user_email_1": 67, "my_table_idx_1": 67, "my_table_pk": 67, "on_update_stmt": [67, 68], "to_tsvector": 67, "plainto_tsqueri": 67, "fat": 67, "cat": 67, "ate": 67, "rat": 67, "querytext": 67, "unformat": 67, "default_text_search_config": 67, "regconfig": 67, "gin": 67, "postgresql_includ": 67, "opclass": 67, "text_pattern_op": 67, "int4_op": 67, "data_low": 67, "fillfactor": 67, "my_tablespac": 67, "testtbl": [67, 68], "idx1": 67, "test_idx1": [67, 68], "foo_idx": 67, "postgresql_on_commit": 67, "postgresql_with_oid": 67, "postgresql_inherit": 67, "some_supert": 67, "versionad": 67, "part_column": 67, "postgresql_not_valid": 67, "create_foreign_kei": 67, "fk_user_address": 67, "some_field": 67, "json_object_kei": [67, 155], "json_each_text": [67, 155], "json_to_record": 67, "json_populate_recordset": 67, "json_each_1": 67, "json_populate_record": 67, "myrowtyp": 67, "json_populate_record_1": 67, "json_to_record_1": 67, "json_array_elements_1": [67, 155], "unnested_valu": 67, "row_1": 67, "row_2": 67, "super_rp": 67, "handle_raw_str": 67, "castingarrai": 67, "cidr": [67, 124], "int4rang": 67, "int8rang": 67, "numrang": 67, "tsrang": 67, "tstzrang": 67, "arrexpr": 67, "string_agg": 67, "param_5": 67, "superset": [67, 104], "sometable_on": 67, "sometable_two": 67, "has_al": 67, "key3": 67, "value3": 67, "my_serialize_fn": 67, "my_deserialize_fn": 67, "numericmonei": 67, "cater": 67, "rangeoper": 67, "adjacent_to": 67, "not_extend_left_of": 67, "not_extend_right_of": 67, "strictly_left_of": 67, "strictly_right_of": 67, "numericrang": 67, "datetimerang": 67, "datetimetzrang": 67, "register_rang": 67, "roombook": 67, "room_book": 67, "101": [67, 128], "my_operator_class": 67, "some_table_excl_const": 67, "index_method": 67, "executemany_batch_page_s": 67, "sslmode": 67, "unencrypt": [67, 68], "199": 67, "tmp": 67, "pathnam": 67, "pqconnectdbparam": 67, "hosta": 67, "porta": 67, "hostb": 67, "hostc": 67, "portc": 67, "target_session_attr": 67, "standbi": 67, "pg_": 67, "bufferedrowcursorresult": 67, "conf": 67, "sql_ascii": 67, "steadili": 67, "howto": 67, "hstoreadapt": 67, "get_oid": 67, "use_native_hstor": 67, "register_hstor": 67, "sslcontext": 67, "ssl_context": 67, "create_default_context": 67, "check_hostnam": 67, "verify_mod": 67, "cert_non": 67, "magicstack": 67, "async_fallback": 67, "prepared_statement_cache_s": 67, "invalidcachedstatementerror": 67, "internalservererror": 67, "server_set": 67, "cffi": 67, "pgfoundri": 67, "box": 68, "iso": 68, "libc": 68, "special_int": 68, "xyzintqpr": 68, "slbiginteg": 68, "bi_c": 68, "visit_bigint": 68, "filehandl": [68, 71], "battl": 68, "rdbm": 68, "ax": 68, "axi": 68, "sqlite_omit_foreign_kei": 68, "sqlite_omit_trigg": 68, "set_sqlite_pragma": 68, "sqlite_on_conflict_not_nul": 68, "sqlite_on_conflict_uniqu": 68, "floa": 68, "doub": 68, "sqlite_wher": 68, "thusli": 68, "sqlite_version_info": 68, "105542": 68, "match_obj": 68, "_datetimemixin": 68, "loadabl": 68, "10558": 68, "file_path": 68, "filepath": 68, "ro": 68, "check_same_thread": 68, "uniform": 68, "create_funct": 68, "sqlite_connect": 68, "parse_colnam": 68, "detect_typ": 68, "multithread": [68, 71, 90, 102], "coars": [68, 97], "mixedbinari": 68, "myfil": 68, "db_file": 68, "rec": 68, "prototyp": 68, "kdf_iter": 68, "sqlcipher_compatible_driv": 68, "zetet": 68, "cipher_page_s": 68, "cipher_use_hmac": 68, "ae": 68, "cfb": 68, "64000": 68, "pysybas": 69, "multibyt": 69, "unichar": 69, "unitext": 69, "univarchar": 69, "unlimit": 70, "valv": 70, "rogu": 70, "button": [70, 147], "grasp": 70, "workload": 70, "attend": 70, "sooner": 70, "divis": 70, "pgcompil": 70, "0x7f04fc17e320": 70, "onconflictdonoth": 70, "cprop": 70, "my_param": 70, "new_stmt_1": 70, "new_stmt_2": 70, "reports_to": 70, "manager_1": [70, 122], "employee_1": [70, 122], "manager_id_1": 70, "manager_alia": 70, "0x7eff44359350": 70, "misunderstand": 70, "session_obj": 70, "underyl": 70, "sync_connect": [70, 102], "async_main": [70, 102], "sync_conn": 70, "hyperlink": 70, "myid": 70, "otherid": 70, "transaction1": 70, "transaction2": 70, "celeri": 71, "interleav": 71, "greenthread": 71, "architect": [71, 90], "replai": 71, "reconnecting_engin": 71, "num_retri": 71, "retry_interv": 71, "_run_with_retri": 71, "raw_dbapi_err": 71, "do_a_th": 71, "reconnect_test": 71, "_except": 71, "0xf59240": 71, "myisam_databas": 71, "connection_fairi": 71, "unproxi": 71, "raw_dbapi_connect": 71, "also_raw_dbapi_connect": 71, "get_raw_connect": [71, 102], "sqla_sync_conn": 71, "raw_asyncio_connect": 71, "am": 72, "walk": [72, 80, 132, 137], "automag": 72, "bool_": 72, "wheel": [73, 102], "some_table_with_no_pk": 75, "my_associ": 75, "local_t": [75, 96, 103, 131, 132, 134], "entireti": 75, "consequ": 75, "poorer": 76, "37": [76, 136], "048c": 76, "326": 76, "somemessag": 76, "334m": 76, "r2": 76, "r3": 76, "sqltime": 76, "query_start_tim": 76, "breakdown": 76, "cprofil": 76, "pstat": 76, "stringio": 76, "sort_stat": 76, "cumul": 76, "print_stat": 76, "print_cal": 76, "fooclass": 76, "13726": 76, "13042": 76, "014": 76, "ncall": [76, 98], "tottim": [76, 98], "percal": [76, 98], "cumtim": [76, 98], "001": [76, 98], "011": 76, "220": 76, "002": 76, "010": 76, "327": 76, "284": 76, "populate_st": 76, "987": 76, "load_collection_from_subq": 76, "009": 76, "_load": 76, "008": 76, "942": 76, "genexpr": 76, "004": 76, "2414": 76, "_execute_and_inst": [76, 97], "_execute_on_connect": 76, "788": 76, "102": 76, "204": 76, "020": 76, "040": 76, "778": 76, "237": 76, "type_api": 76, "911": 76, "236": 76, "235": 76, "u_b": 76, "a_b": 76, "daunt": 76, "price": [76, 96, 98, 135, 137], "competit": 76, "conda": 76, "forg": 76, "clang": 76, "246": 76, "153": 76, "77787b8f": 76, "gcc": 76, "658": 76, "158": 76, "403": 76, "241": 76, "tempfil": 76, "sqlalchemy_sess": 76, "namedtemporaryfil": 76, "dbpath": 76, "print_result": 76, "nrow": 76, "3f": 76, "test_sqlalchemy_orm": 76, "t0": 76, "test_sqlalchemy_orm_pk_given": 76, "test_sqlalchemy_orm_bulk_save_object": 76, "test_sqlalchemy_orm_bulk_insert": 76, "test_sqlalchemy_cor": 76, "sqlite3_conn": 76, "test_sqlite3": 76, "_futur": 76, "splitlin": 76, "foo_pkei": 77, "filteredqueri": 77, "dedpul": 77, "evolut": 77, "zen": [77, 127, 151, 163], "cooper": 77, "foo_7": 77, "new_obj": 77, "expirerelationshiponfkchang": [77, 85], "0x10303b190": 77, "0x103025210": 77, "0x10303b0d0": 77, "0x103025490": 77, "uniqueobject": [77, 101], "research": 77, "1063": 77, "psycopg2_dialect": 78, "threefold": 78, "insecur": 78, "uuid4": [78, 152], "mogrifi": 78, "nfrom": 78, "a511b0fc": 78, "76da": 78, "4c47": 78, "a4b4": 78, "716a8189b7ac": 78, "9eec1209": 78, "50b4": 78, "4253": 78, "b74b": 78, "f82461ed80c1": 78, "1bd70375": 78, "db17": 78, "4d8c": 78, "94f1": 78, "fc2ef3aada26": 78, "_render_literal_bindparam": 78, "use_my_literal_recip": 78, "compiler_kwarg": 78, "47b154cd": 78, "36b2": 78, "42ae": 78, "9718": 78, "888629ab9857": 78, "uuidstringifi": 78, "u3": [78, 136, 150, 152], "aa1944d6": 78, "9a5a": 78, "45d5": 78, "b8da": 78, "0ba1ef0a4f38": 78, "a81920e6": 78, "15e2": 78, "8a3c": 78, "d775ffa9ccd2": 78, "b5574cdb": 78, "ff9b": 78, "49a3": 78, "be52": 78, "dbc89f087bfa": 78, "strstmt": 78, "q1": [78, 137], "q2": [78, 137], "barf": 78, "harmlessli": 78, "int32": 79, "float32": 79, "list_of_us": 80, "acronym": 80, "durabl": 80, "wikipedia": [80, 149, 151], "some_column_annot": 80, "tier": 80, "invisibli": 80, "employee_project": 80, "role_nam": 80, "employeeproject": 80, "project_employe": 80, "proj": 80, "emp1": 80, "emp2": 80, "tech": 80, "dep_id": 80, "luke": 80, "databasestar": 80, "borrow": 80, "distributor": 80, "zipchk": 80, "zipcod": 80, "user_acount": 80, "thereof": 80, "user_account_id": [80, 139, 162, 163], "__set__": [80, 123], "govern": 80, "thereaft": [80, 151], "dep_id_fk": 80, "standpoint": 80, "martin": 80, "fowler": 80, "tactic": 80, "unmarshal": 80, "emp_id": 80, "emp_nam": 80, "viewabl": 80, "edgar": 80, "codd": 80, "classif": 80, "boost": [80, 82], "phantom": 80, "status_id": 80, "status_cod": 80, "ad_subq": 80, "address_typ": 80, "glanc": 81, "glimps": 81, "preview": 81, "explcitli": 82, "reliant": 82, "holist": 82, "theatrum": 82, "chemicum": 82, "chees": [82, 101], "shop": 82, "prereleas": 82, "alik": 82, "email_1": [83, 137], "parent_t": 84, "child_tabl": 84, "association_t": [84, 85], "left_id": [84, 85], "left_tabl": 84, "right_id": [84, 85], "right_tabl": 84, "mypar": 84, "reaction": 84, "extra_data": 84, "child_associ": 84, "parent_associ": 84, "mymodel1": 84, "_resolve_child_model": 84, "myapplic": 84, "_user_defined_foreign_kei": 84, "THESE": [84, 124], "module_a": 84, "__setattr__": [84, 96, 117], "keyword_author": 84, "keyword_author_t": 84, "author_id": [84, 130], "authors_t": 84, "keywords_t": 84, "conclus": 85, "user1": [85, 147, 149], "address1": 85, "address2": 85, "address3": 85, "ex": 85, "sess1": 85, "bidirection": 85, "foremost": [85, 124], "my_par": 85, "easiest": [85, 121, 130, 146], "smooth": 85, "mapper_registri": [85, 88, 91, 95, 118, 121, 124, 126, 132, 133, 134, 161], "order_t": 85, "i1": [85, 113], "oldpost": 87, "posts_tabl": 87, "writeabl": 87, "freshli": [87, 146], "atext": 87, "0x2eaaf0": 87, "compli": 87, "btext": 87, "note_kei": 87, "0x7f7b1023ef70": 87, "0x7f7b10114280": 87, "0x7f7b10114340": 87, "set_item": 87, "attr_nam": [87, 115], "mapping_spec": 87, "listlik": 87, "rock": 87, "__emulates__": 87, "glue": [87, 151], "mylist": 87, "zark": 87, "hey_use_this_instead_for_iter": 87, "removes_return": 87, "do_stuff": 87, "some_key_func": 87, "creativ": [87, 101], "_sa_initi": 87, "promulg": 87, "acollect": 87, "newvalue1": 87, "newvalue2": 87, "orchestr": [87, 161], "collection_adapt": [87, 97, 142, 146], "zap": 87, "deleg": [87, 123], "nodemap": 87, "mymappedcollect": 87, "bag": 87, "ado": 87, "myawesomelist": 87, "awesomelist": 87, "existing_adapt": 87, "new_adapt": 87, "instrumenteddict": [87, 142], "instrumentedset": [87, 142], "_sa_adapt": 87, "owner_st": 87, "vertices_t": 88, "vertices_id": 88, "vertices_x1": 88, "vertices_y1": 88, "vertices_x2": 88, "vertices_y2": 88, "pointcompar": 88, "hasvertex": 88, "has_vertex": 88, "hv": 88, "enterpris": 90, "shelf": 90, "session_factori": [90, 102], "some_sess": [90, 137, 150], "some_other_sess": 90, "dispar": 90, "new_sess": 90, "some_factori": 90, "tear": [90, 147, 150, 151], "twist": 90, "tornado": 90, "worker": [90, 146, 149], "torn": [90, 102], "diagram": 90, "get_current_request": 90, "on_request_end": 90, "my_web_framework": 90, "scopefunc": [90, 102], "remove_sess": 90, "req": 90, "scopedregistri": [90, 145], "threadlocalregistri": [90, 145], "scopedsessionmixin": [90, 102], "_warn": [90, 102, 146], "_subtran": [90, 146], "batchabl": [90, 146], "update_changed_onli": [90, 146], "reconfigur": [90, 102], "some_mapped_object": [90, 102, 123, 146], "_parent_execute_st": [90, 146], "_add_ev": [90, 146], "solver": [90, 146], "my_us": [90, 137, 146, 147], "versionedfoo": [90, 137, 146], "_sa_skip_ev": [90, 146], "_sa_skip_for_implicit_return": [90, 146], "uncomplet": [90, 102, 146], "createfunc": 90, "myregistri": 90, "__repr": 91, "__future__": 91, "default_factori": [91, 118], "__sa_dataclass_metadata_key__": [91, 132], "reftargetmixin": [91, 94], "target_id": [91, 94], "usermixin": 91, "addressmixin": [91, 132], "address_statist": 92, "declarar": 92, "groupus": [92, 133], "group_us": [92, 133], "group_id": [92, 133], "excludecolswflag": 92, "not_need": 92, "finish": 92, "baseon": 92, "basetwo": 92, "classon": 92, "classtwo": 92, "classthre": 92, "someabstractbas": 92, "some_helpful_method": 92, "mymappedclass": [92, 123, 132, 136, 137], "defaultbas": 92, "otherbas": 92, "mymixin": [92, 94, 132], "my_": 92, "autot": 92, "__table_cls__": 93, "timestampmixin": 94, "referenceaddressmixin": 94, "somethingmixin": 94, "dprop": 94, "x_plus_i": 94, "hasid": 94, "mysqlset": 94, "myothermixin": 94, "my_model": 94, "test_idx_": 94, "atabl": 94, "decl_api": [95, 118, 132], "some_new_column": 96, "polymorhpic_ident": 96, "order_count": [96, 135], "highest_ord": [96, 135], "customer_id": [96, 135], "customer_select": [96, 135], "my_existing_databas": 96, "subscript": [97, 155], "my_before_commit": [97, 102], "before_commit": [97, 102, 148], "after_begin": [97, 148], "detached_to_persist": [97, 148, 149], "pending_to_transi": [97, 148], "persistent_to_detach": [97, 148, 149], "persistent_to_transi": [97, 148, 149], "transient_to_pend": [97, 148], "somesessionclassorobject": 97, "receive_after_attach": 97, "receive_after_begin": 97, "delete_context": 97, "receive_after_bulk_delet": 97, "query_context": 97, "update_context": 97, "receive_after_bulk_upd": 97, "receive_after_commit": 97, "flush_context": 97, "receive_after_flush": 97, "uowtransact": [97, 100, 123], "receive_after_flush_postexec": 97, "receive_after_rollback": 97, "previous_transact": 97, "receive_after_soft_rollback": 97, "receive_after_transaction_cr": 97, "receive_after_transaction_end": 97, "receive_before_attach": 97, "receive_before_commit": 97, "receive_before_flush": 97, "receive_deleted_to_detach": 97, "receive_deleted_to_persist": 97, "receive_detached_to_persist": 97, "orm_execute_st": [97, 148], "receive_do_orm_execut": 97, "do_": 97, "receive_loaded_as_persist": 97, "linkabl": 97, "receive_pending_to_persist": 97, "receive_pending_to_transi": 97, "receive_persistent_to_delet": 97, "receive_persistent_to_detach": 97, "receive_persistent_to_transi": 97, "receive_transient_to_pend": 97, "mapper_configur": [97, 132], "my_before_insert_listen": 97, "calculated_valu": 97, "my_special_funct": 97, "special_numb": 97, "after_delet": [97, 148], "before_delet": [97, 148], "receive_after_configur": 97, "receive_after_delet": 97, "receive_after_insert": 97, "receive_after_upd": 97, "receive_before_configur": 97, "receive_before_delet": 97, "receive_before_insert": 97, "receive_before_mapper_configur": 97, "he": 97, "dontconfigurebas": 97, "dont_configur": 97, "receive_before_upd": [97, 135], "receive_instrument_class": 97, "on_new_class": 97, "cls_": [97, 104], "receive_mapper_configur": 97, "my_load_listen": 97, "first_init": 97, "init_failur": 97, "receive_expir": 97, "receive_first_init": 97, "receive_init": 97, "receive_init_failur": 97, "receive_load": 97, "some_unloaded_attribut": 97, "state_dict": 97, "receive_pickl": 97, "receive_refresh": 97, "receive_refresh_flush": 97, "receive_unpickl": 97, "my_append_listen": 97, "mysuperclass": 97, "receive_set": 97, "receive_append": 97, "receive_append_wo_mut": 97, "receive_bulk_replac": 97, "receive_dispose_collect": 97, "receive_init_collect": 97, "receive_init_scalar": 97, "unpersist": 97, "some_const": 97, "1415926": 97, "_init_some_attribut": 97, "receive_modifi": 97, "receive_remov": 97, "somequeri": 97, "receive_before_compil": 97, "no_delet": 97, "my_ev": [97, 104], "receive_before_compile_delet": 97, "receive_before_compile_upd": 97, "instrumentationev": [97, 116], "inst": [97, 116], "somebaseclass": 97, "receive_attribute_instru": 97, "receive_class_instru": 97, "manager_of_class": 97, "uninstru": 97, "receive_class_uninstru": 97, "rootnod": 98, "node1": 98, "node3": 98, "dump_tre": 98, "adjacency_list": 98, "basic_associ": 98, "orderitem": 98, "purchas": 98, "async_orm": 98, "gather_orm_stat": 98, "neighbor": 98, "n5": 98, "add_neighbor": 98, "higher_neighbor": 98, "directed_graph": 98, "supplier": 98, "hasaddress": 98, "generic_fk": 98, "ror": 98, "table_per_associ": 98, "table_per_rel": 98, "materialized_path": 98, "nested_set": 98, "single_insert": 98, "bulk_upd": 98, "test_orm_commit": 98, "test_bulk_insert_dictionari": 98, "test_cor": 98, "test_core_query_cach": 98, "test_dbapi_raw_w_connect": 98, "test_dbapi_raw_w_pool": 98, "690218": 98, "290371": 98, "814626": 98, "665620": 98, "209010": 98, "551103": 98, "001813": 98, "186109": 98, "186102": 98, "089": 98, "021": 98, "074": 98, "_get_colparam": 98, "015": 98, "034": 98, "_init_compil": 98, "012": 98, "091": 98, "79": 98, "test_load": 98, "setup_onc": 98, "test_lazyload": 98, "test_joinedload": 98, "test_subqueryload": 98, "971159": 98, "754592": 98, "977696": 98, "threewai": 98, "art": 98, "space_invad": 98, "tail": 98, "enjoi": [98, 118], "celementtre": 98, "lxml": 98, "dom": 98, "xpath": 98, "find_docu": 98, "somefil": 98, "header": 98, "field2": 98, "pickle_typ": 98, "optimized_": 98, "test_vers": 98, "versioned_sess": 98, "sc": 98, "sc1": 98, "sc1modifi": 98, "someclasshistori": 98, "__history_mapper__": 98, "_history_mapp": 98, "somehistoryclass": 98, "use_mapper_vers": 98, "versioned_map": 98, "versioned_rows_w_versionid": 98, "versioned_update_old_row": 98, "breviti": 98, "shrew": 98, "anim": 98, "cute": 98, "weasel": 98, "poison": 98, "animalfact": 98, "custom_manag": 98, "weather": 98, "contin": 98, "spoken": 98, "separate_schema_transl": 98, "schema_translates_map": 98, "separate_databas": 98, "separate_t": 98, "filter_publ": 98, "temporal_rang": 98, "demo": 98, "datafil": 98, "helloworld": 98, "local_session_cach": 98, "datamodel": 98, "postalcod": 98, "citi": [98, 124, 133], "countri": 98, "fixture_data": 98, "postal": 98, "canadian": 98, "announc": [98, 102], "fruition": 98, "addgeometrycolumn": 98, "dropgeometrycolumn": 98, "gi": 98, "geomfromtext": 98, "road_geom": 98, "no_stat": [99, 100], "loaderstrategyexcept": [99, 100], "applied_to_property_typ": 99, "requesting_properti": 99, "applies_to": 99, "actual_strategy_typ": 99, "strategy_kei": 99, "objectdereferencederror": [99, 100], "unaccount": [99, 122], "unmappederror": [99, 100], "inspectionattrinfo": [100, 101, 113, 123], "manytomani": [100, 103, 123], "not_extens": [100, 101, 113, 123], "cherri": 101, "user_keyword_t": 101, "jek": 101, "0x12bf830": 101, "ninja": 101, "0x12cdd30": 101, "0x12cde30": 101, "singular": 101, "userkeywordassoci": 101, "special_kei": 101, "user_keyword_associ": 101, "new_from_blammo": 101, "its_big": 101, "its_heavi": 101, "wherein": 101, "its_wood": 101, "sk1": 101, "kw1": 101, "sk2": 101, "kw2": 101, "sk3": 101, "kw3": 101, "0x12ceb90": 101, "special_key_1": 101, "keyword_1": 101, "unrol": 101, "target_collect": 101, "columnassociationproxyinst": 101, "objectassociationproxyinst": 101, "getset_factori": 101, "proxy_bulk_set": 101, "extension_typ": [101, 113, 123, 132], "is_aliased_class": [101, 123, 137], "is_bundl": [101, 123, 137], "is_inst": [101, 123], "is_mapp": [101, 123, 131, 132, 137], "is_properti": [101, 123], "snif": 101, "_set": [101, 113], "hybrid_method": [101, 113, 123, 132], "owning_class": 101, "for_proxi": 101, "facilit": 101, "parent_inst": 101, "async_result": 102, "addresses_filt": 102, "exempt": 102, "fetch_and_update_object": 102, "sync_sess": 102, "my_before_execut": 102, "my_after_commit": 102, "exterior": 102, "current_task": 102, "async_session_factori": 102, "some_async_engin": 102, "asyncscopedsess": 102, "some_async_sess": 102, "use_inspector": 102, "async_engine_from_config": 102, "proxycompar": 102, "async_engin": 102, "startablecontext": 102, "is_ctxmanag": 102, "asyncscalarresult": 102, "asyncmappingresult": 102, "asynccommon": 102, "scroll_result": 102, "asyncsessiontransact": 102, "leader": [102, 136], "follower1": [102, 136], "follower2": [102, 136], "routingsess": [102, 136], "_flush": [102, 136], "asyncsessionmak": 102, "reversibleproxi": 102, "some_business_method": 102, "user_ord": [103, 138], "classname_for_t": 103, "name_for_scalar_relationship": 103, "name_for_collection_relationship": 103, "camel": 103, "plural": 103, "inflect": 103, "camelize_classnam": 103, "words_and_underscor": 103, "wordsandunderscor": 103, "_plural": 103, "pluralize_collect": 103, "local_cl": 103, "referred_cl": 103, "uncamel": 103, "someterm": 103, "some_term": 103, "referred_nam": 103, "_gen_relationship": 103, "return_fn": 103, "favorite_employee_id": 103, "favorite_employe": 103, "tableb": 103, "_table_a": 103, "attr_": [103, 133], "lower_case_nam": [103, 133], "test_baked_queri": 104, "1951294": 104, "7900535": 104, "laptop": 104, "174126": 104, "958516": 104, "my_cached_queri": 104, "my_simple_cach": 104, "id_argu": 104, "my_kei": 104, "precursor": 104, "create_model_queri": 104, "parameterized_queri": 104, "include_frobnizzl": 104, "my_key_with_frobnizzl": 104, "my_key_without_frobnizzl": 104, "frobnizzl": 104, "include_frobnizzle_in_queri": 104, "certainli": [104, 118], "my_subq": 104, "my_q": 104, "_size_alert": 104, "initial_fn": 104, "for_sess": 104, "my_baked_queri": 104, "disqualifi": 104, "scratch": 104, "query_or_sess": 104, "sub_bq": 104, "main_bq": 104, "bq": 104, "manager_data": [107, 121, 122], "_concrete_discrimin": 107, "execute_choos": 112, "connection_cal": 112, "set_shard": 112, "my_shard": 112, "subtract": 113, "interval_id": 113, "interval_start": 113, "interval_end": 113, "start_1": 113, "end_1": 113, "ia": 113, "interval_1": 113, "interval_1_id": 113, "interval_1_start": 113, "interval_1_end": 113, "radiu": 113, "abs_1": 113, "radius_express": 113, "start_point": 113, "_update_expr": 113, "fget": [113, 132], "update_expr": 113, "savingsaccount": 113, "balanc": 113, "account_bal": 113, "balance_1": 113, "acc": 113, "total_bal": 113, "word_insensit": 113, "caseinsensitivecompar": 113, "searchword": 113, "truck": 113, "searchword_id": 113, "searchword_word": 113, "lower_1": [113, 155], "gt": 113, "caseinsensitiveword": 113, "sw1": 113, "sw2": 113, "searchword_1": 113, "searchword_2": 113, "lower_2": [113, 155], "ws1": 113, "someword": 113, "xomeworx": 113, "delta": 113, "ii": 113, "grandpar": 113, "grandparenttransform": 113, "parent_alia": 113, "node_parent_id": [113, 144], "node_1": [113, 144], "_gp": 113, "amaz": 113, "custom_compar": 113, "some_hybrid": 113, "_foobar": 113, "subfoobar": 113, "fname": 113, "lname": 113, "all_orm_attribut": 113, "predefin": 115, "alchemist": [115, 154, 160], "birthdai": 115, "fifth": 115, "pg_json_properti": 115, "cast_typ": 115, "onebas": 115, "instrumentation_find": 116, "instrumentation_manag": 116, "elect": 116, "finder": 116, "dict_gett": 116, "initialize_instance_dict": 116, "install_descriptor": 116, "install_memb": 116, "install_st": 116, "instrument_attribut": 116, "instrument_collection_class": 116, "manager_gett": 116, "remove_st": 116, "state_gett": [116, 123], "uninstall_descriptor": 116, "uninstall_memb": 116, "find_native_user_instrumentation_hook": 116, "userdict": 117, "mymutabletyp": 117, "_listen_on_attribut": 117, "associate_with_attribut": 117, "parent_cl": 117, "difference_upd": 117, "intersection_upd": 117, "symmetric_difference_upd": 117, "elem": [117, 146], "pylanc": 118, "pyright": 118, "pytyp": 118, "mapped_column": 118, "dropbox": 118, "561": 118, "_special_method": 118, "other_nam": 118, "mc": 118, "myaddressmodel": 118, "hasupdatedat": 118, "hascompani": 118, "_mypy_mapped_attr": 118, "kirtland": 119, "slide": [119, 149], "bullet": [119, 149], "slide_id": 119, "cope": 119, "renumb": 119, "ordering_list": 119, "count_from": 119, "count_from_0": 119, "consecut": 119, "count_from_1": 119, "count_from_n_factori": 119, "ordering_func": 119, "ordering_attr": 119, "fibonacci": 119, "untouch": 119, "housekeep": 119, "simplic": 121, "engineer_info": [121, 122], "start_dat": 121, "hasstartd": 121, "intermix": 121, "fluent": [121, 151, 161], "affair": 121, "pjoin": 121, "pjoin_id": 121, "pjoin_nam": 121, "pjoin_typ": 121, "pjoin_manager_data": 121, "pjoin_engineer_info": 121, "subtabl": [121, 122], "employees_t": 121, "managers_t": 121, "engineers_t": 121, "engineer_t": 121, "manager_t": 121, "employee_mapp": 121, "manager_mapp": 121, "engineer_mapp": 121, "eng_plus_manag": 122, "engineer_engineer_info": 122, "manager_manager_data": 122, "engineer_employe": 122, "manager_employe": 122, "anon_1_employee_id": 122, "anon_1_employee_nam": 122, "anon_1_employee_typ": 122, "anon_1_engineer_id": 122, "anon_1_engineer_engineer_nam": 122, "anon_2_employee_id": 122, "anon_2_employee_nam": 122, "anon_2_employee_typ": 122, "anon_2_manager_id": 122, "anon_2_manager_manager_nam": 122, "employee_1_id": 122, "employee_1_nam": 122, "employee_1_typ": 122, "engineer_1": 122, "engineer_1_id": 122, "engineer_1_engineer_nam": 122, "employee_2": 122, "employee_2_id": 122, "employee_2_nam": 122, "employee_2_typ": 122, "manager_1_id": 122, "manager_1_manager_nam": 122, "sparingli": 122, "paperwork": 122, "paperwork_1": 122, "paperwork_1_id": 122, "paperwork_1_manager_id": 122, "paperwork_1_data": 122, "vicepresid": 122, "vp_info": 122, "vp": 122, "manager_vp_info": 122, "manager_poli": 122, "someinfo": 122, "manager_and_engin": 122, "necess": 122, "employee_manager_data": 122, "employee_poli": 122, "employee_engineer_info": 122, "manager_data_1": 122, "base_cl": 122, "_use_mapper_path": [122, 137], "_existing_alia": 122, "frozen_result": [123, 148], "loaded_valu": 123, "attr_stat": 123, "value_list": 123, "deferred_scalar_load": 123, "expired_attribute_load": 123, "has_par": 123, "strategizedproperti": 123, "parentmapp": 123, "adapt_to_ent": 123, "init_class_attribut": 123, "post_instrument_class": 123, "source_st": 123, "source_dict": 123, "dest_stat": 123, "dest_dict": 123, "_recurs": 123, "_resolve_conflict_map": 123, "descriptor_prop": 123, "descriptorproperti": 123, "compositebundl": 123, "property_": 123, "attribute_impl": 123, "op_append": 123, "op_remov": 123, "op_replac": 123, "check_modifi": 123, "expired_attribut": 123, "has_ident": 123, "unloaded_expir": 123, "unmodified_intersect": 123, "extra_criteria": 123, "checker": 123, "__table_": 123, "class_attribut": 123, "set_par": 123, "_mappedattribut": [123, 132], "visited_st": 123, "halt_on": [123, 132], "iterator3": 123, "addresses_properti": 123, "query_ent": 123, "loaderstrategi": 123, "mycolumncompar": 123, "myrelationshipcompar": 123, "mycompositecompar": 123, "some_relationship": 123, "someotherclass": 123, "_legacy_inactive_history_styl": [123, 140], "somerefer": 123, "my_id": 123, "my_association_t": 123, "my_association_table_1": 123, "uses_object": 123, "load_opt": [123, 146], "default_load_opt": 123, "jointargetrol": 123, "onclauserol": 123, "filter_states_for_dep": 123, "dep": 123, "dependencyprocessor": 123, "finalize_flush_chang": 123, "get_attribute_histori": 123, "passive_no_initi": 123, "get_state_histori": 123, "is_delet": [123, 146], "remove_state_act": 123, "was_already_delet": 123, "billing_address_id": 124, "shipping_address_id": 124, "billing_address": 124, "shipping_address": 124, "street": [124, 133], "boston_address": 124, "boston": 124, "host_entry_1": 124, "inet_column": 124, "cidr_column": 124, "ipa": 124, "v4address": 124, "v4represent": 124, "ip_address_id": 124, "ip_address_v4address": 124, "geoalchemy2": 124, "polygon": 124, "geom": 124, "srid": 124, "st_contain": 124, "magazin": 124, "writer": 124, "articl": 124, "magazine_id": 124, "article_id": 124, "writer_id": 124, "article_article_id": 124, "article_magazine_id": 124, "article_writer_id": 124, "unorthodox": 124, "bar2": 124, "element_path": 124, "node_to_nod": 124, "left_node_id": 124, "right_node_id": 124, "right_nod": 124, "left_nod": 124, "hammer": 124, "d_1": 124, "some_c_valu": 124, "some_d_valu": 124, "b_viacd_subqueri": 124, "some_b_column": 124, "partitioned_b": 124, "anon_1_data": 124, "anon_1_index": 124, "index_1": 124, "photo": 126, "book_tabl": 126, "photo1": 126, "photo2": 126, "photo3": 126, "citat": [126, 128, 137], "addl_attr": 126, "attribute_on": 126, "attribute_two": 126, "some_other_column": [126, 128], "another_column": 126, "my_expr": 126, "large_attr": 126, "x_y_expr": 126, "bn": [126, 137], "mybundl": [126, 137], "subel": 128, "btoc": 128, "btod": 128, "j25": [128, 151], "addresses_1_id": [128, 151], "addresses_1_email_address": [128, 151], "addresses_1_user_id": [128, 151], "widgets_1": 128, "widgets_1_id": 128, "widgets_1_nam": 128, "widget_id": [128, 141], "someaddress": [128, 151], "mile": 128, "column_a": 128, "column_b": 128, "wire": 128, "unilater": 128, "adalia": 128, "users_user_id": 128, "users_user_nam": 128, "adalias_address_id": 128, "adalias_user_id": 128, "adalias_email_address": 128, "email_addresses_1": 128, "load_b": 128, "someotherattribut": 128, "myopt": [128, 137], "process_compile_st": [128, 137], "process_compile_state_replaced_ent": [128, 137], "propagate_to_load": [128, 137], "loaderopt": [128, 137], "mapper_ent": [128, 137], "emailaddress": 129, "validate_email": 129, "validate_address": 129, "recept": 129, "some_address": 129, "_email": 129, "shuttl": 129, "address_email": [129, 137], "otheraddress": 129, "twelv": 129, "job_statu": [129, 132], "some_statu": 129, "job_status_1": 129, "_job_status_descriptor": 129, "_job_statu": [129, 132], "book_count": 130, "book_author": 130, "some_expr": 130, "a_expr": 130, "class_manag": [131, 132], "common_par": [131, 132], "identity_key_from_inst": [131, 132], "identity_key_from_primary_kei": [131, 132], "identity_key_from_row": [131, 132], "is_sibl": [131, 132], "persist_select": [131, 132], "polymorphic_iter": [131, 132], "polymorphic_map": [131, 132], "primary_mapp": [131, 132], "self_and_descend": [131, 132], "with_polymorphic_mapp": [131, 132, 137], "table_map": 132, "typecolnam": 132, "_declarative_constructor": 132, "_bind": 132, "predat": 132, "__metaclass__": 132, "uninstanti": 132, "implementor": 132, "providesus": 132, "_polymorphic_map": 132, "_compiled_cache_s": 132, "_user_id": 132, "_user_nam": 132, "_password": 132, "inclus": 132, "ma": 132, "set_ident": 132, "generate_vers": 132, "next_vers": 132, "some_mapped_class": 132, "interrel": 132, "unimport": 132, "p_union": 132, "ormfromclauserol": [132, 137], "ormentitycolumnsclauserol": [132, 137], "dict_of_properti": 132, "_configure_mapp": 132, "useraddress": 133, "brows": 134, "0x102f407f8": 134, "immutableproperti": 134, "0x1040e2c68": 134, "0x10403fde0": 134, "0x10403fce8": 134, "0x1040e9050": 134, "0x1040e9148": 134, "0x7f07e5fec2e0": 134, "0x7f07e614ef50": 134, "0x7f07e614f160": 134, "user_address_join": 135, "addressus": 135, "ptoq": 135, "some_required_attr_on_q": 135, "q_tabl": 135, "foopk": 136, "coalesce_2": 136, "coalesce_1": 136, "special_identifi": 136, "my_table_timestamp": 136, "my_table_special_identifi": 136, "myoraclemodel": 136, "datetime_1": 136, "000000": 136, "my_table_id": 136, "orm_stmt": [136, 155], "cheek": [136, 138, 139, 154, 155, 161, 162], "tentacl": [136, 138, 162, 163], "squarep": [136, 138, 139, 154, 155], "name_m0": 136, "fullname_m0": 136, "name_m1": 136, "fullname_m1": 136, "name_m2": 136, "fullname_m2": 136, "engine1": [136, 146, 150], "engine2": [136, 146, 150], "basea": 136, "baseb": 136, "gameinfo": 136, "gamestat": 136, "use_twophas": 136, "router": 136, "survei": 136, "metric": 136, "user_alia": [137, 138, 151, 155], "user2": [137, 138, 147, 149], "anon_1_user_nam": 137, "anon_1_address_id": 137, "anon_1_address_email": 137, "anon_1_address_user_id": 137, "anon1": 137, "result_proxi": 137, "uncheck": 137, "text_stmt": 137, "user_view": 137, "user_view_alia": 137, "q3": 137, "cls_or_mapp": 137, "my_sess": [137, 149], "filter_someth": 137, "10k": [137, 138], "entity_or_bas": 137, "loader_onli": 137, "include_alias": [137, 148], "my_alia": 137, "unitpric": 137, "unit_id": 137, "aggregated_unit_pric": 137, "mapped_class_or_ac": 137, "with_polymorphic_discrimin": 137, "base_alia": 137, "use_mapper_path": 137, "represents_outer_join": 137, "_base_alia": 137, "nest_adapt": 137, "ormcolumnsclauserol": 137, "_add_filtering_criteria": 137, "execute_st": 137, "securityrol": 137, "some_rol": 137, "flag_1": 137, "join_to_left": 137, "star": [138, 139, 154, 156], "ehkrab": [138, 162, 163], "krab": [138, 162, 163], "squirrel": [138, 162], "squirrelpow": [138, 139, 154, 155, 163], "pat999": 138, "stentcl": 138, "user_account_1": [138, 155, 163], "textual_sql": 138, "orm_sql": 138, "orm_subqueri": 138, "inner_stmt": 138, "aliased_us": 138, "order_items_1": 138, "linakg": 138, "address_1": [138, 155, 163], "address_2": [138, 155, 163], "user_address_subq": 138, "equvial": 138, "pprint": 138, "abbrevi": 139, "table_": [139, 161], "sandy_address": 139, "patrickstar": 139, "sandy_cheek": 139, "user_account_nam": [139, 162, 163], "user_account_fullnam": [139, 162, 163], "whirlwind": 139, "tour": [139, 151], "luck": 139, "cue": 140, "related_user_id": 141, "favorite_entry_id": 141, "entry_id": 141, "somewidget": 141, "someentri": 141, "fk_favorite_entri": 141, "favorite_entri": 141, "w1": 141, "preorder": 144, "fluenci": 144, "subtre": 144, "child2": 144, "subchild1": 144, "subchild2": 144, "child3": 144, "nodealia": 144, "node_data": 144, "node_1_id": 144, "node_1_parent_id": 144, "node_1_data": 144, "node_2": 144, "node_2_id": 144, "node_2_parent_id": 144, "node_2_data": 144, "object_st": [145, 146], "del_attribut": [145, 146], "get_attribut": [145, 146], "is_instru": [145, 146], "some_other_object": [146, 147, 150], "_sessionclassmethod": 146, "local_kw": 146, "new_kw": 146, "compile_state_cl": 146, "events_todo": 146, "local_execution_opt": 146, "invoke_stat": [146, 148], "is_orm_stat": 146, "is_upd": 146, "loader_strategy_path": 146, "update_delete_opt": 146, "preempt": [146, 148], "somedeclarativebas": 146, "some_mapp": 146, "engine3": 146, "engine4": 146, "append_without_ev": 146, "hist": 146, "myattribut": 146, "non_ad": 146, "non_delet": 146, "stateless": 147, "item1": [147, 150], "item2": [147, 150], "item3": 147, "2pc": 147, "mysess": 147, "num_rows_match": 147, "sake": 147, "thingon": 147, "thingtwo": 147, "run_my_program": 147, "yeee": 147, "restaur": 147, "eat": 147, "plate": [147, 151], "workspac": [147, 151], "grown": 148, "firstli": 148, "_do_orm_execut": 148, "col_descript": 148, "myentiti": 148, "hastimestamp": 148, "some_ent": 148, "one_month_ago": 148, "twin": 148, "unfrozen": 148, "my_cache_kei": 148, "key_sandi": 148, "cautious": 148, "someotherobject": 148, "object_is_pend": 148, "maker": [148, 149], "detect_all_persist": 148, "intercept_init": 148, "intercept_transient_to_pend": 148, "intercept_pending_to_persist": 148, "intercept_pending_to_transi": 148, "avenu": 148, "intercept_loaded_as_persist": 148, "intercept_persistent_to_transi": 148, "intercept_persistent_to_delet": 148, "intercept_deleted_to_detach": 148, "intercept_persistent_to_detach": 148, "intercept_detached_to_persist": 148, "intercept_deleted_to_persist": 148, "strong_reference_sess": 149, "strong_ref_object": 149, "deref_object": 149, "merged_object": 149, "existing_object": 149, "border": [149, 160], "existing_a1": 149, "0x1298f50": 149, "0x12a25d0": 149, "0x1298d10": 149, "attr2": 149, "video": 149, "more_object": 150, "still_another_object": 150, "delin": 150, "tranasct": 150, "somerecord": 150, "some_sessionmak": 150, "sp": 150, "settabl": 150, "transactional_sess": 150, "autocommit_sess": 150, "plain_engin": 150, "testcas": 150, "sometest": 150, "end_savepoint": 150, "test_someth": 150, "test_something_with_rollback": 150, "shortli": 151, "plenti": 151, "ed_us": 151, "guest": 151, "dinner": 151, "food": 151, "kitchen": 151, "our_us": 151, "normalize_whitespac": 151, "flintston": 151, "freddi": 151, "eddi": 151, "pai": 151, "Being": 151, "edwardo": 151, "fake_us": 151, "fakeus": 151, "12345": 151, "users_name__1": 151, "name_label": 151, "user_alias_id": 151, "user_alias_nam": 151, "user_alias_fullnam": 151, "user_alias_nicknam": 151, "user_alias_name__1": 151, "404": 151, "toler": 151, "unconnect": 151, "gjffdd": 151, "center": [151, 161], "adalias1": 151, "adalias2": 151, "email1": 151, "email2": 151, "addresses_2_email_address": 151, "adr_count": 151, "anon_1_address_count": 151, "addr_alia": 151, "someus": 151, "jacks_address": 151, "uh": 151, "oh": 151, "sneak": 151, "blogpost": 151, "post_keyword": 151, "post_id": 151, "firstpost": 151, "posts_id": 151, "posts_user_id": 151, "posts_headlin": 151, "posts_bodi": 151, "version_uuid": 152, "sequenti": 152, "alchemi": [154, 161], "wizard": 154, "hat": 154, "user_id_1": [155, 163], "count_2": 155, "count_fn": 155, "user_alias_1": [155, 163], "user_alias_2": 155, "user_account_2": 155, "address_alias_1": [155, 163], "address_alias_2": [155, 163], "cte_obj": 155, "address_ct": 155, "u_subq": 155, "now_1": 155, "some_crazy_funct": 155, "some_crazy_function_2": 155, "some_crazy_function_1": 155, "json_object": 155, "function_expr": 155, "json_object_1": 155, "json_object_2": 155, "some_int": 155, "upper_1": 155, "upper_2": 155, "evidenc": 155, "percentile_disc_1": 155, "onetwothre": 155, "scalar_str": 155, "scalar_strings_1": 155, "delete_stmt": 156, "mcstar": [156, 163], "learner": 157, "dict_row": 157, "sanit": 157, "famous": 157, "attack": 157, "sleev": 157, "blue": 160, "newcom": 160, "light": 160, "invit": 160, "dbschema": 161, "acesss": 162, "some_squidward": 162, "sandy_fullnam": 162, "extraordinair": 162, "complimentari": 163, "pkrab": 163, "pearl": 163, "tedium": 163, "die": 163, "purist": 163, "oldest": 163}, "objects": {"examples": [[98, 0, 0, "-", "adjacency_list"], [98, 0, 0, "-", "association"], [98, 0, 0, "-", "asyncio"], [98, 0, 0, "-", "custom_attributes"], [98, 0, 0, "-", "dogpile_caching"], [98, 0, 0, "-", "dynamic_dict"], [98, 0, 0, "-", "elementtree"], [98, 0, 0, "-", "extending_query"], [98, 0, 0, "-", "generic_associations"], [98, 0, 0, "-", "graphs"], [98, 0, 0, "-", "inheritance"], [98, 0, 0, "-", "join_conditions"], [98, 0, 0, "-", "large_collection"], [98, 0, 0, "-", "materialized_paths"], [98, 0, 0, "-", "nested_sets"], [98, 0, 0, "-", "performance"], [98, 0, 0, "-", "postgis"], [98, 0, 0, "-", "sharding"], [98, 0, 0, "-", "space_invaders"], [98, 0, 0, "-", "versioned_history"], [98, 0, 0, "-", "versioned_rows"], [98, 0, 0, "-", "vertical"]], "sqlalchemy": [[37, 1, 1, "", "create_engine"], [37, 1, 1, "", "create_mock_engine"], [31, 0, 0, "-", "engine"], [37, 1, 1, "", "engine_from_config"], [41, 0, 0, "-", "exc"], [45, 0, 0, "-", "future"], [47, 1, 1, "", "inspect"], [47, 0, 0, "-", "inspection"], [51, 0, 0, "-", "pool"], [49, 0, 0, "-", "schema"], [59, 0, 0, "-", "types"]], "sqlalchemy.create_engine.params": [[37, 2, 1, "", "case_sensitive"], [37, 2, 1, "", "connect_args"], [37, 2, 1, "", "convert_unicode"], [37, 2, 1, "", "creator"], [37, 2, 1, "", "echo"], [37, 2, 1, "", "echo_pool"], [37, 2, 1, "", "empty_in_strategy"], [37, 2, 1, "", "enable_from_linting"], [37, 2, 1, "", "encoding"], [37, 2, 1, "", "execution_options"], [37, 2, 1, "", "future"], [37, 2, 1, "", "hide_parameters"], [37, 2, 1, "", "implicit_returning"], [37, 2, 1, "", "isolation_level"], [37, 2, 1, "", "json_deserializer"], [37, 2, 1, "", "json_serializer"], [37, 2, 1, "", "label_length"], [37, 2, 1, "", "listeners"], [37, 2, 1, "", "logging_name"], [37, 2, 1, "", "max_identifier_length"], [37, 2, 1, "", "max_overflow"], [37, 2, 1, "", "module"], [37, 2, 1, "", "paramstyle"], [37, 2, 1, "", "plugins"], [37, 2, 1, "", "pool"], [37, 2, 1, "", "pool_logging_name"], [37, 2, 1, "", "pool_pre_ping"], [37, 2, 1, "", "pool_recycle"], [37, 2, 1, "", "pool_reset_on_return"], [37, 2, 1, "", "pool_size"], [37, 2, 1, "", "pool_timeout"], [37, 2, 1, "", "pool_use_lifo"], [37, 2, 1, "", "poolclass"], [37, 2, 1, "", "query_cache_size"]], "sqlalchemy.create_mock_engine.params": [[37, 2, 1, "", "executor"], [37, 2, 1, "", "url"]], "sqlalchemy.dialects.firebird": [[62, 0, 0, "-", "base"], [62, 0, 0, "-", "fdb"], [62, 0, 0, "-", "kinterbasdb"]], "sqlalchemy.dialects.mssql": [[64, 3, 1, "", "BIT"], [64, 3, 1, "", "DATETIME2"], [64, 3, 1, "", "DATETIMEOFFSET"], [64, 3, 1, "", "IMAGE"], [64, 3, 1, "", "JSON"], [64, 3, 1, "", "MONEY"], [64, 3, 1, "", "NTEXT"], [64, 3, 1, "", "REAL"], [64, 3, 1, "", "ROWVERSION"], [64, 3, 1, "", "SMALLDATETIME"], [64, 3, 1, "", "SMALLMONEY"], [64, 3, 1, "", "SQL_VARIANT"], [64, 3, 1, "", "TIME"], [64, 3, 1, "", "TIMESTAMP"], [64, 3, 1, "", "TINYINT"], [64, 3, 1, "", "UNIQUEIDENTIFIER"], [64, 3, 1, "", "XML"], [64, 0, 0, "-", "base"], [64, 0, 0, "-", "mxodbc"], [64, 0, 0, "-", "pymssql"], [64, 0, 0, "-", "pyodbc"], [64, 1, 1, "", "try_cast"]], "sqlalchemy.dialects.mssql.BIT": [[64, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mssql.BIT.params": [[64, 2, 1, "", "create_constraint"], [64, 2, 1, "", "name"]], "sqlalchemy.dialects.mssql.CHAR.params": [[64, 2, 1, "", "collation"], [64, 2, 1, "", "convert_unicode"], [64, 2, 1, "", "length"], [64, 2, 1, "", "unicode_error"]], "sqlalchemy.dialects.mssql.IMAGE": [[64, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mssql.IMAGE.params": [[64, 2, 1, "", "length"]], "sqlalchemy.dialects.mssql.JSON": [[64, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mssql.JSON.params": [[64, 2, 1, "", "none_as_null"]], "sqlalchemy.dialects.mssql.NTEXT": [[64, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mssql.ROWVERSION": [[64, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mssql.ROWVERSION.params": [[64, 2, 1, "", "convert_int"]], "sqlalchemy.dialects.mssql.SMALLDATETIME": [[64, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mssql.SMALLDATETIME.params": [[64, 2, 1, "", "timezone"]], "sqlalchemy.dialects.mssql.TEXT.params": [[64, 2, 1, "", "collation"], [64, 2, 1, "", "convert_unicode"], [64, 2, 1, "", "length"], [64, 2, 1, "", "unicode_error"]], "sqlalchemy.dialects.mssql.TIMESTAMP": [[64, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mssql.TIMESTAMP.params": [[64, 2, 1, "", "convert_int"]], "sqlalchemy.dialects.mssql.VARBINARY.params": [[64, 2, 1, "", "filestream"], [64, 2, 1, "", "length"]], "sqlalchemy.dialects.mssql.VARCHAR.params": [[64, 2, 1, "", "collation"], [64, 2, 1, "", "convert_unicode"], [64, 2, 1, "", "length"], [64, 2, 1, "", "unicode_error"]], "sqlalchemy.dialects.mssql.XML": [[64, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mssql.XML.params": [[64, 2, 1, "", "collation"], [64, 2, 1, "", "convert_unicode"], [64, 2, 1, "", "length"], [64, 2, 1, "", "unicode_error"]], "sqlalchemy.dialects.mysql": [[65, 3, 1, "", "BIGINT"], [65, 3, 1, "", "BIT"], [65, 3, 1, "", "CHAR"], [65, 3, 1, "", "DATETIME"], [65, 3, 1, "", "DECIMAL"], [65, 3, 1, "", "ENUM"], [65, 3, 1, "", "FLOAT"], [65, 3, 1, "", "INTEGER"], [65, 3, 1, "", "Insert"], [65, 3, 1, "", "JSON"], [65, 3, 1, "", "LONGBLOB"], [65, 3, 1, "", "LONGTEXT"], [65, 3, 1, "", "MEDIUMBLOB"], [65, 3, 1, "", "MEDIUMINT"], [65, 3, 1, "", "MEDIUMTEXT"], [65, 3, 1, "", "NCHAR"], [65, 3, 1, "", "NUMERIC"], [65, 3, 1, "", "NVARCHAR"], [65, 3, 1, "", "REAL"], [65, 3, 1, "", "SET"], [65, 3, 1, "", "SMALLINT"], [65, 3, 1, "", "TIME"], [65, 3, 1, "", "TIMESTAMP"], [65, 3, 1, "", "TINYBLOB"], [65, 3, 1, "", "TINYINT"], [65, 3, 1, "", "TINYTEXT"], [65, 3, 1, "", "VARCHAR"], [65, 3, 1, "", "YEAR"], [65, 0, 0, "-", "aiomysql"], [65, 0, 0, "-", "asyncmy"], [65, 0, 0, "-", "base"], [65, 0, 0, "-", "cymysql"], [65, 1, 1, "", "insert"], [65, 0, 0, "-", "mariadbconnector"], [65, 3, 1, "", "match"], [65, 0, 0, "-", "mysqlconnector"], [65, 0, 0, "-", "mysqldb"], [65, 0, 0, "-", "oursql"], [65, 0, 0, "-", "pymysql"], [65, 0, 0, "-", "pyodbc"]], "sqlalchemy.dialects.mysql.BIGINT": [[65, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mysql.BIGINT.params": [[65, 2, 1, "", "display_width"], [65, 2, 1, "", "unsigned"], [65, 2, 1, "", "zerofill"]], "sqlalchemy.dialects.mysql.BIT": [[65, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mysql.BIT.params": [[65, 2, 1, "", "length"]], "sqlalchemy.dialects.mysql.BLOB.params": [[65, 2, 1, "", "length"]], "sqlalchemy.dialects.mysql.BOOLEAN.params": [[65, 2, 1, "", "create_constraint"], [65, 2, 1, "", "name"]], "sqlalchemy.dialects.mysql.CHAR": [[65, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mysql.CHAR.params": [[65, 2, 1, "", "binary"], [65, 2, 1, "", "collation"], [65, 2, 1, "", "length"]], "sqlalchemy.dialects.mysql.DATETIME": [[65, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mysql.DATETIME.params": [[65, 2, 1, "", "fsp"], [65, 2, 1, "", "timezone"]], "sqlalchemy.dialects.mysql.DECIMAL": [[65, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mysql.DECIMAL.params": [[65, 2, 1, "", "precision"], [65, 2, 1, "", "scale"], [65, 2, 1, "", "unsigned"], [65, 2, 1, "", "zerofill"]], "sqlalchemy.dialects.mysql.DOUBLE.params": [[65, 2, 1, "", "precision"], [65, 2, 1, "", "scale"], [65, 2, 1, "", "unsigned"], [65, 2, 1, "", "zerofill"]], "sqlalchemy.dialects.mysql.ENUM": [[65, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mysql.ENUM.params": [[65, 2, 1, "", "ascii"], [65, 2, 1, "", "binary"], [65, 2, 1, "", "charset"], [65, 2, 1, "", "collation"], [65, 2, 1, "", "enums"], [65, 2, 1, "", "quoting"], [65, 2, 1, "", "strict"], [65, 2, 1, "", "unicode"]], "sqlalchemy.dialects.mysql.FLOAT": [[65, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mysql.FLOAT.params": [[65, 2, 1, "", "precision"], [65, 2, 1, "", "scale"], [65, 2, 1, "", "unsigned"], [65, 2, 1, "", "zerofill"]], "sqlalchemy.dialects.mysql.INTEGER": [[65, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mysql.INTEGER.params": [[65, 2, 1, "", "display_width"], [65, 2, 1, "", "unsigned"], [65, 2, 1, "", "zerofill"]], "sqlalchemy.dialects.mysql.Insert": [[65, 5, 1, "", "inherit_cache"], [65, 5, 1, "", "inserted"], [65, 4, 1, "", "on_duplicate_key_update"]], "sqlalchemy.dialects.mysql.Insert.on_duplicate_key_update.params": [[65, 2, 1, "", "**kw"], [65, 2, 1, "", "*args"]], "sqlalchemy.dialects.mysql.LONGTEXT": [[65, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mysql.LONGTEXT.params": [[65, 2, 1, "", "ascii"], [65, 2, 1, "", "binary"], [65, 2, 1, "", "charset"], [65, 2, 1, "", "collation"], [65, 2, 1, "", "national"], [65, 2, 1, "", "unicode"]], "sqlalchemy.dialects.mysql.MEDIUMINT": [[65, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mysql.MEDIUMINT.params": [[65, 2, 1, "", "display_width"], [65, 2, 1, "", "unsigned"], [65, 2, 1, "", "zerofill"]], "sqlalchemy.dialects.mysql.MEDIUMTEXT": [[65, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mysql.MEDIUMTEXT.params": [[65, 2, 1, "", "ascii"], [65, 2, 1, "", "binary"], [65, 2, 1, "", "charset"], [65, 2, 1, "", "collation"], [65, 2, 1, "", "national"], [65, 2, 1, "", "unicode"]], "sqlalchemy.dialects.mysql.NCHAR": [[65, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mysql.NCHAR.params": [[65, 2, 1, "", "binary"], [65, 2, 1, "", "collation"], [65, 2, 1, "", "length"]], "sqlalchemy.dialects.mysql.NUMERIC": [[65, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mysql.NUMERIC.params": [[65, 2, 1, "", "precision"], [65, 2, 1, "", "scale"], [65, 2, 1, "", "unsigned"], [65, 2, 1, "", "zerofill"]], "sqlalchemy.dialects.mysql.NVARCHAR": [[65, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mysql.NVARCHAR.params": [[65, 2, 1, "", "binary"], [65, 2, 1, "", "collation"], [65, 2, 1, "", "length"]], "sqlalchemy.dialects.mysql.REAL": [[65, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mysql.REAL.params": [[65, 2, 1, "", "precision"], [65, 2, 1, "", "scale"], [65, 2, 1, "", "unsigned"], [65, 2, 1, "", "zerofill"]], "sqlalchemy.dialects.mysql.SET": [[65, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mysql.SET.params": [[65, 2, 1, "", "ascii"], [65, 2, 1, "", "binary"], [65, 2, 1, "", "charset"], [65, 2, 1, "", "collation"], [65, 2, 1, "", "convert_unicode"], [65, 2, 1, "", "quoting"], [65, 2, 1, "", "retrieve_as_bitwise"], [65, 2, 1, "", "unicode"], [65, 2, 1, "", "values"]], "sqlalchemy.dialects.mysql.SMALLINT": [[65, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mysql.SMALLINT.params": [[65, 2, 1, "", "display_width"], [65, 2, 1, "", "unsigned"], [65, 2, 1, "", "zerofill"]], "sqlalchemy.dialects.mysql.TEXT.params": [[65, 2, 1, "", "ascii"], [65, 2, 1, "", "binary"], [65, 2, 1, "", "charset"], [65, 2, 1, "", "collation"], [65, 2, 1, "", "length"], [65, 2, 1, "", "national"], [65, 2, 1, "", "unicode"]], "sqlalchemy.dialects.mysql.TIME": [[65, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mysql.TIME.params": [[65, 2, 1, "", "fsp"], [65, 2, 1, "", "timezone"]], "sqlalchemy.dialects.mysql.TIMESTAMP": [[65, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mysql.TIMESTAMP.params": [[65, 2, 1, "", "fsp"], [65, 2, 1, "", "timezone"]], "sqlalchemy.dialects.mysql.TINYINT": [[65, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mysql.TINYINT.params": [[65, 2, 1, "", "display_width"], [65, 2, 1, "", "unsigned"], [65, 2, 1, "", "zerofill"]], "sqlalchemy.dialects.mysql.TINYTEXT": [[65, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mysql.TINYTEXT.params": [[65, 2, 1, "", "ascii"], [65, 2, 1, "", "binary"], [65, 2, 1, "", "charset"], [65, 2, 1, "", "collation"], [65, 2, 1, "", "national"], [65, 2, 1, "", "unicode"]], "sqlalchemy.dialects.mysql.VARCHAR": [[65, 4, 1, "", "__init__"]], "sqlalchemy.dialects.mysql.VARCHAR.params": [[65, 2, 1, "", "ascii"], [65, 2, 1, "", "binary"], [65, 2, 1, "", "charset"], [65, 2, 1, "", "collation"], [65, 2, 1, "", "national"], [65, 2, 1, "", "unicode"]], "sqlalchemy.dialects.mysql.insert.params": [[65, 2, 1, "", "inline"], [65, 2, 1, "", "table"], [65, 2, 1, "", "values"]], "sqlalchemy.dialects.mysql.match": [[65, 4, 1, "", "in_boolean_mode"], [65, 4, 1, "", "in_natural_language_mode"], [65, 5, 1, "", "inherit_cache"], [65, 4, 1, "", "with_query_expansion"]], "sqlalchemy.dialects.mysql.match.params": [[65, 2, 1, "", "against"], [65, 2, 1, "", "cols"], [65, 2, 1, "", "in_boolean_mode"], [65, 2, 1, "", "in_natural_language_mode"], [65, 2, 1, "", "with_query_expansion"]], "sqlalchemy.dialects.oracle": [[66, 3, 1, "", "BFILE"], [66, 3, 1, "", "DATE"], [66, 3, 1, "", "DOUBLE_PRECISION"], [66, 3, 1, "", "INTERVAL"], [66, 3, 1, "", "LONG"], [66, 3, 1, "", "NCLOB"], [66, 3, 1, "", "NUMBER"], [66, 3, 1, "", "RAW"], [66, 0, 0, "-", "base"], [66, 0, 0, "-", "cx_oracle"]], "sqlalchemy.dialects.oracle.BFILE": [[66, 4, 1, "", "__init__"]], "sqlalchemy.dialects.oracle.BFILE.params": [[66, 2, 1, "", "length"]], "sqlalchemy.dialects.oracle.DATE": [[66, 4, 1, "", "__init__"]], "sqlalchemy.dialects.oracle.DATE.params": [[66, 2, 1, "", "timezone"]], "sqlalchemy.dialects.oracle.DOUBLE_PRECISION": [[66, 4, 1, "", "__init__"]], "sqlalchemy.dialects.oracle.DOUBLE_PRECISION.params": [[66, 2, 1, "", "asdecimal"], [66, 2, 1, "", "decimal_return_scale"], [66, 2, 1, "", "precision"]], "sqlalchemy.dialects.oracle.INTERVAL": [[66, 4, 1, "", "__init__"]], "sqlalchemy.dialects.oracle.INTERVAL.params": [[66, 2, 1, "", "day_precision"], [66, 2, 1, "", "second_precision"]], "sqlalchemy.dialects.oracle.LONG": [[66, 4, 1, "", "__init__"]], "sqlalchemy.dialects.oracle.LONG.params": [[66, 2, 1, "", "collation"], [66, 2, 1, "", "convert_unicode"], [66, 2, 1, "", "length"], [66, 2, 1, "", "unicode_error"]], "sqlalchemy.dialects.oracle.NCLOB": [[66, 4, 1, "", "__init__"]], "sqlalchemy.dialects.oracle.NCLOB.params": [[66, 2, 1, "", "collation"], [66, 2, 1, "", "convert_unicode"], [66, 2, 1, "", "length"], [66, 2, 1, "", "unicode_error"]], "sqlalchemy.dialects.postgresql": [[67, 3, 1, "", "ARRAY"], [67, 1, 1, "", "All"], [67, 1, 1, "", "Any"], [67, 3, 1, "", "BIT"], [67, 3, 1, "", "BYTEA"], [67, 3, 1, "", "CIDR"], [67, 3, 1, "", "DATERANGE"], [67, 3, 1, "", "ENUM"], [67, 3, 1, "", "ExcludeConstraint"], [67, 3, 1, "", "HSTORE"], [67, 3, 1, "", "INET"], [67, 3, 1, "", "INT4RANGE"], [67, 3, 1, "", "INT8RANGE"], [67, 3, 1, "", "INTERVAL"], [67, 3, 1, "", "Insert"], [67, 3, 1, "", "JSON"], [67, 3, 1, "", "JSONB"], [67, 3, 1, "", "MACADDR"], [67, 3, 1, "", "MACADDR8"], [67, 3, 1, "", "MONEY"], [67, 3, 1, "", "NUMRANGE"], [67, 3, 1, "", "OID"], [67, 3, 1, "", "REGCLASS"], [67, 3, 1, "", "TIME"], [67, 3, 1, "", "TIMESTAMP"], [67, 3, 1, "", "TSRANGE"], [67, 3, 1, "", "TSTZRANGE"], [67, 3, 1, "", "TSVECTOR"], [67, 3, 1, "", "UUID"], [67, 3, 1, "", "aggregate_order_by"], [67, 3, 1, "", "array"], [67, 1, 1, "", "array_agg"], [67, 0, 0, "-", "asyncpg"], [67, 0, 0, "-", "base"], [67, 3, 1, "", "hstore"], [67, 1, 1, "", "insert"], [67, 0, 0, "-", "pg8000"], [67, 0, 0, "-", "psycopg2"], [67, 0, 0, "-", "psycopg2cffi"], [67, 0, 0, "-", "pygresql"], [67, 0, 0, "-", "pypostgresql"]], "sqlalchemy.dialects.postgresql.ARRAY": [[67, 3, 1, "", "Comparator"], [67, 4, 1, "", "__init__"]], "sqlalchemy.dialects.postgresql.ARRAY.Comparator": [[67, 4, 1, "", "contained_by"], [67, 4, 1, "", "contains"], [67, 4, 1, "", "overlap"]], "sqlalchemy.dialects.postgresql.ARRAY.params": [[67, 2, 1, "", "as_tuple"], [67, 2, 1, "", "dimensions"], [67, 2, 1, "", "item_type"], [67, 2, 1, "", "zero_indexes"]], "sqlalchemy.dialects.postgresql.BYTEA": [[67, 4, 1, "", "__init__"]], "sqlalchemy.dialects.postgresql.BYTEA.params": [[67, 2, 1, "", "length"]], "sqlalchemy.dialects.postgresql.DOUBLE_PRECISION.params": [[67, 2, 1, "", "asdecimal"], [67, 2, 1, "", "decimal_return_scale"], [67, 2, 1, "", "precision"]], "sqlalchemy.dialects.postgresql.ENUM": [[67, 4, 1, "", "__init__"], [67, 4, 1, "", "create"], [67, 4, 1, "", "drop"]], "sqlalchemy.dialects.postgresql.ENUM.create.params": [[67, 2, 1, "", "bind"], [67, 2, 1, "", "checkfirst"]], "sqlalchemy.dialects.postgresql.ENUM.drop.params": [[67, 2, 1, "", "bind"], [67, 2, 1, "", "checkfirst"]], "sqlalchemy.dialects.postgresql.ENUM.params": [[67, 2, 1, "", "create_type"]], "sqlalchemy.dialects.postgresql.ExcludeConstraint": [[67, 4, 1, "", "__init__"]], "sqlalchemy.dialects.postgresql.ExcludeConstraint.params": [[67, 2, 1, "", "*elements"], [67, 2, 1, "", "deferrable"], [67, 2, 1, "", "initially"], [67, 2, 1, "", "name"], [67, 2, 1, "", "ops"], [67, 2, 1, "", "using"], [67, 2, 1, "", "where"]], "sqlalchemy.dialects.postgresql.HSTORE": [[67, 3, 1, "", "Comparator"], [67, 4, 1, "", "__init__"], [67, 4, 1, "", "bind_processor"], [67, 5, 1, "", "comparator_factory"], [67, 5, 1, "", "hashable"], [67, 4, 1, "", "result_processor"]], "sqlalchemy.dialects.postgresql.HSTORE.Comparator": [[67, 4, 1, "", "array"], [67, 4, 1, "", "contained_by"], [67, 4, 1, "", "contains"], [67, 4, 1, "", "defined"], [67, 4, 1, "", "delete"], [67, 4, 1, "", "has_all"], [67, 4, 1, "", "has_any"], [67, 4, 1, "", "has_key"], [67, 4, 1, "", "keys"], [67, 4, 1, "", "matrix"], [67, 4, 1, "", "slice"], [67, 4, 1, "", "vals"]], "sqlalchemy.dialects.postgresql.HSTORE.bind_processor.params": [[67, 2, 1, "", "dialect"]], "sqlalchemy.dialects.postgresql.HSTORE.params": [[67, 2, 1, "", "text_type"]], "sqlalchemy.dialects.postgresql.HSTORE.result_processor.params": [[67, 2, 1, "", "coltype"], [67, 2, 1, "", "dialect"]], "sqlalchemy.dialects.postgresql.INTERVAL": [[67, 4, 1, "", "__init__"]], "sqlalchemy.dialects.postgresql.INTERVAL.params": [[67, 2, 1, "", "fields"], [67, 2, 1, "", "precision"]], "sqlalchemy.dialects.postgresql.Insert": [[67, 5, 1, "", "excluded"], [67, 5, 1, "", "inherit_cache"], [67, 4, 1, "", "on_conflict_do_nothing"], [67, 4, 1, "", "on_conflict_do_update"]], "sqlalchemy.dialects.postgresql.Insert.on_conflict_do_nothing.params": [[67, 2, 1, "", "constraint"], [67, 2, 1, "", "index_elements"], [67, 2, 1, "", "index_where"]], "sqlalchemy.dialects.postgresql.Insert.on_conflict_do_update.params": [[67, 2, 1, "", "constraint"], [67, 2, 1, "", "index_elements"], [67, 2, 1, "", "index_where"], [67, 2, 1, "", "set_"], [67, 2, 1, "", "where"]], "sqlalchemy.dialects.postgresql.JSON": [[67, 3, 1, "", "Comparator"], [67, 4, 1, "", "__init__"], [67, 5, 1, "", "comparator_factory"]], "sqlalchemy.dialects.postgresql.JSON.Comparator": [[67, 5, 1, "", "astext"]], "sqlalchemy.dialects.postgresql.JSON.params": [[67, 2, 1, "", "astext_type"], [67, 2, 1, "", "none_as_null"]], "sqlalchemy.dialects.postgresql.JSONB": [[67, 3, 1, "", "Comparator"], [67, 5, 1, "", "comparator_factory"]], "sqlalchemy.dialects.postgresql.JSONB.Comparator": [[67, 4, 1, "", "contained_by"], [67, 4, 1, "", "contains"], [67, 4, 1, "", "has_all"], [67, 4, 1, "", "has_any"], [67, 4, 1, "", "has_key"]], "sqlalchemy.dialects.postgresql.REAL.params": [[67, 2, 1, "", "asdecimal"], [67, 2, 1, "", "decimal_return_scale"], [67, 2, 1, "", "precision"]], "sqlalchemy.dialects.postgresql.TIME": [[67, 4, 1, "", "__init__"]], "sqlalchemy.dialects.postgresql.TIME.params": [[67, 2, 1, "", "precision"], [67, 2, 1, "", "timezone"]], "sqlalchemy.dialects.postgresql.TIMESTAMP": [[67, 4, 1, "", "__init__"]], "sqlalchemy.dialects.postgresql.TIMESTAMP.params": [[67, 2, 1, "", "precision"], [67, 2, 1, "", "timezone"]], "sqlalchemy.dialects.postgresql.UUID": [[67, 4, 1, "", "__init__"]], "sqlalchemy.dialects.postgresql.UUID.params": [[67, 2, 1, "", "as_uuid"]], "sqlalchemy.dialects.postgresql.base": [[67, 3, 1, "", "PGInspector"]], "sqlalchemy.dialects.postgresql.base.PGInspector": [[67, 4, 1, "", "get_enums"], [67, 4, 1, "", "get_foreign_table_names"], [67, 4, 1, "", "get_table_oid"], [67, 4, 1, "", "get_view_names"]], "sqlalchemy.dialects.postgresql.base.PGInspector.get_enums.params": [[67, 2, 1, "", "schema"]], "sqlalchemy.dialects.postgresql.base.PGInspector.get_view_names.params": [[67, 2, 1, "", "include"], [67, 2, 1, "", "schema"]], "sqlalchemy.dialects.postgresql.hstore": [[67, 5, 1, "", "inherit_cache"], [67, 5, 1, "", "type"]], "sqlalchemy.dialects.postgresql.insert.params": [[67, 2, 1, "", "inline"], [67, 2, 1, "", "table"], [67, 2, 1, "", "values"]], "sqlalchemy.dialects.postgresql.ranges": [[67, 3, 1, "", "RangeOperators"]], "sqlalchemy.dialects.postgresql.ranges.RangeOperators": [[67, 3, 1, "", "comparator_factory"]], "sqlalchemy.dialects.postgresql.ranges.RangeOperators.comparator_factory": [[67, 4, 1, "", "__ne__"], [67, 4, 1, "", "adjacent_to"], [67, 4, 1, "", "contained_by"], [67, 4, 1, "", "contains"], [67, 4, 1, "", "not_extend_left_of"], [67, 4, 1, "", "not_extend_right_of"], [67, 4, 1, "", "overlaps"], [67, 4, 1, "", "strictly_left_of"], [67, 4, 1, "", "strictly_right_of"]], "sqlalchemy.dialects": [[68, 0, 0, "-", "sqlite"]], "sqlalchemy.dialects.sqlite": [[68, 3, 1, "", "DATE"], [68, 3, 1, "", "DATETIME"], [68, 3, 1, "", "Insert"], [68, 3, 1, "", "JSON"], [68, 3, 1, "", "TIME"], [68, 0, 0, "-", "aiosqlite"], [68, 0, 0, "-", "base"], [68, 1, 1, "", "insert"], [68, 0, 0, "-", "pysqlcipher"], [68, 0, 0, "-", "pysqlite"]], "sqlalchemy.dialects.sqlite.DATE.params": [[68, 2, 1, "", "regexp"], [68, 2, 1, "", "storage_format"]], "sqlalchemy.dialects.sqlite.DATETIME.params": [[68, 2, 1, "", "regexp"], [68, 2, 1, "", "storage_format"]], "sqlalchemy.dialects.sqlite.Insert": [[68, 5, 1, "", "excluded"], [68, 5, 1, "", "inherit_cache"], [68, 4, 1, "", "on_conflict_do_nothing"], [68, 4, 1, "", "on_conflict_do_update"]], "sqlalchemy.dialects.sqlite.Insert.on_conflict_do_nothing.params": [[68, 2, 1, "", "index_elements"], [68, 2, 1, "", "index_where"]], "sqlalchemy.dialects.sqlite.Insert.on_conflict_do_update.params": [[68, 2, 1, "", "index_elements"], [68, 2, 1, "", "index_where"], [68, 2, 1, "", "set_"], [68, 2, 1, "", "where"]], "sqlalchemy.dialects.sqlite.TIME.params": [[68, 2, 1, "", "regexp"], [68, 2, 1, "", "storage_format"]], "sqlalchemy.dialects.sqlite.insert.params": [[68, 2, 1, "", "inline"], [68, 2, 1, "", "table"], [68, 2, 1, "", "values"]], "sqlalchemy.dialects.sybase": [[69, 0, 0, "-", "base"], [69, 0, 0, "-", "mxodbc"], [69, 0, 0, "-", "pyodbc"], [69, 0, 0, "-", "pysybase"]], "sqlalchemy.engine": [[48, 3, 1, "", "AdaptedConnection"], [31, 3, 1, "", "BaseCursorResult"], [31, 3, 1, "", "ChunkedIteratorResult"], [48, 3, 1, "", "Compiled"], [31, 3, 1, "", "Connection"], [31, 3, 1, "", "CreateEnginePlugin"], [31, 3, 1, "", "CursorResult"], [48, 3, 1, "", "Dialect"], [31, 3, 1, "", "Engine"], [31, 3, 1, "", "ExceptionContext"], [48, 3, 1, "", "ExecutionContext"], [31, 3, 1, "", "FilterResult"], [31, 3, 1, "", "FrozenResult"], [31, 3, 1, "", "IteratorResult"], [31, 3, 1, "", "LegacyCursorResult"], [31, 3, 1, "", "LegacyRow"], [31, 3, 1, "", "MappingResult"], [31, 3, 1, "", "MergedResult"], [31, 3, 1, "", "NestedTransaction"], [31, 3, 1, "", "Result"], [31, 3, 1, "", "RootTransaction"], [31, 3, 1, "", "Row"], [31, 3, 1, "", "RowMapping"], [31, 3, 1, "", "ScalarResult"], [31, 3, 1, "", "Transaction"], [31, 3, 1, "", "TwoPhaseTransaction"], [37, 3, 1, "", "URL"], [37, 1, 1, "", "make_url"]], "sqlalchemy.engine.AdaptedConnection": [[48, 5, 1, "", "driver_connection"], [48, 4, 1, "", "run_async"]], "sqlalchemy.engine.BaseCursorResult": [[31, 5, 1, "", "inserted_primary_key"], [31, 5, 1, "", "inserted_primary_key_rows"], [31, 5, 1, "", "is_insert"], [31, 4, 1, "", "last_inserted_params"], [31, 4, 1, "", "last_updated_params"], [31, 4, 1, "", "lastrow_has_defaults"], [31, 5, 1, "", "lastrowid"], [31, 4, 1, "", "postfetch_cols"], [31, 4, 1, "", "prefetch_cols"], [31, 5, 1, "", "returned_defaults"], [31, 5, 1, "", "returned_defaults_rows"], [31, 5, 1, "", "returns_rows"], [31, 5, 1, "", "rowcount"], [31, 4, 1, "", "supports_sane_multi_rowcount"], [31, 4, 1, "", "supports_sane_rowcount"]], "sqlalchemy.engine.ChunkedIteratorResult": [[31, 4, 1, "", "yield_per"]], "sqlalchemy.engine.ChunkedIteratorResult.yield_per.params": [[31, 2, 1, "", "num"]], "sqlalchemy.engine.Compiled": [[48, 4, 1, "", "__init__"], [48, 5, 1, "", "compile_state"], [48, 4, 1, "", "construct_params"], [48, 5, 1, "", "dml_compile_state"], [48, 5, 1, "", "execution_options"], [48, 5, 1, "", "params"], [48, 5, 1, "", "sql_compiler"]], "sqlalchemy.engine.Compiled.construct_params.params": [[48, 2, 1, "", "params"]], "sqlalchemy.engine.Compiled.params": [[48, 2, 1, "", "compile_kwargs"], [48, 2, 1, "", "dialect"], [48, 2, 1, "", "schema_translate_map"], [48, 2, 1, "", "statement"]], "sqlalchemy.engine.Connection": [[31, 4, 1, "", "__init__"], [31, 4, 1, "", "begin"], [31, 4, 1, "", "begin_nested"], [31, 4, 1, "", "begin_twophase"], [31, 4, 1, "", "close"], [31, 5, 1, "", "closed"], [31, 4, 1, "", "connect"], [31, 5, 1, "", "connection"], [31, 5, 1, "", "default_isolation_level"], [31, 4, 1, "", "detach"], [31, 4, 1, "", "exec_driver_sql"], [31, 4, 1, "", "execute"], [31, 4, 1, "", "execution_options"], [31, 4, 1, "", "get_execution_options"], [31, 4, 1, "", "get_isolation_level"], [31, 4, 1, "", "get_nested_transaction"], [31, 4, 1, "", "get_transaction"], [31, 4, 1, "", "in_nested_transaction"], [31, 4, 1, "", "in_transaction"], [31, 5, 1, "", "info"], [31, 4, 1, "", "invalidate"], [31, 5, 1, "", "invalidated"], [31, 4, 1, "", "run_callable"], [31, 4, 1, "", "scalar"], [31, 4, 1, "", "scalars"], [31, 4, 1, "", "schema_for_object"], [31, 4, 1, "", "transaction"]], "sqlalchemy.engine.Connection.begin_twophase.params": [[31, 2, 1, "", "xid"]], "sqlalchemy.engine.Connection.exec_driver_sql.params": [[31, 2, 1, "", "parameters"], [31, 2, 1, "", "statement"]], "sqlalchemy.engine.Connection.execute.params": [[31, 2, 1, "", "*multiparams/**params"], [31, 2, 1, "", "statement"]], "sqlalchemy.engine.Connection.execution_options.params": [[31, 2, 1, "", "autocommit"], [31, 2, 1, "", "compiled_cache"], [31, 2, 1, "", "isolation_level"], [31, 2, 1, "", "logging_token"], [31, 2, 1, "", "max_row_buffer"], [31, 2, 1, "", "no_parameters"], [31, 2, 1, "", "schema_translate_map"], [31, 2, 1, "", "stream_results"], [31, 2, 1, "", "yield_per"]], "sqlalchemy.engine.Connection.invalidate.params": [[31, 2, 1, "", "exception"]], "sqlalchemy.engine.CreateEnginePlugin": [[31, 4, 1, "", "__init__"], [31, 4, 1, "", "engine_created"], [31, 4, 1, "", "handle_dialect_kwargs"], [31, 4, 1, "", "handle_pool_kwargs"], [31, 4, 1, "", "update_url"]], "sqlalchemy.engine.CreateEnginePlugin.params": [[31, 2, 1, "", "kwargs"], [31, 2, 1, "", "url"]], "sqlalchemy.engine.CursorResult": [[31, 4, 1, "", "all"], [31, 4, 1, "", "close"], [31, 4, 1, "", "columns"], [31, 4, 1, "", "fetchall"], [31, 4, 1, "", "fetchmany"], [31, 4, 1, "", "fetchone"], [31, 4, 1, "", "first"], [31, 4, 1, "", "freeze"], [31, 5, 1, "", "inserted_primary_key"], [31, 5, 1, "", "inserted_primary_key_rows"], [31, 5, 1, "", "is_insert"], [31, 4, 1, "", "keys"], [31, 4, 1, "", "last_inserted_params"], [31, 4, 1, "", "last_updated_params"], [31, 4, 1, "", "lastrow_has_defaults"], [31, 5, 1, "", "lastrowid"], [31, 4, 1, "", "mappings"], [31, 4, 1, "", "merge"], [31, 4, 1, "", "one"], [31, 4, 1, "", "one_or_none"], [31, 4, 1, "", "partitions"], [31, 4, 1, "", "postfetch_cols"], [31, 4, 1, "", "prefetch_cols"], [31, 5, 1, "", "returned_defaults"], [31, 5, 1, "", "returned_defaults_rows"], [31, 5, 1, "", "returns_rows"], [31, 5, 1, "", "rowcount"], [31, 4, 1, "", "scalar"], [31, 4, 1, "", "scalar_one"], [31, 4, 1, "", "scalar_one_or_none"], [31, 4, 1, "", "scalars"], [31, 4, 1, "", "supports_sane_multi_rowcount"], [31, 4, 1, "", "supports_sane_rowcount"], [31, 4, 1, "", "unique"], [31, 4, 1, "", "yield_per"]], "sqlalchemy.engine.CursorResult.columns.params": [[31, 2, 1, "", "*col_expressions"]], "sqlalchemy.engine.CursorResult.partitions.params": [[31, 2, 1, "", "size"]], "sqlalchemy.engine.CursorResult.scalars.params": [[31, 2, 1, "", "index"]], "sqlalchemy.engine.CursorResult.unique.params": [[31, 2, 1, "", "strategy"]], "sqlalchemy.engine.CursorResult.yield_per.params": [[31, 2, 1, "", "num"]], "sqlalchemy.engine.Dialect": [[48, 4, 1, "", "connect"], [48, 4, 1, "", "create_connect_args"], [48, 4, 1, "", "create_xid"], [48, 4, 1, "", "denormalize_name"], [48, 4, 1, "", "do_begin"], [48, 4, 1, "", "do_begin_twophase"], [48, 4, 1, "", "do_close"], [48, 4, 1, "", "do_commit"], [48, 4, 1, "", "do_commit_twophase"], [48, 4, 1, "", "do_execute"], [48, 4, 1, "", "do_execute_no_params"], [48, 4, 1, "", "do_executemany"], [48, 4, 1, "", "do_prepare_twophase"], [48, 4, 1, "", "do_recover_twophase"], [48, 4, 1, "", "do_release_savepoint"], [48, 4, 1, "", "do_rollback"], [48, 4, 1, "", "do_rollback_to_savepoint"], [48, 4, 1, "", "do_rollback_twophase"], [48, 4, 1, "", "do_savepoint"], [48, 4, 1, "", "do_set_input_sizes"], [48, 4, 1, "", "do_terminate"], [48, 4, 1, "", "engine_created"], [48, 4, 1, "", "get_check_constraints"], [48, 4, 1, "", "get_columns"], [48, 4, 1, "", "get_default_isolation_level"], [48, 4, 1, "", "get_dialect_cls"], [48, 4, 1, "", "get_driver_connection"], [48, 4, 1, "", "get_foreign_keys"], [48, 4, 1, "", "get_indexes"], [48, 4, 1, "", "get_isolation_level"], [48, 4, 1, "", "get_pk_constraint"], [48, 4, 1, "", "get_sequence_names"], [48, 4, 1, "", "get_table_comment"], [48, 4, 1, "", "get_table_names"], [48, 4, 1, "", "get_temp_table_names"], [48, 4, 1, "", "get_temp_view_names"], [48, 4, 1, "", "get_unique_constraints"], [48, 4, 1, "", "get_view_definition"], [48, 4, 1, "", "get_view_names"], [48, 4, 1, "", "has_index"], [48, 4, 1, "", "has_sequence"], [48, 4, 1, "", "has_table"], [48, 4, 1, "", "initialize"], [48, 4, 1, "", "is_disconnect"], [48, 4, 1, "", "load_provisioning"], [48, 4, 1, "", "normalize_name"], [48, 4, 1, "", "on_connect"], [48, 4, 1, "", "on_connect_url"], [48, 4, 1, "", "reset_isolation_level"], [48, 4, 1, "", "set_isolation_level"], [48, 5, 1, "", "supports_statement_cache"], [48, 4, 1, "", "type_descriptor"]], "sqlalchemy.engine.Dialect.connect.params": [[48, 2, 1, "", "**cparams"], [48, 2, 1, "", "*cargs"]], "sqlalchemy.engine.Dialect.create_connect_args.params": [[48, 2, 1, "", "url"]], "sqlalchemy.engine.Dialect.do_begin.params": [[48, 2, 1, "", "dbapi_connection"]], "sqlalchemy.engine.Dialect.do_begin_twophase.params": [[48, 2, 1, "", "connection"], [48, 2, 1, "", "xid"]], "sqlalchemy.engine.Dialect.do_commit.params": [[48, 2, 1, "", "dbapi_connection"]], "sqlalchemy.engine.Dialect.do_commit_twophase.params": [[48, 2, 1, "", "connection"], [48, 2, 1, "", "is_prepared"], [48, 2, 1, "", "recover"], [48, 2, 1, "", "xid"]], "sqlalchemy.engine.Dialect.do_prepare_twophase.params": [[48, 2, 1, "", "connection"], [48, 2, 1, "", "xid"]], "sqlalchemy.engine.Dialect.do_recover_twophase.params": [[48, 2, 1, "", "connection"]], "sqlalchemy.engine.Dialect.do_release_savepoint.params": [[48, 2, 1, "", "connection"], [48, 2, 1, "", "name"]], "sqlalchemy.engine.Dialect.do_rollback.params": [[48, 2, 1, "", "dbapi_connection"]], "sqlalchemy.engine.Dialect.do_rollback_to_savepoint.params": [[48, 2, 1, "", "connection"], [48, 2, 1, "", "name"]], "sqlalchemy.engine.Dialect.do_rollback_twophase.params": [[48, 2, 1, "", "connection"], [48, 2, 1, "", "is_prepared"], [48, 2, 1, "", "recover"], [48, 2, 1, "", "xid"]], "sqlalchemy.engine.Dialect.do_savepoint.params": [[48, 2, 1, "", "connection"], [48, 2, 1, "", "name"]], "sqlalchemy.engine.Dialect.get_sequence_names.params": [[48, 2, 1, "", "schema"]], "sqlalchemy.engine.Dialect.get_view_names.params": [[48, 2, 1, "", "schema"]], "sqlalchemy.engine.Dialect.on_connect_url.params": [[48, 2, 1, "", "url"]], "sqlalchemy.engine.Engine": [[31, 4, 1, "", "begin"], [31, 4, 1, "", "clear_compiled_cache"], [31, 4, 1, "", "connect"], [31, 4, 1, "", "dispose"], [31, 5, 1, "", "driver"], [31, 5, 1, "", "engine"], [31, 4, 1, "", "execute"], [31, 4, 1, "", "execution_options"], [31, 4, 1, "", "get_execution_options"], [31, 4, 1, "", "has_table"], [31, 5, 1, "", "name"], [31, 4, 1, "", "raw_connection"], [31, 4, 1, "", "run_callable"], [31, 4, 1, "", "scalar"], [31, 4, 1, "", "table_names"], [31, 4, 1, "", "transaction"], [31, 4, 1, "", "update_execution_options"]], "sqlalchemy.engine.Engine.dispose.params": [[31, 2, 1, "", "close"]], "sqlalchemy.engine.Engine.table_names.params": [[31, 2, 1, "", "connection"], [31, 2, 1, "", "schema"]], "sqlalchemy.engine.ExceptionContext": [[31, 5, 1, "", "chained_exception"], [31, 5, 1, "", "connection"], [31, 5, 1, "", "cursor"], [31, 5, 1, "", "engine"], [31, 5, 1, "", "execution_context"], [31, 5, 1, "", "invalidate_pool_on_disconnect"], [31, 5, 1, "", "is_disconnect"], [31, 5, 1, "", "original_exception"], [31, 5, 1, "", "parameters"], [31, 5, 1, "", "sqlalchemy_exception"], [31, 5, 1, "", "statement"]], "sqlalchemy.engine.ExecutionContext": [[48, 4, 1, "", "create_cursor"], [48, 4, 1, "", "get_out_parameter_values"], [48, 4, 1, "", "get_rowcount"], [48, 4, 1, "", "handle_dbapi_exception"], [48, 4, 1, "", "lastrow_has_defaults"], [48, 4, 1, "", "post_exec"], [48, 4, 1, "", "pre_exec"], [48, 4, 1, "", "should_autocommit_text"]], "sqlalchemy.engine.FilterResult": [[31, 4, 1, "", "close"], [31, 5, 1, "", "closed"], [31, 4, 1, "", "yield_per"]], "sqlalchemy.engine.IteratorResult": [[31, 5, 1, "", "closed"]], "sqlalchemy.engine.LegacyCursorResult": [[31, 4, 1, "", "close"]], "sqlalchemy.engine.LegacyRow": [[31, 4, 1, "", "has_key"], [31, 4, 1, "", "items"], [31, 4, 1, "", "iterkeys"], [31, 4, 1, "", "itervalues"], [31, 4, 1, "", "values"]], "sqlalchemy.engine.MappingResult": [[31, 4, 1, "", "all"], [31, 4, 1, "", "close"], [31, 5, 1, "", "closed"], [31, 4, 1, "", "columns"], [31, 4, 1, "", "fetchall"], [31, 4, 1, "", "fetchmany"], [31, 4, 1, "", "fetchone"], [31, 4, 1, "", "first"], [31, 4, 1, "", "keys"], [31, 4, 1, "", "one"], [31, 4, 1, "", "one_or_none"], [31, 4, 1, "", "partitions"], [31, 4, 1, "", "unique"], [31, 4, 1, "", "yield_per"]], "sqlalchemy.engine.NestedTransaction": [[31, 4, 1, "", "close"], [31, 4, 1, "", "commit"], [31, 4, 1, "", "rollback"]], "sqlalchemy.engine.Result": [[31, 4, 1, "", "all"], [31, 4, 1, "", "close"], [31, 5, 1, "", "closed"], [31, 4, 1, "", "columns"], [31, 4, 1, "", "fetchall"], [31, 4, 1, "", "fetchmany"], [31, 4, 1, "", "fetchone"], [31, 4, 1, "", "first"], [31, 4, 1, "", "freeze"], [31, 4, 1, "", "keys"], [31, 4, 1, "", "mappings"], [31, 4, 1, "", "merge"], [31, 4, 1, "", "one"], [31, 4, 1, "", "one_or_none"], [31, 4, 1, "", "partitions"], [31, 4, 1, "", "scalar"], [31, 4, 1, "", "scalar_one"], [31, 4, 1, "", "scalar_one_or_none"], [31, 4, 1, "", "scalars"], [31, 4, 1, "", "unique"], [31, 4, 1, "", "yield_per"]], "sqlalchemy.engine.Result.columns.params": [[31, 2, 1, "", "*col_expressions"]], "sqlalchemy.engine.Result.partitions.params": [[31, 2, 1, "", "size"]], "sqlalchemy.engine.Result.scalars.params": [[31, 2, 1, "", "index"]], "sqlalchemy.engine.Result.unique.params": [[31, 2, 1, "", "strategy"]], "sqlalchemy.engine.Result.yield_per.params": [[31, 2, 1, "", "num"]], "sqlalchemy.engine.RootTransaction": [[31, 4, 1, "", "close"], [31, 4, 1, "", "commit"], [31, 4, 1, "", "rollback"]], "sqlalchemy.engine.Row": [[31, 4, 1, "", "_asdict"], [31, 5, 1, "", "_fields"], [31, 5, 1, "", "_mapping"], [31, 5, 1, "", "count"], [31, 5, 1, "", "index"], [31, 4, 1, "", "keys"]], "sqlalchemy.engine.RowMapping": [[31, 4, 1, "", "items"], [31, 4, 1, "", "keys"], [31, 4, 1, "", "values"]], "sqlalchemy.engine.ScalarResult": [[31, 4, 1, "", "all"], [31, 4, 1, "", "close"], [31, 5, 1, "", "closed"], [31, 4, 1, "", "fetchall"], [31, 4, 1, "", "fetchmany"], [31, 4, 1, "", "first"], [31, 4, 1, "", "one"], [31, 4, 1, "", "one_or_none"], [31, 4, 1, "", "partitions"], [31, 4, 1, "", "unique"], [31, 4, 1, "", "yield_per"]], "sqlalchemy.engine.Transaction": [[31, 4, 1, "", "close"], [31, 4, 1, "", "commit"], [31, 4, 1, "", "rollback"]], "sqlalchemy.engine.TwoPhaseTransaction": [[31, 4, 1, "", "close"], [31, 4, 1, "", "commit"], [31, 4, 1, "", "prepare"], [31, 4, 1, "", "rollback"]], "sqlalchemy.engine.URL": [[37, 4, 1, "", "create"], [37, 5, 1, "", "database"], [37, 4, 1, "", "difference_update_query"], [37, 5, 1, "", "drivername"], [37, 4, 1, "", "get_backend_name"], [37, 4, 1, "", "get_dialect"], [37, 4, 1, "", "get_driver_name"], [37, 5, 1, "", "host"], [37, 5, 1, "", "normalized_query"], [37, 5, 1, "", "password"], [37, 5, 1, "", "port"], [37, 5, 1, "", "query"], [37, 4, 1, "", "render_as_string"], [37, 4, 1, "", "set"], [37, 4, 1, "", "translate_connect_args"], [37, 4, 1, "", "update_query_dict"], [37, 4, 1, "", "update_query_pairs"], [37, 4, 1, "", "update_query_string"], [37, 5, 1, "", "username"]], "sqlalchemy.engine.URL.create.params": [[37, 2, 1, "", "database"], [37, 2, 1, "", "drivername"], [37, 2, 1, "", "host"], [37, 2, 1, "", "password"], [37, 2, 1, "", "port"], [37, 2, 1, "", "query"], [37, 2, 1, "", "username"]], "sqlalchemy.engine.URL.render_as_string.params": [[37, 2, 1, "", "hide_password"]], "sqlalchemy.engine.URL.set.params": [[37, 2, 1, "", "drivername"], [37, 2, 1, "", "host"], [37, 2, 1, "", "password"], [37, 2, 1, "", "port"], [37, 2, 1, "", "query"], [37, 2, 1, "", "username"]], "sqlalchemy.engine.URL.translate_connect_args.params": [[37, 2, 1, "", "**kw"], [37, 2, 1, "", "names"]], "sqlalchemy.engine.URL.update_query_dict.params": [[37, 2, 1, "", "append"], [37, 2, 1, "", "query_parameters"]], "sqlalchemy.engine.URL.update_query_pairs.params": [[37, 2, 1, "", "append"], [37, 2, 1, "", "key_value_pairs"]], "sqlalchemy.engine.URL.update_query_string.params": [[37, 2, 1, "", "append"], [37, 2, 1, "", "query_string"]], "sqlalchemy.engine.default": [[48, 3, 1, "", "DefaultDialect"], [48, 3, 1, "", "DefaultExecutionContext"]], "sqlalchemy.engine.default.DefaultDialect": [[48, 4, 1, "", "connect"], [48, 5, 1, "", "construct_arguments"], [48, 4, 1, "", "create_connect_args"], [48, 4, 1, "", "create_xid"], [48, 5, 1, "", "dbapi_exception_translation_map"], [48, 5, 1, "", "ddl_compiler"], [48, 4, 1, "", "denormalize_name"], [48, 4, 1, "", "do_begin"], [48, 4, 1, "", "do_begin_twophase"], [48, 4, 1, "", "do_close"], [48, 4, 1, "", "do_commit"], [48, 4, 1, "", "do_commit_twophase"], [48, 4, 1, "", "do_execute"], [48, 4, 1, "", "do_execute_no_params"], [48, 4, 1, "", "do_executemany"], [48, 4, 1, "", "do_prepare_twophase"], [48, 4, 1, "", "do_recover_twophase"], [48, 4, 1, "", "do_release_savepoint"], [48, 4, 1, "", "do_rollback"], [48, 4, 1, "", "do_rollback_to_savepoint"], [48, 4, 1, "", "do_rollback_twophase"], [48, 4, 1, "", "do_savepoint"], [48, 4, 1, "", "do_set_input_sizes"], [48, 4, 1, "", "do_terminate"], [48, 4, 1, "", "engine_created"], [48, 5, 1, "", "execute_sequence_format"], [48, 5, 1, "", "execution_ctx_cls"], [48, 4, 1, "", "get_check_constraints"], [48, 4, 1, "", "get_columns"], [48, 4, 1, "", "get_default_isolation_level"], [48, 4, 1, "", "get_dialect_cls"], [48, 4, 1, "", "get_driver_connection"], [48, 4, 1, "", "get_foreign_keys"], [48, 4, 1, "", "get_indexes"], [48, 4, 1, "", "get_isolation_level"], [48, 4, 1, "", "get_pk_constraint"], [48, 4, 1, "", "get_sequence_names"], [48, 4, 1, "", "get_table_comment"], [48, 4, 1, "", "get_table_names"], [48, 4, 1, "", "get_temp_table_names"], [48, 4, 1, "", "get_temp_view_names"], [48, 4, 1, "", "get_unique_constraints"], [48, 4, 1, "", "get_view_definition"], [48, 4, 1, "", "get_view_names"], [48, 4, 1, "", "has_index"], [48, 4, 1, "", "has_sequence"], [48, 4, 1, "", "has_table"], [48, 4, 1, "", "initialize"], [48, 4, 1, "", "is_disconnect"], [48, 4, 1, "", "load_provisioning"], [48, 4, 1, "", "normalize_name"], [48, 4, 1, "", "on_connect"], [48, 4, 1, "", "on_connect_url"], [48, 5, 1, "", "preparer"], [48, 4, 1, "", "reset_isolation_level"], [48, 5, 1, "", "returns_unicode_strings"], [48, 4, 1, "", "set_isolation_level"], [48, 5, 1, "", "statement_compiler"], [48, 5, 1, "", "supports_default_metavalue"], [48, 5, 1, "", "supports_default_values"], [48, 5, 1, "", "supports_empty_insert"], [48, 5, 1, "", "supports_sane_rowcount_returning"], [48, 5, 1, "", "supports_statement_cache"], [48, 5, 1, "", "type_compiler"], [48, 4, 1, "", "type_descriptor"]], "sqlalchemy.engine.default.DefaultDialect.connect.params": [[48, 2, 1, "", "**cparams"], [48, 2, 1, "", "*cargs"]], "sqlalchemy.engine.default.DefaultDialect.create_connect_args.params": [[48, 2, 1, "", "url"]], "sqlalchemy.engine.default.DefaultDialect.do_begin.params": [[48, 2, 1, "", "dbapi_connection"]], "sqlalchemy.engine.default.DefaultDialect.do_begin_twophase.params": [[48, 2, 1, "", "connection"], [48, 2, 1, "", "xid"]], "sqlalchemy.engine.default.DefaultDialect.do_commit.params": [[48, 2, 1, "", "dbapi_connection"]], "sqlalchemy.engine.default.DefaultDialect.do_commit_twophase.params": [[48, 2, 1, "", "connection"], [48, 2, 1, "", "is_prepared"], [48, 2, 1, "", "recover"], [48, 2, 1, "", "xid"]], "sqlalchemy.engine.default.DefaultDialect.do_prepare_twophase.params": [[48, 2, 1, "", "connection"], [48, 2, 1, "", "xid"]], "sqlalchemy.engine.default.DefaultDialect.do_recover_twophase.params": [[48, 2, 1, "", "connection"]], "sqlalchemy.engine.default.DefaultDialect.do_release_savepoint.params": [[48, 2, 1, "", "connection"], [48, 2, 1, "", "name"]], "sqlalchemy.engine.default.DefaultDialect.do_rollback.params": [[48, 2, 1, "", "dbapi_connection"]], "sqlalchemy.engine.default.DefaultDialect.do_rollback_to_savepoint.params": [[48, 2, 1, "", "connection"], [48, 2, 1, "", "name"]], "sqlalchemy.engine.default.DefaultDialect.do_rollback_twophase.params": [[48, 2, 1, "", "connection"], [48, 2, 1, "", "is_prepared"], [48, 2, 1, "", "recover"], [48, 2, 1, "", "xid"]], "sqlalchemy.engine.default.DefaultDialect.do_savepoint.params": [[48, 2, 1, "", "connection"], [48, 2, 1, "", "name"]], "sqlalchemy.engine.default.DefaultDialect.get_sequence_names.params": [[48, 2, 1, "", "schema"]], "sqlalchemy.engine.default.DefaultDialect.get_view_names.params": [[48, 2, 1, "", "schema"]], "sqlalchemy.engine.default.DefaultDialect.on_connect_url.params": [[48, 2, 1, "", "url"]], "sqlalchemy.engine.default.DefaultExecutionContext": [[48, 4, 1, "", "create_cursor"], [48, 5, 1, "", "current_parameters"], [48, 4, 1, "", "get_current_parameters"], [48, 4, 1, "", "get_lastrowid"], [48, 4, 1, "", "get_out_parameter_values"], [48, 4, 1, "", "get_result_processor"], [48, 4, 1, "", "handle_dbapi_exception"], [48, 4, 1, "", "lastrow_has_defaults"], [48, 4, 1, "", "post_exec"], [48, 4, 1, "", "pre_exec"], [48, 4, 1, "", "should_autocommit_text"]], "sqlalchemy.engine.default.DefaultExecutionContext.get_current_parameters.params": [[48, 2, 1, "", "isolate_multiinsert_groups"]], "sqlalchemy.engine.reflection": [[52, 3, 1, "", "Inspector"]], "sqlalchemy.engine.reflection.Inspector": [[52, 4, 1, "", "__init__"], [52, 5, 1, "", "default_schema_name"], [52, 4, 1, "", "from_engine"], [52, 4, 1, "", "get_check_constraints"], [52, 4, 1, "", "get_columns"], [52, 4, 1, "", "get_foreign_keys"], [52, 4, 1, "", "get_indexes"], [52, 4, 1, "", "get_pk_constraint"], [52, 4, 1, "", "get_schema_names"], [52, 4, 1, "", "get_sequence_names"], [52, 4, 1, "", "get_sorted_table_and_fkc_names"], [52, 4, 1, "", "get_table_comment"], [52, 4, 1, "", "get_table_names"], [52, 4, 1, "", "get_table_options"], [52, 4, 1, "", "get_temp_table_names"], [52, 4, 1, "", "get_temp_view_names"], [52, 4, 1, "", "get_unique_constraints"], [52, 4, 1, "", "get_view_definition"], [52, 4, 1, "", "get_view_names"], [52, 4, 1, "", "has_sequence"], [52, 4, 1, "", "has_table"], [52, 4, 1, "", "reflect_table"], [52, 4, 1, "", "reflecttable"]], "sqlalchemy.engine.reflection.Inspector.from_engine.params": [[52, 2, 1, "", "bind"]], "sqlalchemy.engine.reflection.Inspector.get_check_constraints.params": [[52, 2, 1, "", "schema"], [52, 2, 1, "", "table_name"]], "sqlalchemy.engine.reflection.Inspector.get_columns.params": [[52, 2, 1, "", "schema"], [52, 2, 1, "", "table_name"]], "sqlalchemy.engine.reflection.Inspector.get_foreign_keys.params": [[52, 2, 1, "", "schema"], [52, 2, 1, "", "table_name"]], "sqlalchemy.engine.reflection.Inspector.get_indexes.params": [[52, 2, 1, "", "schema"], [52, 2, 1, "", "table_name"]], "sqlalchemy.engine.reflection.Inspector.get_pk_constraint.params": [[52, 2, 1, "", "schema"], [52, 2, 1, "", "table_name"]], "sqlalchemy.engine.reflection.Inspector.get_sequence_names.params": [[52, 2, 1, "", "schema"]], "sqlalchemy.engine.reflection.Inspector.get_table_names.params": [[52, 2, 1, "", "schema"]], "sqlalchemy.engine.reflection.Inspector.get_table_options.params": [[52, 2, 1, "", "schema"], [52, 2, 1, "", "table_name"]], "sqlalchemy.engine.reflection.Inspector.get_unique_constraints.params": [[52, 2, 1, "", "schema"], [52, 2, 1, "", "table_name"]], "sqlalchemy.engine.reflection.Inspector.get_view_definition.params": [[52, 2, 1, "", "schema"]], "sqlalchemy.engine.reflection.Inspector.get_view_names.params": [[52, 2, 1, "", "schema"]], "sqlalchemy.engine.reflection.Inspector.has_sequence.params": [[52, 2, 1, "", "schema"], [52, 2, 1, "", "sequence_name"]], "sqlalchemy.engine.reflection.Inspector.has_table.params": [[52, 2, 1, "", "schema"], [52, 2, 1, "", "table_name"]], "sqlalchemy.engine.reflection.Inspector.params": [[52, 2, 1, "", "bind"]], "sqlalchemy.engine.reflection.Inspector.reflect_table.params": [[52, 2, 1, "", "include_columns"], [52, 2, 1, "", "table"]], "sqlalchemy.engine_from_config.params": [[37, 2, 1, "", "configuration"], [37, 2, 1, "", "kwargs"], [37, 2, 1, "", "prefix"]], "sqlalchemy.event.base": [[40, 3, 1, "", "Events"]], "sqlalchemy.event": [[39, 1, 1, "", "contains"], [39, 1, 1, "", "listen"], [39, 1, 1, "", "listens_for"], [39, 1, 1, "", "remove"]], "sqlalchemy.event.listen.params": [[39, 2, 1, "", "insert"], [39, 2, 1, "", "named"], [39, 2, 1, "", "once"], [39, 2, 1, "", "propagate"], [39, 2, 1, "", "retval"]], "sqlalchemy.events": [[40, 3, 1, "", "ConnectionEvents"], [40, 3, 1, "", "DDLEvents"], [40, 3, 1, "", "DialectEvents"], [40, 3, 1, "", "PoolEvents"], [40, 3, 1, "", "SchemaEventTarget"]], "sqlalchemy.events.ConnectionEvents": [[40, 4, 1, "", "after_cursor_execute"], [40, 4, 1, "", "after_execute"], [40, 4, 1, "", "before_cursor_execute"], [40, 4, 1, "", "before_execute"], [40, 4, 1, "", "begin"], [40, 4, 1, "", "begin_twophase"], [40, 4, 1, "", "commit"], [40, 4, 1, "", "commit_twophase"], [40, 4, 1, "", "engine_connect"], [40, 4, 1, "", "engine_disposed"], [40, 4, 1, "", "handle_error"], [40, 4, 1, "", "prepare_twophase"], [40, 4, 1, "", "release_savepoint"], [40, 4, 1, "", "rollback"], [40, 4, 1, "", "rollback_savepoint"], [40, 4, 1, "", "rollback_twophase"], [40, 4, 1, "", "savepoint"], [40, 4, 1, "", "set_connection_execution_options"], [40, 4, 1, "", "set_engine_execution_options"]], "sqlalchemy.events.ConnectionEvents.after_cursor_execute.params": [[40, 2, 1, "", "conn"], [40, 2, 1, "", "context"], [40, 2, 1, "", "cursor"], [40, 2, 1, "", "executemany"], [40, 2, 1, "", "parameters"], [40, 2, 1, "", "statement"]], "sqlalchemy.events.ConnectionEvents.after_execute.params": [[40, 2, 1, "", "clauseelement"], [40, 2, 1, "", "conn"], [40, 2, 1, "", "execution_options"], [40, 2, 1, "", "multiparams"], [40, 2, 1, "", "params"], [40, 2, 1, "", "result"]], "sqlalchemy.events.ConnectionEvents.before_cursor_execute.params": [[40, 2, 1, "", "conn"], [40, 2, 1, "", "context"], [40, 2, 1, "", "cursor"], [40, 2, 1, "", "executemany"], [40, 2, 1, "", "parameters"], [40, 2, 1, "", "statement"]], "sqlalchemy.events.ConnectionEvents.before_execute.params": [[40, 2, 1, "", "clauseelement"], [40, 2, 1, "", "conn"], [40, 2, 1, "", "execution_options"], [40, 2, 1, "", "multiparams"], [40, 2, 1, "", "params"]], "sqlalchemy.events.ConnectionEvents.begin.params": [[40, 2, 1, "", "conn"]], "sqlalchemy.events.ConnectionEvents.begin_twophase.params": [[40, 2, 1, "", "conn"], [40, 2, 1, "", "xid"]], "sqlalchemy.events.ConnectionEvents.commit.params": [[40, 2, 1, "", "conn"]], "sqlalchemy.events.ConnectionEvents.commit_twophase.params": [[40, 2, 1, "", "conn"], [40, 2, 1, "", "is_prepared"], [40, 2, 1, "", "xid"]], "sqlalchemy.events.ConnectionEvents.engine_connect.params": [[40, 2, 1, "", "branch"], [40, 2, 1, "", "conn"]], "sqlalchemy.events.ConnectionEvents.handle_error.params": [[40, 2, 1, "", "context"]], "sqlalchemy.events.ConnectionEvents.params": [[40, 2, 1, "", "retval"]], "sqlalchemy.events.ConnectionEvents.prepare_twophase.params": [[40, 2, 1, "", "conn"], [40, 2, 1, "", "xid"]], "sqlalchemy.events.ConnectionEvents.release_savepoint.params": [[40, 2, 1, "", "conn"], [40, 2, 1, "", "context"], [40, 2, 1, "", "name"]], "sqlalchemy.events.ConnectionEvents.rollback.params": [[40, 2, 1, "", "conn"]], "sqlalchemy.events.ConnectionEvents.rollback_savepoint.params": [[40, 2, 1, "", "conn"], [40, 2, 1, "", "context"], [40, 2, 1, "", "name"]], "sqlalchemy.events.ConnectionEvents.rollback_twophase.params": [[40, 2, 1, "", "conn"], [40, 2, 1, "", "is_prepared"], [40, 2, 1, "", "xid"]], "sqlalchemy.events.ConnectionEvents.savepoint.params": [[40, 2, 1, "", "conn"], [40, 2, 1, "", "name"]], "sqlalchemy.events.ConnectionEvents.set_connection_execution_options.params": [[40, 2, 1, "", "conn"], [40, 2, 1, "", "opts"]], "sqlalchemy.events.ConnectionEvents.set_engine_execution_options.params": [[40, 2, 1, "", "conn"], [40, 2, 1, "", "opts"]], "sqlalchemy.events.DDLEvents": [[40, 4, 1, "", "after_create"], [40, 4, 1, "", "after_drop"], [40, 4, 1, "", "after_parent_attach"], [40, 4, 1, "", "before_create"], [40, 4, 1, "", "before_drop"], [40, 4, 1, "", "before_parent_attach"], [40, 4, 1, "", "column_reflect"]], "sqlalchemy.events.DDLEvents.after_create.params": [[40, 2, 1, "", "**kw"], [40, 2, 1, "", "connection"], [40, 2, 1, "", "target"]], "sqlalchemy.events.DDLEvents.after_drop.params": [[40, 2, 1, "", "**kw"], [40, 2, 1, "", "connection"], [40, 2, 1, "", "target"]], "sqlalchemy.events.DDLEvents.after_parent_attach.params": [[40, 2, 1, "", "parent"], [40, 2, 1, "", "target"]], "sqlalchemy.events.DDLEvents.before_create.params": [[40, 2, 1, "", "**kw"], [40, 2, 1, "", "connection"], [40, 2, 1, "", "target"]], "sqlalchemy.events.DDLEvents.before_drop.params": [[40, 2, 1, "", "**kw"], [40, 2, 1, "", "connection"], [40, 2, 1, "", "target"]], "sqlalchemy.events.DDLEvents.before_parent_attach.params": [[40, 2, 1, "", "parent"], [40, 2, 1, "", "target"]], "sqlalchemy.events.DialectEvents": [[40, 4, 1, "", "do_connect"], [40, 4, 1, "", "do_execute"], [40, 4, 1, "", "do_execute_no_params"], [40, 4, 1, "", "do_executemany"], [40, 4, 1, "", "do_setinputsizes"]], "sqlalchemy.events.PoolEvents": [[40, 4, 1, "", "checkin"], [40, 4, 1, "", "checkout"], [40, 4, 1, "", "close"], [40, 4, 1, "", "close_detached"], [40, 4, 1, "", "connect"], [40, 4, 1, "", "detach"], [40, 4, 1, "", "first_connect"], [40, 4, 1, "", "invalidate"], [40, 4, 1, "", "reset"], [40, 4, 1, "", "soft_invalidate"]], "sqlalchemy.events.PoolEvents.checkin.params": [[40, 2, 1, "", "connection_record"], [40, 2, 1, "", "dbapi_connection"]], "sqlalchemy.events.PoolEvents.checkout.params": [[40, 2, 1, "", "connection_proxy"], [40, 2, 1, "", "connection_record"], [40, 2, 1, "", "dbapi_connection"]], "sqlalchemy.events.PoolEvents.close.params": [[40, 2, 1, "", "connection_record"], [40, 2, 1, "", "dbapi_connection"]], "sqlalchemy.events.PoolEvents.close_detached.params": [[40, 2, 1, "", "dbapi_connection"]], "sqlalchemy.events.PoolEvents.connect.params": [[40, 2, 1, "", "connection_record"], [40, 2, 1, "", "dbapi_connection"]], "sqlalchemy.events.PoolEvents.detach.params": [[40, 2, 1, "", "connection_record"], [40, 2, 1, "", "dbapi_connection"]], "sqlalchemy.events.PoolEvents.first_connect.params": [[40, 2, 1, "", "connection_record"], [40, 2, 1, "", "dbapi_connection"]], "sqlalchemy.events.PoolEvents.invalidate.params": [[40, 2, 1, "", "connection_record"], [40, 2, 1, "", "dbapi_connection"], [40, 2, 1, "", "exception"]], "sqlalchemy.events.PoolEvents.reset.params": [[40, 2, 1, "", "connection_record"], [40, 2, 1, "", "dbapi_connection"]], "sqlalchemy.events.PoolEvents.soft_invalidate.params": [[40, 2, 1, "", "connection_record"], [40, 2, 1, "", "dbapi_connection"], [40, 2, 1, "", "exception"]], "sqlalchemy.exc": [[41, 6, 1, "", "AmbiguousForeignKeysError"], [41, 6, 1, "", "ArgumentError"], [41, 6, 1, "", "AwaitRequired"], [41, 6, 1, "", "Base20DeprecationWarning"], [41, 6, 1, "", "CircularDependencyError"], [41, 6, 1, "", "CompileError"], [41, 6, 1, "", "DBAPIError"], [41, 6, 1, "", "DataError"], [41, 6, 1, "", "DatabaseError"], [41, 6, 1, "", "DisconnectionError"], [41, 3, 1, "", "DontWrapMixin"], [41, 3, 1, "", "HasDescriptionCode"], [41, 6, 1, "", "IdentifierError"], [41, 6, 1, "", "IntegrityError"], [41, 6, 1, "", "InterfaceError"], [41, 6, 1, "", "InternalError"], [41, 6, 1, "", "InvalidRequestError"], [41, 6, 1, "", "InvalidatePoolError"], [41, 6, 1, "", "LegacyAPIWarning"], [41, 6, 1, "", "MissingGreenlet"], [41, 6, 1, "", "MovedIn20Warning"], [41, 6, 1, "", "MultipleResultsFound"], [41, 6, 1, "", "NoForeignKeysError"], [41, 6, 1, "", "NoInspectionAvailable"], [41, 6, 1, "", "NoReferenceError"], [41, 6, 1, "", "NoReferencedColumnError"], [41, 6, 1, "", "NoReferencedTableError"], [41, 6, 1, "", "NoResultFound"], [41, 6, 1, "", "NoSuchColumnError"], [41, 6, 1, "", "NoSuchModuleError"], [41, 6, 1, "", "NoSuchTableError"], [41, 6, 1, "", "NotSupportedError"], [41, 6, 1, "", "ObjectNotExecutableError"], [41, 6, 1, "", "OperationalError"], [41, 6, 1, "", "PendingRollbackError"], [41, 6, 1, "", "ProgrammingError"], [41, 6, 1, "", "RemovedIn20Warning"], [41, 6, 1, "", "ResourceClosedError"], [41, 6, 1, "", "SADeprecationWarning"], [41, 6, 1, "", "SAPendingDeprecationWarning"], [41, 6, 1, "", "SAWarning"], [41, 6, 1, "", "SQLAlchemyError"], [41, 6, 1, "", "StatementError"], [41, 6, 1, "", "TimeoutError"], [41, 6, 1, "", "UnboundExecutionError"], [41, 6, 1, "", "UnreflectableTableError"], [41, 6, 1, "", "UnsupportedCompilationError"]], "sqlalchemy.exc.Base20DeprecationWarning": [[41, 5, 1, "", "deprecated_since"]], "sqlalchemy.exc.SADeprecationWarning": [[41, 5, 1, "", "deprecated_since"]], "sqlalchemy.exc.SAPendingDeprecationWarning": [[41, 5, 1, "", "deprecated_since"]], "sqlalchemy.exc.StatementError": [[41, 5, 1, "", "orig"], [41, 5, 1, "", "params"], [41, 5, 1, "", "statement"]], "sqlalchemy.ext": [[101, 0, 0, "-", "associationproxy"], [103, 0, 0, "-", "automap"], [104, 0, 0, "-", "baked"], [30, 0, 0, "-", "compiler"], [105, 0, 0, "-", "declarative"], [112, 0, 0, "-", "horizontal_shard"], [113, 0, 0, "-", "hybrid"], [115, 0, 0, "-", "indexable"], [116, 0, 0, "-", "instrumentation"], [117, 0, 0, "-", "mutable"], [119, 0, 0, "-", "orderinglist"], [55, 0, 0, "-", "serializer"]], "sqlalchemy.ext.associationproxy": [[101, 7, 1, "", "ASSOCIATION_PROXY"], [101, 3, 1, "", "AssociationProxy"], [101, 3, 1, "", "AssociationProxyInstance"], [101, 3, 1, "", "ColumnAssociationProxyInstance"], [101, 3, 1, "", "ObjectAssociationProxyInstance"], [101, 1, 1, "", "association_proxy"]], "sqlalchemy.ext.associationproxy.AssociationProxy": [[101, 4, 1, "", "__init__"], [101, 5, 1, "", "extension_type"], [101, 4, 1, "", "for_class"], [101, 5, 1, "", "info"], [101, 5, 1, "", "is_aliased_class"], [101, 5, 1, "", "is_attribute"], [101, 5, 1, "", "is_bundle"], [101, 5, 1, "", "is_clause_element"], [101, 5, 1, "", "is_instance"], [101, 5, 1, "", "is_mapper"], [101, 5, 1, "", "is_property"], [101, 5, 1, "", "is_selectable"]], "sqlalchemy.ext.associationproxy.AssociationProxy.for_class.params": [[101, 2, 1, "", "class_"], [101, 2, 1, "", "obj"]], "sqlalchemy.ext.associationproxy.AssociationProxy.params": [[101, 2, 1, "", "attr"], [101, 2, 1, "", "cascade_scalar_deletes"], [101, 2, 1, "", "creator"], [101, 2, 1, "", "getset_factory"], [101, 2, 1, "", "info"], [101, 2, 1, "", "proxy_bulk_set"], [101, 2, 1, "", "proxy_factory"], [101, 2, 1, "", "target_collection"]], "sqlalchemy.ext.associationproxy.AssociationProxyInstance": [[101, 4, 1, "", "any"], [101, 5, 1, "", "attr"], [101, 4, 1, "", "delete"], [101, 4, 1, "", "for_proxy"], [101, 4, 1, "", "get"], [101, 4, 1, "", "has"], [101, 5, 1, "", "info"], [101, 5, 1, "", "local_attr"], [101, 5, 1, "", "remote_attr"], [101, 5, 1, "", "scalar"], [101, 4, 1, "", "set"], [101, 5, 1, "", "target_class"]], "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance": [[101, 4, 1, "", "__le__"], [101, 4, 1, "", "__lt__"], [101, 4, 1, "", "__ne__"], [101, 4, 1, "", "all_"], [101, 4, 1, "", "any"], [101, 4, 1, "", "any_"], [101, 4, 1, "", "asc"], [101, 5, 1, "", "attr"], [101, 4, 1, "", "between"], [101, 4, 1, "", "bool_op"], [101, 4, 1, "", "collate"], [101, 4, 1, "", "concat"], [101, 4, 1, "", "contains"], [101, 4, 1, "", "desc"], [101, 4, 1, "", "distinct"], [101, 4, 1, "", "endswith"], [101, 4, 1, "", "has"], [101, 4, 1, "", "ilike"], [101, 4, 1, "", "in_"], [101, 4, 1, "", "is_"], [101, 4, 1, "", "is_distinct_from"], [101, 4, 1, "", "is_not"], [101, 4, 1, "", "is_not_distinct_from"], [101, 4, 1, "", "isnot"], [101, 4, 1, "", "isnot_distinct_from"], [101, 4, 1, "", "like"], [101, 5, 1, "", "local_attr"], [101, 4, 1, "", "match"], [101, 4, 1, "", "not_ilike"], [101, 4, 1, "", "not_in"], [101, 4, 1, "", "not_like"], [101, 4, 1, "", "notilike"], [101, 4, 1, "", "notin_"], [101, 4, 1, "", "notlike"], [101, 4, 1, "", "nulls_first"], [101, 4, 1, "", "nulls_last"], [101, 4, 1, "", "nullsfirst"], [101, 4, 1, "", "nullslast"], [101, 4, 1, "", "op"], [101, 4, 1, "", "operate"], [101, 4, 1, "", "regexp_match"], [101, 4, 1, "", "regexp_replace"], [101, 5, 1, "", "remote_attr"], [101, 4, 1, "", "reverse_operate"], [101, 5, 1, "", "scalar"], [101, 4, 1, "", "startswith"], [101, 5, 1, "", "target_class"], [101, 5, 1, "", "timetuple"]], "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.contains.params": [[101, 2, 1, "", "autoescape"], [101, 2, 1, "", "escape"], [101, 2, 1, "", "other"]], "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.endswith.params": [[101, 2, 1, "", "autoescape"], [101, 2, 1, "", "escape"], [101, 2, 1, "", "other"]], "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.ilike.params": [[101, 2, 1, "", "escape"], [101, 2, 1, "", "other"]], "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.in_.params": [[101, 2, 1, "", "other"]], "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.like.params": [[101, 2, 1, "", "escape"], [101, 2, 1, "", "other"]], "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.op.params": [[101, 2, 1, "", "is_comparison"], [101, 2, 1, "", "operator"], [101, 2, 1, "", "precedence"], [101, 2, 1, "", "return_type"]], "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.operate.params": [[101, 2, 1, "", "**kwargs"], [101, 2, 1, "", "*other"], [101, 2, 1, "", "op"]], "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.regexp_match.params": [[101, 2, 1, "", "flags"], [101, 2, 1, "", "pattern"]], "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.regexp_replace.params": [[101, 2, 1, "", "flags"], [101, 2, 1, "", "pattern"]], "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.startswith.params": [[101, 2, 1, "", "autoescape"], [101, 2, 1, "", "escape"], [101, 2, 1, "", "other"]], "sqlalchemy.ext.associationproxy.ObjectAssociationProxyInstance": [[101, 4, 1, "", "any"], [101, 5, 1, "", "attr"], [101, 4, 1, "", "contains"], [101, 4, 1, "", "has"], [101, 5, 1, "", "local_attr"], [101, 5, 1, "", "remote_attr"], [101, 5, 1, "", "scalar"], [101, 5, 1, "", "target_class"]], "sqlalchemy.ext.associationproxy.association_proxy.params": [[101, 2, 1, "", "**kw"], [101, 2, 1, "", "attr"], [101, 2, 1, "", "creator"], [101, 2, 1, "", "target_collection"]], "sqlalchemy.ext.asyncio": [[102, 3, 1, "", "AsyncConnection"], [102, 3, 1, "", "AsyncEngine"], [102, 3, 1, "", "AsyncMappingResult"], [102, 3, 1, "", "AsyncResult"], [102, 3, 1, "", "AsyncScalarResult"], [102, 3, 1, "", "AsyncSession"], [102, 3, 1, "", "AsyncSessionTransaction"], [102, 3, 1, "", "AsyncTransaction"], [102, 1, 1, "", "async_engine_from_config"], [102, 1, 1, "", "async_object_session"], [102, 3, 1, "", "async_scoped_session"], [102, 1, 1, "", "async_session"], [102, 1, 1, "", "create_async_engine"]], "sqlalchemy.ext.asyncio.AsyncConnection": [[102, 4, 1, "", "begin"], [102, 4, 1, "", "begin_nested"], [102, 4, 1, "", "close"], [102, 4, 1, "", "commit"], [102, 5, 1, "", "connection"], [102, 4, 1, "", "exec_driver_sql"], [102, 4, 1, "", "execute"], [102, 4, 1, "", "execution_options"], [102, 4, 1, "", "get_nested_transaction"], [102, 4, 1, "", "get_raw_connection"], [102, 4, 1, "", "get_transaction"], [102, 4, 1, "", "in_nested_transaction"], [102, 4, 1, "", "in_transaction"], [102, 5, 1, "", "info"], [102, 4, 1, "", "invalidate"], [102, 4, 1, "", "rollback"], [102, 4, 1, "", "run_sync"], [102, 4, 1, "", "scalar"], [102, 4, 1, "", "scalars"], [102, 4, 1, "", "start"], [102, 4, 1, "", "stream"], [102, 4, 1, "", "stream_scalars"], [102, 5, 1, "", "sync_connection"], [102, 5, 1, "", "sync_engine"]], "sqlalchemy.ext.asyncio.AsyncConnection.execute.params": [[102, 2, 1, "", "execution_options"], [102, 2, 1, "", "object"], [102, 2, 1, "", "parameters"]], "sqlalchemy.ext.asyncio.AsyncEngine": [[102, 4, 1, "", "begin"], [102, 4, 1, "", "clear_compiled_cache"], [102, 4, 1, "", "connect"], [102, 4, 1, "", "dispose"], [102, 4, 1, "", "execution_options"], [102, 4, 1, "", "get_execution_options"], [102, 4, 1, "", "raw_connection"], [102, 5, 1, "", "sync_engine"], [102, 4, 1, "", "update_execution_options"]], "sqlalchemy.ext.asyncio.AsyncMappingResult": [[102, 4, 1, "", "all"], [102, 4, 1, "", "close"], [102, 5, 1, "", "closed"], [102, 4, 1, "", "columns"], [102, 4, 1, "", "fetchall"], [102, 4, 1, "", "fetchmany"], [102, 4, 1, "", "fetchone"], [102, 4, 1, "", "first"], [102, 4, 1, "", "keys"], [102, 4, 1, "", "memoized_instancemethod"], [102, 4, 1, "", "one"], [102, 4, 1, "", "one_or_none"], [102, 4, 1, "", "partitions"], [102, 4, 1, "", "unique"], [102, 4, 1, "", "yield_per"]], "sqlalchemy.ext.asyncio.AsyncResult": [[102, 4, 1, "", "all"], [102, 4, 1, "", "close"], [102, 5, 1, "", "closed"], [102, 4, 1, "", "columns"], [102, 4, 1, "", "fetchmany"], [102, 4, 1, "", "fetchone"], [102, 4, 1, "", "first"], [102, 4, 1, "", "freeze"], [102, 4, 1, "", "keys"], [102, 4, 1, "", "mappings"], [102, 4, 1, "", "memoized_instancemethod"], [102, 4, 1, "", "one"], [102, 4, 1, "", "one_or_none"], [102, 4, 1, "", "partitions"], [102, 4, 1, "", "scalar"], [102, 4, 1, "", "scalar_one"], [102, 4, 1, "", "scalar_one_or_none"], [102, 4, 1, "", "scalars"], [102, 4, 1, "", "unique"], [102, 4, 1, "", "yield_per"]], "sqlalchemy.ext.asyncio.AsyncResult.scalars.params": [[102, 2, 1, "", "index"]], "sqlalchemy.ext.asyncio.AsyncScalarResult": [[102, 4, 1, "", "all"], [102, 4, 1, "", "close"], [102, 5, 1, "", "closed"], [102, 4, 1, "", "fetchall"], [102, 4, 1, "", "fetchmany"], [102, 4, 1, "", "first"], [102, 4, 1, "", "memoized_instancemethod"], [102, 4, 1, "", "one"], [102, 4, 1, "", "one_or_none"], [102, 4, 1, "", "partitions"], [102, 4, 1, "", "unique"], [102, 4, 1, "", "yield_per"]], "sqlalchemy.ext.asyncio.AsyncSession": [[102, 4, 1, "", "__init__"], [102, 4, 1, "", "add"], [102, 4, 1, "", "add_all"], [102, 4, 1, "", "begin"], [102, 4, 1, "", "begin_nested"], [102, 4, 1, "", "close"], [102, 4, 1, "", "close_all"], [102, 4, 1, "", "commit"], [102, 4, 1, "", "connection"], [102, 4, 1, "", "delete"], [102, 5, 1, "", "deleted"], [102, 5, 1, "", "dirty"], [102, 4, 1, "", "execute"], [102, 4, 1, "", "expire"], [102, 4, 1, "", "expire_all"], [102, 4, 1, "", "expunge"], [102, 4, 1, "", "expunge_all"], [102, 4, 1, "", "flush"], [102, 4, 1, "", "get"], [102, 4, 1, "", "get_bind"], [102, 4, 1, "", "get_nested_transaction"], [102, 4, 1, "", "get_transaction"], [102, 4, 1, "", "identity_key"], [102, 4, 1, "", "in_nested_transaction"], [102, 4, 1, "", "in_transaction"], [102, 5, 1, "", "info"], [102, 4, 1, "", "invalidate"], [102, 5, 1, "", "is_active"], [102, 4, 1, "", "is_modified"], [102, 4, 1, "", "merge"], [102, 5, 1, "", "new"], [102, 5, 1, "", "no_autoflush"], [102, 4, 1, "", "object_session"], [102, 4, 1, "", "refresh"], [102, 4, 1, "", "rollback"], [102, 4, 1, "", "run_sync"], [102, 4, 1, "", "scalar"], [102, 4, 1, "", "scalars"], [102, 4, 1, "", "stream"], [102, 4, 1, "", "stream_scalars"], [102, 5, 1, "", "sync_session"], [102, 5, 1, "", "sync_session_class"]], "sqlalchemy.ext.asyncio.AsyncSession.expire.params": [[102, 2, 1, "", "attribute_names"], [102, 2, 1, "", "instance"]], "sqlalchemy.ext.asyncio.AsyncSession.is_modified.params": [[102, 2, 1, "", "include_collections"], [102, 2, 1, "", "instance"]], "sqlalchemy.ext.asyncio.AsyncSession.params": [[102, 2, 1, "", "sync_session_class"]], "sqlalchemy.ext.asyncio.AsyncSessionTransaction": [[102, 4, 1, "", "commit"], [102, 4, 1, "", "rollback"]], "sqlalchemy.ext.asyncio.AsyncTransaction": [[102, 4, 1, "", "close"], [102, 4, 1, "", "commit"], [102, 4, 1, "", "rollback"], [102, 4, 1, "", "start"]], "sqlalchemy.ext.asyncio.async_object_session.params": [[102, 2, 1, "", "instance"]], "sqlalchemy.ext.asyncio.async_scoped_session": [[102, 4, 1, "", "__call__"], [102, 4, 1, "", "__init__"], [102, 4, 1, "", "add"], [102, 4, 1, "", "add_all"], [102, 5, 1, "", "autoflush"], [102, 4, 1, "", "begin"], [102, 4, 1, "", "begin_nested"], [102, 4, 1, "", "close"], [102, 4, 1, "", "close_all"], [102, 4, 1, "", "commit"], [102, 4, 1, "", "configure"], [102, 4, 1, "", "connection"], [102, 4, 1, "", "delete"], [102, 5, 1, "", "deleted"], [102, 5, 1, "", "dirty"], [102, 4, 1, "", "execute"], [102, 4, 1, "", "expire"], [102, 4, 1, "", "expire_all"], [102, 4, 1, "", "expunge"], [102, 4, 1, "", "expunge_all"], [102, 4, 1, "", "flush"], [102, 4, 1, "", "get"], [102, 4, 1, "", "get_bind"], [102, 4, 1, "", "identity_key"], [102, 5, 1, "", "identity_map"], [102, 5, 1, "", "info"], [102, 4, 1, "", "invalidate"], [102, 5, 1, "", "is_active"], [102, 4, 1, "", "is_modified"], [102, 4, 1, "", "merge"], [102, 5, 1, "", "new"], [102, 5, 1, "", "no_autoflush"], [102, 4, 1, "", "object_session"], [102, 4, 1, "", "refresh"], [102, 4, 1, "", "remove"], [102, 4, 1, "", "rollback"], [102, 4, 1, "", "scalar"], [102, 4, 1, "", "scalars"], [102, 4, 1, "", "stream"], [102, 4, 1, "", "stream_scalars"]], "sqlalchemy.ext.asyncio.async_scoped_session.__call__.params": [[102, 2, 1, "", "**kw"]], "sqlalchemy.ext.asyncio.async_scoped_session.expire.params": [[102, 2, 1, "", "attribute_names"], [102, 2, 1, "", "instance"]], "sqlalchemy.ext.asyncio.async_scoped_session.is_modified.params": [[102, 2, 1, "", "include_collections"], [102, 2, 1, "", "instance"]], "sqlalchemy.ext.asyncio.async_scoped_session.params": [[102, 2, 1, "", "scopefunc"], [102, 2, 1, "", "session_factory"]], "sqlalchemy.ext.asyncio.async_session.params": [[102, 2, 1, "", "session"]], "sqlalchemy.ext.automap": [[103, 3, 1, "", "AutomapBase"], [103, 1, 1, "", "automap_base"], [103, 1, 1, "", "classname_for_table"], [103, 1, 1, "", "generate_relationship"], [103, 1, 1, "", "name_for_collection_relationship"], [103, 1, 1, "", "name_for_scalar_relationship"]], "sqlalchemy.ext.automap.AutomapBase": [[103, 5, 1, "", "classes"], [103, 4, 1, "", "prepare"]], "sqlalchemy.ext.automap.AutomapBase.prepare.params": [[103, 2, 1, "", "classname_for_table"], [103, 2, 1, "", "collection_class"], [103, 2, 1, "", "engine"], [103, 2, 1, "", "generate_relationship"], [103, 2, 1, "", "name_for_collection_relationship"], [103, 2, 1, "", "name_for_scalar_relationship"], [103, 2, 1, "", "reflect"], [103, 2, 1, "", "reflection_options"], [103, 2, 1, "", "schema"]], "sqlalchemy.ext.automap.automap_base.params": [[103, 2, 1, "", "**kw"], [103, 2, 1, "", "declarative_base"]], "sqlalchemy.ext.automap.classname_for_table.params": [[103, 2, 1, "", "base"], [103, 2, 1, "", "table"], [103, 2, 1, "", "tablename"]], "sqlalchemy.ext.automap.generate_relationship.params": [[103, 2, 1, "", "**kw"], [103, 2, 1, "", "attrname"], [103, 2, 1, "", "base"], [103, 2, 1, "", "direction"], [103, 2, 1, "", "local_cls"], [103, 2, 1, "", "referred_cls"], [103, 2, 1, "", "return_fn"]], "sqlalchemy.ext.automap.name_for_collection_relationship.params": [[103, 2, 1, "", "base"], [103, 2, 1, "", "constraint"], [103, 2, 1, "", "local_cls"], [103, 2, 1, "", "referred_cls"]], "sqlalchemy.ext.automap.name_for_scalar_relationship.params": [[103, 2, 1, "", "base"], [103, 2, 1, "", "constraint"], [103, 2, 1, "", "local_cls"], [103, 2, 1, "", "referred_cls"]], "sqlalchemy.ext.baked": [[104, 3, 1, "", "BakedQuery"], [104, 3, 1, "", "Bakery"], [104, 1, 1, "", "bakery"]], "sqlalchemy.ext.baked.BakedQuery": [[104, 4, 1, "", "add_criteria"], [104, 4, 1, "", "bakery"], [104, 4, 1, "", "for_session"], [104, 4, 1, "", "spoil"], [104, 4, 1, "", "to_query"], [104, 4, 1, "", "with_criteria"]], "sqlalchemy.ext.baked.BakedQuery.spoil.params": [[104, 2, 1, "", "full"]], "sqlalchemy.ext.baked.BakedQuery.to_query.params": [[104, 2, 1, "", "query_or_session"]], "sqlalchemy.ext.compiler": [[30, 1, 1, "", "compiles"], [30, 1, 1, "", "deregister"]], "sqlalchemy.ext.declarative": [[107, 3, 1, "", "AbstractConcreteBase"], [107, 3, 1, "", "ConcreteBase"], [107, 3, 1, "", "DeferredReflection"]], "sqlalchemy.ext.declarative.DeferredReflection": [[107, 4, 1, "", "prepare"]], "sqlalchemy.ext.horizontal_shard": [[112, 3, 1, "", "ShardedQuery"], [112, 3, 1, "", "ShardedSession"]], "sqlalchemy.ext.horizontal_shard.ShardedQuery": [[112, 4, 1, "", "set_shard"]], "sqlalchemy.ext.horizontal_shard.ShardedSession": [[112, 4, 1, "", "__init__"], [112, 4, 1, "", "connection_callable"], [112, 4, 1, "", "get_bind"]], "sqlalchemy.ext.horizontal_shard.ShardedSession.get_bind.params": [[112, 2, 1, "", "clause"], [112, 2, 1, "", "mapper"]], "sqlalchemy.ext.horizontal_shard.ShardedSession.params": [[112, 2, 1, "", "execute_chooser"], [112, 2, 1, "", "id_chooser"], [112, 2, 1, "", "shard_chooser"], [112, 2, 1, "", "shards"]], "sqlalchemy.ext.hybrid": [[113, 3, 1, "", "Comparator"], [113, 7, 1, "", "HYBRID_METHOD"], [113, 7, 1, "", "HYBRID_PROPERTY"], [113, 3, 1, "", "hybrid_method"], [113, 3, 1, "", "hybrid_property"]], "sqlalchemy.ext.hybrid.hybrid_method": [[113, 4, 1, "", "__init__"], [113, 4, 1, "", "expression"], [113, 5, 1, "", "extension_type"], [113, 5, 1, "", "is_attribute"]], "sqlalchemy.ext.hybrid.hybrid_property": [[113, 4, 1, "", "__init__"], [113, 4, 1, "", "comparator"], [113, 4, 1, "", "deleter"], [113, 4, 1, "", "expression"], [113, 5, 1, "", "extension_type"], [113, 4, 1, "", "getter"], [113, 5, 1, "", "is_attribute"], [113, 5, 1, "", "overrides"], [113, 4, 1, "", "setter"], [113, 4, 1, "", "update_expression"]], "sqlalchemy.ext.indexable": [[115, 3, 1, "", "index_property"]], "sqlalchemy.ext.indexable.index_property": [[115, 4, 1, "", "__init__"]], "sqlalchemy.ext.indexable.index_property.params": [[115, 2, 1, "", "attr_name"], [115, 2, 1, "", "datatype"], [115, 2, 1, "", "default"], [115, 2, 1, "", "index"], [115, 2, 1, "", "mutable"], [115, 2, 1, "", "onebased"]], "sqlalchemy.ext.instrumentation": [[116, 3, 1, "", "ExtendedInstrumentationRegistry"], [116, 7, 1, "", "INSTRUMENTATION_MANAGER"], [116, 3, 1, "", "InstrumentationManager"], [116, 7, 1, "", "instrumentation_finders"]], "sqlalchemy.ext.instrumentation.InstrumentationManager": [[116, 4, 1, "", "dict_getter"], [116, 4, 1, "", "get_instance_dict"], [116, 4, 1, "", "initialize_instance_dict"], [116, 4, 1, "", "install_descriptor"], [116, 4, 1, "", "install_member"], [116, 4, 1, "", "install_state"], [116, 4, 1, "", "instrument_attribute"], [116, 4, 1, "", "instrument_collection_class"], [116, 4, 1, "", "manage"], [116, 4, 1, "", "manager_getter"], [116, 4, 1, "", "post_configure_attribute"], [116, 4, 1, "", "remove_state"], [116, 4, 1, "", "state_getter"], [116, 4, 1, "", "uninstall_descriptor"], [116, 4, 1, "", "uninstall_member"], [116, 4, 1, "", "unregister"]], "sqlalchemy.ext.mutable": [[117, 3, 1, "", "Mutable"], [117, 3, 1, "", "MutableBase"], [117, 3, 1, "", "MutableComposite"], [117, 3, 1, "", "MutableDict"], [117, 3, 1, "", "MutableList"], [117, 3, 1, "", "MutableSet"]], "sqlalchemy.ext.mutable.Mutable": [[117, 4, 1, "", "_get_listen_keys"], [117, 4, 1, "", "_listen_on_attribute"], [117, 5, 1, "", "_parents"], [117, 4, 1, "", "as_mutable"], [117, 4, 1, "", "associate_with"], [117, 4, 1, "", "associate_with_attribute"], [117, 4, 1, "", "changed"], [117, 4, 1, "", "coerce"]], "sqlalchemy.ext.mutable.Mutable.coerce.params": [[117, 2, 1, "", "key"], [117, 2, 1, "", "value"]], "sqlalchemy.ext.mutable.MutableBase": [[117, 5, 1, "", "_parents"], [117, 4, 1, "", "coerce"]], "sqlalchemy.ext.mutable.MutableBase.coerce.params": [[117, 2, 1, "", "key"], [117, 2, 1, "", "value"]], "sqlalchemy.ext.mutable.MutableComposite": [[117, 4, 1, "", "changed"]], "sqlalchemy.ext.mutable.MutableDict": [[117, 4, 1, "", "clear"], [117, 4, 1, "", "coerce"], [117, 4, 1, "", "pop"], [117, 4, 1, "", "popitem"], [117, 4, 1, "", "setdefault"], [117, 4, 1, "", "update"]], "sqlalchemy.ext.mutable.MutableList": [[117, 4, 1, "", "append"], [117, 4, 1, "", "clear"], [117, 4, 1, "", "coerce"], [117, 4, 1, "", "extend"], [117, 4, 1, "", "insert"], [117, 4, 1, "", "pop"], [117, 4, 1, "", "remove"], [117, 4, 1, "", "reverse"], [117, 4, 1, "", "sort"]], "sqlalchemy.ext.mutable.MutableSet": [[117, 4, 1, "", "add"], [117, 4, 1, "", "clear"], [117, 4, 1, "", "coerce"], [117, 4, 1, "", "difference_update"], [117, 4, 1, "", "discard"], [117, 4, 1, "", "intersection_update"], [117, 4, 1, "", "pop"], [117, 4, 1, "", "remove"], [117, 4, 1, "", "symmetric_difference_update"], [117, 4, 1, "", "update"]], "sqlalchemy.ext.orderinglist": [[119, 3, 1, "", "OrderingList"], [119, 1, 1, "", "count_from_0"], [119, 1, 1, "", "count_from_1"], [119, 1, 1, "", "count_from_n_factory"], [119, 1, 1, "", "ordering_list"]], "sqlalchemy.ext.orderinglist.OrderingList": [[119, 4, 1, "", "__init__"], [119, 4, 1, "", "append"], [119, 4, 1, "", "insert"], [119, 4, 1, "", "pop"], [119, 4, 1, "", "remove"], [119, 4, 1, "", "reorder"]], "sqlalchemy.ext.orderinglist.OrderingList.params": [[119, 2, 1, "", "ordering_attr"], [119, 2, 1, "", "ordering_func"], [119, 2, 1, "", "reorder_on_append"]], "sqlalchemy.ext.orderinglist.ordering_list.params": [[119, 2, 1, "", "attr"], [119, 2, 1, "", "count_from"]], "sqlalchemy.ext.serializer": [[55, 1, 1, "", "Deserializer"], [55, 1, 1, "", "Serializer"], [55, 1, 1, "", "dumps"], [55, 1, 1, "", "loads"]], "sqlalchemy.future": [[45, 3, 1, "", "Connection"], [45, 3, 1, "", "Engine"], [45, 1, 1, "", "create_engine"], [45, 1, 1, "", "select"]], "sqlalchemy.future.Connection": [[45, 4, 1, "", "begin"], [45, 4, 1, "", "begin_nested"], [45, 4, 1, "", "close"], [45, 4, 1, "", "commit"], [45, 4, 1, "", "execute"], [45, 4, 1, "", "rollback"], [45, 4, 1, "", "scalar"]], "sqlalchemy.future.Connection.execute.params": [[45, 2, 1, "", "execution_options"], [45, 2, 1, "", "parameters"], [45, 2, 1, "", "statement"]], "sqlalchemy.future.Engine": [[45, 4, 1, "", "begin"], [45, 4, 1, "", "connect"], [45, 4, 1, "", "execute"], [45, 4, 1, "", "has_table"], [45, 4, 1, "", "run_callable"], [45, 4, 1, "", "scalar"], [45, 4, 1, "", "table_names"], [45, 4, 1, "", "transaction"]], "sqlalchemy.future.Engine.table_names.params": [[45, 2, 1, "", "connection"], [45, 2, 1, "", "schema"]], "sqlalchemy.future.select.params": [[45, 2, 1, "", "*entities"]], "sqlalchemy.inspect.params": [[47, 2, 1, "", "raiseerr"], [47, 2, 1, "", "subject"]], "sqlalchemy.log": [[48, 3, 1, "", "Identified"]], "sqlalchemy.orm": [[87, 3, 1, "", "AppenderQuery"], [123, 3, 1, "", "AttributeEvent"], [97, 3, 1, "", "AttributeEvents"], [123, 3, 1, "", "AttributeState"], [137, 3, 1, "", "Bundle"], [123, 3, 1, "", "CascadeOptions"], [123, 3, 1, "", "ClassManager"], [123, 3, 1, "", "ColumnProperty"], [123, 3, 1, "", "CompositeProperty"], [123, 3, 1, "", "IdentityMap"], [123, 3, 1, "", "InspectionAttr"], [123, 3, 1, "", "InspectionAttrInfo"], [97, 3, 1, "", "InstanceEvents"], [123, 3, 1, "", "InstanceState"], [97, 3, 1, "", "InstrumentationEvents"], [123, 3, 1, "", "InstrumentedAttribute"], [128, 3, 1, "", "Load"], [123, 7, 1, "", "MANYTOMANY"], [123, 7, 1, "", "MANYTOONE"], [123, 3, 1, "", "Mapped"], [132, 3, 1, "", "Mapper"], [97, 3, 1, "", "MapperEvents"], [123, 3, 1, "", "MapperProperty"], [123, 7, 1, "", "NOT_EXTENSION"], [123, 7, 1, "", "ONETOMANY"], [146, 3, 1, "", "ORMExecuteState"], [123, 3, 1, "", "PropComparator"], [137, 3, 1, "", "Query"], [123, 3, 1, "", "QueryContext"], [97, 3, 1, "", "QueryEvents"], [123, 3, 1, "", "QueryableAttribute"], [123, 3, 1, "", "RelationshipProperty"], [146, 3, 1, "", "Session"], [97, 3, 1, "", "SessionEvents"], [146, 3, 1, "", "SessionTransaction"], [123, 3, 1, "", "SynonymProperty"], [123, 3, 1, "", "UOWTransaction"], [137, 1, 1, "", "aliased"], [132, 1, 1, "", "as_declarative"], [140, 1, 1, "", "backref"], [132, 1, 1, "", "class_mapper"], [132, 1, 1, "", "clear_mappers"], [146, 1, 1, "", "close_all_sessions"], [133, 1, 1, "", "column_property"], [88, 1, 1, "", "composite"], [132, 1, 1, "", "configure_mappers"], [128, 1, 1, "", "contains_eager"], [132, 1, 1, "", "declarative_base"], [132, 1, 1, "", "declarative_mixin"], [132, 3, 1, "", "declared_attr"], [128, 1, 1, "", "defaultload"], [126, 1, 1, "", "defer"], [126, 1, 1, "", "deferred"], [140, 1, 1, "", "dynamic_loader"], [128, 1, 1, "", "eagerload"], [99, 0, 0, "-", "exc"], [140, 1, 1, "", "foreign"], [132, 1, 1, "", "has_inherited_table"], [128, 1, 1, "", "immediateload"], [97, 0, 0, "-", "instrumentation"], [137, 1, 1, "", "join"], [128, 1, 1, "", "joinedload"], [128, 1, 1, "", "lazyload"], [126, 1, 1, "", "load_only"], [146, 1, 1, "", "make_transient"], [146, 1, 1, "", "make_transient_to_detached"], [132, 1, 1, "", "mapper"], [123, 1, 1, "", "merge_frozen_result"], [123, 1, 1, "", "merge_result"], [128, 1, 1, "", "noload"], [132, 1, 1, "", "object_mapper"], [146, 1, 1, "", "object_session"], [137, 1, 1, "", "outerjoin"], [132, 1, 1, "", "polymorphic_union"], [126, 1, 1, "", "query_expression"], [128, 1, 1, "", "raiseload"], [132, 1, 1, "", "reconstructor"], [132, 3, 1, "", "registry"], [140, 1, 1, "", "relation"], [140, 1, 1, "", "relationship"], [140, 1, 1, "", "remote"], [122, 1, 1, "", "selectin_polymorphic"], [128, 1, 1, "", "selectinload"], [145, 0, 0, "-", "session"], [146, 3, 1, "", "sessionmaker"], [128, 1, 1, "", "subqueryload"], [129, 1, 1, "", "synonym"], [132, 1, 1, "", "synonym_for"], [126, 1, 1, "", "undefer"], [126, 1, 1, "", "undefer_group"], [129, 1, 1, "", "validates"], [126, 1, 1, "", "with_expression"], [137, 1, 1, "", "with_loader_criteria"], [137, 1, 1, "", "with_parent"], [122, 1, 1, "", "with_polymorphic"]], "sqlalchemy.orm.AttributeEvents": [[97, 4, 1, "", "append"], [97, 4, 1, "", "append_wo_mutation"], [97, 4, 1, "", "bulk_replace"], [97, 4, 1, "", "dispose_collection"], [97, 4, 1, "", "init_collection"], [97, 4, 1, "", "init_scalar"], [97, 4, 1, "", "modified"], [97, 4, 1, "", "remove"], [97, 4, 1, "", "set"]], "sqlalchemy.orm.AttributeEvents.append.params": [[97, 2, 1, "", "initiator"], [97, 2, 1, "", "target"], [97, 2, 1, "", "value"]], "sqlalchemy.orm.AttributeEvents.append_wo_mutation.params": [[97, 2, 1, "", "initiator"], [97, 2, 1, "", "target"], [97, 2, 1, "", "value"]], "sqlalchemy.orm.AttributeEvents.bulk_replace.params": [[97, 2, 1, "", "initiator"], [97, 2, 1, "", "target"], [97, 2, 1, "", "value"]], "sqlalchemy.orm.AttributeEvents.init_collection.params": [[97, 2, 1, "", "collection"], [97, 2, 1, "", "collection_adapter"], [97, 2, 1, "", "target"]], "sqlalchemy.orm.AttributeEvents.init_scalar.params": [[97, 2, 1, "", "dict_"], [97, 2, 1, "", "target"], [97, 2, 1, "", "value"]], "sqlalchemy.orm.AttributeEvents.modified.params": [[97, 2, 1, "", "initiator"], [97, 2, 1, "", "target"]], "sqlalchemy.orm.AttributeEvents.params": [[97, 2, 1, "", "active_history"], [97, 2, 1, "", "propagate"], [97, 2, 1, "", "raw"], [97, 2, 1, "", "retval"]], "sqlalchemy.orm.AttributeEvents.remove.params": [[97, 2, 1, "", "initiator"], [97, 2, 1, "", "target"], [97, 2, 1, "", "value"]], "sqlalchemy.orm.AttributeEvents.set.params": [[97, 2, 1, "", "initiator"], [97, 2, 1, "", "oldvalue"], [97, 2, 1, "", "target"], [97, 2, 1, "", "value"]], "sqlalchemy.orm.AttributeState": [[123, 5, 1, "", "history"], [123, 4, 1, "", "load_history"], [123, 5, 1, "", "loaded_value"], [123, 5, 1, "", "value"]], "sqlalchemy.orm.Bundle": [[137, 4, 1, "", "__init__"], [137, 5, 1, "", "c"], [137, 5, 1, "", "columns"], [137, 4, 1, "", "create_row_processor"], [137, 5, 1, "", "is_aliased_class"], [137, 5, 1, "", "is_bundle"], [137, 5, 1, "", "is_clause_element"], [137, 5, 1, "", "is_mapper"], [137, 4, 1, "", "label"], [137, 5, 1, "", "single_entity"]], "sqlalchemy.orm.Bundle.params": [[137, 2, 1, "", "*exprs"], [137, 2, 1, "", "name"], [137, 2, 1, "", "single_entity"]], "sqlalchemy.orm.ClassManager": [[123, 5, 1, "", "deferred_scalar_loader"], [123, 5, 1, "", "expired_attribute_loader"], [123, 4, 1, "", "has_parent"], [123, 4, 1, "", "manage"], [123, 4, 1, "", "state_getter"], [123, 4, 1, "", "unregister"]], "sqlalchemy.orm.ColumnProperty": [[123, 3, 1, "", "Comparator"], [123, 4, 1, "", "__init__"], [123, 4, 1, "", "do_init"], [123, 5, 1, "", "expression"], [123, 5, 1, "", "inherit_cache"], [123, 4, 1, "", "instrument_class"], [123, 4, 1, "", "merge"]], "sqlalchemy.orm.ColumnProperty.Comparator": [[123, 5, 1, "", "expressions"], [123, 4, 1, "", "operate"], [123, 4, 1, "", "reverse_operate"]], "sqlalchemy.orm.ColumnProperty.Comparator.operate.params": [[123, 2, 1, "", "**kwargs"], [123, 2, 1, "", "*other"], [123, 2, 1, "", "op"]], "sqlalchemy.orm.CompositeProperty": [[123, 3, 1, "", "Comparator"], [123, 3, 1, "", "CompositeBundle"], [123, 4, 1, "", "__init__"], [123, 4, 1, "", "do_init"], [123, 4, 1, "", "get_history"], [123, 4, 1, "", "instrument_class"]], "sqlalchemy.orm.CompositeProperty.CompositeBundle": [[123, 4, 1, "", "create_row_processor"]], "sqlalchemy.orm.IdentityMap": [[123, 4, 1, "", "check_modified"]], "sqlalchemy.orm.InspectionAttr": [[123, 5, 1, "", "extension_type"], [123, 5, 1, "", "is_aliased_class"], [123, 5, 1, "", "is_attribute"], [123, 5, 1, "", "is_bundle"], [123, 5, 1, "", "is_clause_element"], [123, 5, 1, "", "is_instance"], [123, 5, 1, "", "is_mapper"], [123, 5, 1, "", "is_property"], [123, 5, 1, "", "is_selectable"]], "sqlalchemy.orm.InspectionAttrInfo": [[123, 5, 1, "", "info"]], "sqlalchemy.orm.InstanceEvents": [[97, 4, 1, "", "expire"], [97, 4, 1, "", "first_init"], [97, 4, 1, "", "init"], [97, 4, 1, "", "init_failure"], [97, 4, 1, "", "load"], [97, 4, 1, "", "pickle"], [97, 4, 1, "", "refresh"], [97, 4, 1, "", "refresh_flush"], [97, 4, 1, "", "unpickle"]], "sqlalchemy.orm.InstanceEvents.expire.params": [[97, 2, 1, "", "attrs"], [97, 2, 1, "", "target"]], "sqlalchemy.orm.InstanceEvents.init.params": [[97, 2, 1, "", "args"], [97, 2, 1, "", "kwargs"], [97, 2, 1, "", "target"]], "sqlalchemy.orm.InstanceEvents.init_failure.params": [[97, 2, 1, "", "args"], [97, 2, 1, "", "kwargs"], [97, 2, 1, "", "target"]], "sqlalchemy.orm.InstanceEvents.load.params": [[97, 2, 1, "", "context"], [97, 2, 1, "", "target"]], "sqlalchemy.orm.InstanceEvents.params": [[97, 2, 1, "", "propagate"], [97, 2, 1, "", "raw"], [97, 2, 1, "", "restore_load_context"]], "sqlalchemy.orm.InstanceEvents.pickle.params": [[97, 2, 1, "", "state_dict"], [97, 2, 1, "", "target"]], "sqlalchemy.orm.InstanceEvents.refresh.params": [[97, 2, 1, "", "attrs"], [97, 2, 1, "", "context"], [97, 2, 1, "", "target"]], "sqlalchemy.orm.InstanceEvents.refresh_flush.params": [[97, 2, 1, "", "attrs"], [97, 2, 1, "", "flush_context"], [97, 2, 1, "", "target"]], "sqlalchemy.orm.InstanceEvents.unpickle.params": [[97, 2, 1, "", "state_dict"], [97, 2, 1, "", "target"]], "sqlalchemy.orm.InstanceState": [[123, 5, 1, "", "async_session"], [123, 5, 1, "", "attrs"], [123, 5, 1, "", "callables"], [123, 5, 1, "", "deleted"], [123, 5, 1, "", "detached"], [123, 5, 1, "", "dict"], [123, 5, 1, "", "expired_attributes"], [123, 5, 1, "", "has_identity"], [123, 5, 1, "", "identity"], [123, 5, 1, "", "identity_key"], [123, 5, 1, "", "is_instance"], [123, 5, 1, "", "mapper"], [123, 5, 1, "", "object"], [123, 5, 1, "", "pending"], [123, 5, 1, "", "persistent"], [123, 5, 1, "", "session"], [123, 5, 1, "", "transient"], [123, 5, 1, "", "unloaded"], [123, 5, 1, "", "unloaded_expirable"], [123, 5, 1, "", "unmodified"], [123, 4, 1, "", "unmodified_intersection"], [123, 5, 1, "", "was_deleted"]], "sqlalchemy.orm.InstrumentationEvents": [[97, 4, 1, "", "attribute_instrument"], [97, 4, 1, "", "class_instrument"], [97, 4, 1, "", "class_uninstrument"]], "sqlalchemy.orm.InstrumentedAttribute": [[123, 4, 1, "", "__delete__"], [123, 4, 1, "", "__get__"], [123, 4, 1, "", "__set__"]], "sqlalchemy.orm.Load": [[128, 4, 1, "", "contains_eager"], [128, 4, 1, "", "defaultload"], [128, 4, 1, "", "defer"], [128, 4, 1, "", "immediateload"], [128, 4, 1, "", "joinedload"], [128, 4, 1, "", "lazyload"], [128, 4, 1, "", "load_only"], [128, 4, 1, "", "noload"], [128, 4, 1, "", "options"], [128, 4, 1, "", "process_compile_state"], [128, 4, 1, "", "process_compile_state_replaced_entities"], [128, 5, 1, "", "propagate_to_loaders"], [128, 4, 1, "", "raiseload"], [128, 4, 1, "", "selectin_polymorphic"], [128, 4, 1, "", "selectinload"], [128, 4, 1, "", "subqueryload"], [128, 4, 1, "", "undefer"], [128, 4, 1, "", "undefer_group"], [128, 4, 1, "", "with_expression"]], "sqlalchemy.orm.Load.options.params": [[137, 2, 1, "", "*opts"]], "sqlalchemy.orm.Mapper": [[132, 4, 1, "", "__init__"], [132, 4, 1, "", "add_properties"], [132, 4, 1, "", "add_property"], [132, 5, 1, "", "all_orm_descriptors"], [132, 5, 1, "", "attrs"], [132, 5, 1, "", "base_mapper"], [132, 5, 1, "", "c"], [132, 4, 1, "", "cascade_iterator"], [132, 5, 1, "", "class_"], [132, 5, 1, "", "class_manager"], [132, 5, 1, "", "column_attrs"], [132, 5, 1, "", "columns"], [132, 4, 1, "", "common_parent"], [132, 5, 1, "", "composites"], [132, 5, 1, "", "concrete"], [132, 5, 1, "", "configured"], [132, 5, 1, "", "entity"], [132, 4, 1, "", "get_property"], [132, 4, 1, "", "get_property_by_column"], [132, 4, 1, "", "identity_key_from_instance"], [132, 4, 1, "", "identity_key_from_primary_key"], [132, 4, 1, "", "identity_key_from_row"], [132, 5, 1, "", "inherits"], [132, 5, 1, "", "is_mapper"], [132, 4, 1, "", "is_sibling"], [132, 4, 1, "", "isa"], [132, 5, 1, "", "iterate_properties"], [132, 5, 1, "", "local_table"], [132, 5, 1, "", "mapped_table"], [132, 5, 1, "", "mapper"], [132, 5, 1, "", "non_primary"], [132, 5, 1, "", "persist_selectable"], [132, 5, 1, "", "polymorphic_identity"], [132, 4, 1, "", "polymorphic_iterator"], [132, 5, 1, "", "polymorphic_map"], [132, 5, 1, "", "polymorphic_on"], [132, 5, 1, "", "primary_key"], [132, 4, 1, "", "primary_key_from_instance"], [132, 4, 1, "", "primary_mapper"], [132, 5, 1, "", "relationships"], [132, 5, 1, "", "selectable"], [132, 5, 1, "", "self_and_descendants"], [132, 5, 1, "", "single"], [132, 5, 1, "", "synonyms"], [132, 5, 1, "", "tables"], [132, 5, 1, "", "validators"], [132, 5, 1, "", "with_polymorphic_mappers"]], "sqlalchemy.orm.Mapper.cascade_iterator.params": [[132, 2, 1, "", "state"], [132, 2, 1, "", "type_"]], "sqlalchemy.orm.Mapper.identity_key_from_primary_key.params": [[132, 2, 1, "", "primary_key"]], "sqlalchemy.orm.Mapper.identity_key_from_row.params": [[132, 2, 1, "", "row"]], "sqlalchemy.orm.MapperEvents": [[97, 4, 1, "", "after_configured"], [97, 4, 1, "", "after_delete"], [97, 4, 1, "", "after_insert"], [97, 4, 1, "", "after_update"], [97, 4, 1, "", "before_configured"], [97, 4, 1, "", "before_delete"], [97, 4, 1, "", "before_insert"], [97, 4, 1, "", "before_mapper_configured"], [97, 4, 1, "", "before_update"], [97, 4, 1, "", "instrument_class"], [97, 4, 1, "", "mapper_configured"]], "sqlalchemy.orm.MapperEvents.after_delete.params": [[97, 2, 1, "", "connection"], [97, 2, 1, "", "mapper"], [97, 2, 1, "", "target"]], "sqlalchemy.orm.MapperEvents.after_insert.params": [[97, 2, 1, "", "connection"], [97, 2, 1, "", "mapper"], [97, 2, 1, "", "target"]], "sqlalchemy.orm.MapperEvents.after_update.params": [[97, 2, 1, "", "connection"], [97, 2, 1, "", "mapper"], [97, 2, 1, "", "target"]], "sqlalchemy.orm.MapperEvents.before_delete.params": [[97, 2, 1, "", "connection"], [97, 2, 1, "", "mapper"], [97, 2, 1, "", "target"]], "sqlalchemy.orm.MapperEvents.before_insert.params": [[97, 2, 1, "", "connection"], [97, 2, 1, "", "mapper"], [97, 2, 1, "", "target"]], "sqlalchemy.orm.MapperEvents.before_update.params": [[97, 2, 1, "", "connection"], [97, 2, 1, "", "mapper"], [97, 2, 1, "", "target"]], "sqlalchemy.orm.MapperEvents.instrument_class.params": [[97, 2, 1, "", "class_"], [97, 2, 1, "", "mapper"]], "sqlalchemy.orm.MapperEvents.mapper_configured.params": [[97, 2, 1, "", "class_"], [97, 2, 1, "", "mapper"]], "sqlalchemy.orm.MapperEvents.params": [[97, 2, 1, "", "propagate"], [97, 2, 1, "", "raw"], [97, 2, 1, "", "retval"]], "sqlalchemy.orm.MapperProperty": [[123, 5, 1, "", "cascade"], [123, 4, 1, "", "cascade_iterator"], [123, 5, 1, "", "class_attribute"], [123, 4, 1, "", "create_row_processor"], [123, 4, 1, "", "do_init"], [123, 5, 1, "", "info"], [123, 4, 1, "", "init"], [123, 4, 1, "", "instrument_class"], [123, 5, 1, "", "is_property"], [123, 4, 1, "", "merge"], [123, 4, 1, "", "post_instrument_class"], [123, 4, 1, "", "set_parent"], [123, 4, 1, "", "setup"]], "sqlalchemy.orm.ORMExecuteState": [[146, 5, 1, "", "all_mappers"], [146, 5, 1, "", "bind_arguments"], [146, 5, 1, "", "bind_mapper"], [146, 5, 1, "", "execution_options"], [146, 4, 1, "", "invoke_statement"], [146, 5, 1, "", "is_column_load"], [146, 5, 1, "", "is_delete"], [146, 5, 1, "", "is_insert"], [146, 5, 1, "", "is_orm_statement"], [146, 5, 1, "", "is_relationship_load"], [146, 5, 1, "", "is_select"], [146, 5, 1, "", "is_update"], [146, 5, 1, "", "lazy_loaded_from"], [146, 5, 1, "", "load_options"], [146, 5, 1, "", "loader_strategy_path"], [146, 5, 1, "", "local_execution_options"], [146, 5, 1, "", "parameters"], [146, 5, 1, "", "session"], [146, 5, 1, "", "statement"], [146, 5, 1, "", "update_delete_options"], [146, 5, 1, "", "user_defined_options"]], "sqlalchemy.orm.ORMExecuteState.invoke_statement.params": [[146, 2, 1, "", "bind_arguments"], [146, 2, 1, "", "execution_options"], [146, 2, 1, "", "params"], [146, 2, 1, "", "statement"]], "sqlalchemy.orm.PropComparator": [[123, 4, 1, "", "__eq__"], [123, 4, 1, "", "__le__"], [123, 4, 1, "", "__lt__"], [123, 4, 1, "", "__ne__"], [123, 4, 1, "", "adapt_to_entity"], [123, 5, 1, "", "adapter"], [123, 4, 1, "", "all_"], [123, 4, 1, "", "and_"], [123, 4, 1, "", "any"], [123, 4, 1, "", "any_"], [123, 4, 1, "", "asc"], [123, 4, 1, "", "between"], [123, 4, 1, "", "bool_op"], [123, 4, 1, "", "collate"], [123, 4, 1, "", "concat"], [123, 4, 1, "", "contains"], [123, 4, 1, "", "desc"], [123, 4, 1, "", "distinct"], [123, 4, 1, "", "endswith"], [123, 4, 1, "", "has"], [123, 4, 1, "", "ilike"], [123, 4, 1, "", "in_"], [123, 4, 1, "", "is_"], [123, 4, 1, "", "is_distinct_from"], [123, 4, 1, "", "is_not"], [123, 4, 1, "", "is_not_distinct_from"], [123, 4, 1, "", "isnot"], [123, 4, 1, "", "isnot_distinct_from"], [123, 4, 1, "", "like"], [123, 4, 1, "", "match"], [123, 4, 1, "", "not_ilike"], [123, 4, 1, "", "not_in"], [123, 4, 1, "", "not_like"], [123, 4, 1, "", "notilike"], [123, 4, 1, "", "notin_"], [123, 4, 1, "", "notlike"], [123, 4, 1, "", "nulls_first"], [123, 4, 1, "", "nulls_last"], [123, 4, 1, "", "nullsfirst"], [123, 4, 1, "", "nullslast"], [123, 4, 1, "", "of_type"], [123, 4, 1, "", "op"], [123, 4, 1, "", "operate"], [123, 4, 1, "", "regexp_match"], [123, 4, 1, "", "regexp_replace"], [123, 4, 1, "", "reverse_operate"], [123, 4, 1, "", "startswith"], [123, 5, 1, "", "timetuple"]], "sqlalchemy.orm.PropComparator.any.params": [[123, 2, 1, "", "**kwargs"], [123, 2, 1, "", "criterion"]], "sqlalchemy.orm.PropComparator.contains.params": [[123, 2, 1, "", "autoescape"], [123, 2, 1, "", "escape"], [123, 2, 1, "", "other"]], "sqlalchemy.orm.PropComparator.endswith.params": [[123, 2, 1, "", "autoescape"], [123, 2, 1, "", "escape"], [123, 2, 1, "", "other"]], "sqlalchemy.orm.PropComparator.has.params": [[123, 2, 1, "", "**kwargs"], [123, 2, 1, "", "criterion"]], "sqlalchemy.orm.PropComparator.ilike.params": [[123, 2, 1, "", "escape"], [123, 2, 1, "", "other"]], "sqlalchemy.orm.PropComparator.in_.params": [[123, 2, 1, "", "other"]], "sqlalchemy.orm.PropComparator.like.params": [[123, 2, 1, "", "escape"], [123, 2, 1, "", "other"]], "sqlalchemy.orm.PropComparator.of_type.params": [[123, 2, 1, "", "class_"]], "sqlalchemy.orm.PropComparator.op.params": [[123, 2, 1, "", "is_comparison"], [123, 2, 1, "", "operator"], [123, 2, 1, "", "precedence"], [123, 2, 1, "", "return_type"]], "sqlalchemy.orm.PropComparator.operate.params": [[123, 2, 1, "", "**kwargs"], [123, 2, 1, "", "*other"], [123, 2, 1, "", "op"]], "sqlalchemy.orm.PropComparator.regexp_match.params": [[123, 2, 1, "", "flags"], [123, 2, 1, "", "pattern"]], "sqlalchemy.orm.PropComparator.regexp_replace.params": [[123, 2, 1, "", "flags"], [123, 2, 1, "", "pattern"]], "sqlalchemy.orm.PropComparator.startswith.params": [[123, 2, 1, "", "autoescape"], [123, 2, 1, "", "escape"], [123, 2, 1, "", "other"]], "sqlalchemy.orm.Query": [[137, 4, 1, "", "__init__"], [137, 4, 1, "", "add_column"], [137, 4, 1, "", "add_columns"], [137, 4, 1, "", "add_entity"], [137, 4, 1, "", "all"], [137, 4, 1, "", "apply_labels"], [137, 4, 1, "", "as_scalar"], [137, 4, 1, "", "autoflush"], [137, 5, 1, "", "bind"], [137, 5, 1, "", "column_descriptions"], [137, 4, 1, "", "correlate"], [137, 4, 1, "", "count"], [137, 4, 1, "", "cte"], [137, 4, 1, "", "delete"], [137, 4, 1, "", "distinct"], [137, 4, 1, "", "enable_assertions"], [137, 4, 1, "", "enable_eagerloads"], [137, 4, 1, "", "except_"], [137, 4, 1, "", "except_all"], [137, 4, 1, "", "execute"], [137, 4, 1, "", "execution_options"], [137, 4, 1, "", "exists"], [137, 4, 1, "", "filter"], [137, 4, 1, "", "filter_by"], [137, 4, 1, "", "first"], [137, 4, 1, "", "from_self"], [137, 4, 1, "", "from_statement"], [137, 4, 1, "", "get"], [137, 4, 1, "", "get_execution_options"], [137, 5, 1, "", "get_label_style"], [137, 4, 1, "", "group_by"], [137, 4, 1, "", "having"], [137, 4, 1, "", "instances"], [137, 4, 1, "", "intersect"], [137, 4, 1, "", "intersect_all"], [137, 5, 1, "", "is_single_entity"], [137, 4, 1, "", "join"], [137, 4, 1, "", "label"], [137, 5, 1, "", "lazy_loaded_from"], [137, 4, 1, "", "limit"], [137, 4, 1, "", "memoized_instancemethod"], [137, 4, 1, "", "merge_result"], [137, 4, 1, "", "offset"], [137, 4, 1, "", "one"], [137, 4, 1, "", "one_or_none"], [137, 4, 1, "", "only_return_tuples"], [137, 4, 1, "", "options"], [137, 4, 1, "", "order_by"], [137, 4, 1, "", "outerjoin"], [137, 4, 1, "", "params"], [137, 4, 1, "", "populate_existing"], [137, 4, 1, "", "prefix_with"], [137, 4, 1, "", "reset_joinpoint"], [137, 4, 1, "", "scalar"], [137, 4, 1, "", "scalar_subquery"], [137, 4, 1, "", "select_entity_from"], [137, 4, 1, "", "select_from"], [137, 5, 1, "", "selectable"], [137, 4, 1, "", "set_label_style"], [137, 4, 1, "", "slice"], [137, 5, 1, "", "statement"], [137, 4, 1, "", "subquery"], [137, 4, 1, "", "suffix_with"], [137, 4, 1, "", "union"], [137, 4, 1, "", "union_all"], [137, 4, 1, "", "update"], [137, 4, 1, "", "value"], [137, 4, 1, "", "values"], [137, 4, 1, "", "where"], [137, 5, 1, "", "whereclause"], [137, 4, 1, "", "with_entities"], [137, 4, 1, "", "with_for_update"], [137, 4, 1, "", "with_hint"], [137, 4, 1, "", "with_labels"], [137, 4, 1, "", "with_parent"], [137, 4, 1, "", "with_polymorphic"], [137, 4, 1, "", "with_session"], [137, 4, 1, "", "with_statement_hint"], [137, 4, 1, "", "with_transformation"], [137, 4, 1, "", "yield_per"]], "sqlalchemy.orm.Query.delete.params": [[137, 2, 1, "", "synchronize_session"]], "sqlalchemy.orm.Query.distinct.params": [[137, 2, 1, "", "*expr"]], "sqlalchemy.orm.Query.from_self.params": [[137, 2, 1, "", "*entities"]], "sqlalchemy.orm.Query.get.params": [[137, 2, 1, "", "ident"]], "sqlalchemy.orm.Query.join.params": [[137, 2, 1, "", "*props"], [137, 2, 1, "", "aliased"], [137, 2, 1, "", "from_joinpoint"], [137, 2, 1, "", "full"], [137, 2, 1, "", "isouter"]], "sqlalchemy.orm.Query.params": [[137, 2, 1, "", "entities"], [137, 2, 1, "", "session"]], "sqlalchemy.orm.Query.prefix_with.params": [[137, 2, 1, "", "**kw"], [137, 2, 1, "", "*expr"]], "sqlalchemy.orm.Query.select_entity_from.params": [[137, 2, 1, "", "from_obj"]], "sqlalchemy.orm.Query.select_from.params": [[137, 2, 1, "", "*from_obj"]], "sqlalchemy.orm.Query.subquery.params": [[137, 2, 1, "", "name"], [137, 2, 1, "", "reduce_columns"], [137, 2, 1, "", "with_labels"]], "sqlalchemy.orm.Query.suffix_with.params": [[137, 2, 1, "", "**kw"], [137, 2, 1, "", "*expr"]], "sqlalchemy.orm.Query.update.params": [[137, 2, 1, "", "synchronize_session"], [137, 2, 1, "", "update_args"], [137, 2, 1, "", "values"]], "sqlalchemy.orm.Query.with_parent.params": [[137, 2, 1, "", "from_entity"], [137, 2, 1, "", "instance"], [137, 2, 1, "", "property"]], "sqlalchemy.orm.QueryContext": [[123, 3, 1, "", "default_load_options"]], "sqlalchemy.orm.QueryEvents": [[97, 4, 1, "", "before_compile"], [97, 4, 1, "", "before_compile_delete"], [97, 4, 1, "", "before_compile_update"]], "sqlalchemy.orm.QueryEvents.before_compile_delete.params": [[97, 2, 1, "", "delete_context"], [97, 2, 1, "", "query"]], "sqlalchemy.orm.QueryEvents.before_compile_update.params": [[97, 2, 1, "", "query"], [97, 2, 1, "", "update_context"]], "sqlalchemy.orm.QueryableAttribute": [[123, 4, 1, "", "__eq__"], [123, 4, 1, "", "__le__"], [123, 4, 1, "", "__lt__"], [123, 4, 1, "", "__ne__"], [123, 4, 1, "", "adapt_to_entity"], [123, 5, 1, "", "adapter"], [123, 4, 1, "", "all_"], [123, 4, 1, "", "and_"], [123, 4, 1, "", "any"], [123, 4, 1, "", "any_"], [123, 4, 1, "", "asc"], [123, 4, 1, "", "between"], [123, 4, 1, "", "bool_op"], [123, 4, 1, "", "collate"], [123, 4, 1, "", "concat"], [123, 4, 1, "", "contains"], [123, 4, 1, "", "desc"], [123, 4, 1, "", "distinct"], [123, 4, 1, "", "endswith"], [123, 5, 1, "", "expression"], [123, 5, 1, "", "extension_type"], [123, 4, 1, "", "has"], [123, 4, 1, "", "ilike"], [123, 4, 1, "", "in_"], [123, 5, 1, "", "info"], [123, 5, 1, "", "inherit_cache"], [123, 4, 1, "", "is_"], [123, 5, 1, "", "is_aliased_class"], [123, 5, 1, "", "is_attribute"], [123, 5, 1, "", "is_bundle"], [123, 5, 1, "", "is_clause_element"], [123, 4, 1, "", "is_distinct_from"], [123, 5, 1, "", "is_instance"], [123, 5, 1, "", "is_mapper"], [123, 4, 1, "", "is_not"], [123, 4, 1, "", "is_not_distinct_from"], [123, 5, 1, "", "is_property"], [123, 5, 1, "", "is_selectable"], [123, 4, 1, "", "isnot"], [123, 4, 1, "", "isnot_distinct_from"], [123, 4, 1, "", "like"], [123, 4, 1, "", "match"], [123, 4, 1, "", "memoized_instancemethod"], [123, 4, 1, "", "not_ilike"], [123, 4, 1, "", "not_in"], [123, 4, 1, "", "not_like"], [123, 4, 1, "", "notilike"], [123, 4, 1, "", "notin_"], [123, 4, 1, "", "notlike"], [123, 4, 1, "", "nulls_first"], [123, 4, 1, "", "nulls_last"], [123, 4, 1, "", "nullsfirst"], [123, 4, 1, "", "nullslast"], [123, 4, 1, "", "of_type"], [123, 4, 1, "", "op"], [123, 4, 1, "", "operate"], [123, 5, 1, "", "parent"], [123, 5, 1, "", "property"], [123, 4, 1, "", "regexp_match"], [123, 4, 1, "", "regexp_replace"], [123, 4, 1, "", "reverse_operate"], [123, 4, 1, "", "startswith"], [123, 5, 1, "", "timetuple"]], "sqlalchemy.orm.QueryableAttribute.any.params": [[123, 2, 1, "", "**kwargs"], [123, 2, 1, "", "criterion"]], "sqlalchemy.orm.QueryableAttribute.contains.params": [[123, 2, 1, "", "autoescape"], [123, 2, 1, "", "escape"], [123, 2, 1, "", "other"]], "sqlalchemy.orm.QueryableAttribute.endswith.params": [[123, 2, 1, "", "autoescape"], [123, 2, 1, "", "escape"], [123, 2, 1, "", "other"]], "sqlalchemy.orm.QueryableAttribute.has.params": [[123, 2, 1, "", "**kwargs"], [123, 2, 1, "", "criterion"]], "sqlalchemy.orm.QueryableAttribute.ilike.params": [[123, 2, 1, "", "escape"], [123, 2, 1, "", "other"]], "sqlalchemy.orm.QueryableAttribute.in_.params": [[123, 2, 1, "", "other"]], "sqlalchemy.orm.QueryableAttribute.like.params": [[123, 2, 1, "", "escape"], [123, 2, 1, "", "other"]], "sqlalchemy.orm.QueryableAttribute.of_type.params": [[123, 2, 1, "", "class_"]], "sqlalchemy.orm.QueryableAttribute.op.params": [[123, 2, 1, "", "is_comparison"], [123, 2, 1, "", "operator"], [123, 2, 1, "", "precedence"], [123, 2, 1, "", "return_type"]], "sqlalchemy.orm.QueryableAttribute.operate.params": [[123, 2, 1, "", "**kwargs"], [123, 2, 1, "", "*other"], [123, 2, 1, "", "op"]], "sqlalchemy.orm.QueryableAttribute.regexp_match.params": [[123, 2, 1, "", "flags"], [123, 2, 1, "", "pattern"]], "sqlalchemy.orm.QueryableAttribute.regexp_replace.params": [[123, 2, 1, "", "flags"], [123, 2, 1, "", "pattern"]], "sqlalchemy.orm.QueryableAttribute.startswith.params": [[123, 2, 1, "", "autoescape"], [123, 2, 1, "", "escape"], [123, 2, 1, "", "other"]], "sqlalchemy.orm.RelationshipProperty": [[123, 3, 1, "", "Comparator"], [123, 4, 1, "", "__init__"], [123, 5, 1, "", "cascade"], [123, 4, 1, "", "cascade_iterator"], [123, 5, 1, "", "class_attribute"], [123, 4, 1, "", "create_row_processor"], [123, 4, 1, "", "do_init"], [123, 5, 1, "", "entity"], [123, 5, 1, "", "extension_type"], [123, 5, 1, "", "inherit_cache"], [123, 4, 1, "", "init"], [123, 4, 1, "", "instrument_class"], [123, 5, 1, "", "is_aliased_class"], [123, 5, 1, "", "is_attribute"], [123, 5, 1, "", "is_bundle"], [123, 5, 1, "", "is_clause_element"], [123, 5, 1, "", "is_instance"], [123, 5, 1, "", "is_mapper"], [123, 5, 1, "", "is_property"], [123, 5, 1, "", "is_selectable"], [123, 5, 1, "", "mapper"], [123, 4, 1, "", "merge"], [123, 4, 1, "", "post_instrument_class"], [123, 4, 1, "", "set_parent"], [123, 4, 1, "", "setup"]], "sqlalchemy.orm.RelationshipProperty.Comparator": [[123, 4, 1, "", "__eq__"], [123, 4, 1, "", "__init__"], [123, 4, 1, "", "__le__"], [123, 4, 1, "", "__lt__"], [123, 4, 1, "", "__ne__"], [123, 4, 1, "", "adapt_to_entity"], [123, 5, 1, "", "adapter"], [123, 4, 1, "", "all_"], [123, 4, 1, "", "and_"], [123, 4, 1, "", "any"], [123, 4, 1, "", "any_"], [123, 4, 1, "", "asc"], [123, 4, 1, "", "between"], [123, 4, 1, "", "bool_op"], [123, 4, 1, "", "collate"], [123, 4, 1, "", "concat"], [123, 4, 1, "", "contains"], [123, 4, 1, "", "desc"], [123, 4, 1, "", "distinct"], [123, 4, 1, "", "endswith"], [123, 5, 1, "", "entity"], [123, 4, 1, "", "has"], [123, 4, 1, "", "ilike"], [123, 4, 1, "", "in_"], [123, 4, 1, "", "is_"], [123, 4, 1, "", "is_distinct_from"], [123, 4, 1, "", "is_not"], [123, 4, 1, "", "is_not_distinct_from"], [123, 4, 1, "", "isnot"], [123, 4, 1, "", "isnot_distinct_from"], [123, 4, 1, "", "like"], [123, 5, 1, "", "mapper"], [123, 4, 1, "", "match"], [123, 4, 1, "", "not_ilike"], [123, 4, 1, "", "not_in"], [123, 4, 1, "", "not_like"], [123, 4, 1, "", "notilike"], [123, 4, 1, "", "notin_"], [123, 4, 1, "", "notlike"], [123, 4, 1, "", "nulls_first"], [123, 4, 1, "", "nulls_last"], [123, 4, 1, "", "nullsfirst"], [123, 4, 1, "", "nullslast"], [123, 4, 1, "", "of_type"], [123, 4, 1, "", "op"], [123, 4, 1, "", "operate"], [123, 4, 1, "", "regexp_match"], [123, 4, 1, "", "regexp_replace"], [123, 4, 1, "", "reverse_operate"], [123, 4, 1, "", "startswith"], [123, 5, 1, "", "timetuple"]], "sqlalchemy.orm.RelationshipProperty.Comparator.endswith.params": [[123, 2, 1, "", "autoescape"], [123, 2, 1, "", "escape"], [123, 2, 1, "", "other"]], "sqlalchemy.orm.RelationshipProperty.Comparator.ilike.params": [[123, 2, 1, "", "escape"], [123, 2, 1, "", "other"]], "sqlalchemy.orm.RelationshipProperty.Comparator.like.params": [[123, 2, 1, "", "escape"], [123, 2, 1, "", "other"]], "sqlalchemy.orm.RelationshipProperty.Comparator.op.params": [[123, 2, 1, "", "is_comparison"], [123, 2, 1, "", "operator"], [123, 2, 1, "", "precedence"], [123, 2, 1, "", "return_type"]], "sqlalchemy.orm.RelationshipProperty.Comparator.operate.params": [[123, 2, 1, "", "**kwargs"], [123, 2, 1, "", "*other"], [123, 2, 1, "", "op"]], "sqlalchemy.orm.RelationshipProperty.Comparator.regexp_match.params": [[123, 2, 1, "", "flags"], [123, 2, 1, "", "pattern"]], "sqlalchemy.orm.RelationshipProperty.Comparator.regexp_replace.params": [[123, 2, 1, "", "flags"], [123, 2, 1, "", "pattern"]], "sqlalchemy.orm.RelationshipProperty.Comparator.startswith.params": [[123, 2, 1, "", "autoescape"], [123, 2, 1, "", "escape"], [123, 2, 1, "", "other"]], "sqlalchemy.orm.Session": [[146, 4, 1, "", "__init__"], [146, 4, 1, "", "add"], [146, 4, 1, "", "add_all"], [146, 4, 1, "", "begin"], [146, 4, 1, "", "begin_nested"], [146, 4, 1, "", "bind_mapper"], [146, 4, 1, "", "bind_table"], [146, 4, 1, "", "bulk_insert_mappings"], [146, 4, 1, "", "bulk_save_objects"], [146, 4, 1, "", "bulk_update_mappings"], [146, 4, 1, "", "close"], [146, 4, 1, "", "close_all"], [146, 4, 1, "", "commit"], [146, 4, 1, "", "connection"], [146, 4, 1, "", "delete"], [146, 5, 1, "", "deleted"], [146, 5, 1, "", "dirty"], [146, 4, 1, "", "enable_relationship_loading"], [146, 4, 1, "", "execute"], [146, 4, 1, "", "expire"], [146, 4, 1, "", "expire_all"], [146, 4, 1, "", "expunge"], [146, 4, 1, "", "expunge_all"], [146, 4, 1, "", "flush"], [146, 4, 1, "", "get"], [146, 4, 1, "", "get_bind"], [146, 4, 1, "", "get_nested_transaction"], [146, 4, 1, "", "get_transaction"], [146, 4, 1, "", "identity_key"], [146, 5, 1, "", "identity_map"], [146, 4, 1, "", "in_nested_transaction"], [146, 4, 1, "", "in_transaction"], [146, 5, 1, "", "info"], [146, 4, 1, "", "invalidate"], [146, 5, 1, "", "is_active"], [146, 4, 1, "", "is_modified"], [146, 4, 1, "", "merge"], [146, 5, 1, "", "new"], [146, 5, 1, "", "no_autoflush"], [146, 4, 1, "", "object_session"], [146, 4, 1, "", "prepare"], [146, 4, 1, "", "query"], [146, 4, 1, "", "refresh"], [146, 4, 1, "", "rollback"], [146, 4, 1, "", "scalar"], [146, 4, 1, "", "scalars"], [146, 5, 1, "", "transaction"]], "sqlalchemy.orm.Session.begin.params": [[146, 2, 1, "", "nested"], [146, 2, 1, "", "subtransactions"]], "sqlalchemy.orm.Session.bind_mapper.params": [[146, 2, 1, "", "bind"], [146, 2, 1, "", "mapper"]], "sqlalchemy.orm.Session.bind_table.params": [[146, 2, 1, "", "bind"], [146, 2, 1, "", "table"]], "sqlalchemy.orm.Session.bulk_insert_mappings.params": [[146, 2, 1, "", "mapper"], [146, 2, 1, "", "mappings"], [146, 2, 1, "", "render_nulls"], [146, 2, 1, "", "return_defaults"]], "sqlalchemy.orm.Session.bulk_save_objects.params": [[146, 2, 1, "", "objects"], [146, 2, 1, "", "preserve_order"], [146, 2, 1, "", "return_defaults"], [146, 2, 1, "", "update_changed_only"]], "sqlalchemy.orm.Session.bulk_update_mappings.params": [[146, 2, 1, "", "mapper"], [146, 2, 1, "", "mappings"]], "sqlalchemy.orm.Session.connection.params": [[146, 2, 1, "", "**kw"], [146, 2, 1, "", "bind"], [146, 2, 1, "", "bind_arguments"], [146, 2, 1, "", "clause"], [146, 2, 1, "", "close_with_result"], [146, 2, 1, "", "execution_options"], [146, 2, 1, "", "mapper"]], "sqlalchemy.orm.Session.execute.params": [[146, 2, 1, "", "**kw"], [146, 2, 1, "", "bind"], [146, 2, 1, "", "bind_arguments"], [146, 2, 1, "", "execution_options"], [146, 2, 1, "", "mapper"], [146, 2, 1, "", "params"], [146, 2, 1, "", "statement"]], "sqlalchemy.orm.Session.expire.params": [[146, 2, 1, "", "attribute_names"], [146, 2, 1, "", "instance"]], "sqlalchemy.orm.Session.flush.params": [[146, 2, 1, "", "objects"]], "sqlalchemy.orm.Session.get.params": [[146, 2, 1, "", "entity"], [146, 2, 1, "", "execution_options"], [146, 2, 1, "", "ident"], [146, 2, 1, "", "options"], [146, 2, 1, "", "populate_existing"], [146, 2, 1, "", "with_for_update"]], "sqlalchemy.orm.Session.get_bind.params": [[146, 2, 1, "", "clause"], [146, 2, 1, "", "mapper"]], "sqlalchemy.orm.Session.is_modified.params": [[146, 2, 1, "", "include_collections"], [146, 2, 1, "", "instance"]], "sqlalchemy.orm.Session.merge.params": [[146, 2, 1, "", "instance"], [146, 2, 1, "", "load"], [146, 2, 1, "", "options"]], "sqlalchemy.orm.Session.params": [[146, 2, 1, "", "autocommit"], [146, 2, 1, "", "autoflush"], [146, 2, 1, "", "bind"], [146, 2, 1, "", "binds"], [146, 2, 1, "", "class_"], [146, 2, 1, "", "enable_baked_queries"], [146, 2, 1, "", "expire_on_commit"], [146, 2, 1, "", "future"], [146, 2, 1, "", "info"], [146, 2, 1, "", "query_cls"], [146, 2, 1, "", "twophase"]], "sqlalchemy.orm.Session.refresh.params": [[146, 2, 1, "", "attribute_names"], [146, 2, 1, "", "with_for_update"]], "sqlalchemy.orm.SessionEvents": [[97, 4, 1, "", "after_attach"], [97, 4, 1, "", "after_begin"], [97, 4, 1, "", "after_bulk_delete"], [97, 4, 1, "", "after_bulk_update"], [97, 4, 1, "", "after_commit"], [97, 4, 1, "", "after_flush"], [97, 4, 1, "", "after_flush_postexec"], [97, 4, 1, "", "after_rollback"], [97, 4, 1, "", "after_soft_rollback"], [97, 4, 1, "", "after_transaction_create"], [97, 4, 1, "", "after_transaction_end"], [97, 4, 1, "", "before_attach"], [97, 4, 1, "", "before_commit"], [97, 4, 1, "", "before_flush"], [97, 4, 1, "", "deleted_to_detached"], [97, 4, 1, "", "deleted_to_persistent"], [97, 4, 1, "", "detached_to_persistent"], [97, 4, 1, "", "do_orm_execute"], [97, 4, 1, "", "loaded_as_persistent"], [97, 4, 1, "", "pending_to_persistent"], [97, 4, 1, "", "pending_to_transient"], [97, 4, 1, "", "persistent_to_deleted"], [97, 4, 1, "", "persistent_to_detached"], [97, 4, 1, "", "persistent_to_transient"], [97, 4, 1, "", "transient_to_pending"]], "sqlalchemy.orm.SessionEvents.after_begin.params": [[97, 2, 1, "", "connection"], [97, 2, 1, "", "session"], [97, 2, 1, "", "transaction"]], "sqlalchemy.orm.SessionEvents.after_bulk_delete.params": [[97, 2, 1, "", "delete_context"]], "sqlalchemy.orm.SessionEvents.after_bulk_update.params": [[97, 2, 1, "", "update_context"]], "sqlalchemy.orm.SessionEvents.after_commit.params": [[97, 2, 1, "", "session"]], "sqlalchemy.orm.SessionEvents.after_flush.params": [[97, 2, 1, "", "flush_context"], [97, 2, 1, "", "session"]], "sqlalchemy.orm.SessionEvents.after_flush_postexec.params": [[97, 2, 1, "", "flush_context"], [97, 2, 1, "", "session"]], "sqlalchemy.orm.SessionEvents.after_rollback.params": [[97, 2, 1, "", "session"]], "sqlalchemy.orm.SessionEvents.after_soft_rollback.params": [[97, 2, 1, "", "previous_transaction"], [97, 2, 1, "", "session"]], "sqlalchemy.orm.SessionEvents.after_transaction_create.params": [[97, 2, 1, "", "session"], [97, 2, 1, "", "transaction"]], "sqlalchemy.orm.SessionEvents.after_transaction_end.params": [[97, 2, 1, "", "session"], [97, 2, 1, "", "transaction"]], "sqlalchemy.orm.SessionEvents.before_commit.params": [[97, 2, 1, "", "session"]], "sqlalchemy.orm.SessionEvents.before_flush.params": [[97, 2, 1, "", "flush_context"], [97, 2, 1, "", "instances"], [97, 2, 1, "", "session"]], "sqlalchemy.orm.SessionEvents.detached_to_persistent.params": [[97, 2, 1, "", "instance"], [97, 2, 1, "", "session"]], "sqlalchemy.orm.SessionEvents.do_orm_execute.params": [[97, 2, 1, "", "orm_execute_state"]], "sqlalchemy.orm.SessionEvents.loaded_as_persistent.params": [[97, 2, 1, "", "instance"], [97, 2, 1, "", "session"]], "sqlalchemy.orm.SessionEvents.params": [[97, 2, 1, "", "raw"], [97, 2, 1, "", "restore_load_context"]], "sqlalchemy.orm.SessionEvents.pending_to_persistent.params": [[97, 2, 1, "", "instance"], [97, 2, 1, "", "session"]], "sqlalchemy.orm.SessionEvents.pending_to_transient.params": [[97, 2, 1, "", "instance"], [97, 2, 1, "", "session"]], "sqlalchemy.orm.SessionEvents.persistent_to_detached.params": [[97, 2, 1, "", "deleted"], [97, 2, 1, "", "instance"], [97, 2, 1, "", "session"]], "sqlalchemy.orm.SessionEvents.persistent_to_transient.params": [[97, 2, 1, "", "instance"], [97, 2, 1, "", "session"]], "sqlalchemy.orm.SessionEvents.transient_to_pending.params": [[97, 2, 1, "", "instance"], [97, 2, 1, "", "session"]], "sqlalchemy.orm.SessionTransaction": [[146, 5, 1, "", "nested"], [146, 5, 1, "", "parent"]], "sqlalchemy.orm.SynonymProperty": [[123, 4, 1, "", "__init__"], [123, 5, 1, "", "cascade"], [123, 4, 1, "", "cascade_iterator"], [123, 5, 1, "", "class_attribute"], [123, 4, 1, "", "create_row_processor"], [123, 4, 1, "", "do_init"], [123, 5, 1, "", "extension_type"], [123, 5, 1, "", "inherit_cache"], [123, 4, 1, "", "init"], [123, 4, 1, "", "instrument_class"], [123, 5, 1, "", "is_aliased_class"], [123, 5, 1, "", "is_attribute"], [123, 5, 1, "", "is_bundle"], [123, 5, 1, "", "is_clause_element"], [123, 5, 1, "", "is_instance"], [123, 5, 1, "", "is_mapper"], [123, 5, 1, "", "is_property"], [123, 5, 1, "", "is_selectable"], [123, 4, 1, "", "merge"], [123, 4, 1, "", "post_instrument_class"], [123, 4, 1, "", "set_parent"], [123, 4, 1, "", "setup"], [123, 5, 1, "", "uses_objects"]], "sqlalchemy.orm.UOWTransaction": [[123, 4, 1, "", "filter_states_for_dep"], [123, 4, 1, "", "finalize_flush_changes"], [123, 4, 1, "", "get_attribute_history"], [123, 4, 1, "", "is_deleted"], [123, 4, 1, "", "remove_state_actions"], [123, 4, 1, "", "was_already_deleted"]], "sqlalchemy.orm.aliased.params": [[137, 2, 1, "", "adapt_on_names"], [137, 2, 1, "", "alias"], [137, 2, 1, "", "element"], [137, 2, 1, "", "flat"], [137, 2, 1, "", "name"]], "sqlalchemy.orm.attributes": [[146, 3, 1, "", "History"], [146, 1, 1, "", "del_attribute"], [146, 1, 1, "", "flag_dirty"], [146, 1, 1, "", "flag_modified"], [146, 1, 1, "", "get_attribute"], [146, 1, 1, "", "get_history"], [146, 1, 1, "", "init_collection"], [146, 1, 1, "", "instance_state"], [146, 1, 1, "", "set_attribute"], [146, 1, 1, "", "set_committed_value"]], "sqlalchemy.orm.attributes.History": [[146, 4, 1, "", "empty"], [146, 4, 1, "", "has_changes"], [146, 4, 1, "", "non_added"], [146, 4, 1, "", "non_deleted"], [146, 4, 1, "", "sum"]], "sqlalchemy.orm.attributes.get_history.params": [[146, 2, 1, "", "key"], [146, 2, 1, "", "obj"], [146, 2, 1, "", "passive"]], "sqlalchemy.orm.attributes.init_collection.params": [[146, 2, 1, "", "key"], [146, 2, 1, "", "obj"]], "sqlalchemy.orm.attributes.set_attribute.params": [[146, 2, 1, "", "initiator"], [146, 2, 1, "", "instance"], [146, 2, 1, "", "key"], [146, 2, 1, "", "value"]], "sqlalchemy.orm.collections": [[87, 3, 1, "", "CollectionAdapter"], [87, 3, 1, "", "InstrumentedDict"], [87, 3, 1, "", "InstrumentedList"], [87, 3, 1, "", "InstrumentedSet"], [87, 3, 1, "", "MappedCollection"], [87, 1, 1, "", "attribute_mapped_collection"], [87, 1, 1, "", "bulk_replace"], [87, 3, 1, "", "collection"], [87, 7, 1, "", "collection_adapter"], [87, 1, 1, "", "column_mapped_collection"], [87, 1, 1, "", "mapped_collection"], [87, 1, 1, "", "prepare_instrumentation"]], "sqlalchemy.orm.collections.MappedCollection": [[87, 4, 1, "", "__init__"], [87, 4, 1, "", "clear"], [87, 4, 1, "", "pop"], [87, 4, 1, "", "popitem"], [87, 4, 1, "", "remove"], [87, 4, 1, "", "set"], [87, 4, 1, "", "setdefault"], [87, 4, 1, "", "update"]], "sqlalchemy.orm.collections.bulk_replace.params": [[87, 2, 1, "", "existing_adapter"], [87, 2, 1, "", "new_adapter"], [87, 2, 1, "", "values"]], "sqlalchemy.orm.collections.collection": [[87, 4, 1, "", "adds"], [87, 4, 1, "", "appender"], [87, 4, 1, "", "converter"], [87, 4, 1, "", "internally_instrumented"], [87, 4, 1, "", "iterator"], [87, 4, 1, "", "remover"], [87, 4, 1, "", "removes"], [87, 4, 1, "", "removes_return"], [87, 4, 1, "", "replaces"]], "sqlalchemy.orm.column_property.params": [[133, 2, 1, "", "*cols"], [133, 2, 1, "", "active_history"], [133, 2, 1, "", "comparator_factory"], [133, 2, 1, "", "deferred"], [133, 2, 1, "", "doc"], [133, 2, 1, "", "expire_on_flush"], [133, 2, 1, "", "group"], [133, 2, 1, "", "info"], [133, 2, 1, "", "raiseload"]], "sqlalchemy.orm.composite.params": [[88, 2, 1, "", "*cols"], [88, 2, 1, "", "active_history"], [88, 2, 1, "", "class_"], [88, 2, 1, "", "comparator_factory"], [88, 2, 1, "", "deferred"], [88, 2, 1, "", "doc"], [88, 2, 1, "", "group"], [88, 2, 1, "", "info"]], "sqlalchemy.orm.declarative_base.params": [[132, 2, 1, "", "bind"], [132, 2, 1, "", "class_registry"], [132, 2, 1, "", "cls"], [132, 2, 1, "", "constructor"], [132, 2, 1, "", "mapper"], [132, 2, 1, "", "metaclass"], [132, 2, 1, "", "metadata"], [132, 2, 1, "", "name"]], "sqlalchemy.orm.defer.params": [[126, 2, 1, "", "*addl_attrs"], [126, 2, 1, "", "key"], [126, 2, 1, "", "raiseload"]], "sqlalchemy.orm.deferred.params": [[126, 2, 1, "", "**kw"], [126, 2, 1, "", "*columns"], [126, 2, 1, "", "raiseload"]], "sqlalchemy.orm.exc": [[99, 5, 1, "", "ConcurrentModificationError"], [99, 6, 1, "", "DetachedInstanceError"], [99, 6, 1, "", "FlushError"], [99, 6, 1, "", "LoaderStrategyException"], [99, 7, 1, "", "NO_STATE"], [99, 6, 1, "", "ObjectDeletedError"], [99, 6, 1, "", "ObjectDereferencedError"], [99, 6, 1, "", "StaleDataError"], [99, 6, 1, "", "UnmappedClassError"], [99, 6, 1, "", "UnmappedColumnError"], [99, 6, 1, "", "UnmappedError"], [99, 6, 1, "", "UnmappedInstanceError"]], "sqlalchemy.orm.instrumentation": [[116, 3, 1, "", "InstrumentationFactory"], [146, 1, 1, "", "is_instrumented"]], "sqlalchemy.orm.joinedload.params": [[128, 2, 1, "", "innerjoin"]], "sqlalchemy.orm.mapper.params": [[132, 2, 1, "", "allow_partial_pks"], [132, 2, 1, "", "always_refresh"], [132, 2, 1, "", "batch"], [132, 2, 1, "", "class_"], [132, 2, 1, "", "column_prefix"], [132, 2, 1, "", "concrete"], [132, 2, 1, "", "confirm_deleted_rows"], [132, 2, 1, "", "eager_defaults"], [132, 2, 1, "", "exclude_properties"], [132, 2, 1, "", "include_properties"], [132, 2, 1, "", "inherit_condition"], [132, 2, 1, "", "inherit_foreign_keys"], [132, 2, 1, "", "inherits"], [132, 2, 1, "", "legacy_is_orphan"], [132, 2, 1, "", "local_table"], [132, 2, 1, "", "non_primary"], [132, 2, 1, "", "passive_deletes"], [132, 2, 1, "", "passive_updates"], [132, 2, 1, "", "polymorphic_identity"], [132, 2, 1, "", "polymorphic_load"], [132, 2, 1, "", "polymorphic_on"], [132, 2, 1, "", "primary_key"], [132, 2, 1, "", "properties"], [132, 2, 1, "", "version_id_col"], [132, 2, 1, "", "version_id_generator"], [132, 2, 1, "", "with_polymorphic"]], "sqlalchemy.orm.polymorphic_union.params": [[132, 2, 1, "", "aliasname"], [132, 2, 1, "", "cast_nulls"], [132, 2, 1, "", "table_map"], [132, 2, 1, "", "typecolname"]], "sqlalchemy.orm.query_expression.params": [[126, 2, 1, "", "default_expr"]], "sqlalchemy.orm.raiseload.params": [[128, 2, 1, "", "sql_only"]], "sqlalchemy.orm.registry": [[132, 4, 1, "", "__init__"], [132, 4, 1, "", "as_declarative_base"], [132, 4, 1, "", "configure"], [132, 4, 1, "", "dispose"], [132, 4, 1, "", "generate_base"], [132, 4, 1, "", "map_declaratively"], [132, 4, 1, "", "map_imperatively"], [132, 4, 1, "", "mapped"], [132, 5, 1, "", "mappers"]], "sqlalchemy.orm.registry.generate_base.params": [[132, 2, 1, "", "cls"], [132, 2, 1, "", "mapper"], [132, 2, 1, "", "metaclass"], [132, 2, 1, "", "name"]], "sqlalchemy.orm.registry.map_declaratively.params": [[132, 2, 1, "", "cls"]], "sqlalchemy.orm.registry.map_imperatively.params": [[132, 2, 1, "", "**kw"], [132, 2, 1, "", "class_"], [132, 2, 1, "", "local_table"]], "sqlalchemy.orm.registry.mapped.params": [[132, 2, 1, "", "cls"]], "sqlalchemy.orm.registry.params": [[132, 2, 1, "", "class_registry"], [132, 2, 1, "", "constructor"], [132, 2, 1, "", "metadata"]], "sqlalchemy.orm.relationship.params": [[140, 2, 1, "", "active_history"], [140, 2, 1, "", "argument"], [140, 2, 1, "", "back_populates"], [140, 2, 1, "", "backref"], [140, 2, 1, "", "bake_queries"], [140, 2, 1, "", "cascade"], [140, 2, 1, "", "cascade_backrefs"], [140, 2, 1, "", "collection_class"], [140, 2, 1, "", "comparator_factory"], [140, 2, 1, "", "distinct_target_key"], [140, 2, 1, "", "doc"], [140, 2, 1, "", "foreign_keys"], [140, 2, 1, "", "info"], [140, 2, 1, "", "innerjoin"], [140, 2, 1, "", "join_depth"], [140, 2, 1, "", "lazy"], [140, 2, 1, "", "load_on_pending"], [140, 2, 1, "", "omit_join"], [140, 2, 1, "", "order_by"], [140, 2, 1, "", "overlaps"], [140, 2, 1, "", "passive_deletes"], [140, 2, 1, "", "passive_updates"], [140, 2, 1, "", "post_update"], [140, 2, 1, "", "primaryjoin"], [140, 2, 1, "", "query_class"], [140, 2, 1, "", "remote_side"], [140, 2, 1, "", "secondary"], [140, 2, 1, "", "secondaryjoin"], [140, 2, 1, "", "single_parent"], [140, 2, 1, "", "sync_backref"], [140, 2, 1, "", "uselist"], [140, 2, 1, "", "viewonly"]], "sqlalchemy.orm.scoping": [[90, 3, 1, "", "scoped_session"]], "sqlalchemy.orm.scoping.scoped_session": [[90, 4, 1, "", "__call__"], [90, 4, 1, "", "__init__"], [90, 4, 1, "", "add"], [90, 4, 1, "", "add_all"], [90, 4, 1, "", "begin"], [90, 4, 1, "", "begin_nested"], [90, 4, 1, "", "bulk_insert_mappings"], [90, 4, 1, "", "bulk_save_objects"], [90, 4, 1, "", "bulk_update_mappings"], [90, 4, 1, "", "close"], [90, 4, 1, "", "close_all"], [90, 4, 1, "", "commit"], [90, 4, 1, "", "configure"], [90, 4, 1, "", "connection"], [90, 4, 1, "", "delete"], [90, 5, 1, "", "deleted"], [90, 5, 1, "", "dirty"], [90, 4, 1, "", "execute"], [90, 4, 1, "", "expire"], [90, 4, 1, "", "expire_all"], [90, 4, 1, "", "expunge"], [90, 4, 1, "", "expunge_all"], [90, 4, 1, "", "flush"], [90, 4, 1, "", "get"], [90, 4, 1, "", "get_bind"], [90, 4, 1, "", "identity_key"], [90, 5, 1, "", "info"], [90, 5, 1, "", "is_active"], [90, 4, 1, "", "is_modified"], [90, 4, 1, "", "merge"], [90, 5, 1, "", "new"], [90, 5, 1, "", "no_autoflush"], [90, 4, 1, "", "object_session"], [90, 4, 1, "", "query"], [90, 4, 1, "", "query_property"], [90, 4, 1, "", "refresh"], [90, 4, 1, "", "remove"], [90, 4, 1, "", "rollback"], [90, 4, 1, "", "scalar"], [90, 4, 1, "", "scalars"], [90, 5, 1, "", "session_factory"]], "sqlalchemy.orm.scoping.scoped_session.__call__.params": [[90, 2, 1, "", "**kw"]], "sqlalchemy.orm.scoping.scoped_session.begin.params": [[90, 2, 1, "", "nested"], [90, 2, 1, "", "subtransactions"]], "sqlalchemy.orm.scoping.scoped_session.bulk_insert_mappings.params": [[90, 2, 1, "", "mapper"], [90, 2, 1, "", "mappings"], [90, 2, 1, "", "render_nulls"], [90, 2, 1, "", "return_defaults"]], "sqlalchemy.orm.scoping.scoped_session.bulk_save_objects.params": [[90, 2, 1, "", "objects"], [90, 2, 1, "", "preserve_order"], [90, 2, 1, "", "return_defaults"], [90, 2, 1, "", "update_changed_only"]], "sqlalchemy.orm.scoping.scoped_session.bulk_update_mappings.params": [[90, 2, 1, "", "mapper"], [90, 2, 1, "", "mappings"]], "sqlalchemy.orm.scoping.scoped_session.connection.params": [[90, 2, 1, "", "**kw"], [90, 2, 1, "", "bind"], [90, 2, 1, "", "bind_arguments"], [90, 2, 1, "", "clause"], [90, 2, 1, "", "close_with_result"], [90, 2, 1, "", "execution_options"], [90, 2, 1, "", "mapper"]], "sqlalchemy.orm.scoping.scoped_session.execute.params": [[90, 2, 1, "", "**kw"], [90, 2, 1, "", "bind"], [90, 2, 1, "", "bind_arguments"], [90, 2, 1, "", "execution_options"], [90, 2, 1, "", "mapper"], [90, 2, 1, "", "params"], [90, 2, 1, "", "statement"]], "sqlalchemy.orm.scoping.scoped_session.expire.params": [[90, 2, 1, "", "attribute_names"], [90, 2, 1, "", "instance"]], "sqlalchemy.orm.scoping.scoped_session.flush.params": [[90, 2, 1, "", "objects"]], "sqlalchemy.orm.scoping.scoped_session.get.params": [[90, 2, 1, "", "entity"], [90, 2, 1, "", "execution_options"], [90, 2, 1, "", "ident"], [90, 2, 1, "", "options"], [90, 2, 1, "", "populate_existing"], [90, 2, 1, "", "with_for_update"]], "sqlalchemy.orm.scoping.scoped_session.get_bind.params": [[90, 2, 1, "", "clause"], [90, 2, 1, "", "mapper"]], "sqlalchemy.orm.scoping.scoped_session.is_modified.params": [[90, 2, 1, "", "include_collections"], [90, 2, 1, "", "instance"]], "sqlalchemy.orm.scoping.scoped_session.merge.params": [[90, 2, 1, "", "instance"], [90, 2, 1, "", "load"], [90, 2, 1, "", "options"]], "sqlalchemy.orm.scoping.scoped_session.params": [[90, 2, 1, "", "scopefunc"], [90, 2, 1, "", "session_factory"]], "sqlalchemy.orm.scoping.scoped_session.refresh.params": [[90, 2, 1, "", "attribute_names"], [90, 2, 1, "", "with_for_update"]], "sqlalchemy.orm.sessionmaker": [[146, 4, 1, "", "__call__"], [146, 4, 1, "", "__init__"], [146, 4, 1, "", "begin"], [146, 4, 1, "", "close_all"], [146, 4, 1, "", "configure"], [146, 4, 1, "", "identity_key"], [146, 4, 1, "", "object_session"]], "sqlalchemy.orm.sessionmaker.params": [[146, 2, 1, "", "**kw"], [146, 2, 1, "", "autocommit"], [146, 2, 1, "", "autoflush"], [146, 2, 1, "", "bind"], [146, 2, 1, "", "class_"], [146, 2, 1, "", "expire_on_commit"], [146, 2, 1, "", "info"]], "sqlalchemy.orm.synonym.params": [[129, 2, 1, "", "comparator_factory"], [129, 2, 1, "", "descriptor"], [129, 2, 1, "", "info"], [129, 2, 1, "", "map_column"], [129, 2, 1, "", "name"]], "sqlalchemy.orm.undefer.params": [[126, 2, 1, "", "*addl_attrs"], [126, 2, 1, "", "key"]], "sqlalchemy.orm.util": [[137, 3, 1, "", "AliasedClass"], [137, 3, 1, "", "AliasedInsp"], [132, 1, 1, "", "identity_key"], [146, 1, 1, "", "object_state"], [146, 1, 1, "", "was_deleted"]], "sqlalchemy.orm.validates.params": [[129, 2, 1, "", "*names"], [129, 2, 1, "", "include_backrefs"], [129, 2, 1, "", "include_removes"]], "sqlalchemy.orm.with_expression.params": [[126, 2, 1, "", "expr"], [126, 2, 1, "", "key"]], "sqlalchemy.orm.with_loader_criteria.params": [[137, 2, 1, "", "entity_or_base"], [137, 2, 1, "", "include_aliases"], [137, 2, 1, "", "propagate_to_loaders"], [137, 2, 1, "", "track_closure_variables"], [137, 2, 1, "", "where_criteria"]], "sqlalchemy.orm.with_parent.params": [[137, 2, 1, "", "from_entity"], [137, 2, 1, "", "instance"], [137, 2, 1, "", "property"]], "sqlalchemy.orm.with_polymorphic.params": [[122, 2, 1, "", "adapt_on_names"], [122, 2, 1, "", "aliased"], [122, 2, 1, "", "base"], [122, 2, 1, "", "classes"], [122, 2, 1, "", "flat"], [122, 2, 1, "", "innerjoin"], [122, 2, 1, "", "polymorphic_on"], [122, 2, 1, "", "selectable"]], "sqlalchemy.pool": [[51, 3, 1, "", "AssertionPool"], [51, 3, 1, "", "NullPool"], [51, 3, 1, "", "Pool"], [51, 3, 1, "", "QueuePool"], [51, 3, 1, "", "SingletonThreadPool"], [51, 3, 1, "", "StaticPool"], [51, 3, 1, "", "_ConnectionFairy"], [51, 3, 1, "", "_ConnectionRecord"]], "sqlalchemy.pool.AssertionPool": [[51, 4, 1, "", "dispose"], [51, 4, 1, "", "recreate"]], "sqlalchemy.pool.NullPool": [[51, 4, 1, "", "dispose"], [51, 4, 1, "", "recreate"]], "sqlalchemy.pool.Pool": [[51, 4, 1, "", "__init__"], [51, 4, 1, "", "connect"], [51, 4, 1, "", "dispose"], [51, 4, 1, "", "recreate"]], "sqlalchemy.pool.Pool.params": [[51, 2, 1, "", "creator"], [51, 2, 1, "", "dialect"], [51, 2, 1, "", "echo"], [51, 2, 1, "", "events"], [51, 2, 1, "", "logging_name"], [51, 2, 1, "", "pre_ping"], [51, 2, 1, "", "recycle"], [51, 2, 1, "", "reset_on_return"]], "sqlalchemy.pool.QueuePool": [[51, 4, 1, "", "__init__"], [51, 4, 1, "", "dispose"], [51, 4, 1, "", "recreate"]], "sqlalchemy.pool.QueuePool.params": [[51, 2, 1, "", "**kw"], [51, 2, 1, "", "creator"], [51, 2, 1, "", "max_overflow"], [51, 2, 1, "", "pool_size"], [51, 2, 1, "", "timeout"], [51, 2, 1, "", "use_lifo"]], "sqlalchemy.pool.SingletonThreadPool": [[51, 4, 1, "", "connect"], [51, 4, 1, "", "dispose"], [51, 4, 1, "", "recreate"]], "sqlalchemy.pool.SingletonThreadPool.params": [[51, 2, 1, "", "pool_size"]], "sqlalchemy.pool.StaticPool": [[51, 4, 1, "", "dispose"], [51, 4, 1, "", "recreate"]], "sqlalchemy.pool._ConnectionFairy": [[51, 5, 1, "", "_connection_record"], [51, 5, 1, "", "connection"], [51, 4, 1, "", "cursor"], [51, 5, 1, "", "dbapi_connection"], [51, 4, 1, "", "detach"], [51, 5, 1, "", "driver_connection"], [51, 5, 1, "", "info"], [51, 4, 1, "", "invalidate"], [51, 5, 1, "", "is_valid"], [51, 5, 1, "", "record_info"]], "sqlalchemy.pool._ConnectionFairy.invalidate.params": [[51, 2, 1, "", "e"], [51, 2, 1, "", "soft"]], "sqlalchemy.pool._ConnectionRecord": [[51, 5, 1, "", "connection"], [51, 5, 1, "", "dbapi_connection"], [51, 5, 1, "", "driver_connection"], [51, 5, 1, "", "info"], [51, 4, 1, "", "invalidate"], [51, 5, 1, "", "record_info"]], "sqlalchemy.pool._ConnectionRecord.invalidate.params": [[51, 2, 1, "", "e"], [51, 2, 1, "", "soft"]], "sqlalchemy.schema": [[34, 3, 1, "", "AddConstraint"], [32, 3, 1, "", "CheckConstraint"], [49, 3, 1, "", "Column"], [32, 3, 1, "", "ColumnCollectionConstraint"], [32, 3, 1, "", "ColumnCollectionMixin"], [35, 3, 1, "", "ColumnDefault"], [35, 3, 1, "", "Computed"], [32, 3, 1, "", "Constraint"], [34, 3, 1, "", "CreateColumn"], [34, 3, 1, "", "CreateIndex"], [34, 3, 1, "", "CreateSchema"], [34, 3, 1, "", "CreateSequence"], [34, 3, 1, "", "CreateTable"], [34, 3, 1, "", "DDL"], [34, 3, 1, "", "DDLElement"], [35, 3, 1, "", "DefaultClause"], [35, 3, 1, "", "DefaultGenerator"], [34, 3, 1, "", "DropConstraint"], [34, 3, 1, "", "DropIndex"], [34, 3, 1, "", "DropSchema"], [34, 3, 1, "", "DropSequence"], [34, 3, 1, "", "DropTable"], [35, 3, 1, "", "FetchedValue"], [32, 3, 1, "", "ForeignKey"], [32, 3, 1, "", "ForeignKeyConstraint"], [35, 3, 1, "", "Identity"], [32, 3, 1, "", "Index"], [49, 3, 1, "", "MetaData"], [32, 3, 1, "", "PrimaryKeyConstraint"], [49, 3, 1, "", "SchemaItem"], [35, 3, 1, "", "Sequence"], [49, 3, 1, "", "Table"], [49, 3, 1, "", "ThreadLocalMetaData"], [32, 3, 1, "", "UniqueConstraint"], [34, 3, 1, "", "_CreateDropBase"], [32, 1, 1, "", "conv"], [34, 1, 1, "", "sort_tables"], [34, 1, 1, "", "sort_tables_and_constraints"]], "sqlalchemy.schema.CheckConstraint": [[32, 4, 1, "", "__init__"], [32, 4, 1, "", "argument_for"], [32, 5, 1, "", "columns"], [32, 4, 1, "", "contains_column"], [32, 4, 1, "", "copy"], [32, 5, 1, "", "dialect_kwargs"], [32, 5, 1, "", "dialect_options"], [32, 4, 1, "", "get_children"], [32, 5, 1, "", "info"], [32, 5, 1, "", "kwargs"]], "sqlalchemy.schema.CheckConstraint.argument_for.params": [[32, 2, 1, "", "argument_name"], [32, 2, 1, "", "default"], [32, 2, 1, "", "dialect_name"]], "sqlalchemy.schema.CheckConstraint.params": [[32, 2, 1, "", "deferrable"], [32, 2, 1, "", "info"], [32, 2, 1, "", "initially"], [32, 2, 1, "", "name"], [32, 2, 1, "", "sqltext"]], "sqlalchemy.schema.Column": [[49, 4, 1, "", "__eq__"], [49, 4, 1, "", "__init__"], [49, 4, 1, "", "__le__"], [49, 4, 1, "", "__lt__"], [49, 4, 1, "", "__ne__"], [49, 4, 1, "", "all_"], [49, 5, 1, "", "anon_key_label"], [49, 5, 1, "", "anon_label"], [49, 4, 1, "", "any_"], [49, 4, 1, "", "argument_for"], [49, 4, 1, "", "asc"], [49, 4, 1, "", "between"], [49, 4, 1, "", "bool_op"], [49, 4, 1, "", "cast"], [49, 4, 1, "", "collate"], [49, 4, 1, "", "compare"], [49, 4, 1, "", "compile"], [49, 4, 1, "", "concat"], [49, 4, 1, "", "contains"], [49, 4, 1, "", "copy"], [49, 4, 1, "", "desc"], [49, 5, 1, "", "dialect_kwargs"], [49, 5, 1, "", "dialect_options"], [49, 4, 1, "", "distinct"], [49, 4, 1, "", "endswith"], [49, 5, 1, "", "expression"], [49, 5, 1, "", "foreign_keys"], [49, 4, 1, "", "get_children"], [49, 4, 1, "", "ilike"], [49, 4, 1, "", "in_"], [49, 5, 1, "", "index"], [49, 5, 1, "", "info"], [49, 5, 1, "", "inherit_cache"], [49, 4, 1, "", "is_"], [49, 4, 1, "", "is_distinct_from"], [49, 4, 1, "", "is_not"], [49, 4, 1, "", "is_not_distinct_from"], [49, 4, 1, "", "isnot"], [49, 4, 1, "", "isnot_distinct_from"], [49, 5, 1, "", "key"], [49, 5, 1, "", "kwargs"], [49, 4, 1, "", "label"], [49, 4, 1, "", "like"], [49, 4, 1, "", "match"], [49, 4, 1, "", "memoized_instancemethod"], [49, 4, 1, "", "not_ilike"], [49, 4, 1, "", "not_in"], [49, 4, 1, "", "not_like"], [49, 4, 1, "", "notilike"], [49, 4, 1, "", "notin_"], [49, 4, 1, "", "notlike"], [49, 4, 1, "", "nulls_first"], [49, 4, 1, "", "nulls_last"], [49, 4, 1, "", "nullsfirst"], [49, 4, 1, "", "nullslast"], [49, 4, 1, "", "op"], [49, 4, 1, "", "operate"], [49, 4, 1, "", "params"], [49, 4, 1, "", "references"], [49, 4, 1, "", "regexp_match"], [49, 4, 1, "", "regexp_replace"], [49, 4, 1, "", "reverse_operate"], [49, 4, 1, "", "self_group"], [49, 4, 1, "", "shares_lineage"], [49, 4, 1, "", "startswith"], [49, 5, 1, "", "timetuple"], [49, 5, 1, "", "unique"], [49, 4, 1, "", "unique_params"]], "sqlalchemy.schema.Column.argument_for.params": [[49, 2, 1, "", "argument_name"], [49, 2, 1, "", "default"], [49, 2, 1, "", "dialect_name"]], "sqlalchemy.schema.Column.compile.params": [[49, 2, 1, "", "bind"], [49, 2, 1, "", "column_keys"], [49, 2, 1, "", "compile_kwargs"], [49, 2, 1, "", "dialect"]], "sqlalchemy.schema.Column.contains.params": [[49, 2, 1, "", "autoescape"], [49, 2, 1, "", "escape"], [49, 2, 1, "", "other"]], "sqlalchemy.schema.Column.endswith.params": [[49, 2, 1, "", "autoescape"], [49, 2, 1, "", "escape"], [49, 2, 1, "", "other"]], "sqlalchemy.schema.Column.ilike.params": [[49, 2, 1, "", "escape"], [49, 2, 1, "", "other"]], "sqlalchemy.schema.Column.in_.params": [[49, 2, 1, "", "other"]], "sqlalchemy.schema.Column.like.params": [[49, 2, 1, "", "escape"], [49, 2, 1, "", "other"]], "sqlalchemy.schema.Column.op.params": [[49, 2, 1, "", "is_comparison"], [49, 2, 1, "", "operator"], [49, 2, 1, "", "precedence"], [49, 2, 1, "", "return_type"]], "sqlalchemy.schema.Column.operate.params": [[49, 2, 1, "", "**kwargs"], [49, 2, 1, "", "*other"], [49, 2, 1, "", "op"]], "sqlalchemy.schema.Column.params": [[49, 2, 1, "", "*args"], [49, 2, 1, "", "autoincrement"], [49, 2, 1, "", "comment"], [49, 2, 1, "", "default"], [49, 2, 1, "", "doc"], [49, 2, 1, "", "index"], [49, 2, 1, "", "info"], [49, 2, 1, "", "key"], [49, 2, 1, "", "name"], [49, 2, 1, "", "nullable"], [49, 2, 1, "", "onupdate"], [49, 2, 1, "", "primary_key"], [49, 2, 1, "", "quote"], [49, 2, 1, "", "server_default"], [49, 2, 1, "", "server_onupdate"], [49, 2, 1, "", "system"], [49, 2, 1, "", "type_"], [49, 2, 1, "", "unique"]], "sqlalchemy.schema.Column.regexp_match.params": [[49, 2, 1, "", "flags"], [49, 2, 1, "", "pattern"]], "sqlalchemy.schema.Column.regexp_replace.params": [[49, 2, 1, "", "flags"], [49, 2, 1, "", "pattern"]], "sqlalchemy.schema.Column.startswith.params": [[49, 2, 1, "", "autoescape"], [49, 2, 1, "", "escape"], [49, 2, 1, "", "other"]], "sqlalchemy.schema.ColumnCollectionConstraint": [[32, 4, 1, "", "__init__"], [32, 4, 1, "", "argument_for"], [32, 5, 1, "", "columns"], [32, 4, 1, "", "contains_column"], [32, 4, 1, "", "copy"], [32, 5, 1, "", "dialect_kwargs"], [32, 5, 1, "", "dialect_options"], [32, 4, 1, "", "get_children"], [32, 5, 1, "", "info"], [32, 5, 1, "", "kwargs"]], "sqlalchemy.schema.ColumnCollectionConstraint.argument_for.params": [[32, 2, 1, "", "argument_name"], [32, 2, 1, "", "default"], [32, 2, 1, "", "dialect_name"]], "sqlalchemy.schema.ColumnCollectionConstraint.params": [[32, 2, 1, "", "**kw"], [32, 2, 1, "", "*columns"], [32, 2, 1, "", "deferrable"], [32, 2, 1, "", "initially"], [32, 2, 1, "", "name"]], "sqlalchemy.schema.ColumnCollectionMixin": [[32, 5, 1, "", "columns"]], "sqlalchemy.schema.Computed": [[35, 4, 1, "", "__init__"], [35, 4, 1, "", "copy"]], "sqlalchemy.schema.Computed.params": [[35, 2, 1, "", "persisted"], [35, 2, 1, "", "sqltext"]], "sqlalchemy.schema.Constraint": [[32, 4, 1, "", "__init__"], [32, 4, 1, "", "copy"]], "sqlalchemy.schema.Constraint.params": [[32, 2, 1, "", "**dialect_kw"], [32, 2, 1, "", "_create_rule"], [32, 2, 1, "", "_type_bound"], [32, 2, 1, "", "deferrable"], [32, 2, 1, "", "info"], [32, 2, 1, "", "initially"], [32, 2, 1, "", "name"]], "sqlalchemy.schema.CreateIndex": [[34, 4, 1, "", "__init__"]], "sqlalchemy.schema.CreateIndex.params": [[34, 2, 1, "", "bind"], [34, 2, 1, "", "element"], [34, 2, 1, "", "if_not_exists"], [34, 2, 1, "", "on"]], "sqlalchemy.schema.CreateSchema": [[34, 4, 1, "", "__init__"]], "sqlalchemy.schema.CreateTable": [[34, 4, 1, "", "__init__"]], "sqlalchemy.schema.CreateTable.params": [[34, 2, 1, "", "bind"], [34, 2, 1, "", "element"], [34, 2, 1, "", "if_not_exists"], [34, 2, 1, "", "include_foreign_key_constraints"], [34, 2, 1, "", "on"]], "sqlalchemy.schema.DDL": [[34, 4, 1, "", "__init__"]], "sqlalchemy.schema.DDL.params": [[34, 2, 1, "", "bind"], [34, 2, 1, "", "context"], [34, 2, 1, "", "statement"]], "sqlalchemy.schema.DDLElement": [[34, 4, 1, "", "__call__"], [34, 4, 1, "", "against"], [34, 5, 1, "", "bind"], [34, 5, 1, "", "callable_"], [34, 5, 1, "", "dialect"], [34, 4, 1, "", "execute"], [34, 4, 1, "", "execute_if"], [34, 5, 1, "", "on"], [34, 5, 1, "", "target"]], "sqlalchemy.schema.DDLElement.against.params": [[34, 2, 1, "", "target"]], "sqlalchemy.schema.DDLElement.execute.params": [[34, 2, 1, "", "bind"], [34, 2, 1, "", "target"]], "sqlalchemy.schema.DDLElement.execute_if.params": [[34, 2, 1, "", "callable_"], [34, 2, 1, "", "dialect"], [34, 2, 1, "", "state"]], "sqlalchemy.schema.DropIndex": [[34, 4, 1, "", "__init__"]], "sqlalchemy.schema.DropIndex.params": [[34, 2, 1, "", "bind"], [34, 2, 1, "", "element"], [34, 2, 1, "", "if_exists"], [34, 2, 1, "", "on"]], "sqlalchemy.schema.DropSchema": [[34, 4, 1, "", "__init__"]], "sqlalchemy.schema.DropTable": [[34, 4, 1, "", "__init__"]], "sqlalchemy.schema.DropTable.params": [[34, 2, 1, "", "bind"], [34, 2, 1, "", "element"], [34, 2, 1, "", "if_exists"], [34, 2, 1, "", "on"]], "sqlalchemy.schema.ForeignKey": [[32, 4, 1, "", "__init__"], [32, 4, 1, "", "argument_for"], [32, 5, 1, "", "column"], [32, 4, 1, "", "copy"], [32, 5, 1, "", "dialect_kwargs"], [32, 5, 1, "", "dialect_options"], [32, 4, 1, "", "get_children"], [32, 4, 1, "", "get_referent"], [32, 5, 1, "", "info"], [32, 5, 1, "", "kwargs"], [32, 4, 1, "", "references"], [32, 5, 1, "", "target_fullname"]], "sqlalchemy.schema.ForeignKey.argument_for.params": [[32, 2, 1, "", "argument_name"], [32, 2, 1, "", "default"], [32, 2, 1, "", "dialect_name"]], "sqlalchemy.schema.ForeignKey.params": [[32, 2, 1, "", "**dialect_kw"], [32, 2, 1, "", "column"], [32, 2, 1, "", "deferrable"], [32, 2, 1, "", "info"], [32, 2, 1, "", "initially"], [32, 2, 1, "", "link_to_name"], [32, 2, 1, "", "match"], [32, 2, 1, "", "name"], [32, 2, 1, "", "ondelete"], [32, 2, 1, "", "onupdate"], [32, 2, 1, "", "use_alter"]], "sqlalchemy.schema.ForeignKeyConstraint": [[32, 4, 1, "", "__init__"], [32, 4, 1, "", "argument_for"], [32, 5, 1, "", "column_keys"], [32, 5, 1, "", "columns"], [32, 4, 1, "", "contains_column"], [32, 4, 1, "", "copy"], [32, 5, 1, "", "dialect_kwargs"], [32, 5, 1, "", "dialect_options"], [32, 5, 1, "", "elements"], [32, 4, 1, "", "get_children"], [32, 5, 1, "", "info"], [32, 5, 1, "", "kwargs"], [32, 5, 1, "", "referred_table"]], "sqlalchemy.schema.ForeignKeyConstraint.argument_for.params": [[32, 2, 1, "", "argument_name"], [32, 2, 1, "", "default"], [32, 2, 1, "", "dialect_name"]], "sqlalchemy.schema.ForeignKeyConstraint.params": [[32, 2, 1, "", "**dialect_kw"], [32, 2, 1, "", "columns"], [32, 2, 1, "", "deferrable"], [32, 2, 1, "", "info"], [32, 2, 1, "", "initially"], [32, 2, 1, "", "link_to_name"], [32, 2, 1, "", "match"], [32, 2, 1, "", "name"], [32, 2, 1, "", "ondelete"], [32, 2, 1, "", "onupdate"], [32, 2, 1, "", "refcolumns"], [32, 2, 1, "", "use_alter"]], "sqlalchemy.schema.Identity": [[35, 4, 1, "", "__init__"], [35, 4, 1, "", "copy"]], "sqlalchemy.schema.Identity.params": [[35, 2, 1, "", "always"], [35, 2, 1, "", "cache"], [35, 2, 1, "", "cycle"], [35, 2, 1, "", "increment"], [35, 2, 1, "", "maxvalue"], [35, 2, 1, "", "minvalue"], [35, 2, 1, "", "nomaxvalue"], [35, 2, 1, "", "nominvalue"], [35, 2, 1, "", "on_null"], [35, 2, 1, "", "order"], [35, 2, 1, "", "start"]], "sqlalchemy.schema.Index": [[32, 4, 1, "", "__init__"], [32, 4, 1, "", "argument_for"], [32, 5, 1, "", "bind"], [32, 5, 1, "", "columns"], [32, 4, 1, "", "create"], [32, 5, 1, "", "dialect_kwargs"], [32, 5, 1, "", "dialect_options"], [32, 4, 1, "", "drop"], [32, 4, 1, "", "get_children"], [32, 5, 1, "", "info"], [32, 5, 1, "", "kwargs"]], "sqlalchemy.schema.Index.argument_for.params": [[32, 2, 1, "", "argument_name"], [32, 2, 1, "", "default"], [32, 2, 1, "", "dialect_name"]], "sqlalchemy.schema.Index.params": [[32, 2, 1, "", "**kw"], [32, 2, 1, "", "*expressions"], [32, 2, 1, "", "info"], [32, 2, 1, "", "name"], [32, 2, 1, "", "quote"], [32, 2, 1, "", "unique"]], "sqlalchemy.schema.MetaData": [[49, 4, 1, "", "__init__"], [49, 5, 1, "", "bind"], [49, 4, 1, "", "clear"], [49, 4, 1, "", "create_all"], [49, 4, 1, "", "drop_all"], [49, 4, 1, "", "is_bound"], [49, 4, 1, "", "reflect"], [49, 4, 1, "", "remove"], [49, 5, 1, "", "sorted_tables"], [49, 5, 1, "", "tables"]], "sqlalchemy.schema.MetaData.create_all.params": [[49, 2, 1, "", "bind"], [49, 2, 1, "", "checkfirst"], [49, 2, 1, "", "tables"]], "sqlalchemy.schema.MetaData.drop_all.params": [[49, 2, 1, "", "bind"], [49, 2, 1, "", "checkfirst"], [49, 2, 1, "", "tables"]], "sqlalchemy.schema.MetaData.params": [[49, 2, 1, "", "bind"], [49, 2, 1, "", "info"], [49, 2, 1, "", "naming_convention"], [49, 2, 1, "", "quote_schema"], [49, 2, 1, "", "schema"]], "sqlalchemy.schema.MetaData.reflect.params": [[49, 2, 1, "", "**dialect_kwargs"], [49, 2, 1, "", "autoload_replace"], [49, 2, 1, "", "bind"], [49, 2, 1, "", "extend_existing"], [49, 2, 1, "", "only"], [49, 2, 1, "", "resolve_fks"], [49, 2, 1, "", "schema"], [49, 2, 1, "", "views"]], "sqlalchemy.schema.PrimaryKeyConstraint": [[32, 4, 1, "", "argument_for"], [32, 5, 1, "", "columns"], [32, 4, 1, "", "contains_column"], [32, 4, 1, "", "copy"], [32, 5, 1, "", "dialect_kwargs"], [32, 5, 1, "", "dialect_options"], [32, 4, 1, "", "get_children"], [32, 5, 1, "", "info"], [32, 5, 1, "", "kwargs"]], "sqlalchemy.schema.PrimaryKeyConstraint.argument_for.params": [[32, 2, 1, "", "argument_name"], [32, 2, 1, "", "default"], [32, 2, 1, "", "dialect_name"]], "sqlalchemy.schema.SchemaItem": [[49, 5, 1, "", "info"]], "sqlalchemy.schema.Sequence": [[35, 4, 1, "", "__init__"], [35, 5, 1, "", "bind"], [35, 4, 1, "", "create"], [35, 4, 1, "", "drop"], [35, 4, 1, "", "next_value"]], "sqlalchemy.schema.Sequence.params": [[35, 2, 1, "", "cache"], [35, 2, 1, "", "cycle"], [35, 2, 1, "", "data_type"], [35, 2, 1, "", "for_update"], [35, 2, 1, "", "increment"], [35, 2, 1, "", "maxvalue"], [35, 2, 1, "", "metadata"], [35, 2, 1, "", "minvalue"], [35, 2, 1, "", "name"], [35, 2, 1, "", "nomaxvalue"], [35, 2, 1, "", "nominvalue"], [35, 2, 1, "", "optional"], [35, 2, 1, "", "order"], [35, 2, 1, "", "quote"], [35, 2, 1, "", "quote_schema"], [35, 2, 1, "", "schema"], [35, 2, 1, "", "start"]], "sqlalchemy.schema.Table": [[49, 4, 1, "", "__init__"], [49, 4, 1, "", "add_is_dependent_on"], [49, 4, 1, "", "alias"], [49, 4, 1, "", "append_column"], [49, 4, 1, "", "append_constraint"], [49, 4, 1, "", "argument_for"], [49, 5, 1, "", "bind"], [49, 5, 1, "", "c"], [49, 5, 1, "", "columns"], [49, 4, 1, "", "compare"], [49, 4, 1, "", "compile"], [49, 5, 1, "", "constraints"], [49, 4, 1, "", "corresponding_column"], [49, 4, 1, "", "create"], [49, 4, 1, "", "delete"], [49, 5, 1, "", "description"], [49, 5, 1, "", "dialect_kwargs"], [49, 5, 1, "", "dialect_options"], [49, 4, 1, "", "drop"], [49, 5, 1, "", "entity_namespace"], [49, 4, 1, "", "exists"], [49, 5, 1, "", "exported_columns"], [49, 5, 1, "", "foreign_key_constraints"], [49, 5, 1, "", "foreign_keys"], [49, 4, 1, "", "get_children"], [49, 5, 1, "", "implicit_returning"], [49, 5, 1, "", "indexes"], [49, 5, 1, "", "info"], [49, 5, 1, "", "inherit_cache"], [49, 4, 1, "", "insert"], [49, 4, 1, "", "is_derived_from"], [49, 4, 1, "", "join"], [49, 5, 1, "", "key"], [49, 5, 1, "", "kwargs"], [49, 4, 1, "", "lateral"], [49, 4, 1, "", "memoized_instancemethod"], [49, 4, 1, "", "outerjoin"], [49, 4, 1, "", "params"], [49, 5, 1, "", "primary_key"], [49, 4, 1, "", "replace_selectable"], [49, 5, 1, "", "schema"], [49, 4, 1, "", "select"], [49, 4, 1, "", "self_group"], [49, 4, 1, "", "table_valued"], [49, 4, 1, "", "tablesample"], [49, 4, 1, "", "to_metadata"], [49, 4, 1, "", "tometadata"], [49, 4, 1, "", "unique_params"], [49, 4, 1, "", "update"]], "sqlalchemy.schema.Table.append_column.params": [[49, 2, 1, "", "replace_existing"]], "sqlalchemy.schema.Table.argument_for.params": [[49, 2, 1, "", "argument_name"], [49, 2, 1, "", "default"], [49, 2, 1, "", "dialect_name"]], "sqlalchemy.schema.Table.compile.params": [[49, 2, 1, "", "bind"], [49, 2, 1, "", "column_keys"], [49, 2, 1, "", "compile_kwargs"], [49, 2, 1, "", "dialect"]], "sqlalchemy.schema.Table.corresponding_column.params": [[49, 2, 1, "", "column"], [49, 2, 1, "", "require_embedded"]], "sqlalchemy.schema.Table.join.params": [[49, 2, 1, "", "full"], [49, 2, 1, "", "isouter"], [49, 2, 1, "", "onclause"], [49, 2, 1, "", "right"]], "sqlalchemy.schema.Table.outerjoin.params": [[49, 2, 1, "", "full"], [49, 2, 1, "", "onclause"], [49, 2, 1, "", "right"]], "sqlalchemy.schema.Table.params": [[49, 2, 1, "", "**kw"], [49, 2, 1, "", "*args"], [49, 2, 1, "", "autoload"], [49, 2, 1, "", "autoload_replace"], [49, 2, 1, "", "autoload_with"], [49, 2, 1, "", "comment"], [49, 2, 1, "", "extend_existing"], [49, 2, 1, "", "implicit_returning"], [49, 2, 1, "", "include_columns"], [49, 2, 1, "", "info"], [49, 2, 1, "", "keep_existing"], [49, 2, 1, "", "listeners"], [49, 2, 1, "", "metadata"], [49, 2, 1, "", "must_exist"], [49, 2, 1, "", "name"], [49, 2, 1, "", "prefixes"], [49, 2, 1, "", "quote"], [49, 2, 1, "", "quote_schema"], [49, 2, 1, "", "resolve_fks"], [49, 2, 1, "", "schema"]], "sqlalchemy.schema.Table.select.params": [[49, 2, 1, "", "**kwargs"], [49, 2, 1, "", "whereclause"]], "sqlalchemy.schema.Table.to_metadata.params": [[49, 2, 1, "", "metadata"], [49, 2, 1, "", "name"], [49, 2, 1, "", "referred_schema_fn"], [49, 2, 1, "", "schema"]], "sqlalchemy.schema.ThreadLocalMetaData": [[49, 4, 1, "", "__init__"], [49, 5, 1, "", "bind"], [49, 4, 1, "", "dispose"], [49, 4, 1, "", "is_bound"]], "sqlalchemy.schema.UniqueConstraint": [[32, 4, 1, "", "__init__"], [32, 4, 1, "", "argument_for"], [32, 5, 1, "", "columns"], [32, 4, 1, "", "contains_column"], [32, 4, 1, "", "copy"], [32, 5, 1, "", "dialect_kwargs"], [32, 5, 1, "", "dialect_options"], [32, 4, 1, "", "get_children"], [32, 5, 1, "", "info"], [32, 5, 1, "", "kwargs"]], "sqlalchemy.schema.UniqueConstraint.argument_for.params": [[32, 2, 1, "", "argument_name"], [32, 2, 1, "", "default"], [32, 2, 1, "", "dialect_name"]], "sqlalchemy.schema.UniqueConstraint.params": [[32, 2, 1, "", "**kw"], [32, 2, 1, "", "*columns"], [32, 2, 1, "", "deferrable"], [32, 2, 1, "", "initially"], [32, 2, 1, "", "name"]], "sqlalchemy.schema.sort_tables.params": [[34, 2, 1, "", "extra_dependencies"], [34, 2, 1, "", "skip_fn"], [34, 2, 1, "", "tables"]], "sqlalchemy.schema.sort_tables_and_constraints.params": [[34, 2, 1, "", "extra_dependencies"], [34, 2, 1, "", "filter_fn"], [34, 2, 1, "", "tables"]], "sqlalchemy.sql.base": [[43, 3, 1, "", "DialectKWArgs"]], "sqlalchemy.sql.base.DialectKWArgs": [[43, 4, 1, "", "argument_for"], [43, 5, 1, "", "dialect_kwargs"], [43, 5, 1, "", "dialect_options"], [43, 5, 1, "", "kwargs"]], "sqlalchemy.sql.base.DialectKWArgs.argument_for.params": [[43, 2, 1, "", "argument_name"], [43, 2, 1, "", "default"], [43, 2, 1, "", "dialect_name"]], "sqlalchemy.sql.compiler": [[48, 3, 1, "", "DDLCompiler"], [48, 3, 1, "", "GenericTypeCompiler"], [48, 3, 1, "", "IdentifierPreparer"], [48, 3, 1, "", "SQLCompiler"], [48, 3, 1, "", "StrSQLCompiler"]], "sqlalchemy.sql.compiler.DDLCompiler": [[48, 4, 1, "", "__init__"], [48, 5, 1, "", "compile_state"], [48, 4, 1, "", "construct_params"], [48, 4, 1, "", "define_constraint_remote_table"], [48, 5, 1, "", "dml_compile_state"], [48, 5, 1, "", "execution_options"], [48, 5, 1, "", "params"], [48, 5, 1, "", "sql_compiler"]], "sqlalchemy.sql.compiler.DDLCompiler.construct_params.params": [[48, 2, 1, "", "params"]], "sqlalchemy.sql.compiler.DDLCompiler.params": [[48, 2, 1, "", "compile_kwargs"], [48, 2, 1, "", "dialect"], [48, 2, 1, "", "schema_translate_map"], [48, 2, 1, "", "statement"]], "sqlalchemy.sql.compiler.IdentifierPreparer": [[48, 4, 1, "", "__init__"], [48, 4, 1, "", "format_column"], [48, 4, 1, "", "format_label_name"], [48, 4, 1, "", "format_schema"], [48, 4, 1, "", "format_table"], [48, 4, 1, "", "format_table_seq"], [48, 4, 1, "", "quote"], [48, 4, 1, "", "quote_identifier"], [48, 4, 1, "", "quote_schema"], [48, 5, 1, "", "schema_for_object"], [48, 4, 1, "", "unformat_identifiers"], [48, 4, 1, "", "validate_sql_phrase"]], "sqlalchemy.sql.compiler.IdentifierPreparer.quote.params": [[48, 2, 1, "", "force"], [48, 2, 1, "", "ident"]], "sqlalchemy.sql.compiler.IdentifierPreparer.quote_schema.params": [[48, 2, 1, "", "force"], [48, 2, 1, "", "schema"]], "sqlalchemy.sql.compiler.SQLCompiler": [[48, 4, 1, "", "__init__"], [48, 5, 1, "", "ansi_bind_rules"], [48, 4, 1, "", "construct_params"], [48, 5, 1, "", "current_executable"], [48, 4, 1, "", "default_from"], [48, 4, 1, "", "delete_extra_from_clause"], [48, 5, 1, "", "escaped_bind_names"], [48, 4, 1, "", "get_select_precolumns"], [48, 4, 1, "", "group_by_clause"], [48, 5, 1, "", "has_out_parameters"], [48, 5, 1, "", "insert_single_values_expr"], [48, 5, 1, "", "isdelete"], [48, 5, 1, "", "literal_execute_params"], [48, 4, 1, "", "order_by_clause"], [48, 5, 1, "", "params"], [48, 5, 1, "", "positiontup"], [48, 5, 1, "", "post_compile_params"], [48, 5, 1, "", "postfetch_lastrowid"], [48, 4, 1, "", "render_literal_value"], [48, 5, 1, "", "render_table_with_column_in_update_from"], [48, 5, 1, "", "returning"], [48, 5, 1, "", "returning_precedes_values"], [48, 5, 1, "", "sql_compiler"], [48, 5, 1, "", "translate_select_structure"], [48, 4, 1, "", "update_from_clause"], [48, 4, 1, "", "update_limit_clause"], [48, 4, 1, "", "update_tables_clause"]], "sqlalchemy.sql.compiler.SQLCompiler.params": [[48, 2, 1, "", "column_keys"], [48, 2, 1, "", "dialect"], [48, 2, 1, "", "for_executemany"], [48, 2, 1, "", "kwargs"], [48, 2, 1, "", "statement"]], "sqlalchemy.sql.compiler.StrSQLCompiler": [[48, 4, 1, "", "delete_extra_from_clause"], [48, 4, 1, "", "update_from_clause"]], "sqlalchemy.sql.elements": [[56, 3, 1, "", "WrapsColumnExpression"]], "sqlalchemy.sql": [[42, 0, 0, "-", "expression"], [61, 0, 0, "-", "visitors"]], "sqlalchemy.sql.expression": [[54, 3, 1, "", "Alias"], [54, 3, 1, "", "AliasedReturnsRows"], [56, 3, 1, "", "BinaryExpression"], [56, 3, 1, "", "BindParameter"], [54, 3, 1, "", "CTE"], [43, 3, 1, "", "CacheKey"], [56, 3, 1, "", "Case"], [56, 3, 1, "", "Cast"], [43, 3, 1, "", "ClauseElement"], [56, 3, 1, "", "ClauseList"], [56, 3, 1, "", "ColumnClause"], [56, 3, 1, "", "ColumnCollection"], [56, 3, 1, "", "ColumnElement"], [56, 3, 1, "", "ColumnOperators"], [54, 3, 1, "", "CompoundSelect"], [36, 3, 1, "", "Delete"], [54, 3, 1, "", "Executable"], [54, 3, 1, "", "Exists"], [56, 3, 1, "", "Extract"], [56, 3, 1, "", "False_"], [54, 3, 1, "", "FromClause"], [56, 3, 1, "", "FunctionFilter"], [54, 3, 1, "", "GenerativeSelect"], [54, 3, 1, "", "HasCTE"], [54, 3, 1, "", "HasPrefixes"], [54, 3, 1, "", "HasSuffixes"], [36, 3, 1, "", "Insert"], [54, 3, 1, "", "Join"], [54, 7, 1, "", "LABEL_STYLE_DEFAULT"], [54, 7, 1, "", "LABEL_STYLE_DISAMBIGUATE_ONLY"], [54, 7, 1, "", "LABEL_STYLE_NONE"], [54, 7, 1, "", "LABEL_STYLE_TABLENAME_PLUS_COL"], [56, 3, 1, "", "Label"], [43, 3, 1, "", "LambdaElement"], [54, 3, 1, "", "Lateral"], [56, 3, 1, "", "Null"], [56, 3, 1, "", "Operators"], [56, 3, 1, "", "Over"], [54, 3, 1, "", "ReturnsRows"], [54, 3, 1, "", "ScalarSelect"], [54, 3, 1, "", "Select"], [54, 3, 1, "", "SelectBase"], [54, 3, 1, "", "Selectable"], [43, 3, 1, "", "StatementLambdaElement"], [54, 3, 1, "", "Subquery"], [54, 3, 1, "", "TableClause"], [54, 3, 1, "", "TableSample"], [54, 3, 1, "", "TableValuedAlias"], [56, 3, 1, "", "TextClause"], [54, 3, 1, "", "TextualSelect"], [56, 3, 1, "", "True_"], [56, 3, 1, "", "Tuple"], [56, 3, 1, "", "TypeCoerce"], [56, 3, 1, "", "UnaryExpression"], [36, 3, 1, "", "Update"], [36, 3, 1, "", "UpdateBase"], [54, 3, 1, "", "Values"], [36, 3, 1, "", "ValuesBase"], [56, 3, 1, "", "WithinGroup"], [54, 1, 1, "", "alias"], [56, 1, 1, "", "all_"], [56, 1, 1, "", "and_"], [56, 1, 1, "", "any_"], [56, 1, 1, "", "asc"], [56, 1, 1, "", "between"], [56, 1, 1, "", "bindparam"], [56, 1, 1, "", "case"], [56, 1, 1, "", "cast"], [56, 1, 1, "", "collate"], [56, 1, 1, "", "column"], [54, 1, 1, "", "cte"], [56, 3, 1, "", "custom_op"], [36, 1, 1, "", "delete"], [56, 1, 1, "", "desc"], [56, 1, 1, "", "distinct"], [54, 1, 1, "", "except_"], [54, 1, 1, "", "except_all"], [54, 1, 1, "", "exists"], [56, 1, 1, "", "extract"], [56, 1, 1, "", "false"], [56, 7, 1, "", "func"], [56, 1, 1, "", "funcfilter"], [36, 1, 1, "", "insert"], [54, 1, 1, "", "intersect"], [54, 1, 1, "", "intersect_all"], [54, 1, 1, "", "join"], [56, 1, 1, "", "label"], [56, 1, 1, "", "lambda_stmt"], [54, 1, 1, "", "lateral"], [56, 1, 1, "", "literal"], [56, 1, 1, "", "literal_column"], [56, 1, 1, "", "not_"], [56, 1, 1, "", "null"], [56, 1, 1, "", "nulls_first"], [56, 1, 1, "", "nulls_last"], [56, 1, 1, "", "or_"], [54, 1, 1, "", "outerjoin"], [56, 1, 1, "", "outparam"], [56, 1, 1, "", "over"], [56, 3, 1, "", "quoted_name"], [54, 1, 1, "", "select"], [54, 1, 1, "", "table"], [54, 1, 1, "", "tablesample"], [56, 1, 1, "", "text"], [56, 1, 1, "", "true"], [56, 1, 1, "", "tuple_"], [56, 1, 1, "", "type_coerce"], [54, 1, 1, "", "union"], [54, 1, 1, "", "union_all"], [36, 1, 1, "", "update"], [54, 1, 1, "", "values"], [56, 1, 1, "", "within_group"]], "sqlalchemy.sql.expression.Alias": [[54, 5, 1, "", "inherit_cache"]], "sqlalchemy.sql.expression.AliasedReturnsRows": [[54, 5, 1, "", "description"], [54, 4, 1, "", "is_derived_from"], [54, 5, 1, "", "original"]], "sqlalchemy.sql.expression.BinaryExpression": [[56, 4, 1, "", "self_group"]], "sqlalchemy.sql.expression.BindParameter": [[56, 4, 1, "", "__init__"], [56, 5, 1, "", "effective_value"], [56, 5, 1, "", "inherit_cache"], [56, 4, 1, "", "render_literal_execute"]], "sqlalchemy.sql.expression.CTE": [[54, 4, 1, "", "alias"], [54, 4, 1, "", "union"], [54, 4, 1, "", "union_all"]], "sqlalchemy.sql.expression.CTE.union.params": [[54, 2, 1, "", "*other"]], "sqlalchemy.sql.expression.CTE.union_all.params": [[54, 2, 1, "", "*other"]], "sqlalchemy.sql.expression.CacheKey": [[43, 4, 1, "", "to_offline_string"]], "sqlalchemy.sql.expression.Case": [[56, 4, 1, "", "__init__"]], "sqlalchemy.sql.expression.Cast": [[56, 4, 1, "", "__init__"]], "sqlalchemy.sql.expression.ClauseElement": [[43, 4, 1, "", "compare"], [43, 4, 1, "", "compile"], [43, 4, 1, "", "get_children"], [43, 5, 1, "", "inherit_cache"], [43, 4, 1, "", "memoized_instancemethod"], [43, 4, 1, "", "params"], [43, 4, 1, "", "self_group"], [43, 4, 1, "", "unique_params"]], "sqlalchemy.sql.expression.ClauseElement.compile.params": [[43, 2, 1, "", "bind"], [43, 2, 1, "", "column_keys"], [43, 2, 1, "", "compile_kwargs"], [43, 2, 1, "", "dialect"]], "sqlalchemy.sql.expression.ClauseList": [[56, 4, 1, "", "self_group"]], "sqlalchemy.sql.expression.ColumnClause": [[56, 4, 1, "", "__init__"], [56, 4, 1, "", "get_children"]], "sqlalchemy.sql.expression.ColumnCollection": [[56, 4, 1, "", "add"], [56, 4, 1, "", "as_immutable"], [56, 4, 1, "", "clear"], [56, 4, 1, "", "compare"], [56, 4, 1, "", "contains_column"], [56, 4, 1, "", "corresponding_column"], [56, 4, 1, "", "get"], [56, 4, 1, "", "items"], [56, 4, 1, "", "keys"], [56, 4, 1, "", "remove"], [56, 4, 1, "", "update"], [56, 4, 1, "", "values"]], "sqlalchemy.sql.expression.ColumnCollection.corresponding_column.params": [[56, 2, 1, "", "column"], [56, 2, 1, "", "require_embedded"]], "sqlalchemy.sql.expression.ColumnElement": [[56, 4, 1, "", "__eq__"], [56, 4, 1, "", "__le__"], [56, 4, 1, "", "__lt__"], [56, 4, 1, "", "__ne__"], [56, 4, 1, "", "all_"], [56, 5, 1, "", "allows_lambda"], [56, 5, 1, "", "anon_key_label"], [56, 5, 1, "", "anon_label"], [56, 4, 1, "", "any_"], [56, 4, 1, "", "asc"], [56, 5, 1, "", "base_columns"], [56, 4, 1, "", "between"], [56, 5, 1, "", "bind"], [56, 4, 1, "", "bool_op"], [56, 4, 1, "", "cast"], [56, 4, 1, "", "collate"], [56, 5, 1, "", "comparator"], [56, 4, 1, "", "compare"], [56, 4, 1, "", "compile"], [56, 4, 1, "", "concat"], [56, 4, 1, "", "contains"], [56, 4, 1, "", "desc"], [56, 5, 1, "", "description"], [56, 4, 1, "", "distinct"], [56, 4, 1, "", "endswith"], [56, 5, 1, "", "entity_namespace"], [56, 5, 1, "", "expression"], [56, 5, 1, "", "foreign_keys"], [56, 4, 1, "", "get_children"], [56, 4, 1, "", "ilike"], [56, 4, 1, "", "in_"], [56, 5, 1, "", "inherit_cache"], [56, 4, 1, "", "is_"], [56, 5, 1, "", "is_clause_element"], [56, 4, 1, "", "is_distinct_from"], [56, 4, 1, "", "is_not"], [56, 4, 1, "", "is_not_distinct_from"], [56, 5, 1, "", "is_selectable"], [56, 4, 1, "", "isnot"], [56, 4, 1, "", "isnot_distinct_from"], [56, 5, 1, "", "key"], [56, 4, 1, "", "label"], [56, 4, 1, "", "like"], [56, 4, 1, "", "match"], [56, 4, 1, "", "memoized_instancemethod"], [56, 4, 1, "", "not_ilike"], [56, 4, 1, "", "not_in"], [56, 4, 1, "", "not_like"], [56, 4, 1, "", "notilike"], [56, 4, 1, "", "notin_"], [56, 4, 1, "", "notlike"], [56, 4, 1, "", "nulls_first"], [56, 4, 1, "", "nulls_last"], [56, 4, 1, "", "nullsfirst"], [56, 4, 1, "", "nullslast"], [56, 4, 1, "", "op"], [56, 4, 1, "", "operate"], [56, 4, 1, "", "params"], [56, 5, 1, "", "primary_key"], [56, 5, 1, "", "proxy_set"], [56, 4, 1, "", "regexp_match"], [56, 4, 1, "", "regexp_replace"], [56, 4, 1, "", "reverse_operate"], [56, 4, 1, "", "self_group"], [56, 4, 1, "", "shares_lineage"], [56, 4, 1, "", "startswith"], [56, 5, 1, "", "stringify_dialect"], [56, 5, 1, "", "supports_execution"], [56, 5, 1, "", "timetuple"], [56, 5, 1, "", "type"], [56, 4, 1, "", "unique_params"], [56, 5, 1, "", "uses_inspection"]], "sqlalchemy.sql.expression.ColumnElement.compile.params": [[56, 2, 1, "", "bind"], [56, 2, 1, "", "column_keys"], [56, 2, 1, "", "compile_kwargs"], [56, 2, 1, "", "dialect"]], "sqlalchemy.sql.expression.ColumnElement.contains.params": [[56, 2, 1, "", "autoescape"], [56, 2, 1, "", "escape"], [56, 2, 1, "", "other"]], "sqlalchemy.sql.expression.ColumnElement.endswith.params": [[56, 2, 1, "", "autoescape"], [56, 2, 1, "", "escape"], [56, 2, 1, "", "other"]], "sqlalchemy.sql.expression.ColumnElement.ilike.params": [[56, 2, 1, "", "escape"], [56, 2, 1, "", "other"]], "sqlalchemy.sql.expression.ColumnElement.in_.params": [[56, 2, 1, "", "other"]], "sqlalchemy.sql.expression.ColumnElement.like.params": [[56, 2, 1, "", "escape"], [56, 2, 1, "", "other"]], "sqlalchemy.sql.expression.ColumnElement.op.params": [[56, 2, 1, "", "is_comparison"], [56, 2, 1, "", "operator"], [56, 2, 1, "", "precedence"], [56, 2, 1, "", "return_type"]], "sqlalchemy.sql.expression.ColumnElement.operate.params": [[56, 2, 1, "", "**kwargs"], [56, 2, 1, "", "*other"], [56, 2, 1, "", "op"]], "sqlalchemy.sql.expression.ColumnElement.regexp_match.params": [[56, 2, 1, "", "flags"], [56, 2, 1, "", "pattern"]], "sqlalchemy.sql.expression.ColumnElement.regexp_replace.params": [[56, 2, 1, "", "flags"], [56, 2, 1, "", "pattern"]], "sqlalchemy.sql.expression.ColumnElement.startswith.params": [[56, 2, 1, "", "autoescape"], [56, 2, 1, "", "escape"], [56, 2, 1, "", "other"]], "sqlalchemy.sql.expression.ColumnOperators": [[56, 4, 1, "", "__add__"], [56, 4, 1, "", "__and__"], [56, 4, 1, "", "__div__"], [56, 4, 1, "", "__eq__"], [56, 4, 1, "", "__ge__"], [56, 4, 1, "", "__getitem__"], [56, 4, 1, "", "__gt__"], [56, 4, 1, "", "__hash__"], [56, 4, 1, "", "__invert__"], [56, 4, 1, "", "__le__"], [56, 4, 1, "", "__lshift__"], [56, 4, 1, "", "__lt__"], [56, 4, 1, "", "__mod__"], [56, 4, 1, "", "__mul__"], [56, 4, 1, "", "__ne__"], [56, 4, 1, "", "__neg__"], [56, 4, 1, "", "__or__"], [56, 4, 1, "", "__radd__"], [56, 4, 1, "", "__rdiv__"], [56, 4, 1, "", "__rmod__"], [56, 4, 1, "", "__rmul__"], [56, 4, 1, "", "__rshift__"], [56, 4, 1, "", "__rsub__"], [56, 4, 1, "", "__rtruediv__"], [56, 4, 1, "", "__sub__"], [56, 4, 1, "", "__truediv__"], [56, 4, 1, "", "all_"], [56, 4, 1, "", "any_"], [56, 4, 1, "", "asc"], [56, 4, 1, "", "between"], [56, 4, 1, "", "bool_op"], [56, 4, 1, "", "collate"], [56, 4, 1, "", "concat"], [56, 4, 1, "", "contains"], [56, 4, 1, "", "desc"], [56, 4, 1, "", "distinct"], [56, 4, 1, "", "endswith"], [56, 4, 1, "", "ilike"], [56, 4, 1, "", "in_"], [56, 4, 1, "", "is_"], [56, 4, 1, "", "is_distinct_from"], [56, 4, 1, "", "is_not"], [56, 4, 1, "", "is_not_distinct_from"], [56, 4, 1, "", "isnot"], [56, 4, 1, "", "isnot_distinct_from"], [56, 4, 1, "", "like"], [56, 4, 1, "", "match"], [56, 4, 1, "", "not_ilike"], [56, 4, 1, "", "not_in"], [56, 4, 1, "", "not_like"], [56, 4, 1, "", "notilike"], [56, 4, 1, "", "notin_"], [56, 4, 1, "", "notlike"], [56, 4, 1, "", "nulls_first"], [56, 4, 1, "", "nulls_last"], [56, 4, 1, "", "nullsfirst"], [56, 4, 1, "", "nullslast"], [56, 4, 1, "", "op"], [56, 4, 1, "", "operate"], [56, 4, 1, "", "regexp_match"], [56, 4, 1, "", "regexp_replace"], [56, 4, 1, "", "reverse_operate"], [56, 4, 1, "", "startswith"], [56, 5, 1, "", "timetuple"]], "sqlalchemy.sql.expression.ColumnOperators.contains.params": [[56, 2, 1, "", "autoescape"], [56, 2, 1, "", "escape"], [56, 2, 1, "", "other"]], "sqlalchemy.sql.expression.ColumnOperators.endswith.params": [[56, 2, 1, "", "autoescape"], [56, 2, 1, "", "escape"], [56, 2, 1, "", "other"]], "sqlalchemy.sql.expression.ColumnOperators.ilike.params": [[56, 2, 1, "", "escape"], [56, 2, 1, "", "other"]], "sqlalchemy.sql.expression.ColumnOperators.in_.params": [[56, 2, 1, "", "other"]], "sqlalchemy.sql.expression.ColumnOperators.like.params": [[56, 2, 1, "", "escape"], [56, 2, 1, "", "other"]], "sqlalchemy.sql.expression.ColumnOperators.op.params": [[56, 2, 1, "", "is_comparison"], [56, 2, 1, "", "operator"], [56, 2, 1, "", "precedence"], [56, 2, 1, "", "return_type"]], "sqlalchemy.sql.expression.ColumnOperators.operate.params": [[56, 2, 1, "", "**kwargs"], [56, 2, 1, "", "*other"], [56, 2, 1, "", "op"]], "sqlalchemy.sql.expression.ColumnOperators.regexp_match.params": [[56, 2, 1, "", "flags"], [56, 2, 1, "", "pattern"]], "sqlalchemy.sql.expression.ColumnOperators.regexp_replace.params": [[56, 2, 1, "", "flags"], [56, 2, 1, "", "pattern"]], "sqlalchemy.sql.expression.ColumnOperators.startswith.params": [[56, 2, 1, "", "autoescape"], [56, 2, 1, "", "escape"], [56, 2, 1, "", "other"]], "sqlalchemy.sql.expression.CompoundSelect": [[54, 4, 1, "", "add_cte"], [54, 4, 1, "", "alias"], [54, 4, 1, "", "append_group_by"], [54, 4, 1, "", "append_order_by"], [54, 4, 1, "", "apply_labels"], [54, 4, 1, "", "as_scalar"], [54, 5, 1, "", "bind"], [54, 5, 1, "", "c"], [54, 4, 1, "", "corresponding_column"], [54, 4, 1, "", "cte"], [54, 4, 1, "", "execute"], [54, 4, 1, "", "execution_options"], [54, 4, 1, "", "exists"], [54, 5, 1, "", "exported_columns"], [54, 4, 1, "", "fetch"], [54, 4, 1, "", "get_execution_options"], [54, 4, 1, "", "get_label_style"], [54, 4, 1, "", "group_by"], [54, 4, 1, "", "label"], [54, 4, 1, "", "lateral"], [54, 4, 1, "", "limit"], [54, 4, 1, "", "offset"], [54, 4, 1, "", "options"], [54, 4, 1, "", "order_by"], [54, 4, 1, "", "replace_selectable"], [54, 4, 1, "", "scalar"], [54, 4, 1, "", "scalar_subquery"], [54, 4, 1, "", "select"], [54, 5, 1, "", "selected_columns"], [54, 4, 1, "", "self_group"], [54, 4, 1, "", "set_label_style"], [54, 4, 1, "", "slice"], [54, 4, 1, "", "subquery"], [54, 4, 1, "", "with_for_update"]], "sqlalchemy.sql.expression.CompoundSelect.corresponding_column.params": [[54, 2, 1, "", "column"], [54, 2, 1, "", "require_embedded"]], "sqlalchemy.sql.expression.CompoundSelect.cte.params": [[54, 2, 1, "", "name"], [54, 2, 1, "", "nesting"], [54, 2, 1, "", "recursive"]], "sqlalchemy.sql.expression.CompoundSelect.fetch.params": [[54, 2, 1, "", "count"], [54, 2, 1, "", "percent"], [54, 2, 1, "", "with_ties"]], "sqlalchemy.sql.expression.CompoundSelect.group_by.params": [[54, 2, 1, "", "*clauses"]], "sqlalchemy.sql.expression.CompoundSelect.limit.params": [[54, 2, 1, "", "limit"]], "sqlalchemy.sql.expression.CompoundSelect.offset.params": [[54, 2, 1, "", "offset"]], "sqlalchemy.sql.expression.CompoundSelect.order_by.params": [[54, 2, 1, "", "*clauses"]], "sqlalchemy.sql.expression.CompoundSelect.with_for_update.params": [[54, 2, 1, "", "key_share"], [54, 2, 1, "", "nowait"], [54, 2, 1, "", "of"], [54, 2, 1, "", "read"], [54, 2, 1, "", "skip_locked"]], "sqlalchemy.sql.expression.Delete": [[36, 4, 1, "", "__init__"], [36, 4, 1, "", "returning"], [36, 4, 1, "", "where"]], "sqlalchemy.sql.expression.Executable": [[54, 5, 1, "", "bind"], [54, 4, 1, "", "execute"], [54, 4, 1, "", "execution_options"], [54, 4, 1, "", "get_execution_options"], [54, 4, 1, "", "options"], [54, 4, 1, "", "scalar"]], "sqlalchemy.sql.expression.Exists": [[54, 4, 1, "", "__init__"], [54, 4, 1, "", "correlate"], [54, 4, 1, "", "correlate_except"], [54, 5, 1, "", "inherit_cache"], [54, 4, 1, "", "select"], [54, 4, 1, "", "select_from"], [54, 4, 1, "", "where"]], "sqlalchemy.sql.expression.Exists.select.params": [[54, 2, 1, "", "**kwargs"], [54, 2, 1, "", "whereclause"]], "sqlalchemy.sql.expression.Extract": [[56, 4, 1, "", "__init__"]], "sqlalchemy.sql.expression.FromClause": [[54, 4, 1, "", "alias"], [54, 5, 1, "", "c"], [54, 5, 1, "", "columns"], [54, 5, 1, "", "description"], [54, 5, 1, "", "entity_namespace"], [54, 5, 1, "", "exported_columns"], [54, 5, 1, "", "foreign_keys"], [54, 4, 1, "", "is_derived_from"], [54, 4, 1, "", "join"], [54, 4, 1, "", "outerjoin"], [54, 5, 1, "", "primary_key"], [54, 5, 1, "", "schema"], [54, 4, 1, "", "select"], [54, 4, 1, "", "table_valued"], [54, 4, 1, "", "tablesample"]], "sqlalchemy.sql.expression.FromClause.join.params": [[54, 2, 1, "", "full"], [54, 2, 1, "", "isouter"], [54, 2, 1, "", "onclause"], [54, 2, 1, "", "right"]], "sqlalchemy.sql.expression.FromClause.outerjoin.params": [[54, 2, 1, "", "full"], [54, 2, 1, "", "onclause"], [54, 2, 1, "", "right"]], "sqlalchemy.sql.expression.FromClause.select.params": [[54, 2, 1, "", "**kwargs"], [54, 2, 1, "", "whereclause"]], "sqlalchemy.sql.expression.FunctionFilter": [[56, 4, 1, "", "__init__"], [56, 4, 1, "", "filter"], [56, 4, 1, "", "over"], [56, 4, 1, "", "self_group"]], "sqlalchemy.sql.expression.GenerativeSelect": [[54, 4, 1, "", "apply_labels"], [54, 4, 1, "", "fetch"], [54, 4, 1, "", "get_label_style"], [54, 4, 1, "", "group_by"], [54, 4, 1, "", "limit"], [54, 4, 1, "", "offset"], [54, 4, 1, "", "order_by"], [54, 4, 1, "", "set_label_style"], [54, 4, 1, "", "slice"], [54, 4, 1, "", "with_for_update"]], "sqlalchemy.sql.expression.GenerativeSelect.fetch.params": [[54, 2, 1, "", "count"], [54, 2, 1, "", "percent"], [54, 2, 1, "", "with_ties"]], "sqlalchemy.sql.expression.GenerativeSelect.group_by.params": [[54, 2, 1, "", "*clauses"]], "sqlalchemy.sql.expression.GenerativeSelect.limit.params": [[54, 2, 1, "", "limit"]], "sqlalchemy.sql.expression.GenerativeSelect.offset.params": [[54, 2, 1, "", "offset"]], "sqlalchemy.sql.expression.GenerativeSelect.order_by.params": [[54, 2, 1, "", "*clauses"]], "sqlalchemy.sql.expression.GenerativeSelect.with_for_update.params": [[54, 2, 1, "", "key_share"], [54, 2, 1, "", "nowait"], [54, 2, 1, "", "of"], [54, 2, 1, "", "read"], [54, 2, 1, "", "skip_locked"]], "sqlalchemy.sql.expression.HasCTE": [[54, 4, 1, "", "add_cte"], [54, 4, 1, "", "cte"]], "sqlalchemy.sql.expression.HasCTE.cte.params": [[54, 2, 1, "", "name"], [54, 2, 1, "", "nesting"], [54, 2, 1, "", "recursive"]], "sqlalchemy.sql.expression.HasPrefixes": [[54, 4, 1, "", "prefix_with"]], "sqlalchemy.sql.expression.HasPrefixes.prefix_with.params": [[54, 2, 1, "", "**kw"], [54, 2, 1, "", "*expr"]], "sqlalchemy.sql.expression.HasSuffixes": [[54, 4, 1, "", "suffix_with"]], "sqlalchemy.sql.expression.HasSuffixes.suffix_with.params": [[54, 2, 1, "", "**kw"], [54, 2, 1, "", "*expr"]], "sqlalchemy.sql.expression.Insert": [[36, 4, 1, "", "__init__"], [36, 4, 1, "", "from_select"], [36, 4, 1, "", "inline"], [36, 4, 1, "", "returning"], [36, 4, 1, "", "values"]], "sqlalchemy.sql.expression.Insert.from_select.params": [[36, 2, 1, "", "include_defaults"], [36, 2, 1, "", "names"], [36, 2, 1, "", "select"]], "sqlalchemy.sql.expression.Insert.values.params": [[36, 2, 1, "", "**kwargs"], [36, 2, 1, "", "*args"]], "sqlalchemy.sql.expression.Join": [[54, 4, 1, "", "__init__"], [54, 4, 1, "", "alias"], [54, 5, 1, "", "bind"], [54, 5, 1, "", "description"], [54, 4, 1, "", "is_derived_from"], [54, 4, 1, "", "select"], [54, 4, 1, "", "self_group"]], "sqlalchemy.sql.expression.Join.alias.params": [[54, 2, 1, "", "flat"], [54, 2, 1, "", "name"]], "sqlalchemy.sql.expression.Join.select.params": [[54, 2, 1, "", "**kwargs"], [54, 2, 1, "", "whereclause"]], "sqlalchemy.sql.expression.Label": [[56, 4, 1, "", "__init__"], [56, 5, 1, "", "foreign_keys"], [56, 5, 1, "", "primary_key"], [56, 4, 1, "", "self_group"]], "sqlalchemy.sql.expression.Lateral": [[54, 5, 1, "", "inherit_cache"]], "sqlalchemy.sql.expression.Operators": [[56, 4, 1, "", "__and__"], [56, 4, 1, "", "__invert__"], [56, 4, 1, "", "__or__"], [56, 4, 1, "", "bool_op"], [56, 4, 1, "", "op"], [56, 4, 1, "", "operate"], [56, 4, 1, "", "reverse_operate"]], "sqlalchemy.sql.expression.Operators.op.params": [[56, 2, 1, "", "is_comparison"], [56, 2, 1, "", "operator"], [56, 2, 1, "", "precedence"], [56, 2, 1, "", "return_type"]], "sqlalchemy.sql.expression.Operators.operate.params": [[56, 2, 1, "", "**kwargs"], [56, 2, 1, "", "*other"], [56, 2, 1, "", "op"]], "sqlalchemy.sql.expression.Over": [[56, 4, 1, "", "__init__"], [56, 5, 1, "", "element"]], "sqlalchemy.sql.expression.ReturnsRows": [[54, 5, 1, "", "exported_columns"]], "sqlalchemy.sql.expression.ScalarSelect": [[54, 4, 1, "", "correlate"], [54, 4, 1, "", "correlate_except"], [54, 5, 1, "", "inherit_cache"], [54, 4, 1, "", "self_group"], [54, 4, 1, "", "where"]], "sqlalchemy.sql.expression.ScalarSelect.correlate.params": [[54, 2, 1, "", "*fromclauses"]], "sqlalchemy.sql.expression.ScalarSelect.correlate_except.params": [[54, 2, 1, "", "*fromclauses"]], "sqlalchemy.sql.expression.Select": [[54, 4, 1, "", "add_columns"], [54, 4, 1, "", "add_cte"], [54, 4, 1, "", "alias"], [54, 4, 1, "", "apply_labels"], [54, 4, 1, "", "as_scalar"], [54, 5, 1, "", "bind"], [54, 5, 1, "", "c"], [54, 4, 1, "", "column"], [54, 5, 1, "", "column_descriptions"], [54, 5, 1, "", "columns_clause_froms"], [54, 4, 1, "", "correlate"], [54, 4, 1, "", "correlate_except"], [54, 4, 1, "", "corresponding_column"], [54, 4, 1, "", "create_legacy_select"], [54, 4, 1, "", "cte"], [54, 4, 1, "", "distinct"], [54, 4, 1, "", "except_"], [54, 4, 1, "", "except_all"], [54, 4, 1, "", "execute"], [54, 4, 1, "", "execution_options"], [54, 4, 1, "", "exists"], [54, 5, 1, "", "exported_columns"], [54, 4, 1, "", "fetch"], [54, 4, 1, "", "filter"], [54, 4, 1, "", "filter_by"], [54, 4, 1, "", "from_statement"], [54, 5, 1, "", "froms"], [54, 4, 1, "", "get_children"], [54, 4, 1, "", "get_execution_options"], [54, 4, 1, "", "get_final_froms"], [54, 4, 1, "", "get_label_style"], [54, 4, 1, "", "group_by"], [54, 4, 1, "", "having"], [54, 5, 1, "", "inner_columns"], [54, 4, 1, "", "intersect"], [54, 4, 1, "", "intersect_all"], [54, 4, 1, "", "join"], [54, 4, 1, "", "join_from"], [54, 4, 1, "", "label"], [54, 4, 1, "", "lateral"], [54, 4, 1, "", "limit"], [54, 4, 1, "", "offset"], [54, 4, 1, "", "options"], [54, 4, 1, "", "order_by"], [54, 4, 1, "", "outerjoin"], [54, 4, 1, "", "outerjoin_from"], [54, 4, 1, "", "prefix_with"], [54, 4, 1, "", "reduce_columns"], [54, 4, 1, "", "replace_selectable"], [54, 4, 1, "", "scalar"], [54, 4, 1, "", "scalar_subquery"], [54, 4, 1, "", "select"], [54, 4, 1, "", "select_from"], [54, 5, 1, "", "selected_columns"], [54, 4, 1, "", "self_group"], [54, 4, 1, "", "set_label_style"], [54, 4, 1, "", "slice"], [54, 4, 1, "", "subquery"], [54, 4, 1, "", "suffix_with"], [54, 4, 1, "", "union"], [54, 4, 1, "", "union_all"], [54, 4, 1, "", "where"], [54, 5, 1, "", "whereclause"], [54, 4, 1, "", "with_for_update"], [54, 4, 1, "", "with_hint"], [54, 4, 1, "", "with_only_columns"], [54, 4, 1, "", "with_statement_hint"]], "sqlalchemy.sql.expression.Select.correlate.params": [[54, 2, 1, "", "*fromclauses"]], "sqlalchemy.sql.expression.Select.correlate_except.params": [[54, 2, 1, "", "*fromclauses"]], "sqlalchemy.sql.expression.Select.corresponding_column.params": [[54, 2, 1, "", "column"], [54, 2, 1, "", "require_embedded"]], "sqlalchemy.sql.expression.Select.create_legacy_select.params": [[54, 2, 1, "", "bind"], [54, 2, 1, "", "columns"], [54, 2, 1, "", "correlate"], [54, 2, 1, "", "distinct"], [54, 2, 1, "", "from_obj"], [54, 2, 1, "", "group_by"], [54, 2, 1, "", "having"], [54, 2, 1, "", "limit"], [54, 2, 1, "", "offset"], [54, 2, 1, "", "order_by"], [54, 2, 1, "", "use_labels"], [54, 2, 1, "", "whereclause"]], "sqlalchemy.sql.expression.Select.cte.params": [[54, 2, 1, "", "name"], [54, 2, 1, "", "nesting"], [54, 2, 1, "", "recursive"]], "sqlalchemy.sql.expression.Select.distinct.params": [[54, 2, 1, "", "*expr"]], "sqlalchemy.sql.expression.Select.except_.params": [[54, 2, 1, "", "**kwargs"], [54, 2, 1, "", "*other"]], "sqlalchemy.sql.expression.Select.except_all.params": [[54, 2, 1, "", "**kwargs"], [54, 2, 1, "", "*other"]], "sqlalchemy.sql.expression.Select.fetch.params": [[54, 2, 1, "", "count"], [54, 2, 1, "", "percent"], [54, 2, 1, "", "with_ties"]], "sqlalchemy.sql.expression.Select.group_by.params": [[54, 2, 1, "", "*clauses"]], "sqlalchemy.sql.expression.Select.intersect.params": [[54, 2, 1, "", "**kwargs"], [54, 2, 1, "", "*other"]], "sqlalchemy.sql.expression.Select.intersect_all.params": [[54, 2, 1, "", "**kwargs"], [54, 2, 1, "", "*other"]], "sqlalchemy.sql.expression.Select.join.params": [[54, 2, 1, "", "full"], [54, 2, 1, "", "isouter"], [54, 2, 1, "", "onclause"], [54, 2, 1, "", "target"]], "sqlalchemy.sql.expression.Select.join_from.params": [[54, 2, 1, "", "from_"], [54, 2, 1, "", "full"], [54, 2, 1, "", "isouter"], [54, 2, 1, "", "onclause"], [54, 2, 1, "", "target"]], "sqlalchemy.sql.expression.Select.limit.params": [[54, 2, 1, "", "limit"]], "sqlalchemy.sql.expression.Select.offset.params": [[54, 2, 1, "", "offset"]], "sqlalchemy.sql.expression.Select.order_by.params": [[54, 2, 1, "", "*clauses"]], "sqlalchemy.sql.expression.Select.prefix_with.params": [[54, 2, 1, "", "**kw"], [54, 2, 1, "", "*expr"]], "sqlalchemy.sql.expression.Select.reduce_columns.params": [[54, 2, 1, "", "only_synonyms"]], "sqlalchemy.sql.expression.Select.suffix_with.params": [[54, 2, 1, "", "**kw"], [54, 2, 1, "", "*expr"]], "sqlalchemy.sql.expression.Select.union.params": [[54, 2, 1, "", "**kwargs"], [54, 2, 1, "", "*other"]], "sqlalchemy.sql.expression.Select.union_all.params": [[54, 2, 1, "", "**kwargs"], [54, 2, 1, "", "*other"]], "sqlalchemy.sql.expression.Select.with_for_update.params": [[54, 2, 1, "", "key_share"], [54, 2, 1, "", "nowait"], [54, 2, 1, "", "of"], [54, 2, 1, "", "read"], [54, 2, 1, "", "skip_locked"]], "sqlalchemy.sql.expression.Select.with_only_columns.params": [[54, 2, 1, "", "*columns"], [54, 2, 1, "", "maintain_column_froms"]], "sqlalchemy.sql.expression.SelectBase": [[54, 4, 1, "", "add_cte"], [54, 4, 1, "", "alias"], [54, 4, 1, "", "as_scalar"], [54, 5, 1, "", "bind"], [54, 5, 1, "", "c"], [54, 4, 1, "", "corresponding_column"], [54, 4, 1, "", "cte"], [54, 4, 1, "", "execute"], [54, 4, 1, "", "execution_options"], [54, 4, 1, "", "exists"], [54, 5, 1, "", "exported_columns"], [54, 4, 1, "", "get_execution_options"], [54, 4, 1, "", "label"], [54, 4, 1, "", "lateral"], [54, 4, 1, "", "options"], [54, 4, 1, "", "replace_selectable"], [54, 4, 1, "", "scalar"], [54, 4, 1, "", "scalar_subquery"], [54, 4, 1, "", "select"], [54, 5, 1, "", "selected_columns"], [54, 4, 1, "", "subquery"]], "sqlalchemy.sql.expression.SelectBase.corresponding_column.params": [[54, 2, 1, "", "column"], [54, 2, 1, "", "require_embedded"]], "sqlalchemy.sql.expression.SelectBase.cte.params": [[54, 2, 1, "", "name"], [54, 2, 1, "", "nesting"], [54, 2, 1, "", "recursive"]], "sqlalchemy.sql.expression.Selectable": [[54, 4, 1, "", "corresponding_column"], [54, 5, 1, "", "exported_columns"], [54, 4, 1, "", "lateral"], [54, 4, 1, "", "replace_selectable"]], "sqlalchemy.sql.expression.Selectable.corresponding_column.params": [[54, 2, 1, "", "column"], [54, 2, 1, "", "require_embedded"]], "sqlalchemy.sql.expression.StatementLambdaElement": [[43, 4, 1, "", "add_criteria"], [43, 4, 1, "", "spoil"]], "sqlalchemy.sql.expression.Subquery": [[54, 4, 1, "", "as_scalar"], [54, 5, 1, "", "inherit_cache"]], "sqlalchemy.sql.expression.TableClause": [[54, 4, 1, "", "__init__"], [54, 4, 1, "", "alias"], [54, 5, 1, "", "c"], [54, 5, 1, "", "columns"], [54, 4, 1, "", "compare"], [54, 4, 1, "", "compile"], [54, 4, 1, "", "corresponding_column"], [54, 4, 1, "", "delete"], [54, 5, 1, "", "description"], [54, 5, 1, "", "entity_namespace"], [54, 5, 1, "", "exported_columns"], [54, 5, 1, "", "foreign_keys"], [54, 4, 1, "", "get_children"], [54, 5, 1, "", "implicit_returning"], [54, 5, 1, "", "inherit_cache"], [54, 4, 1, "", "insert"], [54, 4, 1, "", "is_derived_from"], [54, 4, 1, "", "join"], [54, 4, 1, "", "lateral"], [54, 4, 1, "", "memoized_instancemethod"], [54, 4, 1, "", "outerjoin"], [54, 4, 1, "", "params"], [54, 5, 1, "", "primary_key"], [54, 4, 1, "", "replace_selectable"], [54, 5, 1, "", "schema"], [54, 4, 1, "", "select"], [54, 4, 1, "", "self_group"], [54, 4, 1, "", "table_valued"], [54, 4, 1, "", "tablesample"], [54, 4, 1, "", "unique_params"], [54, 4, 1, "", "update"]], "sqlalchemy.sql.expression.TableClause.compile.params": [[54, 2, 1, "", "bind"], [54, 2, 1, "", "column_keys"], [54, 2, 1, "", "compile_kwargs"], [54, 2, 1, "", "dialect"]], "sqlalchemy.sql.expression.TableClause.corresponding_column.params": [[54, 2, 1, "", "column"], [54, 2, 1, "", "require_embedded"]], "sqlalchemy.sql.expression.TableClause.join.params": [[54, 2, 1, "", "full"], [54, 2, 1, "", "isouter"], [54, 2, 1, "", "onclause"], [54, 2, 1, "", "right"]], "sqlalchemy.sql.expression.TableClause.outerjoin.params": [[54, 2, 1, "", "full"], [54, 2, 1, "", "onclause"], [54, 2, 1, "", "right"]], "sqlalchemy.sql.expression.TableClause.select.params": [[54, 2, 1, "", "**kwargs"], [54, 2, 1, "", "whereclause"]], "sqlalchemy.sql.expression.TableValuedAlias": [[54, 4, 1, "", "alias"], [54, 5, 1, "", "column"], [54, 4, 1, "", "lateral"], [54, 4, 1, "", "render_derived"]], "sqlalchemy.sql.expression.TableValuedAlias.render_derived.params": [[54, 2, 1, "", "name"], [54, 2, 1, "", "with_types"]], "sqlalchemy.sql.expression.TextClause": [[56, 4, 1, "", "bindparams"], [56, 4, 1, "", "columns"], [56, 4, 1, "", "self_group"]], "sqlalchemy.sql.expression.TextClause.columns.params": [[56, 2, 1, "", "**types"], [56, 2, 1, "", "*cols"]], "sqlalchemy.sql.expression.TextualSelect": [[54, 4, 1, "", "add_cte"], [54, 4, 1, "", "alias"], [54, 4, 1, "", "as_scalar"], [54, 5, 1, "", "bind"], [54, 5, 1, "", "c"], [54, 4, 1, "", "compare"], [54, 4, 1, "", "compile"], [54, 4, 1, "", "corresponding_column"], [54, 4, 1, "", "cte"], [54, 4, 1, "", "execute"], [54, 4, 1, "", "execution_options"], [54, 4, 1, "", "exists"], [54, 5, 1, "", "exported_columns"], [54, 4, 1, "", "get_children"], [54, 4, 1, "", "get_execution_options"], [54, 5, 1, "", "inherit_cache"], [54, 4, 1, "", "label"], [54, 4, 1, "", "lateral"], [54, 4, 1, "", "memoized_instancemethod"], [54, 4, 1, "", "options"], [54, 4, 1, "", "params"], [54, 4, 1, "", "replace_selectable"], [54, 4, 1, "", "scalar"], [54, 4, 1, "", "scalar_subquery"], [54, 4, 1, "", "select"], [54, 5, 1, "", "selected_columns"], [54, 4, 1, "", "self_group"], [54, 4, 1, "", "subquery"], [54, 4, 1, "", "unique_params"]], "sqlalchemy.sql.expression.TextualSelect.compile.params": [[54, 2, 1, "", "bind"], [54, 2, 1, "", "column_keys"], [54, 2, 1, "", "compile_kwargs"], [54, 2, 1, "", "dialect"]], "sqlalchemy.sql.expression.TextualSelect.corresponding_column.params": [[54, 2, 1, "", "column"], [54, 2, 1, "", "require_embedded"]], "sqlalchemy.sql.expression.TextualSelect.cte.params": [[54, 2, 1, "", "name"], [54, 2, 1, "", "nesting"], [54, 2, 1, "", "recursive"]], "sqlalchemy.sql.expression.Tuple": [[56, 4, 1, "", "__init__"], [56, 4, 1, "", "self_group"]], "sqlalchemy.sql.expression.TypeCoerce": [[56, 4, 1, "", "__init__"], [56, 4, 1, "", "self_group"]], "sqlalchemy.sql.expression.UnaryExpression": [[56, 4, 1, "", "self_group"]], "sqlalchemy.sql.expression.Update": [[36, 4, 1, "", "__init__"], [36, 4, 1, "", "inline"], [36, 4, 1, "", "ordered_values"], [36, 4, 1, "", "returning"], [36, 4, 1, "", "values"], [36, 4, 1, "", "where"]], "sqlalchemy.sql.expression.Update.values.params": [[36, 2, 1, "", "**kwargs"], [36, 2, 1, "", "*args"]], "sqlalchemy.sql.expression.UpdateBase": [[36, 5, 1, "", "bind"], [36, 5, 1, "", "entity_description"], [36, 5, 1, "", "exported_columns"], [36, 4, 1, "", "params"], [36, 4, 1, "", "returning"], [36, 5, 1, "", "returning_column_descriptions"], [36, 4, 1, "", "with_dialect_options"], [36, 4, 1, "", "with_hint"]], "sqlalchemy.sql.expression.UpdateBase.with_hint.params": [[36, 2, 1, "", "dialect_name"], [36, 2, 1, "", "selectable"], [36, 2, 1, "", "text"]], "sqlalchemy.sql.expression.Values": [[54, 4, 1, "", "__init__"], [54, 4, 1, "", "alias"], [54, 4, 1, "", "data"], [54, 4, 1, "", "lateral"]], "sqlalchemy.sql.expression.Values.data.params": [[54, 2, 1, "", "values"]], "sqlalchemy.sql.expression.ValuesBase": [[36, 4, 1, "", "return_defaults"], [36, 4, 1, "", "values"]], "sqlalchemy.sql.expression.ValuesBase.return_defaults.params": [[36, 2, 1, "", "cols"]], "sqlalchemy.sql.expression.ValuesBase.values.params": [[36, 2, 1, "", "**kwargs"], [36, 2, 1, "", "*args"]], "sqlalchemy.sql.expression.WithinGroup": [[56, 4, 1, "", "__init__"], [56, 4, 1, "", "over"]], "sqlalchemy.sql.expression.alias.params": [[54, 2, 1, "", "flat"], [54, 2, 1, "", "name"], [54, 2, 1, "", "selectable"]], "sqlalchemy.sql.expression.asc.params": [[56, 2, 1, "", "column"]], "sqlalchemy.sql.expression.between.params": [[56, 2, 1, "", "expr"], [56, 2, 1, "", "lower_bound"], [56, 2, 1, "", "symmetric"], [56, 2, 1, "", "upper_bound"]], "sqlalchemy.sql.expression.bindparam.params": [[56, 2, 1, "", "callable_"], [56, 2, 1, "", "expanding"], [56, 2, 1, "", "isoutparam"], [56, 2, 1, "", "key"], [56, 2, 1, "", "literal_execute"], [56, 2, 1, "", "quote"], [56, 2, 1, "", "required"], [56, 2, 1, "", "type_"], [56, 2, 1, "", "unique"], [56, 2, 1, "", "value"]], "sqlalchemy.sql.expression.case.params": [[56, 2, 1, "", "*whens"], [56, 2, 1, "", "else_"], [56, 2, 1, "", "value"]], "sqlalchemy.sql.expression.cast.params": [[56, 2, 1, "", "expression"], [56, 2, 1, "", "type_"]], "sqlalchemy.sql.expression.column.params": [[56, 2, 1, "", "is_literal"], [56, 2, 1, "", "text"], [56, 2, 1, "", "type"]], "sqlalchemy.sql.expression.delete.params": [[36, 2, 1, "", "table"], [36, 2, 1, "", "whereclause"]], "sqlalchemy.sql.expression.desc.params": [[56, 2, 1, "", "column"]], "sqlalchemy.sql.expression.except_.params": [[54, 2, 1, "", "**kwargs"], [54, 2, 1, "", "*selects"]], "sqlalchemy.sql.expression.except_all.params": [[54, 2, 1, "", "**kwargs"], [54, 2, 1, "", "*selects"]], "sqlalchemy.sql.expression.extract.params": [[56, 2, 1, "", "expr"], [56, 2, 1, "", "field"]], "sqlalchemy.sql.expression.insert.params": [[36, 2, 1, "", "inline"], [36, 2, 1, "", "table"], [36, 2, 1, "", "values"]], "sqlalchemy.sql.expression.intersect.params": [[54, 2, 1, "", "**kwargs"], [54, 2, 1, "", "*selects"]], "sqlalchemy.sql.expression.intersect_all.params": [[54, 2, 1, "", "**kwargs"], [54, 2, 1, "", "*selects"]], "sqlalchemy.sql.expression.join.params": [[54, 2, 1, "", "full"], [54, 2, 1, "", "isouter"], [54, 2, 1, "", "left"], [54, 2, 1, "", "onclause"], [54, 2, 1, "", "right"]], "sqlalchemy.sql.expression.label.params": [[56, 2, 1, "", "name"], [56, 2, 1, "", "obj"]], "sqlalchemy.sql.expression.lambda_stmt.params": [[56, 2, 1, "", "enable_tracking"], [56, 2, 1, "", "global_track_bound_values"], [56, 2, 1, "", "lambda_cache"], [56, 2, 1, "", "lmb"], [56, 2, 1, "", "track_bound_values"], [56, 2, 1, "", "track_closure_variables"]], "sqlalchemy.sql.expression.literal.params": [[56, 2, 1, "", "type_"], [56, 2, 1, "", "value"]], "sqlalchemy.sql.expression.literal_column.params": [[56, 2, 1, "", "text"], [56, 2, 1, "", "type_"]], "sqlalchemy.sql.expression.outerjoin.params": [[54, 2, 1, "", "left"], [54, 2, 1, "", "onclause"], [54, 2, 1, "", "right"]], "sqlalchemy.sql.expression.over.params": [[56, 2, 1, "", "element"], [56, 2, 1, "", "order_by"], [56, 2, 1, "", "partition_by"], [56, 2, 1, "", "range_"], [56, 2, 1, "", "rows"]], "sqlalchemy.sql.expression.quoted_name": [[56, 5, 1, "", "quote"]], "sqlalchemy.sql.expression.select.params": [[54, 2, 1, "", "*entities"]], "sqlalchemy.sql.expression.table.params": [[54, 2, 1, "", "columns"], [54, 2, 1, "", "name"], [54, 2, 1, "", "schema"]], "sqlalchemy.sql.expression.tablesample.params": [[54, 2, 1, "", "name"], [54, 2, 1, "", "sampling"], [54, 2, 1, "", "seed"]], "sqlalchemy.sql.expression.text.params": [[56, 2, 1, "", "bind"], [56, 2, 1, "", "text"]], "sqlalchemy.sql.expression.type_coerce.params": [[56, 2, 1, "", "expression"], [56, 2, 1, "", "type_"]], "sqlalchemy.sql.expression.union.params": [[54, 2, 1, "", "**kwargs"], [54, 2, 1, "", "*selects"]], "sqlalchemy.sql.expression.union_all.params": [[54, 2, 1, "", "**kwargs"], [54, 2, 1, "", "*selects"]], "sqlalchemy.sql.expression.update.params": [[36, 2, 1, "", "inline"], [36, 2, 1, "", "preserve_parameter_order"], [36, 2, 1, "", "table"], [36, 2, 1, "", "values"], [36, 2, 1, "", "whereclause"]], "sqlalchemy.sql.expression.values.params": [[54, 2, 1, "", "*columns"], [54, 2, 1, "", "literal_binds"], [54, 2, 1, "", "name"]], "sqlalchemy.sql.expression.within_group.params": [[56, 2, 1, "", "*order_by"], [56, 2, 1, "", "element"]], "sqlalchemy.sql.functions": [[44, 3, 1, "", "AnsiFunction"], [44, 3, 1, "", "Function"], [44, 3, 1, "", "FunctionElement"], [44, 3, 1, "", "GenericFunction"], [44, 3, 1, "", "array_agg"], [44, 3, 1, "", "char_length"], [44, 3, 1, "", "coalesce"], [44, 3, 1, "", "concat"], [44, 3, 1, "", "count"], [44, 3, 1, "", "cube"], [44, 3, 1, "", "cume_dist"], [44, 3, 1, "", "current_date"], [44, 3, 1, "", "current_time"], [44, 3, 1, "", "current_timestamp"], [44, 3, 1, "", "current_user"], [44, 3, 1, "", "dense_rank"], [44, 3, 1, "", "grouping_sets"], [44, 3, 1, "", "localtime"], [44, 3, 1, "", "localtimestamp"], [44, 3, 1, "", "max"], [44, 3, 1, "", "min"], [44, 3, 1, "", "mode"], [44, 3, 1, "", "next_value"], [44, 3, 1, "", "now"], [44, 3, 1, "", "percent_rank"], [44, 3, 1, "", "percentile_cont"], [44, 3, 1, "", "percentile_disc"], [44, 3, 1, "", "random"], [44, 3, 1, "", "rank"], [44, 1, 1, "", "register_function"], [44, 3, 1, "", "rollup"], [44, 3, 1, "", "session_user"], [44, 3, 1, "", "sum"], [44, 3, 1, "", "sysdate"], [44, 3, 1, "", "user"]], "sqlalchemy.sql.functions.Function.params": [[44, 2, 1, "", "*clauses"], [44, 2, 1, "", "packagenames"], [44, 2, 1, "", "type_"]], "sqlalchemy.sql.functions.FunctionElement": [[44, 4, 1, "", "__init__"], [44, 4, 1, "", "alias"], [44, 4, 1, "", "as_comparison"], [44, 5, 1, "", "clauses"], [44, 4, 1, "", "column_valued"], [44, 5, 1, "", "columns"], [44, 5, 1, "", "entity_namespace"], [44, 4, 1, "", "execute"], [44, 5, 1, "", "exported_columns"], [44, 4, 1, "", "filter"], [44, 4, 1, "", "over"], [44, 4, 1, "", "scalar"], [44, 4, 1, "", "scalar_table_valued"], [44, 4, 1, "", "select"], [44, 4, 1, "", "self_group"], [44, 4, 1, "", "table_valued"], [44, 4, 1, "", "within_group"], [44, 4, 1, "", "within_group_type"]], "sqlalchemy.sql.functions.FunctionElement.alias.params": [[44, 2, 1, "", "joins_implicitly"], [44, 2, 1, "", "name"]], "sqlalchemy.sql.functions.FunctionElement.as_comparison.params": [[44, 2, 1, "", "left_index"], [44, 2, 1, "", "right_index"]], "sqlalchemy.sql.functions.FunctionElement.column_valued.params": [[44, 2, 1, "", "joins_implicitly"], [44, 2, 1, "", "name"]], "sqlalchemy.sql.functions.FunctionElement.params": [[44, 2, 1, "", "**kwargs"], [44, 2, 1, "", "*clauses"]], "sqlalchemy.sql.functions.FunctionElement.table_valued.params": [[44, 2, 1, "", "*expr"], [44, 2, 1, "", "joins_implicitly"], [44, 2, 1, "", "name"], [44, 2, 1, "", "with_ordinality"]], "sqlalchemy.sql.traversals": [[43, 3, 1, "", "HasCacheKey"]], "sqlalchemy.sql.traversals.HasCacheKey": [[43, 5, 1, "", "inherit_cache"]], "sqlalchemy.sql.visitors": [[61, 3, 1, "", "ExternalTraversal"], [61, 3, 1, "", "InternalTraversal"], [61, 3, 1, "", "Traversible"], [61, 3, 1, "", "TraversibleType"], [61, 1, 1, "", "cloned_traverse"], [61, 1, 1, "", "iterate"], [61, 1, 1, "", "replacement_traverse"], [61, 1, 1, "", "traverse"], [61, 1, 1, "", "traverse_using"]], "sqlalchemy.sql.visitors.ExternalTraversal": [[61, 4, 1, "", "chain"], [61, 4, 1, "", "iterate"], [61, 4, 1, "", "traverse"], [61, 5, 1, "", "visitor_iterator"]], "sqlalchemy.sql.visitors.InternalTraversal": [[61, 4, 1, "", "dispatch"], [61, 5, 1, "", "dp_annotations_key"], [61, 5, 1, "", "dp_anon_name"], [61, 5, 1, "", "dp_boolean"], [61, 5, 1, "", "dp_clauseelement"], [61, 5, 1, "", "dp_clauseelement_list"], [61, 5, 1, "", "dp_clauseelement_tuple"], [61, 5, 1, "", "dp_clauseelement_tuples"], [61, 5, 1, "", "dp_dialect_options"], [61, 5, 1, "", "dp_dml_multi_values"], [61, 5, 1, "", "dp_dml_ordered_values"], [61, 5, 1, "", "dp_dml_values"], [61, 5, 1, "", "dp_fromclause_canonical_column_collection"], [61, 5, 1, "", "dp_fromclause_ordered_set"], [61, 5, 1, "", "dp_has_cache_key"], [61, 5, 1, "", "dp_has_cache_key_list"], [61, 5, 1, "", "dp_named_ddl_element"], [61, 5, 1, "", "dp_operator"], [61, 5, 1, "", "dp_plain_dict"], [61, 5, 1, "", "dp_plain_obj"], [61, 5, 1, "", "dp_prefix_sequence"], [61, 5, 1, "", "dp_propagate_attrs"], [61, 5, 1, "", "dp_statement_hint_list"], [61, 5, 1, "", "dp_string"], [61, 5, 1, "", "dp_string_clauseelement_dict"], [61, 5, 1, "", "dp_string_list"], [61, 5, 1, "", "dp_string_multi_dict"], [61, 5, 1, "", "dp_table_hint_list"], [61, 5, 1, "", "dp_type"], [61, 5, 1, "", "dp_unknown_structure"]], "sqlalchemy.sql.visitors.Traversible": [[61, 4, 1, "", "get_children"]], "sqlalchemy.sql.visitors.iterate.params": [[61, 2, 1, "", "obj"], [61, 2, 1, "", "opts"]], "sqlalchemy.sql.visitors.traverse.params": [[61, 2, 1, "", "obj"], [61, 2, 1, "", "opts"], [61, 2, 1, "", "visitors"]], "sqlalchemy.sql.visitors.traverse_using.params": [[61, 2, 1, "", "iterator"], [61, 2, 1, "", "obj"], [61, 2, 1, "", "visitors"]], "sqlalchemy.types": [[59, 3, 1, "", "ARRAY"], [59, 3, 1, "", "BIGINT"], [59, 3, 1, "", "BINARY"], [59, 3, 1, "", "BLOB"], [59, 3, 1, "", "BOOLEAN"], [59, 3, 1, "", "BigInteger"], [59, 3, 1, "", "Boolean"], [59, 3, 1, "", "CHAR"], [59, 3, 1, "", "CLOB"], [58, 3, 1, "", "Concatenable"], [59, 3, 1, "", "DATE"], [59, 3, 1, "", "DATETIME"], [59, 3, 1, "", "DECIMAL"], [59, 3, 1, "", "Date"], [59, 3, 1, "", "DateTime"], [59, 3, 1, "", "Enum"], [58, 3, 1, "", "ExternalType"], [59, 3, 1, "", "FLOAT"], [59, 3, 1, "", "Float"], [59, 5, 1, "", "INT"], [59, 3, 1, "", "INTEGER"], [58, 3, 1, "", "Indexable"], [59, 3, 1, "", "Integer"], [59, 3, 1, "", "Interval"], [59, 3, 1, "", "JSON"], [59, 3, 1, "", "LargeBinary"], [59, 3, 1, "", "MatchType"], [59, 3, 1, "", "NCHAR"], [59, 3, 1, "", "NUMERIC"], [59, 3, 1, "", "NVARCHAR"], [58, 3, 1, "", "NullType"], [59, 3, 1, "", "Numeric"], [59, 3, 1, "", "PickleType"], [59, 3, 1, "", "REAL"], [59, 3, 1, "", "SMALLINT"], [59, 3, 1, "", "SchemaType"], [59, 3, 1, "", "SmallInteger"], [59, 3, 1, "", "String"], [59, 3, 1, "", "TEXT"], [59, 3, 1, "", "TIME"], [59, 3, 1, "", "TIMESTAMP"], [59, 3, 1, "", "Text"], [59, 3, 1, "", "Time"], [33, 3, 1, "", "TypeDecorator"], [58, 3, 1, "", "TypeEngine"], [59, 3, 1, "", "Unicode"], [59, 3, 1, "", "UnicodeText"], [33, 3, 1, "", "UserDefinedType"], [59, 3, 1, "", "VARBINARY"], [59, 3, 1, "", "VARCHAR"], [58, 3, 1, "", "Variant"]], "sqlalchemy.types.ARRAY": [[59, 3, 1, "", "Comparator"], [59, 4, 1, "", "__init__"], [59, 5, 1, "", "comparator_factory"], [59, 4, 1, "", "compare_values"], [59, 5, 1, "", "hashable"], [59, 5, 1, "", "python_type"], [59, 5, 1, "", "zero_indexes"]], "sqlalchemy.types.ARRAY.Comparator": [[59, 4, 1, "", "all"], [59, 4, 1, "", "any"], [59, 4, 1, "", "contains"]], "sqlalchemy.types.ARRAY.Comparator.all.params": [[59, 2, 1, "", "operator"], [59, 2, 1, "", "other"]], "sqlalchemy.types.ARRAY.Comparator.any.params": [[59, 2, 1, "", "operator"], [59, 2, 1, "", "other"]], "sqlalchemy.types.ARRAY.Comparator.contains.params": [[59, 2, 1, "", "autoescape"], [59, 2, 1, "", "escape"], [59, 2, 1, "", "other"]], "sqlalchemy.types.ARRAY.params": [[59, 2, 1, "", "as_tuple"], [59, 2, 1, "", "dimensions"], [59, 2, 1, "", "item_type"], [59, 2, 1, "", "zero_indexes"]], "sqlalchemy.types.Boolean": [[59, 4, 1, "", "__init__"], [59, 4, 1, "", "bind_processor"], [59, 4, 1, "", "literal_processor"], [59, 5, 1, "", "python_type"], [59, 4, 1, "", "result_processor"]], "sqlalchemy.types.Boolean.bind_processor.params": [[59, 2, 1, "", "dialect"]], "sqlalchemy.types.Boolean.params": [[59, 2, 1, "", "create_constraint"], [59, 2, 1, "", "name"]], "sqlalchemy.types.Boolean.result_processor.params": [[59, 2, 1, "", "coltype"], [59, 2, 1, "", "dialect"]], "sqlalchemy.types.Concatenable": [[58, 3, 1, "", "Comparator"], [58, 5, 1, "", "comparator_factory"]], "sqlalchemy.types.Date": [[59, 4, 1, "", "get_dbapi_type"], [59, 5, 1, "", "python_type"]], "sqlalchemy.types.DateTime": [[59, 4, 1, "", "__init__"], [59, 4, 1, "", "get_dbapi_type"], [59, 5, 1, "", "python_type"]], "sqlalchemy.types.DateTime.params": [[59, 2, 1, "", "timezone"]], "sqlalchemy.types.Enum": [[59, 4, 1, "", "__init__"], [59, 4, 1, "", "create"], [59, 4, 1, "", "drop"]], "sqlalchemy.types.Enum.params": [[59, 2, 1, "", "*enums"], [59, 2, 1, "", "convert_unicode"], [59, 2, 1, "", "create_constraint"], [59, 2, 1, "", "inherit_schema"], [59, 2, 1, "", "length"], [59, 2, 1, "", "metadata"], [59, 2, 1, "", "name"], [59, 2, 1, "", "native_enum"], [59, 2, 1, "", "omit_aliases"], [59, 2, 1, "", "quote"], [59, 2, 1, "", "schema"], [59, 2, 1, "", "sort_key_function"], [59, 2, 1, "", "validate_strings"], [59, 2, 1, "", "values_callable"]], "sqlalchemy.types.ExternalType": [[58, 5, 1, "", "cache_ok"]], "sqlalchemy.types.Float": [[59, 4, 1, "", "__init__"], [59, 4, 1, "", "result_processor"]], "sqlalchemy.types.Float.params": [[59, 2, 1, "", "asdecimal"], [59, 2, 1, "", "decimal_return_scale"], [59, 2, 1, "", "precision"]], "sqlalchemy.types.Float.result_processor.params": [[59, 2, 1, "", "coltype"], [59, 2, 1, "", "dialect"]], "sqlalchemy.types.Indexable": [[58, 3, 1, "", "Comparator"], [58, 5, 1, "", "comparator_factory"]], "sqlalchemy.types.Integer": [[59, 4, 1, "", "get_dbapi_type"], [59, 4, 1, "", "literal_processor"], [59, 5, 1, "", "python_type"]], "sqlalchemy.types.Interval": [[59, 4, 1, "", "__init__"], [59, 4, 1, "", "adapt_to_emulated"], [59, 4, 1, "", "bind_processor"], [59, 5, 1, "", "cache_ok"], [59, 5, 1, "", "impl"], [59, 5, 1, "", "python_type"], [59, 4, 1, "", "result_processor"]], "sqlalchemy.types.Interval.bind_processor.params": [[59, 2, 1, "", "dialect"]], "sqlalchemy.types.Interval.params": [[59, 2, 1, "", "day_precision"], [59, 2, 1, "", "native"], [59, 2, 1, "", "second_precision"]], "sqlalchemy.types.Interval.result_processor.params": [[59, 2, 1, "", "coltype"], [59, 2, 1, "", "dialect"]], "sqlalchemy.types.JSON": [[59, 3, 1, "", "Comparator"], [59, 3, 1, "", "JSONElementType"], [59, 3, 1, "", "JSONIndexType"], [59, 3, 1, "", "JSONIntIndexType"], [59, 3, 1, "", "JSONPathType"], [59, 3, 1, "", "JSONStrIndexType"], [59, 5, 1, "", "NULL"], [59, 4, 1, "", "__init__"], [59, 4, 1, "", "bind_processor"], [59, 5, 1, "", "comparator_factory"], [59, 5, 1, "", "hashable"], [59, 5, 1, "", "python_type"], [59, 4, 1, "", "result_processor"], [59, 5, 1, "", "should_evaluate_none"]], "sqlalchemy.types.JSON.Comparator": [[59, 4, 1, "", "as_boolean"], [59, 4, 1, "", "as_float"], [59, 4, 1, "", "as_integer"], [59, 4, 1, "", "as_json"], [59, 4, 1, "", "as_numeric"], [59, 4, 1, "", "as_string"]], "sqlalchemy.types.JSON.JSONElementType": [[59, 4, 1, "", "bind_processor"], [59, 4, 1, "", "literal_processor"]], "sqlalchemy.types.JSON.JSONElementType.bind_processor.params": [[59, 2, 1, "", "dialect"]], "sqlalchemy.types.JSON.bind_processor.params": [[59, 2, 1, "", "dialect"]], "sqlalchemy.types.JSON.params": [[59, 2, 1, "", "none_as_null"]], "sqlalchemy.types.JSON.result_processor.params": [[59, 2, 1, "", "coltype"], [59, 2, 1, "", "dialect"]], "sqlalchemy.types.LargeBinary": [[59, 4, 1, "", "__init__"]], "sqlalchemy.types.LargeBinary.params": [[59, 2, 1, "", "length"]], "sqlalchemy.types.Numeric": [[59, 4, 1, "", "__init__"], [59, 4, 1, "", "bind_processor"], [59, 4, 1, "", "get_dbapi_type"], [59, 4, 1, "", "literal_processor"], [59, 5, 1, "", "python_type"], [59, 4, 1, "", "result_processor"]], "sqlalchemy.types.Numeric.bind_processor.params": [[59, 2, 1, "", "dialect"]], "sqlalchemy.types.Numeric.params": [[59, 2, 1, "", "asdecimal"], [59, 2, 1, "", "decimal_return_scale"], [59, 2, 1, "", "precision"], [59, 2, 1, "", "scale"]], "sqlalchemy.types.Numeric.result_processor.params": [[59, 2, 1, "", "coltype"], [59, 2, 1, "", "dialect"]], "sqlalchemy.types.PickleType": [[59, 4, 1, "", "__init__"], [59, 4, 1, "", "bind_processor"], [59, 5, 1, "", "cache_ok"], [59, 4, 1, "", "compare_values"], [59, 5, 1, "", "impl"], [59, 4, 1, "", "result_processor"]], "sqlalchemy.types.PickleType.bind_processor.params": [[59, 2, 1, "", "dialect"]], "sqlalchemy.types.PickleType.params": [[59, 2, 1, "", "comparator"], [59, 2, 1, "", "impl"], [59, 2, 1, "", "pickler"], [59, 2, 1, "", "protocol"]], "sqlalchemy.types.PickleType.result_processor.params": [[59, 2, 1, "", "coltype"], [59, 2, 1, "", "dialect"]], "sqlalchemy.types.SchemaType": [[59, 4, 1, "", "adapt"], [59, 5, 1, "", "bind"], [59, 4, 1, "", "copy"], [59, 4, 1, "", "create"], [59, 4, 1, "", "drop"]], "sqlalchemy.types.String": [[59, 5, 1, "", "RETURNS_BYTES"], [59, 5, 1, "", "RETURNS_CONDITIONAL"], [59, 5, 1, "", "RETURNS_UNICODE"], [59, 5, 1, "", "RETURNS_UNKNOWN"], [59, 4, 1, "", "__init__"], [59, 4, 1, "", "bind_processor"], [59, 4, 1, "", "get_dbapi_type"], [59, 4, 1, "", "literal_processor"], [59, 5, 1, "", "python_type"], [59, 4, 1, "", "result_processor"]], "sqlalchemy.types.String.bind_processor.params": [[59, 2, 1, "", "dialect"]], "sqlalchemy.types.String.params": [[59, 2, 1, "", "collation"], [59, 2, 1, "", "convert_unicode"], [59, 2, 1, "", "length"], [59, 2, 1, "", "unicode_error"]], "sqlalchemy.types.String.result_processor.params": [[59, 2, 1, "", "coltype"], [59, 2, 1, "", "dialect"]], "sqlalchemy.types.TIMESTAMP": [[59, 4, 1, "", "__init__"], [59, 4, 1, "", "get_dbapi_type"]], "sqlalchemy.types.TIMESTAMP.params": [[59, 2, 1, "", "timezone"]], "sqlalchemy.types.Time": [[59, 4, 1, "", "get_dbapi_type"], [59, 5, 1, "", "python_type"]], "sqlalchemy.types.TypeDecorator": [[33, 3, 1, "", "Comparator"], [33, 4, 1, "", "__init__"], [33, 4, 1, "", "bind_expression"], [33, 4, 1, "", "bind_processor"], [33, 5, 1, "", "cache_ok"], [33, 4, 1, "", "coerce_compared_value"], [33, 5, 1, "", "coerce_to_is_types"], [33, 4, 1, "", "column_expression"], [33, 5, 1, "", "comparator_factory"], [33, 4, 1, "", "compare_values"], [33, 4, 1, "", "copy"], [33, 4, 1, "", "get_dbapi_type"], [33, 4, 1, "", "literal_processor"], [33, 4, 1, "", "load_dialect_impl"], [33, 4, 1, "", "process_bind_param"], [33, 4, 1, "", "process_literal_param"], [33, 4, 1, "", "process_result_value"], [33, 4, 1, "", "result_processor"], [33, 5, 1, "", "sort_key_function"], [33, 4, 1, "", "type_engine"]], "sqlalchemy.types.TypeDecorator.Comparator": [[33, 4, 1, "", "operate"], [33, 4, 1, "", "reverse_operate"]], "sqlalchemy.types.TypeDecorator.Comparator.operate.params": [[33, 2, 1, "", "**kwargs"], [33, 2, 1, "", "*other"], [33, 2, 1, "", "op"]], "sqlalchemy.types.TypeDecorator.bind_processor.params": [[33, 2, 1, "", "dialect"]], "sqlalchemy.types.TypeDecorator.process_bind_param.params": [[33, 2, 1, "", "dialect"], [33, 2, 1, "", "value"]], "sqlalchemy.types.TypeDecorator.process_result_value.params": [[33, 2, 1, "", "dialect"], [33, 2, 1, "", "value"]], "sqlalchemy.types.TypeDecorator.result_processor.params": [[33, 2, 1, "", "coltype"], [33, 2, 1, "", "dialect"]], "sqlalchemy.types.TypeEngine": [[58, 3, 1, "", "Comparator"], [58, 4, 1, "", "adapt"], [58, 4, 1, "", "as_generic"], [58, 4, 1, "", "bind_expression"], [58, 4, 1, "", "bind_processor"], [58, 4, 1, "", "coerce_compared_value"], [58, 4, 1, "", "column_expression"], [58, 5, 1, "", "comparator_factory"], [58, 4, 1, "", "compare_against_backend"], [58, 4, 1, "", "compare_values"], [58, 4, 1, "", "compile"], [58, 4, 1, "", "dialect_impl"], [58, 4, 1, "", "evaluates_none"], [58, 4, 1, "", "get_dbapi_type"], [58, 5, 1, "", "hashable"], [58, 4, 1, "", "literal_processor"], [58, 5, 1, "", "python_type"], [58, 4, 1, "", "result_processor"], [58, 5, 1, "", "should_evaluate_none"], [58, 5, 1, "", "sort_key_function"], [58, 4, 1, "", "with_variant"]], "sqlalchemy.types.TypeEngine.Comparator": [[58, 4, 1, "", "operate"], [58, 4, 1, "", "reverse_operate"]], "sqlalchemy.types.TypeEngine.Comparator.operate.params": [[58, 2, 1, "", "**kwargs"], [58, 2, 1, "", "*other"], [58, 2, 1, "", "op"]], "sqlalchemy.types.TypeEngine.bind_processor.params": [[58, 2, 1, "", "dialect"]], "sqlalchemy.types.TypeEngine.compare_against_backend.params": [[58, 2, 1, "", "conn_type"], [58, 2, 1, "", "dialect"]], "sqlalchemy.types.TypeEngine.compile.params": [[58, 2, 1, "", "dialect"]], "sqlalchemy.types.TypeEngine.result_processor.params": [[58, 2, 1, "", "coltype"], [58, 2, 1, "", "dialect"]], "sqlalchemy.types.TypeEngine.with_variant.params": [[58, 2, 1, "", "dialect_name"], [58, 2, 1, "", "type_"]], "sqlalchemy.types.Unicode": [[59, 4, 1, "", "__init__"]], "sqlalchemy.types.UnicodeText": [[59, 4, 1, "", "__init__"]], "sqlalchemy.types.UserDefinedType": [[33, 5, 1, "", "cache_ok"], [33, 4, 1, "", "coerce_compared_value"]], "sqlalchemy.types.Variant": [[58, 4, 1, "", "__init__"], [58, 4, 1, "", "with_variant"]], "sqlalchemy.types.Variant.params": [[58, 2, 1, "", "base"], [58, 2, 1, "", "mapping"]], "sqlalchemy.types.Variant.with_variant.params": [[58, 2, 1, "", "dialect_name"], [58, 2, 1, "", "type_"]], "sqlalchemy.util": [[90, 3, 1, "", "ScopedRegistry"], [90, 3, 1, "", "ThreadLocalRegistry"]], "sqlalchemy.util.ScopedRegistry": [[90, 4, 1, "", "__init__"], [90, 4, 1, "", "clear"], [90, 4, 1, "", "has"], [90, 4, 1, "", "set"]], "sqlalchemy.util.ScopedRegistry.params": [[90, 2, 1, "", "createfunc"], [90, 2, 1, "", "scopefunc"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:parameter", "3": "py:class", "4": "py:method", "5": "py:attribute", "6": "py:exception", "7": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "parameter", "Python parameter"], "3": ["py", "class", "Python class"], "4": ["py", "method", "Python method"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "exception", "Python exception"], "7": ["py", "data", "Python data"]}, "titleterms": {"0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 45, 70, 147, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 21, 22, 23, 24, 25, 26, 57, 66, 76, 82, 136, 147, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "changelog": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "7": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 22, 23, 25, 26, 77], "6": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 20, 25], "5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19], "4": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 25, 26, 76, 82, 136, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 22, 24, 25, 26, 68, 82, 136], "2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 23, 25, 26, 45, 66, 70, 76, 136, 147, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "8": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 66], "11": [2, 6, 9, 10, 11, 12, 13], "orm": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 33, 64, 70, 75, 76, 77, 85, 91, 97, 98, 99, 102, 113, 114, 118, 120, 123, 131, 134, 136, 137, 138, 139, 147, 155, 157, 161, 162], "engin": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 22, 24, 26, 31, 37, 38, 65, 70, 71, 102, 136, 139, 150, 158], "sql": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 33, 35, 37, 40, 42, 43, 44, 57, 59, 60, 64, 65, 67, 70, 71, 76, 77, 78, 79, 106, 124, 130, 136, 151, 154, 155, 156], "mysql": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 21, 22, 23, 24, 37, 65, 71, 136], "sqlite": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 21, 22, 24, 25, 37, 68, 71, 136], "mssql": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 64], "oracl": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 21, 22, 23, 24, 25, 37, 66], "firebird": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 20, 62], "misc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "10": [2, 6, 8, 9, 10, 11, 12, 13, 22, 25, 67], "gener": [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 17, 18, 20, 22, 23, 24, 25, 31, 35, 37, 44, 59, 66, 70, 78, 95, 98, 103, 136, 154], "9": [2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 20], "extens": [2, 3, 4, 13, 17, 18, 19, 20, 22, 24, 26, 30, 32, 55, 65, 82, 102, 107, 114], "schema": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 20, 22, 23, 31, 32, 40, 49, 52, 53, 64, 67, 74, 96, 102, 151], "7p1": 3, "2p3": 3, "0beta6": 3, "0beta5": 3, "0beta4": 3, "0beta3": [3, 4], "0beta2": [3, 4], "0beta1": [3, 4], "postgresql": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 24, 25, 37, 67, 136], "4p2": 4, "4p1": 4, "0rc4": 4, "0rc3": 4, "0rc2": 4, "0rc1": 4, "exampl": [5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 21, 30, 31, 66, 82, 98], "test": [5, 6, 7, 8, 9, 10, 11, 12, 13, 26, 71, 98, 150], "6beta3": 5, "6beta2": 5, "6beta1": 5, "0b4": [6, 9], "0b3": [6, 9, 10, 11, 12, 13], "0b2": [6, 7, 9, 10, 11, 12, 13], "0b1": [6, 7, 8, 9, 10, 11, 12, 13], "declar": [7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 21, 25, 26, 32, 75, 91, 92, 93, 95, 96, 103, 105, 107, 108, 111, 118, 134, 139, 151, 161], "19": [9, 11, 12, 13], "18": [9, 10, 11, 12, 13], "17": [9, 10, 11, 12, 13], "16": [9, 10, 11, 12, 13, 22, 25], "15": [9, 10, 11, 12, 13], "14": [9, 10, 11, 12, 13], "13": [9, 10, 11, 12, 13], "12": [9, 10, 11, 12, 13, 66], "0b5": 9, "25": [12, 13, 21], "24": [12, 13], "23": [12, 13], "22": [12, 13], "21": [12, 13], "20": [12, 13], "46": 13, "45": 13, "asyncio": [13, 26, 70, 71, 73, 82, 98, 102], "44": 13, "43": 13, "42": 13, "41": 13, "40": 13, "mypi": [13, 95, 118], "39": 13, "38": 13, "37": 13, "36": 13, "35": 13, "34": 13, "33": 13, "32": 13, "mariadb": [13, 25, 65], "31": 13, "30": 13, "29": 13, "28": 13, "platform": [13, 17, 19, 20, 22, 23, 82, 102], "27": 13, "26": 13, "chang": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 57, 65, 77, 129, 139, 148, 157], "migrat": [14, 26, 31, 49, 82, 150, 161], "current": [14, 21, 25, 65, 149], "guid": [14, 33, 82, 138], "sqlalchemi": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 45, 46, 66, 68, 70, 71, 74, 76, 77, 81, 82, 118, 120, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "overview": [14, 26, 82, 134, 160], "statu": [14, 65, 118], "log": [14, 17, 18, 22, 31, 37, 51, 66, 67, 71, 76], "older": 14, "what": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 49, 76, 118, 128, 138, 147, 149, 151, 157], "": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 49, 65, 70, 76, 77, 151, 157], "new": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 33, 49, 101, 147], "about": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 57, 73, 75, 151, 160], "thi": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 57, 70, 71, 77, 78, 151, 160], "document": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 36, 51, 54, 56, 57, 81, 82, 101, 102, 104, 112, 151, 160], "first": [15, 18, 24, 26, 77], "thing": 15, "modul": [15, 18, 19, 22], "import": [15, 17, 18, 25, 128], "object": [15, 16, 19, 20, 21, 22, 23, 24, 25, 35, 49, 52, 54, 57, 60, 66, 67, 70, 71, 74, 76, 77, 84, 85, 89, 98, 101, 102, 113, 122, 127, 134, 136, 137, 139, 147, 148, 149, 151, 161, 162, 163], "relat": [15, 16, 17, 21, 25, 64, 70, 77, 79, 98, 124, 151, 163], "map": [15, 16, 18, 21, 22, 25, 70, 75, 77, 91, 92, 93, 94, 95, 96, 98, 103, 118, 121, 128, 130, 131, 132, 133, 134, 135, 143, 151, 161, 162], "queri": [15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 37, 76, 77, 97, 98, 101, 104, 122, 124, 126, 127, 130, 137, 138, 144, 147, 148, 151, 163], "api": [15, 17, 18, 20, 21, 25, 26, 29, 31, 32, 34, 35, 37, 39, 42, 44, 47, 49, 51, 57, 58, 71, 82, 90, 98, 101, 102, 103, 104, 105, 112, 113, 115, 116, 117, 119, 122, 126, 128, 132, 137, 140, 146, 151], "properti": [15, 22, 92, 113, 124, 130, 134], "base": [15, 18, 21, 22, 25, 58, 87, 94, 95, 101, 109, 118, 124], "express": [15, 17, 19, 20, 21, 23, 24, 25, 30, 34, 35, 42, 43, 50, 55, 56, 57, 68, 70, 78, 79, 104, 106, 113, 130, 136, 143, 154, 155, 156], "construct": [15, 17, 18, 19, 20, 21, 22, 25, 30, 34, 43, 51, 64, 65, 67, 68, 70, 76, 77, 92, 136, 137, 147, 154, 155, 156], "automat": [15, 22, 70, 71, 77, 154], "join": [15, 17, 18, 20, 21, 22, 24, 25, 26, 57, 77, 98, 113, 121, 122, 124, 128, 138, 139, 150, 151, 155, 163], "alias": [15, 18, 21, 26, 57, 122, 124, 138, 151, 155, 163], "self": [15, 124, 144], "referenti": [15, 124, 144], "populate_exist": 15, "claus": [15, 18, 20, 21, 24, 25, 67, 68, 70, 134, 138, 147, 154, 155], "embed": [15, 22, 23, 136], "updat": [15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 32, 35, 36, 57, 65, 66, 67, 68, 77, 85, 113, 118, 136, 138, 141, 147, 151, 152, 156, 162], "insert": [15, 19, 20, 21, 22, 23, 25, 26, 35, 36, 57, 64, 65, 67, 68, 76, 136, 147, 154, 162], "cyclic": 15, "eager": [15, 17, 20, 21, 22, 23, 24, 25, 122, 128, 144, 151, 163], "load": [15, 17, 20, 21, 22, 23, 24, 26, 70, 77, 104, 121, 122, 126, 127, 128, 144, 148, 149, 151, 163], "composit": [15, 18, 20, 22, 23, 88, 101, 117, 124, 144], "type": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 32, 33, 52, 57, 58, 59, 64, 65, 66, 67, 68, 70, 87, 88, 118, 152, 155], "dynamic_load": 15, "option": [15, 20, 21, 22, 23, 24, 26, 49, 64, 65, 66, 67, 68, 92, 126, 128, 133, 138], "undefer_group": 15, "eagerload_al": [15, 17, 18], "collect": [15, 18, 22, 23, 24, 25, 32, 77, 85, 87, 98, 101, 128], "from": [15, 19, 20, 21, 22, 23, 24, 25, 26, 31, 52, 54, 67, 70, 76, 77, 84, 85, 94, 103, 113, 130, 133, 134, 138, 150, 151, 154, 155, 156, 162], "extern": [15, 21, 63, 64, 150], "tabl": [15, 17, 18, 21, 22, 23, 24, 27, 49, 52, 54, 57, 64, 65, 66, 67, 68, 70, 74, 75, 84, 91, 94, 96, 98, 111, 118, 121, 122, 133, 134, 135, 139, 151, 152, 155, 156, 161], "subqueri": [15, 17, 18, 19, 20, 21, 24, 25, 26, 50, 57, 70, 104, 113, 128, 135, 138, 151, 155], "horizont": [15, 24, 26, 98, 112, 136], "scale": 15, "shard": [15, 23, 24, 26, 98, 112], "session": [15, 18, 19, 21, 22, 23, 25, 26, 70, 71, 77, 90, 97, 102, 104, 136, 145, 146, 147, 148, 149, 150, 151, 157, 162, 163], "creat": [15, 20, 21, 22, 25, 32, 33, 37, 49, 57, 65, 70, 74, 77, 90, 94, 95, 124, 128, 139, 151, 152], "paradigm": 15, "sessioncontext": 15, "assignmapp": 15, "deprec": [15, 16, 17, 18, 19, 21, 22, 24, 25, 63, 64], "ar": [15, 18, 20, 21, 22, 23, 24, 25, 26, 37, 57, 71, 76, 77, 78, 161], "again": [15, 21, 77], "weak": 15, "referenc": [15, 85, 149], "By": 15, "default": [15, 16, 18, 20, 21, 22, 23, 25, 26, 30, 32, 35, 49, 52, 83, 115, 134, 136], "auto": [15, 18, 19, 21, 64, 66, 68, 147], "transact": [15, 22, 25, 26, 31, 51, 64, 65, 66, 67, 68, 70, 71, 77, 136, 148, 149, 150, 152, 157], "flush": [15, 18, 21, 22, 70, 77, 136, 147, 162], "method": [15, 18, 19, 21, 22, 23, 24, 26, 66, 70, 82, 90, 102, 151], "move": [15, 16, 22, 26], "onto": 15, "nest": [15, 20, 21, 22, 31, 88, 98, 150], "savepoint": [15, 22, 68, 150], "two": [15, 18, 26, 66, 76, 102, 150], "phase": [15, 25, 66, 150], "commit": [15, 71, 77, 147, 150, 157, 162], "inherit": [15, 17, 21, 22, 23, 25, 94, 98, 103, 108, 121, 122], "polymorph": [15, 22, 23, 121, 122, 128], "No": [15, 16, 19, 21, 22, 70], "union": [15, 17, 22, 57, 138, 155], "better": [15, 21], "behavior": [15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 57, 62, 64, 65, 66, 68, 74, 84, 113, 129, 134, 149], "get": [15, 18, 20, 22, 26, 71, 73, 74, 75, 77, 79, 138, 147, 149, 156, 157, 162], "custom": [15, 21, 23, 25, 30, 32, 33, 34, 37, 50, 51, 57, 67, 71, 78, 87, 90, 103, 109, 113, 124, 128, 129, 136, 152], "subclass": [15, 22, 23, 30, 74, 113, 115, 122], "typedecor": [15, 18, 22, 33], "all": [15, 18, 19, 21, 22, 23, 24, 25, 26, 31, 52, 66, 75, 77, 98, 155], "determinist": [15, 21], "label": [15, 18, 20, 25, 54, 57, 155], "alia": [15, 18, 19, 70], "select": [15, 17, 18, 19, 20, 21, 22, 25, 26, 44, 54, 57, 65, 70, 128, 138, 139, 147, 151, 154, 155], "oper": [15, 18, 19, 21, 22, 23, 24, 25, 33, 50, 57, 67, 70, 71, 78, 88, 124, 129, 136, 138, 151, 155, 163], "system": [15, 17, 18, 19, 20, 21, 23, 66, 118, 152], "keyword": [15, 18, 20, 21, 22, 23, 26, 37, 68, 70, 77], "argument": [15, 18, 19, 20, 23, 24, 26, 37, 39, 62, 65, 66, 67, 70, 71, 83, 84, 92, 94, 103, 110], "renam": [15, 16, 18, 26], "type_": 15, "in_": 15, "function": [15, 18, 22, 24, 26, 30, 31, 32, 35, 37, 44, 51, 57, 67, 68, 70, 74, 102, 124, 155], "accept": [15, 16, 17, 18, 19, 20, 25, 26], "sequenc": [15, 24, 25, 34, 35, 64, 66, 67], "reflect": [15, 17, 21, 22, 23, 24, 33, 49, 52, 65, 66, 67, 68, 96, 111, 133, 161], "metadata": [15, 18, 21, 26, 32, 35, 49, 70, 74, 92, 96, 103, 106, 161], "boundmetadata": 15, "dynamicmetadata": 15, "One": [15, 26, 84, 135], "step": [15, 26, 76, 82], "multi": [15, 21, 22, 23, 24], "execut": [15, 18, 23, 25, 26, 31, 35, 40, 57, 64, 67, 71, 76, 138, 148, 154, 157], "connect": [15, 16, 18, 21, 22, 23, 24, 25, 26, 31, 37, 38, 40, 49, 51, 57, 62, 64, 65, 66, 67, 68, 69, 70, 71, 102, 150, 151, 157, 158], "bind_to": 15, "now": [15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 71], "bind": [15, 18, 20, 33, 57, 66, 70], "nestedtransact": 15, "twophasetransact": 15, "pool": [15, 16, 18, 23, 37, 40, 51, 64, 66, 67, 68, 71, 102], "event": [15, 18, 19, 20, 21, 22, 23, 39, 40, 51, 97, 98, 100, 102, 104, 117, 148, 150], "fix": [15, 19, 20, 21, 22, 23, 31], "out": [15, 24, 70, 71, 78, 147], "paramet": [15, 18, 22, 23, 24, 25, 31, 37, 57, 64, 67, 70, 78, 83, 134, 156, 157], "bound": [15, 21, 25, 26, 57, 70, 78, 157], "faster": [15, 21], "more": [15, 18, 19, 20, 22, 24, 25, 26, 37, 51, 57, 151], "foolproof": 15, "resultproxi": [15, 21], "major": [16, 23, 25, 26], "sourc": 16, "requir": [16, 18, 21, 22, 25, 70], "extend": [16, 98], "longer": [16, 18, 20, 21, 22, 23, 24, 25, 26, 63, 70], "threadloc": [16, 24], "arg": [16, 18], "remov": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 66, 77], "support": [17, 19, 20, 21, 22, 23, 24, 25, 26, 30, 37, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 82, 117, 118, 136, 141], "dialect": [17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 62, 63, 64, 66], "languag": [17, 43, 53, 57, 70], "an": [17, 19, 20, 21, 22, 23, 25, 31, 70, 71, 73, 75, 77, 91, 95, 96, 103, 118, 133, 138, 139, 149, 150, 151, 157], "gotcha": 17, "stricter": [17, 25], "executemani": [17, 21, 64], "other": [17, 18, 21, 32, 37, 52, 57, 68, 77, 92, 94, 102, 118, 134, 138, 155, 161], "compound": 17, "parenthes": [17, 22, 78], "consist": [17, 18, 23], "c": [17, 18, 19, 20, 22, 82], "result": [17, 19, 22, 25, 26, 31, 33, 57, 66, 71, 76, 102, 128, 138], "fetch": [17, 20, 21, 25, 66, 76, 136, 138, 157], "capabl": [17, 20], "element": [17, 18, 22, 24, 26, 30, 56, 70], "open": [17, 147], "up": [17, 19, 20, 23, 32, 78, 161], "inspector": [17, 19, 52, 102], "return": [17, 18, 20, 21, 25, 51, 62, 66, 67, 71, 77, 136, 147, 151, 154, 155, 156], "architectur": 17, "nativ": [17, 20, 21, 22, 67, 68], "unicod": [17, 18, 21, 24, 33, 64, 65, 66, 67, 68, 69], "mode": [17, 23, 25, 26, 64, 65, 70], "enum": [17, 20, 21, 22, 25, 32, 67], "specif": [17, 18, 19, 20, 22, 23, 24, 30, 37, 49, 57, 59, 64, 65, 66, 67, 68, 78, 122, 137], "miscellan": 17, "unit": 17, "work": [17, 18, 19, 21, 22, 23, 24, 25, 26, 31, 33, 71, 76, 87, 113, 151, 153, 155, 157, 161, 163], "delet": [17, 19, 21, 22, 23, 24, 25, 26, 32, 36, 57, 70, 77, 84, 85, 87, 101, 138, 139, 147, 148, 151, 156, 162], "i": [17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 70, 71, 73, 74, 75, 76, 77, 78, 79, 87, 102, 136, 147, 151, 155], "offici": 17, "name": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 37, 39, 49, 64, 66, 68, 96, 103, 133], "relationship": [17, 19, 20, 21, 22, 24, 25, 26, 70, 75, 83, 84, 85, 87, 94, 98, 103, 110, 113, 118, 121, 122, 124, 128, 138, 140, 141, 142, 144, 151, 163], "eagerload": [17, 18, 151], "joinedload": [17, 19, 21, 77, 151], "joinedload_al": 17, "lazi": [17, 23, 57, 70, 77, 104, 128, 151, 158], "fals": [17, 20, 21, 22, 23, 30, 77], "none": [17, 18, 20, 21, 22, 23, 77, 136], "true": [17, 18, 20, 21, 23, 25, 26, 70, 79], "dynam": [17, 26, 31, 37, 49, 87, 92, 95, 98], "noload": [17, 87], "innerjoin": [17, 21], "mani": [17, 20, 22, 24, 25, 26, 70, 71, 84, 85, 103, 110, 124, 151], "one": [17, 20, 22, 24, 26, 70, 76, 77], "enhanc": [17, 18, 19, 22, 23, 25], "mutabl": [17, 18, 23, 33, 117, 141], "primari": [17, 18, 22, 24, 32, 75, 121, 133, 136, 141, 147, 162], "kei": [17, 18, 19, 21, 22, 23, 24, 31, 32, 65, 68, 70, 75, 85, 87, 121, 124, 133, 136, 141, 147, 162], "beaker": [17, 18], "cach": [17, 19, 23, 25, 26, 30, 31, 67, 70, 76, 98, 147], "sqlsoup": [17, 19], "introduct": [18, 19, 20, 21, 22, 23, 24], "featur": [18, 19, 20, 21, 22, 23, 24, 25, 65], "hybrid": [18, 22, 23, 96, 111, 113, 129, 130], "attribut": [18, 19, 20, 21, 23, 24, 25, 26, 70, 75, 77, 97, 98, 106, 113, 118, 122, 129, 130, 133, 138, 146, 148, 149, 162], "implement": [18, 21, 24, 51, 87], "supersed": [18, 26], "synonym": [18, 66, 129], "comparable_properti": 18, "speed": [18, 31], "rewritten": [18, 19], "succinct": 18, "form": [18, 20, 22, 163], "target": [18, 19, 20, 21, 23, 24, 39, 47, 67, 68, 124, 138, 163], "onclaus": 18, "mutat": [18, 22, 23, 25, 87, 88, 117], "null": [18, 20, 21, 22, 65, 136], "last": [18, 24], "distinct": [18, 20, 21, 22, 25, 26, 113], "ON": [18, 21, 22, 23, 24, 32, 65, 66, 67, 68, 77, 85, 136, 138, 141, 148, 155, 163], "index": [18, 22, 32, 64, 65, 66, 67, 68, 94, 115], "can": [18, 19, 20, 21, 22, 23, 25, 70, 71, 74, 76, 147], "place": [18, 23, 88], "inlin": [18, 21, 78, 147], "insid": [18, 57], "__table_args__": 18, "window": [18, 22, 57, 124, 155], "execution_opt": 18, "isolation_level": 18, "integ": [18, 22, 64, 68], "column": [18, 19, 20, 21, 22, 23, 24, 25, 26, 35, 49, 52, 56, 57, 64, 65, 66, 67, 68, 70, 74, 75, 88, 94, 96, 103, 117, 118, 121, 126, 130, 133, 136, 138, 143, 152, 155], "present": [18, 20, 22], "space": [18, 20, 98], "backward": 18, "compat": [18, 21, 22, 26, 64, 65, 66, 68, 136], "build": [18, 22, 113, 124, 151], "count": [18, 20, 21, 57, 77, 151, 152, 156], "simplifi": [18, 23, 101], "should": 18, "virtual": 18, "alwai": [18, 19, 35, 77, 157], "To": [18, 25, 70, 84, 151], "emit": [18, 21, 22, 23, 24, 25, 77, 139, 161], "non": [18, 22, 24, 51, 64, 77, 95, 124, 135, 136], "limit": [18, 21, 22, 25, 31, 52, 57, 64, 66, 70, 75, 77, 124, 141], "offset": [18, 21, 22, 25, 31, 57, 64, 66], "us": [18, 19, 20, 21, 23, 24, 25, 26, 31, 32, 34, 37, 38, 50, 51, 57, 59, 64, 65, 66, 67, 68, 70, 71, 73, 75, 77, 78, 82, 83, 85, 87, 90, 91, 94, 95, 96, 98, 102, 103, 104, 106, 111, 118, 122, 124, 128, 129, 130, 133, 136, 145, 147, 150, 151, 155, 156, 157, 163], "polymorphic_on": 18, "assign": 18, "contains_eag": [18, 19, 128], "chain": [18, 23, 26, 138], "across": [18, 19, 113, 126], "multipl": [18, 19, 22, 23, 31, 57, 59, 67, 68, 71, 94, 102, 124, 126, 135, 136, 138, 151, 156, 157], "path": [18, 67, 98, 124, 163], "e": [18, 25, 26, 31, 94, 136], "orphan": [18, 19, 70, 85, 151], "have": [18, 20, 21, 77, 79, 118, 155], "parent": [18, 24, 70, 77], "allow": [18, 22, 23, 25, 68, 70, 71, 113], "warn": [18, 19, 21, 22, 24, 25, 65, 75], "when": [18, 19, 20, 21, 22, 25, 32, 66, 71, 73, 74, 77, 78, 102, 147, 149], "member": 18, "scalar": [18, 20, 35, 57, 85, 101, 117, 151, 155], "refer": [18, 20, 21, 24, 39, 50, 57, 77, 103, 105, 113, 115, 116, 117, 119, 122, 151, 152], "part": [18, 21], "setup": [18, 22, 82], "instal": [18, 22, 73, 82, 102, 118], "nose": 18, "plugin": [18, 118], "deriv": [18, 25], "fromclaus": 18, "standalon": [18, 35], "rel": 18, "file": [18, 98], "normal": [18, 23, 70], "through": [18, 49, 64], "o": [18, 51, 71, 102], "abspath": 18, "m": [18, 19, 71, 73, 75, 76, 77, 78, 79], "string": [18, 20, 21, 22, 24, 26, 31, 33, 37, 50, 64, 68, 74, 78], "varchar": [18, 21, 64], "nvarchar": [18, 21, 64], "varbinari": [18, 21], "max": [18, 22, 64, 66], "length": [18, 65, 66], "incompat": 18, "pickletyp": 18, "arrai": [18, 19, 22, 67], "turn": [18, 26, 71, 76], "off": [18, 71], "detect": [18, 19, 23, 103], "track": [18, 22, 88, 117, 148, 150], "nullpool": 18, "databas": [18, 21, 22, 37, 49, 52, 63, 64, 66, 68, 71, 78, 82, 136, 161], "merg": [18, 22, 70, 85, 149], "check": [18, 21, 22, 23, 24, 32, 57, 82, 151, 160], "version": [18, 20, 22, 23, 25, 57, 63, 64, 65, 66, 67, 68, 71, 82, 98, 151, 152, 160], "id": [18, 77], "mapper": [18, 21, 22, 24, 26, 92, 94, 97, 106, 122, 134, 135, 148], "tupl": [18, 20, 22, 25, 26, 50, 67], "improv": [18, 20, 21, 22, 23, 24, 25, 67], "most": [18, 19, 25], "same": [18, 22, 77], "explicit": [18, 22, 35, 95, 96, 103, 118, 128, 133, 150, 151, 155, 163], "ddl": [18, 21, 23, 30, 34, 35, 68, 139, 161], "escap": [18, 23, 37], "percent": [18, 23, 78], "sign": [18, 20, 23, 37, 78], "refin": [18, 23], "bit": 18, "don": [18, 25, 118], "t": [18, 24, 25, 70, 71, 77, 118], "direct": [18, 22, 92, 98], "server_default": [18, 22], "inserted_primary_kei": 18, "valu": [18, 19, 20, 21, 22, 23, 25, 35, 50, 67, 68, 70, 101, 113, 115, 117, 154, 155], "The": [18, 19, 20, 21, 22, 23, 25, 26, 32, 59, 67, 68, 70, 85, 128, 134, 137, 154, 155, 156], "except": [18, 19, 21, 22, 41, 64, 70, 77, 99], "sy": 18, "time": [18, 19, 22, 64, 68, 70, 98, 122, 128, 130], "recip": [18, 26, 33, 98], "constructor": [18, 20, 26, 36, 54, 56, 89, 106, 134], "compile_mapp": 18, "configure_mapp": 18, "configur": [18, 19, 20, 23, 26, 31, 32, 37, 51, 70, 71, 74, 75, 84, 87, 92, 96, 106, 110, 111, 121, 122, 124, 128, 131, 134, 142, 144, 151, 152, 155], "intern": [18, 21, 25, 48, 87, 100, 123], "core": [18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 40, 41, 45, 46, 48, 70, 76, 102, 129, 136, 138, 154, 155, 156, 161], "listen": [18, 21], "proxi": [18, 20, 23, 24, 25, 101], "send": [18, 64, 157], "done": 18, "via": [18, 20, 22, 31, 32, 70, 82, 87], "prefix": [18, 19, 65], "useexist": 18, "extend_exist": 18, "keep_exist": 18, "callabl": 18, "pass": [18, 21, 22, 26, 37, 64, 66, 67, 71], "bindparam": [18, 20], "evalu": [18, 21, 84, 110, 136], "affect": [18, 24, 156], "type_map": 18, "privat": 18, "_type_map": 18, "public": 18, "underscor": 18, "previous": 18, "outerjoin": [18, 25], "list": [18, 19, 22, 24, 25, 26, 50, 75, 98, 119, 144, 151], "scopedsess": 18, "python": [19, 20, 21, 22, 23, 25, 26, 35, 65, 66, 68, 69, 71, 75, 155], "mechan": 19, "class": [19, 20, 22, 24, 26, 34, 36, 54, 56, 67, 70, 75, 91, 93, 94, 95, 96, 103, 106, 109, 116, 121, 124, 131, 132, 134, 135, 151, 155, 161, 162], "inspect": [19, 21, 22, 47, 70, 102, 134, 138], "with_polymorph": [19, 122], "anywher": 19, "of_typ": 19, "ani": [19, 22, 23, 25, 70, 163], "ha": [19, 20, 21, 23, 24, 25, 70, 71, 75, 77, 163], "subqueryload": [19, 75], "Be": 19, "appli": [19, 20, 21, 22, 33, 49, 91], "unmap": 19, "superclass": 19, "distinguish": 19, "between": [19, 30, 70, 163], "packag": 19, "deferredreflect": [19, 96], "rollback": [19, 70, 71, 77, 147], "onli": [19, 20, 22, 25, 26, 65, 67, 70, 77, 102, 126, 155], "roll": [19, 70, 77, 147, 151, 162], "back": [19, 70, 77, 87, 147, 151, 162], "dirti": [19, 23], "begin_nest": 19, "dogpil": [19, 26, 98], "fulli": [19, 21, 24, 37, 70], "level": [19, 20, 22, 23, 24, 25, 26, 31, 33, 63, 64, 65, 66, 67, 68, 129, 133, 148, 150], "correlate_except": 19, "hstore": [19, 22, 67], "date": [19, 64, 68], "collat": [19, 20, 23, 64], "particular": 19, "consider": 19, "pend": [19, 22, 148], "been": [19, 20, 21, 23, 70, 71, 77], "made": [19, 23], "aggress": 19, "after_attach": 19, "fire": 19, "after": [19, 37, 76], "item": [19, 147], "associ": [19, 20, 23, 24, 35, 70, 84, 98, 101], "instead": [19, 22], "befor": [19, 23, 70], "before_attach": 19, "ad": [19, 21, 22, 23, 24, 25, 26, 33, 128, 147, 148, 151, 162], "correl": [19, 22, 57, 113, 155, 156], "like": [19, 22, 25, 26, 78], "doe": [19, 22, 31, 71, 74, 77, 118, 147, 151], "context": [19, 35], "create_al": 19, "drop_al": [19, 74], "honor": 19, "empti": [19, 21, 23, 24, 50, 67], "repair": [19, 25], "instrumentationev": 19, "magic": 19, "coercion": [19, 24, 57, 66, 155], "IN": [19, 23, 24, 25, 50, 104, 128], "compar": [19, 21, 113], "is_modifi": 19, "apply_label": 19, "single_par": 19, "error": [19, 22, 25, 66, 70, 73, 75, 79], "column_reflect": 19, "disabl": [19, 22, 31, 51, 67, 70, 104], "case": [19, 21, 22, 25, 65, 66, 136], "unconsum": 19, "becom": [19, 26], "get_primary_kei": 19, "get_pk_constraint": 19, "insensit": 19, "row": [19, 21, 22, 25, 26, 57, 66, 67, 68, 71, 76, 77, 84, 98, 124, 141, 154, 155, 156, 157, 162], "instrumentationmanag": 19, "altern": [19, 26, 31, 67, 76, 116, 124], "instrument": [19, 87, 97, 98, 116], "mutabletyp": 19, "exc": 19, "year": 19, "without": [20, 22, 23, 26, 77, 141], "2to3": 20, "per": [20, 24, 37, 67, 128, 136, 138], "basi": [20, 24], "select_from": [20, 21, 23], "correspond": 20, "entiti": [20, 22, 26, 126, 128, 138, 151, 155], "viewonli": [20, 25], "prevent": [20, 102, 128], "histori": [20, 98], "take": 20, "effect": 20, "miss": 20, "get_histori": 20, "db": 20, "ignor": [20, 70], "partial": [20, 67, 68], "AND": 20, "password": [20, 37], "portion": 20, "create_engin": 20, "consid": [20, 25], "encod": [20, 21, 33, 66], "preced": [20, 23], "rule": [20, 21, 30, 78, 128], "x": [20, 22, 57, 70, 75, 76, 147, 151], "AS": [20, 35, 66], "quot": [20, 22, 23, 65], "load_onli": 20, "wildcard": [20, 126, 128], "text": [20, 21, 24, 57, 64, 67, 68], "FOR": [20, 22, 24], "float": [20, 21, 23], "point": [20, 21, 141], "convers": 20, "precis": [20, 66], "bundl": [20, 21, 126, 138], "server": [20, 21, 22, 23, 24, 25, 31, 35, 37, 64, 65, 67, 71, 136, 152], "side": [20, 21, 24, 31, 35, 65, 67, 70, 152], "include_backref": 20, "valid": [20, 22, 23, 25, 70, 129], "json": [20, 22, 24, 33, 67], "automap": [20, 96, 103], "left": [20, 24], "outer": [20, 22, 77, 155], "wrap": [20, 21], "anon_1": 20, "right": [20, 21, 22], "inner": [20, 21], "avail": [20, 25, 26, 47, 51, 70], "effici": 20, "just": 20, "innermost": 20, "some": [20, 31, 70, 139], "backref": [20, 22, 24, 25, 70, 83, 85], "handler": [20, 21, 22, 23], "propag": [20, 22], "than": [20, 25, 26, 68], "deep": 20, "handl": [20, 21, 24, 51, 64, 67, 103, 124], "task": 20, "render": [20, 21, 24, 25, 31, 65, 70, 78], "liter": [20, 21, 22], "identifi": [20, 66, 76], "carri": 20, "along": [20, 70], "own": [20, 98], "inform": 20, "boolean": [20, 21, 22, 23, 25, 32], "constant": [20, 21, 22, 54], "conjunct": [20, 23, 50, 57], "alon": 20, "order": [20, 21, 22, 24, 57, 64, 74, 75, 77, 119, 128, 155, 156], "BY": [20, 21, 22, 35, 75, 77, 155], "rowproxi": [20, 25], "sort": [20, 74], "A": [20, 21, 22, 23, 25, 26, 70, 150, 160], "upgrad": [20, 74, 76], "copi": [20, 70], "reliabl": 20, "foreignkei": 20, "fdb": [20, 62], "kinterbasdb": [20, 62], "set": [20, 21, 22, 23, 24, 31, 32, 37, 49, 51, 57, 67, 68, 70, 75, 77, 87, 98, 102, 122, 128, 133, 138, 150, 155, 161], "retain": 20, "bulk": [21, 23, 24, 25, 113, 136], "perform": [21, 25, 31, 66, 70, 76, 98, 104], "suit": [21, 98, 150], "bake": [21, 23, 26, 104], "mixin": [21, 91, 94, 109, 118], "declared_attr": [21, 118], "full": [21, 22, 23, 67, 151, 155], "keyedtupl": [21, 25], "dramat": 21, "signific": [21, 31], "structur": 21, "memori": [21, 31, 68], "statement": [21, 23, 25, 31, 42, 57, 67, 71, 78, 128, 138, 148, 154, 157, 162], "batch": [21, 23, 25, 128], "get_bind": 21, "wider": 21, "varieti": 21, "scenario": [21, 94], "receiv": [21, 23, 117], "relev": 21, "info": [21, 22, 24], "dictionari": [21, 24, 31, 37, 87, 98, 101, 134], "columnproperti": [21, 70], "lot": 21, "order_bi": [21, 22], "mai": [21, 25], "specifi": [21, 22, 49, 57, 66, 67, 68, 83, 103, 124, 128], "arbitrari": [21, 31, 135, 138, 147], "use_alt": 21, "flag": [21, 22, 24, 26, 37], "foreignkeyconstraint": 21, "usual": [21, 154, 161], "need": [21, 24, 87, 136], "close": [21, 64, 71, 147, 162], "soft": 21, "constraint": [21, 22, 23, 24, 25, 32, 65, 66, 67, 68, 161], "column_0_nam": 21, "token": [21, 24, 32, 37, 64], "convent": [21, 24, 25, 32, 49], "unattach": 21, "attach": 21, "includ": [21, 23, 31, 63, 64, 65, 102], "uniqueconstraint": 21, "process": [21, 31, 33], "safe": [21, 147], "parameter": 21, "resolv": [21, 22, 26, 121], "negat": [21, 50], "contain": [21, 23, 50, 77], "equal": 21, "comparison": [21, 23, 24, 33, 50, 88, 124, 136], "regard": [21, 22, 25], "pre": [21, 24, 155], "exist": [21, 25, 30, 33, 91, 96, 103, 138, 147, 151, 155, 163], "prioriti": 21, "v": [21, 31, 51, 66, 150, 151, 155], "fk": [21, 24], "appear": 21, "expung": [21, 85, 149], "detach": [21, 24, 148], "explicitli": [21, 22, 24, 26, 103], "disallow": [21, 25], "yield_per": [21, 31], "duplic": [21, 23, 24, 25, 65], "defer": [21, 70, 94, 126], "implicitli": [21, 22, 25, 35, 75], "undef": 21, "hook": 21, "loader": [21, 22, 25, 87, 126, 128, 138, 163], "uselist": 21, "rais": [21, 22, 24], "from_self": [21, 26], "synchronize_sess": 21, "resurrect": 21, "singl": [21, 22, 23, 70, 121, 122], "criteria": [21, 23, 25, 67, 68, 128, 148, 163], "uncondition": 21, "coerc": [21, 22, 33, 117], "fragment": [21, 24, 57], "group": [21, 22, 23, 57, 70, 138, 155], "special": [21, 37, 67, 98, 104, 138, 141, 155], "invok": [21, 31, 35, 136], "each": [21, 25], "individu": [21, 26, 98, 138, 150], "multivalu": 21, "within": [21, 22, 24, 155], "runner": 21, "impli": 21, "autoload_with": 21, "autoload": 21, "dbapi": [21, 31, 37, 62, 64, 65, 66, 67, 68, 69, 70, 71, 150, 157], "handle_error": 21, "columncollect": 21, "sorted_t": 21, "accessor": 21, "singleton": 21, "temporari": [21, 64, 67, 68], "view": [21, 22, 52, 74], "report": 21, "overhaul": 21, "drop": [21, 32, 49, 74], "get_enum": 21, "materi": [21, 22, 98, 124], "foreign": [21, 22, 23, 32, 65, 68, 75, 85, 124, 141], "has_tabl": 21, "filter": [21, 64, 77, 128, 151, 155], "pg8000": [21, 25, 67], "client": [21, 35, 66, 136], "jsonb": [21, 67], "psycopg2cffi": [21, 67], "pypi": 21, "timestamp": [21, 30, 33, 35, 65, 136], "NOT": [21, 22, 23, 50], "blank": 21, "raise_on_warn": 21, "connector": [21, 65], "symbol": 21, "match": [21, 22, 50, 57], "agnost": [21, 33, 52], "matchtyp": 21, "drizzl": 21, "unnam": 21, "uniqu": [21, 23, 32, 65, 77], "pyodbc": [21, 24, 64, 65, 69], "driver": [21, 26, 31, 64, 65, 66, 68, 71, 102], "hostnam": [21, 64, 66], "2012": 21, "larg": [21, 22, 64, 87, 98, 138], "binari": [21, 24, 64, 65, 68], "cte": [21, 22, 57, 155], "setuptool": 22, "enabl": [22, 24, 30, 64, 76, 124, 138, 150, 162], "environ": [22, 67], "variabl": [22, 67], "lifecycl": [22, 148, 151], "state": [22, 24, 70, 146, 149, 150, 151], "transit": 22, "persist": [22, 25, 70, 77, 98, 136, 139, 141, 148, 163], "strong": [22, 24], "ident": [22, 23, 24, 25, 35, 50, 64, 66, 67, 70, 162], "init_scalar": 22, "intercept": [22, 103, 148], "unhash": 22, "impact": 22, "dedup": 22, "instanc": [22, 25, 70, 77, 97, 134, 151, 162], "over": [22, 66], "further": [22, 30, 57, 151, 156, 159], "cancel": 22, "erron": 22, "conflict": [22, 24, 25, 67, 68, 70, 103, 121, 136], "y": [22, 70, 75], "passive_delet": [22, 24], "concret": [22, 121], "docstr": 22, "well": [22, 24], "involv": [22, 23], "user": [22, 31, 68], "initi": [22, 89], "manipul": [22, 162], "stringifi": [22, 78], "consult": 22, "correct": [22, 66, 77], "where": [22, 67, 68, 77, 79, 138, 147, 148, 155], "mutablelist": [22, 23], "mutableset": [22, 23], "helper": [22, 23, 67], "raise_on_sql": 22, "strategi": [22, 24, 25, 128, 136, 144, 147, 163], "invalid": [22, 51, 70], "run": [22, 37, 71, 98, 102], "baseexcept": 22, "rang": [22, 67], "later": [22, 57, 155], "tablesampl": 22, "autoincr": [22, 68], "resultset": 22, "posit": [22, 25], "textual": [22, 57, 77, 138, 151, 155], "textasfrom": 22, "position": [22, 26], "trust": 22, "much": [22, 25, 31], "less": 22, "ambigu": [22, 24], "messag": [22, 70, 75], "neg": 22, "accommod": 22, "zero": 22, "truncat": [22, 24, 32], "displai": 22, "expect": [22, 70, 79], "omit": 22, "array_agg": 22, "aggreg": [22, 155], "tenanc": 22, "translat": [22, 31], "friendli": 22, "stringif": 22, "type_coerc": [22, 155], "suppli": 22, "establish": [22, 117, 158], "redundantli": 22, "decor": [22, 87, 95], "textclaus": 22, "similar": [22, 25, 75, 77, 95], "do": [22, 67, 68, 71, 75, 77, 78, 87, 147], "noth": [22, 67, 68], "correctli": [22, 25, 78], "access": [22, 25, 49, 64, 71, 87, 90, 96, 106], "cast": [22, 25, 57, 155], "astext": 22, "call": [22, 25, 26, 31, 66, 77], "plain": [22, 130], "separ": [22, 23], "tablespac": [22, 66], "pygresql": [22, 67], "postgr": 22, "skip": [22, 67, 68], "lock": [22, 62, 68], "NO": 22, "share": 22, "autocommit": [22, 23, 26, 30, 31, 64, 66, 68, 71, 150], "isol": [22, 23, 31, 64, 65, 66, 67, 68, 149, 150], "implicit": [22, 26, 31, 90, 102, 157], "w": [22, 25], "auto_incr": [22, 65], "workaround": 22, "lift": 22, "dot": [22, 23, 68], "remot": [22, 67], "phrase": 22, "varlength": 22, "repres": [22, 162], "cluster": [22, 64], "elsewher": [22, 77], "legacy_schema_alias": 22, "selectin": [23, 24, 122, 151, 163], "onc": [23, 52, 104, 150], "hoc": 23, "reus": [23, 113], "among": 23, "redefinit": 23, "getter": 23, "bulk_replac": 23, "modifi": [23, 37, 39, 54, 56, 155], "ext": 23, "refresh": [23, 70, 85, 147, 149], "In": [23, 31, 88], "associationproxi": [23, 24], "datatyp": [23, 24, 25, 59, 60, 66, 67, 129], "enforc": 23, "strict": [23, 26], "pessimist": [23, 51], "disconnect": [23, 51, 65], "late": [23, 84], "expand": [23, 24, 25], "flatten": 23, "comment": 23, "autoescap": 23, "startswith": 23, "endswith": 23, "stronger": 23, "cube": 23, "rollup": 23, "contextu": [23, 90], "after_rollback": 23, "expir": [23, 85, 147, 149], "issu": [23, 65, 71, 77, 79], "previou": [23, 70, 77], "upon": [23, 77], "replac": [23, 24, 25, 37, 151], "flag_dirti": 23, "mark": [23, 35], "scope": [23, 90, 102], "scoped_sess": 23, "post_upd": [23, 77], "onupd": 23, "integr": [23, 25, 79, 91, 98, 104], "literal_column": [23, 57], "condition": 23, "fast": [23, 64, 67], "field": 23, "interv": 23, "refactor": 23, "cx_oracl": [23, 24, 66], "aliasedclass": [24, 124], "simpl": [24, 25, 103, 129, 136, 138, 139, 152, 161], "won": 24, "raiseload": [24, 25, 87, 126, 128, 163], "old": 24, "del": 24, "instancest": 24, "cascade_scalar_delet": 24, "store": [24, 31, 33], "provid": [24, 74], "standard": [24, 59], "orient": 24, "dict": 24, "dure": [24, 25, 70, 77], "decid": 24, "outsid": [24, 66], "leav": 24, "unchang": 24, "long": [24, 32], "interpret": 24, "typeengin": [24, 118], "bind_express": 24, "column_express": 24, "variant": 24, "queuepool": [24, 70], "convert_unicod": 24, "basic": [24, 29, 31, 84, 98, 103, 106, 147, 148, 157], "partit": [24, 136], "protocol": 24, "ping": [24, 51], "control": [24, 34, 37, 64, 66, 85, 94, 138, 150], "nation": 24, "char": 24, "de": 24, "emphas": 24, "re": [24, 77, 148], "modern": [24, 25], "fast_executemani": 24, "start": [24, 64, 139], "increment": [24, 64, 66, 68], "statementerror": 24, "format": 24, "newlin": 24, "minimum": [25, 26], "still": [25, 77], "unifi": [25, 26], "style": [25, 39, 54, 65, 95, 134, 147], "transpar": [25, 71], "compil": [25, 30, 31, 33, 70], "dql": 25, "dml": [25, 26, 36, 65, 67, 68, 138], "dataclass": [25, 91, 118], "attr": [25, 91], "imper": [25, 91, 96, 118, 134], "asynchron": [25, 102], "io": [25, 102], "greenlet": [25, 73], "good": 25, "code": [25, 76, 82], "linter": 25, "regular": [25, 68], "add": [25, 26, 31, 37, 77], "rather": [25, 26], "url": [25, 37], "immut": 25, "createengineplugin": 25, "fly": 25, "g": [25, 26, 31, 94, 136], "built": [25, 26, 34, 138, 155], "lint": 25, "potenti": 25, "cartesian": 25, "product": [25, 31], "behav": 25, "rational": [25, 104], "goe": 25, "awai": [25, 71], "wa": [25, 70], "also": 25, "unnecessari": 25, "usag": [25, 26, 31, 118, 136], "post": [25, 31], "inact": [25, 70], "subtransact": [25, 26, 150], "psycopg2": [25, 67], "autobegin": [25, 26], "synchron": [25, 102, 147], "cascade_backref": 25, "unexpir": 25, "uniniti": 25, "transient": [25, 148], "__dict__": 25, "cascad": [25, 66, 70, 77, 85, 101, 141, 151, 163], "higher": 25, "execute_valu": 25, "rewrit": 25, "logic": 25, "prerequisit": 26, "applic": [26, 76, 90], "removedin20warn": 26, "three": [26, 76], "four": 26, "futur": [26, 45, 70, 160], "five": 26, "six": 26, "__allow_unmapped__": 26, "model": [26, 139], "seven": 26, "against": [26, 50, 77, 122, 135], "releas": 26, "librari": [26, 31], "both": 26, "remain": 26, "connectionless": [26, 31], "choic": 26, "promin": 26, "act": 26, "vari": 26, "origin": [26, 85], "pattern": [26, 31, 84, 141, 150, 151], "from_joinpoint": 26, "addit": [26, 67, 68, 77, 96, 136], "itself": [26, 70], "select_entity_from": 26, "uniquifi": 26, "make": [26, 77, 139, 147], "content": 27, "indic": 27, "appendix": 28, "copyright": 28, "synopsi": [30, 31, 102, 104, 115], "sub": [30, 37, 128], "cross": 30, "guidelin": [30, 31], "utc": [30, 33], "greatest": 30, "tip": [31, 33, 149, 151], "block": [31, 76, 147], "antipattern": 31, "emul": [31, 66], "understand": 31, "cursor": [31, 65, 67], "k": [31, 96], "stream": 31, "we": 31, "realli": [31, 76], "mean": 31, "buffer": 31, "unbuff": 31, "grow": 31, "stream_result": 31, "estim": 31, "how": [31, 37, 71, 74, 75, 76, 77, 78, 124, 147], "third": [31, 79], "parti": [31, 79], "lambda": 31, "gain": 31, "quick": [31, 139], "dispos": 31, "raw": [31, 70, 71], "directli": 31, "procedur": 31, "defin": [31, 32, 35, 57, 68, 92, 106, 113, 161], "regist": 31, "alter": [32, 49, 50, 74], "overrid": [33, 52, 103], "augment": [33, 94, 138, 163], "round": 33, "numer": [33, 64, 66], "timezon": 33, "awar": 33, "naiv": 33, "backend": [33, 37, 49, 59, 136], "marshal": 33, "deal": [33, 51, 65, 68, 87], "redefin": [33, 88], "ddlelement": 34, "sensit": [35, 65, 118], "trigger": [35, 64, 74], "serial": [35, 55, 67], "comput": 35, "foundat": [36, 43, 54, 56], "charact": 37, "programmat": [37, 152], "microsoft": [37, 64], "creation": [37, 101], "routin": 37, "connect_arg": 37, "authent": 37, "command": [37, 71], "echo": 37, "hide": 37, "registr": 39, "known": 44, "runtim": [47, 134], "describ": 49, "arithmet": 50, "switch": 51, "reset": [51, 64, 67], "On": 51, "scheme": [51, 103, 133], "legaci": [51, 64, 70, 83], "optimist": 51, "recycl": 51, "fifo": 51, "lifo": 51, "multiprocess": [51, 71], "fork": [51, 65, 71], "interact": 52, "qualifi": 52, "section": [52, 67], "best": [52, 67], "practic": [52, 67], "summar": [52, 67], "fine": [52, 66], "grain": [52, 66], "definit": [53, 63, 103], "tutori": [57, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "commonli": 57, "bigger": 57, "common": [57, 151, 155, 163], "everyth": 57, "els": 57, "data": [57, 64, 65, 66, 67, 68, 77, 127, 153, 155, 162], "ing": 57, "hierarchi": [59, 94, 121, 122], "camelcas": 59, "uppercas": 59, "vendor": 59, "visitor": 61, "travers": 61, "util": [61, 146], "resourc": [64, 67], "nullabl": 64, "multipart": 64, "rowcount": [64, 65], "snapshot": 64, "dsn": [64, 66, 67], "exact": 64, "avoid": [64, 65], "azur": 64, "synaps": 64, "analyt": 64, "warehous": 64, "dw": 64, "ntext": 64, "setinputs": [64, 66], "mxodbc": [64, 69], "pymssql": 64, "timeout": [65, 70], "storag": [65, 67], "charset": 65, "ansi": 65, "sql_mode": 65, "upsert": [65, 67, 68, 136], "parser": 65, "datetim": [65, 66, 68, 136], "explicit_defaults_for_timestamp": 65, "mysqlclient": 65, "ssl": [65, 67], "mysqldb": 65, "googl": 65, "cloud": [65, 66], "pymysql": 65, "asyncmi": 65, "aiomysql": 65, "cymysql": 65, "oursql": 65, "abov": [66, 67, 139], "note": [66, 85, 102, 136, 160], "cannot": [66, 70], "dblink": 66, "sysaux": 66, "bitmap": 66, "compress": 66, "easi": 66, "syntax": 66, "tnsname": 66, "ora": 66, "sid": 66, "consum": 66, "sessionpool": 66, "resid": 66, "drcp": 66, "ensur": [66, 68], "under": [66, 75, 102], "clob": 66, "lob": 66, "Not": 66, "read": [67, 156, 159], "deferr": [67, 126], "search": 67, "introspect": [67, 118, 134], "search_path": 67, "exclud": [67, 68], "cover": 67, "concurr": [67, 68, 152], "unix": 67, "domain": 67, "fallback": 67, "host": 67, "notic": 67, "asyncpg": 67, "prepar": 67, "jit": 67, "py": [67, 82], "affin": 68, "pysqlit": 68, "uri": 68, "sqlite3": 68, "thread": [68, 90, 147], "mix": [68, 94], "serializ": 68, "aiosqlit": 68, "pysqlciph": 68, "sybas": 69, "size": 70, "overflow": 70, "reach": 70, "z": 70, "reconnect": [70, 71], "until": 70, "interfaceerror": 70, "databaseerror": 70, "dataerror": 70, "operationalerror": 70, "integrityerror": 70, "internalerror": 70, "programmingerror": 70, "notsupportederror": 70, "produc": 70, "implic": 70, "doubt": 70, "assert": 70, "strsqlcompil": 70, "typeerror": 70, "someth": 70, "got": [70, 79], "being": [70, 73, 76, 78], "clauseel": 70, "due": [70, 77], "overlap": [70, 124], "etc": [70, 75, 77, 79, 94], "proce": 70, "For": [70, 150], "alreadi": 70, "its": 70, "q": 70, "p": 70, "which": [70, 77], "convert": 70, "awaitrequir": 70, "missinggreenlet": 70, "locat": 70, "sinc": 70, "pleas": 70, "proceed": 70, "my": [71, 74, 76, 77, 78], "gone": 71, "sync": 71, "you": [71, 150, 151], "It": 71, "retri": 71, "readonli": 71, "why": [71, 75, 76, 77, 78], "so": 71, "myisam": 71, "those": 71, "am": [71, 75], "typic": 71, "program": [71, 74], "underli": 71, "connnect": 71, "frequent": [72, 147], "ask": [72, 147], "question": [72, 147], "try": [73, 77], "hang": 74, "sai": 74, "depend": [74, 113, 141], "output": 74, "certain": [74, 77, 147], "reserv": 75, "word": 75, "given": [75, 76, 77], "combin": [75, 94, 118, 122, 161], "primaryjoin": [75, 94], "secondaryjoin": 75, "and_": 75, "or_": 75, "recommend": 75, "especi": 75, "slow": 76, "confirm": 76, "whether": 76, "seek": 76, "profil": [76, 98], "power": 76, "400": 76, "000": 76, "isn": 77, "see": 77, "But": 77, "insist": 77, "enough": 77, "must": 77, "everi": 77, "number": 77, "tell": 77, "me": 77, "ve": 77, "while": 77, "reli": 77, "__len__": 77, "myobject": 77, "__init__": [77, 151], "sa": 77, "foo_id": 77, "foo": 77, "shouldn": 77, "walk": 77, "wai": 77, "automag": 77, "kind": [77, 128], "possibli": 78, "postcompil": 78, "doubl": 78, "op": 78, "parenthesi": 78, "come": 78, "numpi": 79, "int64": 79, "bool_": 79, "role": 79, "glossari": 80, "pip": 82, "next": 82, "save": 85, "passiv": [85, 87], "techniqu": [87, 104, 128, 136, 155], "popul": [87, 138], "annot": 87, "local": 90, "web": 90, "With": 91, "__declare_last__": 92, "__declare_first__": 92, "__abstract__": 92, "__table_cls__": 92, "compos": [94, 130], "advanc": [94, 155], "column_properti": [94, 130, 133], "mapperproperti": 94, "append": 96, "adjac": [98, 144], "graph": 98, "dump": 98, "write": 98, "your": 98, "condit": [98, 124, 152], "invad": 98, "xml": 98, "tempor": 98, "vertic": [98, 136], "postgi": 98, "appl": 102, "m1": 102, "asyncsess": 102, "opposit": 102, "await": 102, "loop": 102, "measur": 104, "twice": 104, "cut": 104, "before_compil": 104, "wide": [104, 150], "approach": 111, "__table__": 111, "setter": 113, "transform": 113, "pickl": 117, "pep": 118, "484": 118, "abstract": 121, "classic": [121, 151], "semi": 121, "subtyp": 122, "secondari": 124, "exclusionari": 126, "unwant": 128, "zen": 128, "rout": 128, "eagerli": [128, 136], "descriptor": [129, 130], "distinctli": 133, "autom": 133, "subset": 133, "essenti": 134, "compon": 134, "tradit": 135, "forc": 136, "equival": 136, "coordin": 136, "caveat": 136, "autoflush": 138, "yield": 138, "learn": 139, "concept": 139, "depth": 139, "themselv": 141, "mutual": 141, "simul": 141, "sessionmak": [146, 147, 150], "manag": [146, 149, 150], "frame": 147, "begin": [147, 150, 157], "tl": 147, "dr": 147, "global": 148, "before_flush": 148, "after_flush": 148, "after_flush_postexec": 148, "quicki": 149, "intro": 149, "actual": 149, "go": 150, "minim": 151, "descript": 151, "did": 151, "know": 151, "counter": 152, "infer": 155, "tool": 161, "appropri": 161, "registri": 161, "detail": 161, "autogener": 162}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Third Party Integration Issues": [[79, "third-party-integration-issues"]], "I\u2019m getting errors related to \u201cnumpy.int64\u201d, \u201cnumpy.bool_\u201d, etc.": [[79, "i-m-getting-errors-related-to-numpy-int64-numpy-bool-etc"]], "SQL expression for WHERE/HAVING role expected, got True": [[79, "sql-expression-for-where-having-role-expected-got-true"]], "Error Messages": [[70, "error-messages"]], "Connections and Transactions": [[70, "connections-and-transactions"]], "QueuePool limit of size <x> overflow <y> reached, connection timed out, timeout <z>": [[70, "queuepool-limit-of-size-x-overflow-y-reached-connection-timed-out-timeout-z"]], "Can\u2019t reconnect until invalid transaction is rolled back": [[70, "can-t-reconnect-until-invalid-transaction-is-rolled-back"]], "DBAPI Errors": [[70, "dbapi-errors"]], "InterfaceError": [[70, "interfaceerror"]], "DatabaseError": [[70, "databaseerror"]], "DataError": [[70, "dataerror"]], "OperationalError": [[70, "operationalerror"]], "IntegrityError": [[70, "integrityerror"]], "InternalError": [[70, "internalerror"]], "ProgrammingError": [[70, "programmingerror"]], "NotSupportedError": [[70, "notsupportederror"]], "SQL Expression Language": [[70, "sql-expression-language"]], "Object will not produce a cache key, Performance Implications": [[70, "object-will-not-produce-a-cache-key-performance-implications"]], "Caching disables itself if there\u2019s any doubt": [[70, "caching-disables-itself-if-there-s-any-doubt"]], "Assertion attributes for caching": [[70, "assertion-attributes-for-caching"]], "Compiler StrSQLCompiler can\u2019t render element of type <element type>": [[70, "compiler-strsqlcompiler-can-t-render-element-of-type-element-type"]], "TypeError: <operator> not supported between instances of \u2018ColumnProperty\u2019 and <something>": [[70, "typeerror-operator-not-supported-between-instances-of-columnproperty-and-something"]], "A value is required for bind parameter <x> (in parameter group <y>)": [[70, "a-value-is-required-for-bind-parameter-x-in-parameter-group-y"]], "Expected FROM clause, got Select.  To create a FROM clause, use the .subquery() method": [[70, "expected-from-clause-got-select-to-create-a-from-clause-use-the-subquery-method"]], "An alias is being generated automatically for raw clauseelement": [[70, "an-alias-is-being-generated-automatically-for-raw-clauseelement"]], "An alias is being generated automatically due to overlapping tables": [[70, "an-alias-is-being-generated-automatically-due-to-overlapping-tables"]], "Object Relational Mapping": [[70, "object-relational-mapping"], [15, "object-relational-mapping"], [16, "object-relational-mapping"]], "Parent instance <x> is not bound to a Session; (lazy load/deferred load/refresh/etc.) operation cannot proceed": [[70, "parent-instance-x-is-not-bound-to-a-session-lazy-load-deferred-load-refresh-etc-operation-cannot-proceed"]], "This Session\u2019s transaction has been rolled back due to a previous exception during flush": [[70, "this-session-s-transaction-has-been-rolled-back-due-to-a-previous-exception-during-flush"]], "For relationship <relationship>, delete-orphan cascade is normally configured only on the \u201cone\u201d side of a one-to-many relationship, and not on the \u201cmany\u201d side of a many-to-one or many-to-many relationship.": [[70, "for-relationship-relationship-delete-orphan-cascade-is-normally-configured-only-on-the-one-side-of-a-one-to-many-relationship-and-not-on-the-many-side-of-a-many-to-one-or-many-to-many-relationship"]], "Instance <instance> is already associated with an instance of <instance> via its <attribute> attribute, and is only allowed a single parent.": [[70, "instance-instance-is-already-associated-with-an-instance-of-instance-via-its-attribute-attribute-and-is-only-allowed-a-single-parent"]], "relationship X will copy column Q to column P, which conflicts with relationship(s): \u2018Y\u2019": [[70, "relationship-x-will-copy-column-q-to-column-p-which-conflicts-with-relationship-s-y"]], "Object cannot be converted to \u2018persistent\u2019 state, as this identity map is no longer valid.": [[70, "object-cannot-be-converted-to-persistent-state-as-this-identity-map-is-no-longer-valid"]], "AsyncIO Exceptions": [[70, "asyncio-exceptions"]], "AwaitRequired": [[70, "awaitrequired"]], "MissingGreenlet": [[70, "missinggreenlet"]], "No Inspection Available": [[70, "no-inspection-available"]], "Core Exception Classes": [[70, "core-exception-classes"]], "ORM Exception Classes": [[70, "orm-exception-classes"]], "Legacy Exceptions": [[70, "legacy-exceptions"]], "The <some function> in SQLAlchemy 2.0 will no longer <something>": [[70, "the-some-function-in-sqlalchemy-2-0-will-no-longer-something"]], "Object is being merged into a Session along the backref cascade": [[70, "object-is-being-merged-into-a-session-along-the-backref-cascade"]], "select() construct created in \u201clegacy\u201d mode; keyword arguments, etc.": [[70, "select-construct-created-in-legacy-mode-keyword-arguments-etc"]], "A bind was located via legacy bound metadata, but since future=True is set on this Session, this bind is ignored.": [[70, "a-bind-was-located-via-legacy-bound-metadata-but-since-future-true-is-set-on-this-session-this-bind-is-ignored"]], "This Compiled object is not bound to any Engine or Connection": [[70, "this-compiled-object-is-not-bound-to-any-engine-or-connection"]], "This connection is on an inactive transaction.  Please rollback() fully before proceeding": [[70, "this-connection-is-on-an-inactive-transaction-please-rollback-fully-before-proceeding"]], "MetaData / Schema": [[74, "metadata-schema"]], "My program is hanging when I say table.drop() / metadata.drop_all()": [[74, "my-program-is-hanging-when-i-say-table-drop-metadata-drop-all"]], "Does SQLAlchemy support ALTER TABLE, CREATE VIEW, CREATE TRIGGER, Schema Upgrade Functionality?": [[74, "does-sqlalchemy-support-alter-table-create-view-create-trigger-schema-upgrade-functionality"]], "How can I sort Table objects in order of their dependency?": [[74, "how-can-i-sort-table-objects-in-order-of-their-dependency"]], "How can I get the CREATE TABLE/ DROP TABLE output as a string?": [[74, "how-can-i-get-the-create-table-drop-table-output-as-a-string"]], "How can I subclass Table/Column to provide certain behaviors/configurations?": [[74, "how-can-i-subclass-table-column-to-provide-certain-behaviors-configurations"]], "Using the legacy \u2018backref\u2019 relationship parameter": [[83, "using-the-legacy-backref-relationship-parameter"]], "Backref Default Arguments": [[83, "backref-default-arguments"]], "Specifying Backref Arguments": [[83, "specifying-backref-arguments"]], "SQLAlchemy Documentation": [[81, "sqlalchemy-documentation"]], "Sessions / Queries": [[77, "sessions-queries"]], "I\u2019m re-loading data with my Session but it isn\u2019t seeing changes that I committed elsewhere": [[77, "i-m-re-loading-data-with-my-session-but-it-isn-t-seeing-changes-that-i-committed-elsewhere"]], "\u201cThis Session\u2019s transaction has been rolled back due to a previous exception during flush.\u201d (or similar)": [[77, "this-session-s-transaction-has-been-rolled-back-due-to-a-previous-exception-during-flush-or-similar"]], "But why does flush() insist on issuing a ROLLBACK?": [[77, "but-why-does-flush-insist-on-issuing-a-rollback"]], "But why isn\u2019t the one automatic call to ROLLBACK enough?  Why must I ROLLBACK again?": [[77, "but-why-isn-t-the-one-automatic-call-to-rollback-enough-why-must-i-rollback-again"]], "How do I make a Query that always adds a certain filter to every query?": [[77, "how-do-i-make-a-query-that-always-adds-a-certain-filter-to-every-query"]], "My Query does not return the same number of objects as query.count() tells me - why?": [[77, "my-query-does-not-return-the-same-number-of-objects-as-query-count-tells-me-why"]], "I\u2019ve created a mapping against an Outer Join, and while the query returns rows, no objects are returned.  Why not?": [[77, "i-ve-created-a-mapping-against-an-outer-join-and-while-the-query-returns-rows-no-objects-are-returned-why-not"]], "I\u2019m using joinedload() or lazy=False to create a JOIN/OUTER JOIN and SQLAlchemy is not constructing the correct query when I try to add a WHERE, ORDER BY, LIMIT, etc. (which relies upon the (OUTER) JOIN)": [[77, "i-m-using-joinedload-or-lazy-false-to-create-a-join-outer-join-and-sqlalchemy-is-not-constructing-the-correct-query-when-i-try-to-add-a-where-order-by-limit-etc-which-relies-upon-the-outer-join"]], "Query has no __len__(), why not?": [[77, "query-has-no-len-why-not"]], "How Do I use Textual SQL with ORM Queries?": [[77, "how-do-i-use-textual-sql-with-orm-queries"]], "I\u2019m calling Session.delete(myobject) and it isn\u2019t removed from the parent collection!": [[77, "i-m-calling-session-delete-myobject-and-it-isn-t-removed-from-the-parent-collection"]], "why isn\u2019t my __init__() called when I load objects?": [[77, "why-isn-t-my-init-called-when-i-load-objects"]], "how do I use ON DELETE CASCADE with SA\u2019s ORM?": [[77, "how-do-i-use-on-delete-cascade-with-sa-s-orm"]], "I set the \u201cfoo_id\u201d attribute on my instance to \u201c7\u201d, but the \u201cfoo\u201d attribute is still None - shouldn\u2019t it have loaded Foo with id #7?": [[77, "i-set-the-foo-id-attribute-on-my-instance-to-7-but-the-foo-attribute-is-still-none-shouldn-t-it-have-loaded-foo-with-id-7"]], "Attribute loading for non-persistent objects": [[77, null]], "How do I walk all objects that are related to a given object?": [[77, "how-do-i-walk-all-objects-that-are-related-to-a-given-object"]], "Is there a way to automagically have only unique keywords (or other kinds of objects) without doing a query for the keyword and getting a reference to the row containing that keyword?": [[77, "is-there-a-way-to-automagically-have-only-unique-keywords-or-other-kinds-of-objects-without-doing-a-query-for-the-keyword-and-getting-a-reference-to-the-row-containing-that-keyword"]], "Why does post_update emit UPDATE in addition to the first UPDATE?": [[77, "why-does-post-update-emit-update-in-addition-to-the-first-update"]], "Glossary": [[80, "glossary"]], "Performance": [[76, "performance"], [98, "module-examples.performance"], [104, "performance"]], "Why is my application slow after upgrading to 1.4 and/or 2.x?": [[76, "why-is-my-application-slow-after-upgrading-to-1-4-and-or-2-x"]], "Step one - turn on SQL logging and confirm whether or not caching is working": [[76, "step-one-turn-on-sql-logging-and-confirm-whether-or-not-caching-is-working"]], "Step two - identify what constructs are blocking caching from being enabled": [[76, "step-two-identify-what-constructs-are-blocking-caching-from-being-enabled"]], "Step three - enable caching for the given objects and/or seek alternatives": [[76, "step-three-enable-caching-for-the-given-objects-and-or-seek-alternatives"]], "How can I profile a SQLAlchemy powered application?": [[76, "how-can-i-profile-a-sqlalchemy-powered-application"]], "Query Profiling": [[76, "query-profiling"]], "Code Profiling": [[76, "code-profiling"]], "Execution Slowness": [[76, "execution-slowness"]], "Result Fetching Slowness - Core": [[76, "result-fetching-slowness-core"]], "Result Fetching Slowness - ORM": [[76, "result-fetching-slowness-orm"]], "I\u2019m inserting 400,000 rows with the ORM and it\u2019s really slow!": [[76, "i-m-inserting-400-000-rows-with-the-orm-and-it-s-really-slow"]], "Overview": [[82, "overview"], [26, "overview"]], "Documentation Overview": [[82, "documentation-overview"]], "Code Examples": [[82, "code-examples"]], "Installation Guide": [[82, "installation-guide"]], "Supported Platforms": [[82, "supported-platforms"]], "AsyncIO Support": [[82, "asyncio-support"]], "Supported Installation Methods": [[82, "supported-installation-methods"]], "Install via pip": [[82, "install-via-pip"]], "Installing using setup.py": [[82, "installing-using-setup-py"]], "Installing the C Extensions": [[82, "installing-the-c-extensions"]], "Installing a Database API": [[82, "installing-a-database-api"]], "Checking the Installed SQLAlchemy Version": [[82, "checking-the-installed-sqlalchemy-version"]], "Next Steps": [[82, "next-steps"]], "1.3 to 1.4 Migration": [[82, "to-1-4-migration"]], "Connections / Engines": [[71, "connections-engines"]], "How do I configure logging?": [[71, "how-do-i-configure-logging"]], "How do I pool database connections?   Are my connections pooled?": [[71, "how-do-i-pool-database-connections-are-my-connections-pooled"]], "How do I pass custom connect arguments to my database API?": [[71, "how-do-i-pass-custom-connect-arguments-to-my-database-api"]], "\u201cMySQL Server has gone away\u201d": [[71, "mysql-server-has-gone-away"]], "\u201cCommands out of sync; you can\u2019t run this command now\u201d / \u201cThis result object does not return rows. It has been closed automatically\u201d": [[71, "commands-out-of-sync-you-can-t-run-this-command-now-this-result-object-does-not-return-rows-it-has-been-closed-automatically"]], "How Do I \u201cRetry\u201d a Statement Execution Automatically?": [[71, "how-do-i-retry-a-statement-execution-automatically"]], "Using DBAPI Autocommit Allows for a Readonly Version of Transparent Reconnect": [[71, "using-dbapi-autocommit-allows-for-a-readonly-version-of-transparent-reconnect"]], "Why does SQLAlchemy issue so many ROLLBACKs?": [[71, "why-does-sqlalchemy-issue-so-many-rollbacks"]], "I\u2019m on MyISAM - how do I turn it off?": [[71, "i-m-on-myisam-how-do-i-turn-it-off"]], "I\u2019m on SQL Server - how do I turn those ROLLBACKs into COMMITs?": [[71, "i-m-on-sql-server-how-do-i-turn-those-rollbacks-into-commits"]], "I am using multiple connections with a SQLite database (typically to test transaction operation), and my test program is not working!": [[71, "i-am-using-multiple-connections-with-a-sqlite-database-typically-to-test-transaction-operation-and-my-test-program-is-not-working"]], "How do I get at the raw DBAPI connection when using an Engine?": [[71, "how-do-i-get-at-the-raw-dbapi-connection-when-using-an-engine"]], "Accessing the underlying connnection for an asyncio driver": [[71, "accessing-the-underlying-connnection-for-an-asyncio-driver"]], "How do I use engines / connections / sessions with Python multiprocessing, or os.fork()?": [[71, "how-do-i-use-engines-connections-sessions-with-python-multiprocessing-or-os-fork"]], "Installation": [[73, "installation"], [118, "installation"]], "I\u2019m getting an error about greenlet not being installed when I try to use asyncio": [[73, "i-m-getting-an-error-about-greenlet-not-being-installed-when-i-try-to-use-asyncio"]], "Frequently Asked Questions": [[72, "frequently-asked-questions"]], "SQL Expressions": [[78, "sql-expressions"], [15, "sql-expressions"]], "How do I render SQL expressions as strings, possibly with bound parameters inlined?": [[78, "how-do-i-render-sql-expressions-as-strings-possibly-with-bound-parameters-inlined"]], "Stringifying for Specific Databases": [[78, "stringifying-for-specific-databases"]], "Rendering Bound Parameters Inline": [[78, "rendering-bound-parameters-inline"]], "Rendering \u201cPOSTCOMPILE\u201d Parameters as Bound Parameters": [[78, "rendering-postcompile-parameters-as-bound-parameters"]], "Why are percent signs being doubled up when stringifying SQL statements?": [[78, "why-are-percent-signs-being-doubled-up-when-stringifying-sql-statements"]], "I\u2019m using op() to generate a custom operator and my parenthesis are not coming out correctly": [[78, "i-m-using-op-to-generate-a-custom-operator-and-my-parenthesis-are-not-coming-out-correctly"]], "Why are the parentheses rules like this?": [[78, "why-are-the-parentheses-rules-like-this"]], "ORM Configuration": [[75, "orm-configuration"]], "How do I map a table that has no primary key?": [[75, "how-do-i-map-a-table-that-has-no-primary-key"]], "How do I configure a Column that is a Python reserved word or similar?": [[75, "how-do-i-configure-a-column-that-is-a-python-reserved-word-or-similar"]], "How do I get a list of all columns, relationships, mapped attributes, etc. given a mapped class?": [[75, "how-do-i-get-a-list-of-all-columns-relationships-mapped-attributes-etc-given-a-mapped-class"]], "I\u2019m getting a warning or error about \u201cImplicitly combining column X under attribute Y\u201d": [[75, "i-m-getting-a-warning-or-error-about-implicitly-combining-column-x-under-attribute-y"]], "I\u2019m using Declarative and setting primaryjoin/secondaryjoin using an and_() or or_(), and I am getting an error message about foreign keys.": [[75, "i-m-using-declarative-and-setting-primaryjoin-secondaryjoin-using-an-and-or-or-and-i-am-getting-an-error-message-about-foreign-keys"]], "Why is ORDER BY recommended with LIMIT (especially with subqueryload())?": [[75, "why-is-order-by-recommended-with-limit-especially-with-subqueryload"]], "SQLAlchemy 1.4 / 2.0 Tutorial": [[162, null], [162, null], [157, null], [157, null], [159, null], [154, null], [154, null], [158, null], [158, null], [155, null], [155, null], [160, "sqlalchemy-1-4-2-0-tutorial"], [160, null], [161, null], [161, null], [156, null], [156, null], [163, null], [163, null], [153, null], [153, null]], "Data Manipulation with the ORM": [[162, "data-manipulation-with-the-orm"]], "Inserting Rows with the ORM": [[162, "inserting-rows-with-the-orm"]], "Instances of Classes represent Rows": [[162, "instances-of-classes-represent-rows"]], "Adding objects to a Session": [[162, "adding-objects-to-a-session"]], "Flushing": [[162, "flushing"], [147, "flushing"]], "Autogenerated primary key attributes": [[162, "autogenerated-primary-key-attributes"]], "Getting Objects by Primary Key from the Identity Map": [[162, "getting-objects-by-primary-key-from-the-identity-map"]], "Committing": [[162, "committing"], [147, "committing"]], "Updating ORM Objects": [[162, "updating-orm-objects"]], "ORM-enabled UPDATE statements": [[162, "orm-enabled-update-statements"]], "Deleting ORM Objects": [[162, "deleting-orm-objects"]], "ORM-enabled DELETE Statements": [[162, "orm-enabled-delete-statements"]], "Rolling Back": [[162, "rolling-back"], [147, "rolling-back"], [151, "rolling-back"]], "Closing a Session": [[162, "closing-a-session"]], "Working with Transactions and the DBAPI": [[157, "working-with-transactions-and-the-dbapi"]], "Getting a Connection": [[157, "getting-a-connection"]], "Committing Changes": [[157, "committing-changes"]], "What\u2019s \u201cBEGIN (implicit)\u201d?": [[157, null]], "Basics of Statement Execution": [[157, "basics-of-statement-execution"]], "Fetching Rows": [[157, "fetching-rows"]], "Sending Parameters": [[157, "sending-parameters"]], "Always use bound parameters": [[157, null]], "Sending Multiple Parameters": [[157, "sending-multiple-parameters"]], "Executing with an ORM Session": [[157, "executing-with-an-orm-session"]], "Further Reading": [[159, "further-reading"]], "Inserting Rows with Core": [[154, "inserting-rows-with-core"]], "The insert() SQL Expression Construct": [[154, "the-insert-sql-expression-construct"]], "Executing the Statement": [[154, "executing-the-statement"]], "INSERT usually generates the \u201cvalues\u201d clause automatically": [[154, "insert-usually-generates-the-values-clause-automatically"]], "INSERT\u2026FROM SELECT": [[154, "insert-from-select"]], "INSERT\u2026RETURNING": [[154, "insert-returning"]], "Establishing Connectivity - the Engine": [[158, "establishing-connectivity-the-engine"]], "Lazy Connecting": [[158, null], [151, null], [57, null]], "Selecting Rows with Core or ORM": [[155, "selecting-rows-with-core-or-orm"]], "The select() SQL Expression Construct": [[155, "the-select-sql-expression-construct"]], "select() from a Table vs. ORM class": [[155, null]], "Setting the COLUMNS and FROM clause": [[155, "setting-the-columns-and-from-clause"]], "Selecting ORM Entities and Columns": [[155, "selecting-orm-entities-and-columns"]], "Selecting from Labeled SQL Expressions": [[155, "selecting-from-labeled-sql-expressions"]], "Selecting with Textual Column Expressions": [[155, "selecting-with-textual-column-expressions"]], "The WHERE clause": [[155, "the-where-clause"]], "Explicit FROM clauses and JOINs": [[155, "explicit-from-clauses-and-joins"]], "The ON Clause is inferred": [[155, null]], "Setting the ON Clause": [[155, "setting-the-on-clause"]], "OUTER and FULL join": [[155, "outer-and-full-join"]], "ORDER BY, GROUP BY, HAVING": [[155, "order-by-group-by-having"]], "ORDER BY": [[155, "order-by"]], "Aggregate functions with GROUP BY / HAVING": [[155, "aggregate-functions-with-group-by-having"]], "Ordering or Grouping by a Label": [[155, "ordering-or-grouping-by-a-label"], [57, "ordering-or-grouping-by-a-label"]], "Using Aliases": [[155, "using-aliases"], [151, "using-aliases"]], "ORM Entity Aliases": [[155, "orm-entity-aliases"]], "Subqueries and CTEs": [[155, "subqueries-and-ctes"]], "Common Table Expressions (CTEs)": [[155, "common-table-expressions-ctes"]], "ORM Entity Subqueries/CTEs": [[155, "orm-entity-subqueries-ctes"]], "Scalar and Correlated Subqueries": [[155, "scalar-and-correlated-subqueries"]], "LATERAL correlation": [[155, "lateral-correlation"], [57, "lateral-correlation"]], "UNION, UNION ALL and other set operations": [[155, "union-union-all-and-other-set-operations"]], "Selecting ORM Entities from Unions": [[155, "selecting-orm-entities-from-unions"]], "EXISTS subqueries": [[155, "exists-subqueries"]], "Working with SQL Functions": [[155, "working-with-sql-functions"]], "Functions Have Return Types": [[155, "functions-have-return-types"]], "Built-in Functions Have Pre-Configured Return Types": [[155, "built-in-functions-have-pre-configured-return-types"]], "Advanced SQL Function Techniques": [[155, "advanced-sql-function-techniques"]], "Using Window Functions": [[155, "using-window-functions"]], "Special Modifiers WITHIN GROUP, FILTER": [[155, "special-modifiers-within-group-filter"]], "Table-Valued Functions": [[155, "table-valued-functions"], [67, "table-valued-functions"]], "Column Valued Functions - Table Valued Function as a Scalar Column": [[155, "column-valued-functions-table-valued-function-as-a-scalar-column"]], "Data Casts and Type Coercion": [[155, "data-casts-and-type-coercion"], [57, "data-casts-and-type-coercion"]], "type_coerce() - a Python-only \u201ccast\u201d": [[155, "type-coerce-a-python-only-cast"]], "About this document": [[160, null], [26, null], [151, null], [57, null]], "Tutorial Overview": [[160, "tutorial-overview"]], "Version Check": [[160, "version-check"], [151, "version-check"], [57, "version-check"]], "A Note on the Future": [[160, "a-note-on-the-future"]], "Working with Database Metadata": [[161, "working-with-database-metadata"]], "Setting up MetaData with Table objects": [[161, "setting-up-metadata-with-table-objects"]], "Declaring Simple Constraints": [[161, "declaring-simple-constraints"]], "Emitting DDL to the Database": [[161, "emitting-ddl-to-the-database"]], "Migration tools are usually appropriate": [[161, null]], "Defining Table Metadata with the ORM": [[161, "defining-table-metadata-with-the-orm"]], "Setting up the Registry": [[161, "setting-up-the-registry"]], "Declaring Mapped Classes": [[161, "declaring-mapped-classes"]], "Other Mapped Class Details": [[161, "other-mapped-class-details"]], "Emitting DDL to the database": [[161, "id1"]], "Combining Core Table Declarations with ORM Declarative": [[161, "combining-core-table-declarations-with-orm-declarative"]], "Table Reflection": [[161, "table-reflection"]], "Updating and Deleting Rows with Core": [[156, "updating-and-deleting-rows-with-core"]], "The update() SQL Expression Construct": [[156, "the-update-sql-expression-construct"]], "Correlated Updates": [[156, "correlated-updates"], [57, "correlated-updates"]], "UPDATE..FROM": [[156, "update-from"]], "Parameter Ordered Updates": [[156, "parameter-ordered-updates"]], "The delete() SQL Expression Construct": [[156, "the-delete-sql-expression-construct"]], "Multiple Table Deletes": [[156, "multiple-table-deletes"], [57, "multiple-table-deletes"]], "Getting Affected Row Count from UPDATE, DELETE": [[156, "getting-affected-row-count-from-update-delete"]], "Using RETURNING with UPDATE, DELETE": [[156, "using-returning-with-update-delete"]], "Further Reading for UPDATE, DELETE": [[156, "further-reading-for-update-delete"]], "Working with Related Objects": [[163, "working-with-related-objects"], [151, "working-with-related-objects"]], "Persisting and Loading Relationships": [[163, "persisting-and-loading-relationships"]], "Cascading Objects into the Session": [[163, "cascading-objects-into-the-session"]], "Loading Relationships": [[163, "loading-relationships"]], "Using Relationships in Queries": [[163, "using-relationships-in-queries"]], "Using Relationships to Join": [[163, "using-relationships-to-join"]], "Joining between Aliased targets": [[163, "joining-between-aliased-targets"]], "Augmenting the ON Criteria": [[163, "augmenting-the-on-criteria"]], "EXISTS forms: has() / any()": [[163, "exists-forms-has-any"]], "Common Relationship Operators": [[163, "common-relationship-operators"], [151, "common-relationship-operators"]], "Loader Strategies": [[163, "loader-strategies"]], "Selectin Load": [[163, "selectin-load"], [151, "selectin-load"]], "Joined Load": [[163, "joined-load"], [151, "joined-load"]], "Explicit Join + Eager load": [[163, "explicit-join-eager-load"]], "Augmenting Loader Strategy Paths": [[163, "augmenting-loader-strategy-paths"]], "Raiseload": [[163, "raiseload"]], "Migrating to SQLAlchemy 2.0": [[26, "migrating-to-sqlalchemy-2-0"]], "First Prerequisite, step one - A Working 1.3 Application": [[26, "first-prerequisite-step-one-a-working-1-3-application"]], "First Prerequisite, step two - A Working 1.4 Application": [[26, "first-prerequisite-step-two-a-working-1-4-application"]], "Migration to 2.0 Step One - Python 3 only (Python 3.7 minimum for 2.0 compatibility)": [[26, "migration-to-2-0-step-one-python-3-only-python-3-7-minimum-for-2-0-compatibility"]], "Migration to 2.0 Step Two - Turn on RemovedIn20Warnings": [[26, "migration-to-2-0-step-two-turn-on-removedin20warnings"]], "Migration to 2.0 Step Three - Resolve all RemovedIn20Warnings": [[26, "migration-to-2-0-step-three-resolve-all-removedin20warnings"]], "Migration to 2.0 Step Four - Use the future flag on Engine": [[26, "migration-to-2-0-step-four-use-the-future-flag-on-engine"]], "Migration to 2.0 Step Five - Use the future flag on Session": [[26, "migration-to-2-0-step-five-use-the-future-flag-on-session"]], "Migration to 2.0 Step Six - Add __allow_unmapped__ to explicitly typed ORM models": [[26, "migration-to-2-0-step-six-add-allow-unmapped-to-explicitly-typed-orm-models"]], "Migration to 2.0 Step Seven - Test against a SQLAlchemy 2.0 Release": [[26, "migration-to-2-0-step-seven-test-against-a-sqlalchemy-2-0-release"]], "2.0 Migration - Core Connection / Transaction": [[26, "migration-core-connection-transaction"]], "Library-level (but not driver level) \u201cAutocommit\u201d removed from both Core and ORM": [[26, "library-level-but-not-driver-level-autocommit-removed-from-both-core-and-orm"]], "Driver-level autocommit remains available": [[26, "driver-level-autocommit-remains-available"]], "\u201cImplicit\u201d and \u201cConnectionless\u201d execution, \u201cbound metadata\u201d removed": [[26, "implicit-and-connectionless-execution-bound-metadata-removed"]], "Many Choices becomes One Choice": [[26, "many-choices-becomes-one-choice"]], "execute() method more strict, execution options are more prominent": [[26, "execute-method-more-strict-execution-options-are-more-prominent"]], "Result rows act like named tuples": [[26, "result-rows-act-like-named-tuples"]], "2.0 Migration - Core Usage": [[26, "migration-core-usage"]], "select() no longer accepts varied constructor arguments, columns are passed positionally": [[26, "select-no-longer-accepts-varied-constructor-arguments-columns-are-passed-positionally"]], "insert/update/delete DML no longer accept keyword constructor arguments": [[26, "insert-update-delete-dml-no-longer-accept-keyword-constructor-arguments"]], "2.0 Migration - ORM Configuration": [[26, "migration-orm-configuration"]], "Declarative becomes a first class API": [[26, "declarative-becomes-a-first-class-api"]], "The original \u201cmapper()\u201d function now a core element of Declarative, renamed": [[26, "the-original-mapper-function-now-a-core-element-of-declarative-renamed"]], "2.0 Migration - ORM Usage": [[26, "migration-orm-usage"]], "Overview of Major ORM Querying Patterns": [[26, "id1"]], "ORM Query Unified with Core Select": [[26, "orm-query-unified-with-core-select"]], "ORM Query - get() method moves to Session": [[26, "orm-query-get-method-moves-to-session"]], "ORM Query  - Joining / loading on relationships uses attributes, not strings": [[26, "orm-query-joining-loading-on-relationships-uses-attributes-not-strings"]], "ORM Query - Chaining using lists of attributes, rather than individual calls, removed": [[26, "orm-query-chaining-using-lists-of-attributes-rather-than-individual-calls-removed"]], "ORM Query - join(\u2026, aliased=True), from_joinpoint removed": [[26, "orm-query-join-aliased-true-from-joinpoint-removed"]], "Using DISTINCT with additional columns, but only select the entity": [[26, "using-distinct-with-additional-columns-but-only-select-the-entity"]], "Selecting from the query itself as a subquery, e.g. \u201cfrom_self()\u201d": [[26, "selecting-from-the-query-itself-as-a-subquery-e-g-from-self"]], "Selecting entities from alternative selectables; Query.select_entity_from()": [[26, "selecting-entities-from-alternative-selectables-query-select-entity-from"]], "ORM Rows not uniquified by default": [[26, "orm-rows-not-uniquified-by-default"]], "Making use of \u201cdynamic\u201d relationship loads without using Query": [[26, "making-use-of-dynamic-relationship-loads-without-using-query"]], "Autocommit mode removed from Session; autobegin support added": [[26, "autocommit-mode-removed-from-session-autobegin-support-added"]], "Session \u201csubtransaction\u201d behavior removed": [[26, "session-subtransaction-behavior-removed"]], "2.0 Migration - ORM Extension and Recipe Changes": [[26, "migration-orm-extension-and-recipe-changes"]], "Dogpile cache recipe and Horizontal Sharding uses new Session API": [[26, "dogpile-cache-recipe-and-horizontal-sharding-uses-new-session-api"]], "Baked Query Extension Superseded by built-in caching": [[26, "baked-query-extension-superseded-by-built-in-caching"]], "Asyncio Support": [[26, "asyncio-support"]], "What\u2019s new in SQLAlchemy 0.4?": [[15, "what-s-new-in-sqlalchemy-0-4"]], "About this Document": [[15, null], [18, null], [16, null], [21, null], [23, null], [17, null], [22, null], [19, null], [20, null], [25, null], [24, null]], "First Things First": [[15, "first-things-first"]], "Module Imports": [[15, "module-imports"]], "Querying": [[15, "querying"], [151, "querying"]], "New Query API": [[15, "new-query-api"]], "New Property-Based Expression Constructs": [[15, "new-property-based-expression-constructs"]], "Automatic Join Aliasing": [[15, "automatic-join-aliasing"]], "Self-referential Queries": [[15, "self-referential-queries"]], "query.populate_existing()": [[15, "query-populate-existing"]], "Relations": [[15, "relations"]], "SQL Clauses Embedded in Updates/Inserts": [[15, "sql-clauses-embedded-in-updates-inserts"]], "Self-referential and Cyclical Eager Loading": [[15, "self-referential-and-cyclical-eager-loading"]], "Composite Types": [[15, "composite-types"]], "dynamic_loader() relations": [[15, "dynamic-loader-relations"]], "New Options: undefer_group(), eagerload_all()": [[15, "new-options-undefer-group-eagerload-all"]], "New Collection API": [[15, "new-collection-api"]], "Mapped Relations from External Tables/Subqueries": [[15, "mapped-relations-from-external-tables-subqueries"]], "Horizontal Scaling (Sharding) API": [[15, "horizontal-scaling-sharding-api"]], "Sessions": [[15, "sessions"]], "New Session Create Paradigm; SessionContext, assignmapper Deprecated": [[15, "new-session-create-paradigm-sessioncontext-assignmapper-deprecated"]], "Sessions are again Weak Referencing By Default": [[15, "sessions-are-again-weak-referencing-by-default"]], "Auto-Transactional Sessions": [[15, "auto-transactional-sessions"]], "Auto-Flushing Sessions": [[15, "auto-flushing-sessions"]], "Transactional methods moved onto sessions": [[15, "transactional-methods-moved-onto-sessions"]], "Nested Session Transactions with SAVEPOINT": [[15, "nested-session-transactions-with-savepoint"]], "Two-Phase Commit Sessions": [[15, "two-phase-commit-sessions"]], "Inheritance": [[15, "inheritance"]], "Polymorphic Inheritance with No Joins or Unions": [[15, "polymorphic-inheritance-with-no-joins-or-unions"]], "Better Polymorphic Behavior with get()": [[15, "better-polymorphic-behavior-with-get"]], "Types": [[15, "types"]], "Custom Subclasses of sqlalchemy.types.TypeDecorator": [[15, "custom-subclasses-of-sqlalchemy-types-typedecorator"]], "All New, Deterministic Label/Alias Generation": [[15, "all-new-deterministic-label-alias-generation"]], "Generative select() Constructs": [[15, "generative-select-constructs"]], "New Operator System": [[15, "new-operator-system"]], "All type Keyword Arguments Renamed to type_": [[15, "all-type-keyword-arguments-renamed-to-type"]], "in_ Function Changed to Accept Sequence or Selectable": [[15, "in-function-changed-to-accept-sequence-or-selectable"]], "Schema and Reflection": [[15, "schema-and-reflection"]], "MetaData, BoundMetaData, DynamicMetaData\u2026": [[15, "metadata-boundmetadata-dynamicmetadata"]], "One Step Multi-Table Reflection": [[15, "one-step-multi-table-reflection"]], "SQL Execution": [[15, "sql-execution"]], "engine, connectable, and bind_to are all now bind": [[15, "engine-connectable-and-bind-to-are-all-now-bind"]], "Transactions, NestedTransactions and TwoPhaseTransactions": [[15, "transactions-nestedtransactions-and-twophasetransactions"]], "Connection Pool Events": [[15, "connection-pool-events"], [40, "connection-pool-events"]], "Oracle Engine Fixed": [[15, "oracle-engine-fixed"]], "Out Parameters for Oracle": [[15, "out-parameters-for-oracle"]], "Connection-bound MetaData, Sessions": [[15, "connection-bound-metadata-sessions"]], "Faster, More Foolproof ResultProxy Objects": [[15, "faster-more-foolproof-resultproxy-objects"]], "What\u2019s New in SQLAlchemy 0.7?": [[18, "what-s-new-in-sqlalchemy-0-7"]], "Introduction": [[18, "introduction"], [21, "introduction"], [23, "introduction"], [22, "introduction"], [19, "introduction"], [20, "introduction"], [24, "introduction"]], "New Features": [[18, "new-features"], [20, "new-features"]], "New Event System": [[18, "new-event-system"]], "Hybrid Attributes, implements/supersedes synonym(), comparable_property()": [[18, "hybrid-attributes-implements-supersedes-synonym-comparable-property"]], "Speed Enhancements": [[18, "speed-enhancements"]], "Composites Rewritten": [[18, "composites-rewritten"]], "More succinct form of query.join(target, onclause)": [[18, "more-succinct-form-of-query-join-target-onclause"]], "Mutation event extension, supersedes \u201cmutable=True\u201d": [[18, "mutation-event-extension-supersedes-mutable-true"]], "NULLS FIRST / NULLS LAST operators": [[18, "nulls-first-nulls-last-operators"]], "select.distinct(), query.distinct() accepts *args for PostgreSQL DISTINCT ON": [[18, "select-distinct-query-distinct-accepts-args-for-postgresql-distinct-on"]], "Index() can be placed inline inside of Table, __table_args__": [[18, "index-can-be-placed-inline-inside-of-table-table-args"]], "Window Function SQL Construct": [[18, "window-function-sql-construct"]], "execution_options() on Connection accepts \u201cisolation_level\u201d argument": [[18, "execution-options-on-connection-accepts-isolation-level-argument"]], "TypeDecorator works with integer primary key columns": [[18, "typedecorator-works-with-integer-primary-key-columns"]], "TypeDecorator is present in the \u201csqlalchemy\u201d import space": [[18, "typedecorator-is-present-in-the-sqlalchemy-import-space"]], "New Dialects": [[18, "new-dialects"]], "Behavioral Changes (Backwards Compatible)": [[18, "behavioral-changes-backwards-compatible"]], "C Extensions Build by Default": [[18, "c-extensions-build-by-default"]], "Query.count() simplified, should work virtually always": [[18, "query-count-simplified-should-work-virtually-always"]], "To emit a non-subquery form of count()": [[18, "to-emit-a-non-subquery-form-of-count"]], "LIMIT/OFFSET clauses now use bind parameters": [[18, "limit-offset-clauses-now-use-bind-parameters"]], "Logging enhancements": [[18, "logging-enhancements"]], "Simplified polymorphic_on assignment": [[18, "simplified-polymorphic-on-assignment"]], "contains_eager() chains across multiple paths (i.e. \u201call()\u201d)": [[18, "contains-eager-chains-across-multiple-paths-i-e-all"]], "Flushing of orphans that have no parent is allowed": [[18, "flushing-of-orphans-that-have-no-parent-is-allowed"]], "Warnings generated when collection members, scalar referents not part of the flush": [[18, "warnings-generated-when-collection-members-scalar-referents-not-part-of-the-flush"]], "Setup no longer installs a Nose plugin": [[18, "setup-no-longer-installs-a-nose-plugin"]], "Non-Table-derived constructs can be mapped": [[18, "non-table-derived-constructs-can-be-mapped"]], "aliased() accepts FromClause elements": [[18, "aliased-accepts-fromclause-elements"]], "Session.connection(), Session.execute() accept \u2018bind\u2019": [[18, "session-connection-session-execute-accept-bind"]], "Standalone bind parameters in columns clause auto-labeled.": [[18, "standalone-bind-parameters-in-columns-clause-auto-labeled"]], "SQLite - relative file paths are normalized through os.path.abspath()": [[18, "sqlite-relative-file-paths-are-normalized-through-os-path-abspath"]], "MS-SQL - String/Unicode/VARCHAR/NVARCHAR/VARBINARY emit \u201cmax\u201d for no length": [[18, "ms-sql-string-unicode-varchar-nvarchar-varbinary-emit-max-for-no-length"]], "Behavioral Changes (Backwards Incompatible)": [[18, "behavioral-changes-backwards-incompatible"]], "PickleType and ARRAY mutability turned off by default": [[18, "pickletype-and-array-mutability-turned-off-by-default"]], "Mutability detection of composite() requires the Mutation Tracking Extension": [[18, "mutability-detection-of-composite-requires-the-mutation-tracking-extension"]], "SQLite - the SQLite dialect now uses NullPool for file-based databases": [[18, "sqlite-the-sqlite-dialect-now-uses-nullpool-for-file-based-databases"]], "Session.merge() checks version ids for versioned mappers": [[18, "session-merge-checks-version-ids-for-versioned-mappers"]], "Tuple label names in Query Improved": [[18, "tuple-label-names-in-query-improved"]], "Mapped column attributes reference the most specific column first": [[18, "mapped-column-attributes-reference-the-most-specific-column-first"]], "Mapping to joins with two or more same-named columns requires explicit declaration": [[18, "mapping-to-joins-with-two-or-more-same-named-columns-requires-explicit-declaration"]], "Mapper requires that polymorphic_on column be present in the mapped selectable": [[18, "mapper-requires-that-polymorphic-on-column-be-present-in-the-mapped-selectable"]], "DDL() constructs now escape percent signs": [[18, "ddl-constructs-now-escape-percent-signs"]], "Table.c / MetaData.tables refined a bit, don\u2019t allow direct mutation": [[18, "table-c-metadata-tables-refined-a-bit-don-t-allow-direct-mutation"]], "server_default consistently returns None for all inserted_primary_key values": [[18, "server-default-consistently-returns-none-for-all-inserted-primary-key-values"]], "The sqlalchemy.exceptions alias in sys.modules is removed": [[18, "the-sqlalchemy-exceptions-alias-in-sys-modules-is-removed"]], "Query Timing Recipe Changes": [[18, "query-timing-recipe-changes"]], "Deprecated API": [[18, "deprecated-api"]], "Default constructor on types will not accept arguments": [[18, "default-constructor-on-types-will-not-accept-arguments"]], "compile_mappers() renamed configure_mappers(), simplified configuration internals": [[18, "compile-mappers-renamed-configure-mappers-simplified-configuration-internals"]], "Core listener/proxy superseded by event listeners": [[18, "core-listener-proxy-superseded-by-event-listeners"]], "ORM extensions superseded by event listeners": [[18, "orm-extensions-superseded-by-event-listeners"]], "Sending a string to \u2018distinct\u2019 in select() for MySQL should be done via prefixes": [[18, "sending-a-string-to-distinct-in-select-for-mysql-should-be-done-via-prefixes"]], "useexisting superseded by extend_existing and keep_existing": [[18, "useexisting-superseded-by-extend-existing-and-keep-existing"]], "Backwards Incompatible API Changes": [[18, "backwards-incompatible-api-changes"]], "Callables passed to bindparam() don\u2019t get evaluated - affects the Beaker example": [[18, "callables-passed-to-bindparam-don-t-get-evaluated-affects-the-beaker-example"]], "types.type_map is now private, types._type_map": [[18, "types-type-map-is-now-private-types-type-map"]], "Renamed the alias keyword arg of standalone alias() function to name": [[18, "renamed-the-alias-keyword-arg-of-standalone-alias-function-to-name"]], "Non-public Pool methods underscored": [[18, "non-public-pool-methods-underscored"]], "Previously Deprecated, Now Removed": [[18, "previously-deprecated-now-removed"]], "Query.join(), Query.outerjoin(), eagerload(), eagerload_all(), others no longer allow lists of attributes as arguments": [[18, "query-join-query-outerjoin-eagerload-eagerload-all-others-no-longer-allow-lists-of-attributes-as-arguments"]], "ScopedSession.mapper is removed": [[18, "scopedsession-mapper-is-removed"]], "What\u2019s new in SQLAlchemy 0.5?": [[16, "what-s-new-in-sqlalchemy-0-5"]], "Major Documentation Changes": [[16, "major-documentation-changes"]], "Deprecations Source": [[16, "deprecations-source"]], "Requirements Changes": [[16, "requirements-changes"]], "Extending the ORM": [[16, "extending-the-orm"], [98, "extending-the-orm"]], "Schema/Types": [[16, "schema-types"]], "Connection Pool no longer threadlocal by default": [[16, "connection-pool-no-longer-threadlocal-by-default"]], "*args Accepted, *args No Longer Accepted": [[16, "args-accepted-args-no-longer-accepted"]], "Removed": [[16, "removed"], [19, "removed"]], "Renamed or Moved": [[16, "renamed-or-moved"]], "Deprecated": [[16, "deprecated"]], "What\u2019s New in SQLAlchemy 1.0?": [[21, "what-s-new-in-sqlalchemy-1-0"]], "New Features and Improvements - ORM": [[21, "new-features-and-improvements-orm"], [23, "new-features-and-improvements-orm"], [22, "new-features-and-improvements-orm"], [24, "new-features-and-improvements-orm"]], "New Session Bulk INSERT/UPDATE API": [[21, "new-session-bulk-insert-update-api"]], "New Performance Example Suite": [[21, "new-performance-example-suite"]], "\u201cBaked\u201d Queries": [[21, "baked-queries"]], "Improvements to declarative mixins, @declared_attr and related features": [[21, "improvements-to-declarative-mixins-declared-attr-and-related-features"]], "ORM full object fetches 25% faster": [[21, "orm-full-object-fetches-25-faster"]], "New KeyedTuple implementation dramatically faster": [[21, "new-keyedtuple-implementation-dramatically-faster"]], "Significant Improvements in Structural Memory Use": [[21, "significant-improvements-in-structural-memory-use"]], "UPDATE statements are now batched with executemany() in a flush": [[21, "update-statements-are-now-batched-with-executemany-in-a-flush"]], "Session.get_bind() handles a wider variety of inheritance scenarios": [[21, "session-get-bind-handles-a-wider-variety-of-inheritance-scenarios"]], "Session.get_bind() will receive the Mapper in all relevant Query cases": [[21, "session-get-bind-will-receive-the-mapper-in-all-relevant-query-cases"]], ".info dictionary improvements": [[21, "info-dictionary-improvements"]], "ColumnProperty constructs work a lot better with aliases, order_by": [[21, "columnproperty-constructs-work-a-lot-better-with-aliases-order-by"]], "New Features and Improvements - Core": [[21, "new-features-and-improvements-core"], [23, "new-features-and-improvements-core"], [22, "new-features-and-improvements-core"], [24, "new-features-and-improvements-core"]], "Select/Query LIMIT / OFFSET may be specified as an arbitrary SQL expression": [[21, "select-query-limit-offset-may-be-specified-as-an-arbitrary-sql-expression"]], "The use_alter flag on ForeignKeyConstraint is (usually) no longer needed": [[21, "the-use-alter-flag-on-foreignkeyconstraint-is-usually-no-longer-needed"]], "ResultProxy \u201cauto close\u201d is now a \u201csoft\u201d close": [[21, "resultproxy-auto-close-is-now-a-soft-close"]], "CHECK Constraints now support the %(column_0_name)s token in naming conventions": [[21, "check-constraints-now-support-the-column-0-name-s-token-in-naming-conventions"]], "Constraints referring to unattached Columns can auto-attach to the Table when their referred columns are attached": [[21, "constraints-referring-to-unattached-columns-can-auto-attach-to-the-table-when-their-referred-columns-are-attached"]], "INSERT FROM SELECT now includes Python and SQL-expression defaults": [[21, "insert-from-select-now-includes-python-and-sql-expression-defaults"]], "Column server defaults now render literal values": [[21, "column-server-defaults-now-render-literal-values"]], "UniqueConstraint is now part of the Table reflection process": [[21, "uniqueconstraint-is-now-part-of-the-table-reflection-process"]], "PostgreSQL": [[21, "postgresql"], [37, "postgresql"], [67, "module-sqlalchemy.dialects.postgresql.base"]], "MySQL": [[21, "mysql"], [37, "mysql"]], "New systems to safely emit parameterized warnings": [[21, "new-systems-to-safely-emit-parameterized-warnings"]], "Key Behavioral Changes - ORM": [[21, "key-behavioral-changes-orm"], [23, "key-behavioral-changes-orm"], [22, "key-behavioral-changes-orm"], [24, "key-behavioral-changes-orm"]], "query.update() now resolves string names into mapped attribute names": [[21, "query-update-now-resolves-string-names-into-mapped-attribute-names"]], "Warnings emitted when comparing objects with None values to relationships": [[21, "warnings-emitted-when-comparing-objects-with-none-values-to-relationships"]], "A \u201cnegated contains or equals\u201d relationship comparison will use the current value of attributes, not the database value": [[21, "a-negated-contains-or-equals-relationship-comparison-will-use-the-current-value-of-attributes-not-the-database-value"]], "Changes to attribute events and other operations regarding attributes that have no pre-existing value": [[21, "changes-to-attribute-events-and-other-operations-regarding-attributes-that-have-no-pre-existing-value"]], "Priority of attribute changes on relationship-bound attributes vs. FK-bound may appear to change": [[21, "priority-of-attribute-changes-on-relationship-bound-attributes-vs-fk-bound-may-appear-to-change"]], "session.expunge() will fully detach an object that\u2019s been deleted": [[21, "session-expunge-will-fully-detach-an-object-that-s-been-deleted"]], "Joined/Subquery eager loading explicitly disallowed with yield_per": [[21, "joined-subquery-eager-loading-explicitly-disallowed-with-yield-per"]], "Changes and fixes in handling of duplicate join targets": [[21, "changes-and-fixes-in-handling-of-duplicate-join-targets"]], "Deferred Columns No Longer Implicitly Undefer": [[21, "deferred-columns-no-longer-implicitly-undefer"]], "Deprecated ORM Event Hooks Removed": [[21, "deprecated-orm-event-hooks-removed"]], "API Change for new Bundle feature when custom row loaders are used": [[21, "api-change-for-new-bundle-feature-when-custom-row-loaders-are-used"]], "Right inner join nesting now the default for joinedload with innerjoin=True": [[21, "right-inner-join-nesting-now-the-default-for-joinedload-with-innerjoin-true"]], "Subqueries no longer applied to uselist=False joined eager loads": [[21, "subqueries-no-longer-applied-to-uselist-false-joined-eager-loads"]], "query.update() / query.delete() raises if used with join(), select_from(), from_self()": [[21, "query-update-query-delete-raises-if-used-with-join-select-from-from-self"]], "query.update() with synchronize_session='evaluate' raises on multi-table update": [[21, "query-update-with-synchronize-session-evaluate-raises-on-multi-table-update"]], "Resurrect Event has been Removed": [[21, "resurrect-event-has-been-removed"]], "Change to single-table-inheritance criteria when using from_self(), count()": [[21, "change-to-single-table-inheritance-criteria-when-using-from-self-count"]], "single-table-inheritance criteria added to all ON clauses unconditionally": [[21, "single-table-inheritance-criteria-added-to-all-on-clauses-unconditionally"]], "Key Behavioral Changes - Core": [[21, "key-behavioral-changes-core"], [23, "key-behavioral-changes-core"], [22, "key-behavioral-changes-core"]], "Warnings emitted when coercing full SQL fragments into text()": [[21, "warnings-emitted-when-coercing-full-sql-fragments-into-text"]], "ORDER BY and GROUP BY are special cases": [[21, "order-by-and-group-by-are-special-cases"]], "Python-side defaults invoked for each row individually when using a multivalued insert": [[21, "python-side-defaults-invoked-for-each-row-individually-when-using-a-multivalued-insert"]], "Event listeners can not be added or removed from within that event\u2019s runner": [[21, "event-listeners-can-not-be-added-or-removed-from-within-that-event-s-runner"]], "The INSERT\u2026FROM SELECT construct now implies inline=True": [[21, "the-insert-from-select-construct-now-implies-inline-true"]], "autoload_with now implies autoload=True": [[21, "autoload-with-now-implies-autoload-true"]], "DBAPI exception wrapping and handle_error() event improvements": [[21, "dbapi-exception-wrapping-and-handle-error-event-improvements"]], "ForeignKeyConstraint.columns is now a ColumnCollection": [[21, "foreignkeyconstraint-columns-is-now-a-columncollection"]], "MetaData.sorted_tables accessor is \u201cdeterministic\u201d": [[21, "metadata-sorted-tables-accessor-is-deterministic"]], "null(), false() and true() constants are no longer singletons": [[21, "null-false-and-true-constants-are-no-longer-singletons"]], "SQLite/Oracle have distinct methods for temporary table/view name reporting": [[21, "sqlite-oracle-have-distinct-methods-for-temporary-table-view-name-reporting"]], "Dialect Improvements and Changes - PostgreSQL": [[21, "dialect-improvements-and-changes-postgresql"], [23, "dialect-improvements-and-changes-postgresql"], [22, "dialect-improvements-and-changes-postgresql"], [24, "dialect-improvements-and-changes-postgresql"]], "Overhaul of ENUM type create/drop rules": [[21, "overhaul-of-enum-type-create-drop-rules"]], "New PostgreSQL Table options": [[21, "new-postgresql-table-options"]], "New get_enums() method with PostgreSQL Dialect": [[21, "new-get-enums-method-with-postgresql-dialect"]], "PostgreSQL Dialect reflects Materialized Views, Foreign Tables": [[21, "postgresql-dialect-reflects-materialized-views-foreign-tables"]], "PostgreSQL has_table() now works for temporary tables": [[21, "postgresql-has-table-now-works-for-temporary-tables"]], "PostgreSQL FILTER keyword": [[21, "postgresql-filter-keyword"]], "PG8000 dialect supports client side encoding": [[21, "pg8000-dialect-supports-client-side-encoding"]], "PG8000 native JSONB support": [[21, "pg8000-native-jsonb-support"]], "Support for psycopg2cffi Dialect on PyPy": [[21, "support-for-psycopg2cffi-dialect-on-pypy"]], "Dialect Improvements and Changes - MySQL": [[21, "dialect-improvements-and-changes-mysql"], [23, "dialect-improvements-and-changes-mysql"], [22, "dialect-improvements-and-changes-mysql"], [24, "dialect-improvements-and-changes-mysql"]], "MySQL TIMESTAMP Type now renders NULL / NOT NULL in all cases": [[21, "mysql-timestamp-type-now-renders-null-not-null-in-all-cases"]], "MySQL SET Type Overhauled to support empty sets, unicode, blank value handling": [[21, "mysql-set-type-overhauled-to-support-empty-sets-unicode-blank-value-handling"]], "MySQL internal \u201cno such table\u201d exceptions not passed to event handlers": [[21, "mysql-internal-no-such-table-exceptions-not-passed-to-event-handlers"]], "Changed the default value of raise_on_warnings for MySQL-Connector": [[21, "changed-the-default-value-of-raise-on-warnings-for-mysql-connector"]], "MySQL boolean symbols \u201ctrue\u201d, \u201cfalse\u201d work again": [[21, "mysql-boolean-symbols-true-false-work-again"]], "The match() operator now returns an agnostic MatchType compatible with MySQL\u2019s floating point return value": [[21, "the-match-operator-now-returns-an-agnostic-matchtype-compatible-with-mysql-s-floating-point-return-value"]], "Drizzle Dialect is now an External Dialect": [[21, "drizzle-dialect-is-now-an-external-dialect"]], "Dialect Improvements and Changes - SQLite": [[21, "dialect-improvements-and-changes-sqlite"], [22, "dialect-improvements-and-changes-sqlite"], [24, "dialect-improvements-and-changes-sqlite"]], "SQLite named and unnamed UNIQUE and FOREIGN KEY constraints will inspect and reflect": [[21, "sqlite-named-and-unnamed-unique-and-foreign-key-constraints-will-inspect-and-reflect"]], "Dialect Improvements and Changes - SQL Server": [[21, "dialect-improvements-and-changes-sql-server"], [23, "dialect-improvements-and-changes-sql-server"], [22, "dialect-improvements-and-changes-sql-server"], [24, "dialect-improvements-and-changes-sql-server"]], "PyODBC driver name is required with hostname-based SQL Server connections": [[21, "pyodbc-driver-name-is-required-with-hostname-based-sql-server-connections"]], "SQL Server 2012 large text / binary types render as VARCHAR, NVARCHAR, VARBINARY": [[21, "sql-server-2012-large-text-binary-types-render-as-varchar-nvarchar-varbinary"]], "Dialect Improvements and Changes - Oracle": [[21, "dialect-improvements-and-changes-oracle"], [23, "dialect-improvements-and-changes-oracle"], [22, "dialect-improvements-and-changes-oracle"], [24, "dialect-improvements-and-changes-oracle"]], "Improved support for CTEs in Oracle": [[21, "improved-support-for-ctes-in-oracle"]], "New Oracle Keywords for DDL": [[21, "new-oracle-keywords-for-ddl"]], "What\u2019s New in SQLAlchemy 1.2?": [[23, "what-s-new-in-sqlalchemy-1-2"]], "Platform Support": [[23, "platform-support"], [17, "platform-support"], [19, "platform-support"], [20, "platform-support"]], "Targeting Python 2.7 and Up": [[23, "targeting-python-2-7-and-up"]], "\u201cBaked\u201d loading now the default for lazy loads": [[23, "baked-loading-now-the-default-for-lazy-loads"]], "New \u201cselectin\u201d eager loading, loads all collections at once using IN": [[23, "new-selectin-eager-loading-loads-all-collections-at-once-using-in"]], "\u201cselectin\u201d polymorphic loading, loads subclasses using separate IN queries": [[23, "selectin-polymorphic-loading-loads-subclasses-using-separate-in-queries"]], "ORM attributes that can receive ad-hoc SQL expressions": [[23, "orm-attributes-that-can-receive-ad-hoc-sql-expressions"]], "ORM Support of multiple-table deletes": [[23, "orm-support-of-multiple-table-deletes"]], "Support for bulk updates of hybrids, composites": [[23, "support-for-bulk-updates-of-hybrids-composites"]], "Hybrid attributes support reuse among subclasses, redefinition of @getter": [[23, "hybrid-attributes-support-reuse-among-subclasses-redefinition-of-getter"]], "New bulk_replace event": [[23, "new-bulk-replace-event"]], "New \u201cmodified\u201d event handler for sqlalchemy.ext.mutable": [[23, "new-modified-event-handler-for-sqlalchemy-ext-mutable"]], "Added \u201cfor update\u201d arguments to Session.refresh": [[23, "added-for-update-arguments-to-session-refresh"]], "In-place mutation operators work for MutableSet, MutableList": [[23, "in-place-mutation-operators-work-for-mutableset-mutablelist"]], "AssociationProxy any(), has(), contains() work with chained association proxies": [[23, "associationproxy-any-has-contains-work-with-chained-association-proxies"]], "Identity key enhancements to support sharding": [[23, "change-4137"]], "Boolean datatype now enforces strict True/False/None values": [[23, "boolean-datatype-now-enforces-strict-true-false-none-values"]], "Pessimistic disconnection detection added to the connection pool": [[23, "pessimistic-disconnection-detection-added-to-the-connection-pool"]], "The IN / NOT IN operator\u2019s empty collection behavior is now configurable; default expression simplified": [[23, "the-in-not-in-operator-s-empty-collection-behavior-is-now-configurable-default-expression-simplified"]], "Late-expanded IN parameter sets allow IN expressions with cached statements": [[23, "late-expanded-in-parameter-sets-allow-in-expressions-with-cached-statements"]], "Flattened operator precedence for comparison operators": [[23, "flattened-operator-precedence-for-comparison-operators"]], "Support for SQL Comments on Table, Column, includes DDL, reflection": [[23, "support-for-sql-comments-on-table-column-includes-ddl-reflection"]], "Multiple-table criteria support for DELETE": [[23, "multiple-table-criteria-support-for-delete"]], "New \u201cautoescape\u201d option for startswith(), endswith()": [[23, "new-autoescape-option-for-startswith-endswith"]], "Stronger typing added to \u201cfloat\u201d datatypes": [[23, "stronger-typing-added-to-float-datatypes"]], "Support for GROUPING SETS, CUBE, ROLLUP": [[23, "support-for-grouping-sets-cube-rollup"]], "Parameter helper for multi-valued INSERT with contextual default generator": [[23, "parameter-helper-for-multi-valued-insert-with-contextual-default-generator"]], "The after_rollback() Session event now emits before the expiration of objects": [[23, "the-after-rollback-session-event-now-emits-before-the-expiration-of-objects"]], "Fixed issue involving single-table inheritance with select_from()": [[23, "fixed-issue-involving-single-table-inheritance-with-select-from"]], "Previous collection is no longer mutated upon replacement": [[23, "previous-collection-is-no-longer-mutated-upon-replacement"]], "A @validates method receives all values on bulk-collection set before comparison": [[23, "a-validates-method-receives-all-values-on-bulk-collection-set-before-comparison"]], "Use flag_dirty() to mark an object as \u201cdirty\u201d without any attribute changing": [[23, "use-flag-dirty-to-mark-an-object-as-dirty-without-any-attribute-changing"]], "\u201cscope\u201d keyword removed from scoped_session": [[23, "scope-keyword-removed-from-scoped-session"]], "Refinements to post_update in conjunction with onupdate": [[23, "refinements-to-post-update-in-conjunction-with-onupdate"]], "post_update integrates with ORM versioning": [[23, "post-update-integrates-with-orm-versioning"]], "The typing behavior of custom operators has been made consistent": [[23, "the-typing-behavior-of-custom-operators-has-been-made-consistent"]], "Percent signs in literal_column() now conditionally escaped": [[23, "percent-signs-in-literal-column-now-conditionally-escaped"]], "The column-level COLLATE keyword now quotes the collation name": [[23, "the-column-level-collate-keyword-now-quotes-the-collation-name"]], "Support for Batch Mode / Fast Execution Helpers": [[23, "support-for-batch-mode-fast-execution-helpers"]], "Support for fields specification in INTERVAL, including full reflection": [[23, "support-for-fields-specification-in-interval-including-full-reflection"]], "Support for INSERT..ON DUPLICATE KEY UPDATE": [[23, "support-for-insert-on-duplicate-key-update"]], "Major Refactor to cx_Oracle Dialect, Typing System": [[23, "major-refactor-to-cx-oracle-dialect-typing-system"]], "Oracle Unique, Check constraints now reflected": [[23, "oracle-unique-check-constraints-now-reflected"]], "Oracle foreign key constraint names are now \u201cname normalized\u201d": [[23, "oracle-foreign-key-constraint-names-are-now-name-normalized"]], "SQL Server schema names with embedded dots supported": [[23, "sql-server-schema-names-with-embedded-dots-supported"]], "AUTOCOMMIT isolation level support": [[23, "autocommit-isolation-level-support"]], "What\u2019s New in SQLAlchemy 0.6?": [[17, "what-s-new-in-sqlalchemy-0-6"]], "New Dialect System": [[17, "new-dialect-system"]], "Dialect Imports": [[17, "dialect-imports"]], "Expression Language Changes": [[17, "expression-language-changes"]], "An Important Expression Language Gotcha": [[17, "an-important-expression-language-gotcha"]], "Stricter \u201cexecutemany\u201d Behavior": [[17, "stricter-executemany-behavior"]], "UNION and other \u201ccompound\u201d constructs parenthesize consistently": [[17, "union-and-other-compound-constructs-parenthesize-consistently"]], "C Extensions for Result Fetching": [[17, "c-extensions-for-result-fetching"]], "New Schema Capabilities": [[17, "new-schema-capabilities"]], "Deprecated/Removed Schema Elements": [[17, "deprecated-removed-schema-elements"]], "Other Behavioral Changes": [[17, "other-behavioral-changes"]], "Logging opened up": [[17, "logging-opened-up"]], "Reflection/Inspector API": [[17, "reflection-inspector-api"]], "RETURNING Support": [[17, "returning-support"], [66, "returning-support"], [66, "cx-oracle-returning"]], "Type System Changes": [[17, "type-system-changes"]], "New Architecture": [[17, "new-architecture"]], "Native Unicode Mode": [[17, "native-unicode-mode"]], "Generic Enum Type": [[17, "generic-enum-type"]], "Reflection Returns Dialect-Specific Types": [[17, "reflection-returns-dialect-specific-types"]], "Miscellaneous API Changes": [[17, "miscellaneous-api-changes"]], "ORM Changes": [[17, "orm-changes"]], "New Unit of Work": [[17, "new-unit-of-work"]], "Changes to query.update() and query.delete()": [[17, "changes-to-query-update-and-query-delete"]], "relation() is officially named relationship()": [[17, "relation-is-officially-named-relationship"]], "Subquery eager loading": [[17, "subquery-eager-loading"]], "`eagerload()``, ``eagerload_all()`` is now ``joinedload()``, ``joinedload_all()`": [[17, "eagerload-eagerload-all-is-now-joinedload-joinedload-all"]], "`lazy=False|None|True|'dynamic'`` now accepts ``lazy='noload'|'joined'|'subquery'|'select'|'dynamic'`": [[17, "lazy-false-none-true-dynamic-now-accepts-lazy-noload-joined-subquery-select-dynamic"]], "innerjoin=True on relation, joinedload": [[17, "innerjoin-true-on-relation-joinedload"]], "Many-to-one Enhancements": [[17, "many-to-one-enhancements"]], "Mutable Primary Keys with Joined Table Inheritance": [[17, "mutable-primary-keys-with-joined-table-inheritance"]], "Beaker Caching": [[17, "beaker-caching"]], "Other Changes": [[17, "other-changes"]], "Deprecated/Removed ORM Elements": [[17, "deprecated-removed-orm-elements"]], "Extensions": [[17, "extensions"]], "SQLSoup": [[17, "sqlsoup"], [19, "sqlsoup"]], "Declarative": [[17, "declarative"]], "What\u2019s New in SQLAlchemy 1.1?": [[22, "what-s-new-in-sqlalchemy-1-1"]], "Platform / Installer Changes": [[22, "platform-installer-changes"]], "Setuptools is now required for install": [[22, "setuptools-is-now-required-for-install"]], "Enabling / Disabling C Extension builds is only via environment variable": [[22, "enabling-disabling-c-extension-builds-is-only-via-environment-variable"]], "New Session lifecycle events": [[22, "new-session-lifecycle-events"]], "New State Transition Events": [[22, "new-state-transition-events"]], "New Object State \u201cdeleted\u201d is added, deleted objects no longer \u201cpersistent\u201d": [[22, "new-object-state-deleted-is-added-deleted-objects-no-longer-persistent"]], "Strong Identity Map is Deprecated": [[22, "strong-identity-map-is-deprecated"]], "New init_scalar() event intercepts default values at ORM level": [[22, "new-init-scalar-event-intercepts-default-values-at-orm-level"]], "Changes regarding \u201cunhashable\u201d types, impacts deduping of ORM rows": [[22, "changes-regarding-unhashable-types-impacts-deduping-of-orm-rows"]], "Specific checks added for passing mapped classes, instances as SQL literals": [[22, "specific-checks-added-for-passing-mapped-classes-instances-as-sql-literals"]], "New Indexable ORM extension": [[22, "new-indexable-orm-extension"]], "New options allowing explicit persistence of NULL over a default": [[22, "new-options-allowing-explicit-persistence-of-null-over-a-default"]], "Further Fixes to single-table inheritance querying": [[22, "further-fixes-to-single-table-inheritance-querying"]], "Improved Session state when a SAVEPOINT is cancelled by the database": [[22, "improved-session-state-when-a-savepoint-is-cancelled-by-the-database"]], "Erroneous \u201cnew instance X conflicts with persistent instance Y\u201d flush errors fixed": [[22, "erroneous-new-instance-x-conflicts-with-persistent-instance-y-flush-errors-fixed"]], "passive_deletes feature for joined-inheritance mappings": [[22, "passive-deletes-feature-for-joined-inheritance-mappings"]], "Same-named backrefs will not raise an error when applied to concrete inheritance subclasses": [[22, "same-named-backrefs-will-not-raise-an-error-when-applied-to-concrete-inheritance-subclasses"]], "Same-named relationships on inheriting mappers no longer warn": [[22, "same-named-relationships-on-inheriting-mappers-no-longer-warn"]], "Hybrid properties and methods now propagate the docstring as well as .info": [[22, "hybrid-properties-and-methods-now-propagate-the-docstring-as-well-as-info"]], "Session.merge resolves pending conflicts the same as persistent": [[22, "session-merge-resolves-pending-conflicts-the-same-as-persistent"]], "Fix involving many-to-one object moves with user-initiated foreign key manipulations": [[22, "fix-involving-many-to-one-object-moves-with-user-initiated-foreign-key-manipulations"]], "Improvements to the Query.correlate method with polymorphic entities": [[22, "improvements-to-the-query-correlate-method-with-polymorphic-entities"]], "Stringify of Query will consult the Session for the correct dialect": [[22, "stringify-of-query-will-consult-the-session-for-the-correct-dialect"]], "Joined eager loading where the same entity is present multiple times in one row": [[22, "joined-eager-loading-where-the-same-entity-is-present-multiple-times-in-one-row"]], "New MutableList and MutableSet helpers added to the mutation tracking extension": [[22, "new-mutablelist-and-mutableset-helpers-added-to-the-mutation-tracking-extension"]], "New \u201craise\u201d / \u201craise_on_sql\u201d loader strategies": [[22, "new-raise-raise-on-sql-loader-strategies"]], "Mapper.order_by is deprecated": [[22, "mapper-order-by-is-deprecated"]], "Engines now invalidate connections, run error handlers for BaseException": [[22, "engines-now-invalidate-connections-run-error-handlers-for-baseexception"]], "CTE Support for INSERT, UPDATE, DELETE": [[22, "cte-support-for-insert-update-delete"]], "Support for RANGE and ROWS specification within window functions": [[22, "support-for-range-and-rows-specification-within-window-functions"]], "Support for the SQL LATERAL keyword": [[22, "support-for-the-sql-lateral-keyword"]], "Support for TABLESAMPLE": [[22, "support-for-tablesample"]], "The .autoincrement directive is no longer implicitly enabled for a composite primary key column": [[22, "the-autoincrement-directive-is-no-longer-implicitly-enabled-for-a-composite-primary-key-column"]], "Support for IS DISTINCT FROM and IS NOT DISTINCT FROM": [[22, "support-for-is-distinct-from-and-is-not-distinct-from"]], "Core and ORM support for FULL OUTER JOIN": [[22, "core-and-orm-support-for-full-outer-join"]], "ResultSet column matching enhancements; positional column setup for textual SQL": [[22, "resultset-column-matching-enhancements-positional-column-setup-for-textual-sql"]], "TextAsFrom.columns() now works positionally": [[22, "textasfrom-columns-now-works-positionally"]], "Positional matching is trusted over name-based matching for Core/ORM SQL constructs": [[22, "positional-matching-is-trusted-over-name-based-matching-for-core-orm-sql-constructs"]], "Much less likely to get an \u201cambiguous column\u201d error message": [[22, "much-less-likely-to-get-an-ambiguous-column-error-message"]], "Support for Python\u2019s native enum type and compatible forms": [[22, "support-for-python-s-native-enum-type-and-compatible-forms"]], "The Enum.enums collection is now a list instead of a tuple": [[22, "the-enum-enums-collection-is-now-a-list-instead-of-a-tuple"]], "Negative integer indexes accommodated by Core result rows": [[22, "negative-integer-indexes-accommodated-by-core-result-rows"]], "The Enum type now does in-Python validation of values": [[22, "the-enum-type-now-does-in-python-validation-of-values"]], "Non-native boolean integer values coerced to zero/one/None in all cases": [[22, "non-native-boolean-integer-values-coerced-to-zero-one-none-in-all-cases"]], "Large parameter and row values are now truncated in logging and exception displays": [[22, "large-parameter-and-row-values-are-now-truncated-in-logging-and-exception-displays"]], "JSON support added to Core": [[22, "json-support-added-to-core"]], "JSON \u201cnull\u201d is inserted as expected with ORM operations, omitted when not present": [[22, "json-null-is-inserted-as-expected-with-orm-operations-omitted-when-not-present"]], "New JSON.NULL Constant Added": [[22, "new-json-null-constant-added"]], "Array support added to Core; new ANY and ALL operators": [[22, "array-support-added-to-core-new-any-and-all-operators"]], "New Function features, \u201cWITHIN GROUP\u201d, array_agg and set aggregate functions": [[22, "new-function-features-within-group-array-agg-and-set-aggregate-functions"]], "TypeDecorator now works with Enum, Boolean, \u201cschema\u201d types automatically": [[22, "typedecorator-now-works-with-enum-boolean-schema-types-automatically"]], "Multi-Tenancy Schema Translation for Table objects": [[22, "multi-tenancy-schema-translation-for-table-objects"]], "\u201cFriendly\u201d stringification of Core SQL constructs without a dialect": [[22, "friendly-stringification-of-core-sql-constructs-without-a-dialect"]], "The type_coerce function is now a persistent SQL element": [[22, "the-type-coerce-function-is-now-a-persistent-sql-element"]], "JSON Columns will not insert JSON NULL if no value is supplied and no default is established": [[22, "json-columns-will-not-insert-json-null-if-no-value-is-supplied-and-no-default-is-established"]], "Columns no longer added redundantly with DISTINCT + ORDER BY": [[22, "columns-no-longer-added-redundantly-with-distinct-order-by"]], "Same-named @validates decorators will now raise an exception": [[22, "same-named-validates-decorators-will-now-raise-an-exception"]], "TextClause.columns() will match columns positionally, not by name, when passed positionally": [[22, "textclause-columns-will-match-columns-positionally-not-by-name-when-passed-positionally"]], "String server_default now literal quoted": [[22, "string-server-default-now-literal-quoted"]], "A UNION or similar of SELECTs with LIMIT/OFFSET/ORDER BY now parenthesizes the embedded selects": [[22, "a-union-or-similar-of-selects-with-limit-offset-order-by-now-parenthesizes-the-embedded-selects"]], "Support for INSERT..ON CONFLICT (DO UPDATE | DO NOTHING)": [[22, "support-for-insert-on-conflict-do-update-do-nothing"]], "ARRAY and JSON types now correctly specify \u201cunhashable\u201d": [[22, "array-and-json-types-now-correctly-specify-unhashable"]], "Correct SQL Types are Established from Indexed Access of ARRAY, JSON, HSTORE": [[22, "correct-sql-types-are-established-from-indexed-access-of-array-json-hstore"]], "The JSON cast() operation now requires .astext is called explicitly": [[22, "the-json-cast-operation-now-requires-astext-is-called-explicitly"]], "ARRAY with ENUM will now emit CREATE TYPE for the ENUM": [[22, "array-with-enum-will-now-emit-create-type-for-the-enum"]], "Check constraints now reflect": [[22, "check-constraints-now-reflect"], [22, "id1"]], "\u201cPlain\u201d and \u201cMaterialized\u201d views can be inspected separately": [[22, "plain-and-materialized-views-can-be-inspected-separately"]], "Added tablespace option to Index": [[22, "added-tablespace-option-to-index"]], "Support for PyGreSQL": [[22, "support-for-pygresql"]], "The \u201cpostgres\u201d module is removed": [[22, "the-postgres-module-is-removed"]], "Support for FOR UPDATE SKIP LOCKED  / FOR NO KEY UPDATE / FOR KEY SHARE": [[22, "support-for-for-update-skip-locked-for-no-key-update-for-key-share"]], "MySQL JSON Support": [[22, "mysql-json-support"]], "Added support for AUTOCOMMIT \u201cisolation level\u201d": [[22, "added-support-for-autocommit-isolation-level"]], "No more generation of an implicit KEY for composite primary key w/ AUTO_INCREMENT": [[22, "no-more-generation-of-an-implicit-key-for-composite-primary-key-w-auto-increment"]], "Right-nested join workaround lifted for SQLite version 3.7.16": [[22, "right-nested-join-workaround-lifted-for-sqlite-version-3-7-16"]], "Dotted column names workaround lifted for SQLite version 3.10.0": [[22, "dotted-column-names-workaround-lifted-for-sqlite-version-3-10-0"]], "Improved Support for Remote Schemas": [[22, "improved-support-for-remote-schemas"]], "Reflection of the name of PRIMARY KEY constraints": [[22, "reflection-of-the-name-of-primary-key-constraints"]], "ON DELETE and ON UPDATE foreign key phrases now reflect": [[22, "on-delete-and-on-update-foreign-key-phrases-now-reflect"]], "Added transaction isolation level support for SQL Server": [[22, "added-transaction-isolation-level-support-for-sql-server"]], "String / varlength types no longer represent \u201cmax\u201d explicitly on reflection": [[22, "string-varlength-types-no-longer-represent-max-explicitly-on-reflection"]], "Support for \u201cnon clustered\u201d on primary key to allow clustered elsewhere": [[22, "support-for-non-clustered-on-primary-key-to-allow-clustered-elsewhere"]], "The legacy_schema_aliasing flag is now set to False": [[22, "the-legacy-schema-aliasing-flag-is-now-set-to-false"]], "Support for SKIP LOCKED": [[22, "support-for-skip-locked"]], "Changes and Migration": [[14, "changes-and-migration"]], "Current Migration Guide": [[14, "current-migration-guide"]], "SQLAlchemy 2.0 Overview and Status": [[14, "sqlalchemy-2-0-overview-and-status"]], "Change logs": [[14, "change-logs"]], "Older Migration Guides": [[14, "older-migration-guides"]], "What\u2019s New in SQLAlchemy 0.8?": [[19, "what-s-new-in-sqlalchemy-0-8"]], "Targeting Python 2.5 and Up Now": [[19, "targeting-python-2-5-and-up-now"]], "New ORM Features": [[19, "new-orm-features"]], "Rewritten relationship() mechanics": [[19, "rewritten-orm-relationship-mechanics"]], "New Class/Object Inspection System": [[19, "new-class-object-inspection-system"]], "New with_polymorphic() feature, can be used anywhere": [[19, "new-with-polymorphic-feature-can-be-used-anywhere"]], "of_type() works with alias(), with_polymorphic(), any(), has(), joinedload(), subqueryload(), contains_eager()": [[19, "of-type-works-with-alias-with-polymorphic-any-has-joinedload-subqueryload-contains-eager"]], "Events Can Be Applied to Unmapped Superclasses": [[19, "events-can-be-applied-to-unmapped-superclasses"]], "Declarative Distinguishes Between Modules/Packages": [[19, "declarative-distinguishes-between-modules-packages"]], "New DeferredReflection Feature in Declarative": [[19, "new-deferredreflection-feature-in-declarative"]], "ORM Classes Now Accepted by Core Constructs": [[19, "orm-classes-now-accepted-by-core-constructs"]], "Query.update() supports UPDATE..FROM": [[19, "query-update-supports-update-from"]], "rollback() will only roll back \u201cdirty\u201d objects from a begin_nested()": [[19, "rollback-will-only-roll-back-dirty-objects-from-a-begin-nested"]], "Caching Example now uses dogpile.cache": [[19, "caching-example-now-uses-dogpile-cache"]], "New Core Features": [[19, "new-core-features"]], "Fully extensible, type-level operator support in Core": [[19, "fully-extensible-type-level-operator-support-in-core"]], "Multiple-VALUES support for Insert": [[19, "multiple-values-support-for-insert"]], "Type Expressions": [[19, "type-expressions"]], "Core Inspection System": [[19, "core-inspection-system"]], "New Method Select.correlate_except()": [[19, "new-method-expression-select-correlate-except"]], "PostgreSQL HSTORE type": [[19, "postgresql-hstore-type"]], "Enhanced PostgreSQL ARRAY type": [[19, "enhanced-postgresql-array-type"]], "New, configurable DATE, TIME types for SQLite": [[19, "new-configurable-date-time-types-for-sqlite"]], "\u201cCOLLATE\u201d supported across all dialects; in particular MySQL, PostgreSQL, SQLite": [[19, "collate-supported-across-all-dialects-in-particular-mysql-postgresql-sqlite"]], "\u201cPrefixes\u201d now supported for update(), delete()": [[19, "prefixes-now-supported-for-expression-update-expression-delete"]], "Behavioral Changes": [[19, "behavioral-changes"]], "The consideration of a \u201cpending\u201d object as an \u201corphan\u201d has been made more aggressive": [[19, "the-consideration-of-a-pending-object-as-an-orphan-has-been-made-more-aggressive"]], "The after_attach event fires after the item is associated with the Session instead of before; before_attach added": [[19, "the-after-attach-event-fires-after-the-item-is-associated-with-the-session-instead-of-before-before-attach-added"]], "Query now auto-correlates like a select() does": [[19, "query-now-auto-correlates-like-a-select-does"]], "Correlation is now always context-specific": [[19, "correlation-is-now-always-context-specific"]], "create_all() and drop_all() will now honor an empty list as such": [[19, "create-all-and-drop-all-will-now-honor-an-empty-list-as-such"]], "Repaired the Event Targeting of InstrumentationEvents": [[19, "repaired-the-event-targeting-of-instrumentationevents"]], "No more magic coercion of \u201c=\u201d to IN when comparing to subquery in MS-SQL": [[19, "no-more-magic-coercion-of-to-in-when-comparing-to-subquery-in-ms-sql"]], "Fixed the behavior of Session.is_modified()": [[19, "fixed-the-behavior-of-session-is-modified"]], "Column.key is honored in the Select.c attribute of select() with Select.apply_labels()": [[19, "schema-column-key-is-honored-in-the-expression-select-c-attribute-of-expression-select-with-expression-select-apply-labels"]], "single_parent warning is now an error": [[19, "single-parent-warning-is-now-an-error"]], "Adding the inspector argument to the column_reflect event": [[19, "adding-the-inspector-argument-to-the-column-reflect-event"]], "Disabling auto-detect of collations, casing for MySQL": [[19, "disabling-auto-detect-of-collations-casing-for-mysql"]], "\u201cUnconsumed column names\u201d warning becomes an exception": [[19, "unconsumed-column-names-warning-becomes-an-exception"]], "Inspector.get_primary_keys() is deprecated, use Inspector.get_pk_constraint": [[19, "inspector-get-primary-keys-is-deprecated-use-inspector-get-pk-constraint"]], "Case-insensitive result row names will be disabled in most cases": [[19, "case-insensitive-result-row-names-will-be-disabled-in-most-cases"]], "InstrumentationManager and alternate class instrumentation is now an extension": [[19, "instrumentationmanager-and-alternate-class-instrumentation-is-now-an-extension"]], "MutableType": [[19, "mutabletype"]], "sqlalchemy.exceptions (has been sqlalchemy.exc for years)": [[19, "sqlalchemy-exceptions-has-been-sqlalchemy-exc-for-years"]], "Table of Contents": [[27, "table-of-contents"]], "Indices and tables": [[27, "indices-and-tables"]], "What\u2019s New in SQLAlchemy 0.9?": [[20, "what-s-new-in-sqlalchemy-0-9"]], "Targeting Python 2.6 and Up Now, Python 3 without 2to3": [[20, "targeting-python-2-6-and-up-now-python-3-without-2to3"]], "C Extensions Supported on Python 3": [[20, "c-extensions-supported-on-python-3"]], "Behavioral Changes - ORM": [[20, "behavioral-changes-orm"], [25, "behavioral-changes-orm"]], "Composite attributes are now returned as their object form when queried on a per-attribute basis": [[20, "composite-attributes-are-now-returned-as-their-object-form-when-queried-on-a-per-attribute-basis"]], "Query.select_from() no longer applies the clause to corresponding entities": [[20, "query-query-select-from-no-longer-applies-the-clause-to-corresponding-entities"]], "viewonly=True on relationship() prevents history from taking effect": [[20, "viewonly-true-on-relationship-prevents-history-from-taking-effect"]], "Association Proxy SQL Expression Improvements and Fixes": [[20, "association-proxy-sql-expression-improvements-and-fixes"]], "Association Proxy Missing Scalar returns None": [[20, "association-proxy-missing-scalar-returns-none"]], "attributes.get_history() will query from the DB by default if value not present": [[20, "attributes-get-history-will-query-from-the-db-by-default-if-value-not-present"]], "Behavioral Changes - Core": [[20, "behavioral-changes-core"]], "Type objects no longer accept ignored keyword arguments": [[20, "type-objects-no-longer-accept-ignored-keyword-arguments"]], "None can no longer be used as a \u201cpartial AND\u201d constructor": [[20, "none-can-no-longer-be-used-as-a-partial-and-constructor"]], "The \u201cpassword\u201d portion of a create_engine() no longer considers the + sign as an encoded space": [[20, "the-password-portion-of-a-create-engine-no-longer-considers-the-sign-as-an-encoded-space"]], "The precedence rules for COLLATE have been changed": [[20, "the-precedence-rules-for-collate-have-been-changed"]], "PostgreSQL CREATE TYPE <x> AS ENUM now applies quoting to values": [[20, "postgresql-create-type-x-as-enum-now-applies-quoting-to-values"]], "Event Removal API": [[20, "event-removal-api"]], "New Query Options API; load_only() option": [[20, "new-query-options-api-load-only-option"]], "The Load Class": [[20, "the-load-class"]], "Load Only": [[20, "load-only"]], "Class-specific Wildcards": [[20, "class-specific-wildcards"]], "New text() Capabilities": [[20, "new-text-capabilities"]], "INSERT from SELECT": [[20, "insert-from-select"]], "New FOR UPDATE support on select(), Query()": [[20, "new-for-update-support-on-select-query"]], "Floating Point String-Conversion Precision Configurable for Native Floating Point Types": [[20, "floating-point-string-conversion-precision-configurable-for-native-floating-point-types"]], "Column Bundles for ORM queries": [[20, "column-bundles-for-orm-queries"]], "Server Side Version Counting": [[20, "server-side-version-counting"]], "include_backrefs=False option for @validates": [[20, "include-backrefs-false-option-for-validates"]], "PostgreSQL JSON Type": [[20, "postgresql-json-type"]], "Automap Extension": [[20, "automap-extension"]], "Behavioral Improvements": [[20, "behavioral-improvements"]], "Many JOIN and LEFT OUTER JOIN expressions will no longer be wrapped in (SELECT * FROM ..) AS ANON_1": [[20, "many-join-and-left-outer-join-expressions-will-no-longer-be-wrapped-in-select-from-as-anon-1"]], "Right-nested inner joins available in joined eager loads": [[20, "right-nested-inner-joins-available-in-joined-eager-loads"]], "ORM can efficiently fetch just-generated INSERT/UPDATE defaults using RETURNING": [[20, "orm-can-efficiently-fetch-just-generated-insert-update-defaults-using-returning"]], "Subquery Eager Loading will apply DISTINCT to the innermost SELECT for some queries": [[20, "subquery-eager-loading-will-apply-distinct-to-the-innermost-select-for-some-queries"]], "Backref handlers can now propagate more than one level deep": [[20, "backref-handlers-can-now-propagate-more-than-one-level-deep"]], "The typing system now handles the task of rendering \u201cliteral bind\u201d values": [[20, "the-typing-system-now-handles-the-task-of-rendering-literal-bind-values"]], "Schema identifiers now carry along their own quoting information": [[20, "schema-identifiers-now-carry-along-their-own-quoting-information"]], "Improved rendering of Boolean constants, NULL constants, conjunctions": [[20, "improved-rendering-of-boolean-constants-null-constants-conjunctions"]], "Label constructs can now render as their name alone in an ORDER BY": [[20, "label-constructs-can-now-render-as-their-name-alone-in-an-order-by"]], "RowProxy now has tuple-sorting behavior": [[20, "rowproxy-now-has-tuple-sorting-behavior"]], "A bindparam() construct with no type gets upgraded via copy when a type is available": [[20, "a-bindparam-construct-with-no-type-gets-upgraded-via-copy-when-a-type-is-available"]], "Columns can reliably get their type from a column referred to via ForeignKey": [[20, "columns-can-reliably-get-their-type-from-a-column-referred-to-via-foreignkey"]], "Dialect Changes": [[20, "dialect-changes"], [25, "dialect-changes"]], "Firebird fdb is now the default Firebird dialect.": [[20, "firebird-fdb-is-now-the-default-firebird-dialect"]], "Firebird fdb and kinterbasdb set retaining=False by default": [[20, "firebird-fdb-and-kinterbasdb-set-retaining-false-by-default"]], "What\u2019s New in SQLAlchemy 1.4?": [[25, "what-s-new-in-sqlalchemy-1-4"]], "Major API changes and features - General": [[25, "major-api-changes-and-features-general"]], "Python 3.6 is the minimum Python 3 version; Python 2.7 still supported": [[25, "python-3-6-is-the-minimum-python-3-version-python-2-7-still-supported"]], "ORM Query is internally unified with select, update, delete; 2.0 style execution available": [[25, "orm-query-is-internally-unified-with-select-update-delete-2-0-style-execution-available"]], "Transparent SQL Compilation Caching added to All DQL, DML Statements in Core, ORM": [[25, "transparent-sql-compilation-caching-added-to-all-dql-dml-statements-in-core-orm"]], "Declarative is now integrated into the ORM with new features": [[25, "declarative-is-now-integrated-into-the-orm-with-new-features"]], "Python Dataclasses, attrs Supported w/ Declarative, Imperative Mappings": [[25, "python-dataclasses-attrs-supported-w-declarative-imperative-mappings"]], "Asynchronous IO Support for Core and ORM": [[25, "asynchronous-io-support-for-core-and-orm"]], "greenlets are good": [[25, null]], "Many Core and ORM statement objects now perform much of their construction and validation in the compile phase": [[25, "many-core-and-orm-statement-objects-now-perform-much-of-their-construction-and-validation-in-the-compile-phase"]], "Repaired internal importing conventions such that code linters may work correctly": [[25, "repaired-internal-importing-conventions-such-that-code-linters-may-work-correctly"]], "Support for SQL Regular Expression operators": [[25, "support-for-sql-regular-expression-operators"]], "SQLAlchemy 2.0 Deprecations Mode": [[25, "sqlalchemy-2-0-deprecations-mode"]], "API and Behavioral Changes - Core": [[25, "api-and-behavioral-changes-core"]], "A SELECT statement is no longer implicitly considered to be a FROM clause": [[25, "a-select-statement-is-no-longer-implicitly-considered-to-be-a-from-clause"]], "select().join() and outerjoin() add JOIN criteria to the current query, rather than creating a subquery": [[25, "select-join-and-outerjoin-add-join-criteria-to-the-current-query-rather-than-creating-a-subquery"]], "The URL object is now immutable": [[25, "the-url-object-is-now-immutable"]], "Changes to CreateEnginePlugin": [[25, "changes-to-createengineplugin"]], "select(), case() now accept positional expressions": [[25, "select-case-now-accept-positional-expressions"]], "All IN expressions render parameters for each value in the list on the fly (e.g. expanding parameters)": [[25, "all-in-expressions-render-parameters-for-each-value-in-the-list-on-the-fly-e-g-expanding-parameters"]], "Built-in FROM linting will warn for any potential cartesian products in a SELECT statement": [[25, "built-in-from-linting-will-warn-for-any-potential-cartesian-products-in-a-select-statement"]], "New Result object": [[25, "new-result-object"]], "RowProxy is no longer a \u201cproxy\u201d; is now called Row and behaves like an enhanced named tuple": [[25, "rowproxy-is-no-longer-a-proxy-is-now-called-row-and-behaves-like-an-enhanced-named-tuple"]], "Rationale: To behave more like a named tuple rather than a mapping": [[25, "rationale-to-behave-more-like-a-named-tuple-rather-than-a-mapping"]], "Proxying behavior goes away, was also unnecessary in modern usage": [[25, "proxying-behavior-goes-away-was-also-unnecessary-in-modern-usage"]], "SELECT objects and derived FROM clauses allow for duplicate columns and column labels": [[25, "select-objects-and-derived-from-clauses-allow-for-duplicate-columns-and-column-labels"]], "Improved column labeling for simple column expressions using CAST or similar": [[25, "improved-column-labeling-for-simple-column-expressions-using-cast-or-similar"]], "New \u201cpost compile\u201d bound parameters used for LIMIT/OFFSET in Oracle, SQL Server": [[25, "new-post-compile-bound-parameters-used-for-limit-offset-in-oracle-sql-server"]], "Connection-level transactions can now be inactive based on subtransaction": [[25, "connection-level-transactions-can-now-be-inactive-based-on-subtransaction"]], "Enum and Boolean datatypes no longer default to \u201ccreate constraint\u201d": [[25, "enum-and-boolean-datatypes-no-longer-default-to-create-constraint"]], "New Features - ORM": [[25, "new-features-orm"]], "Raiseload for Columns": [[25, "raiseload-for-columns"]], "ORM Batch inserts with psycopg2 now batch statements with RETURNING in most cases": [[25, "orm-batch-inserts-with-psycopg2-now-batch-statements-with-returning-in-most-cases"]], "ORM Bulk Update and Delete use RETURNING for \u201cfetch\u201d strategy when available": [[25, "orm-bulk-update-and-delete-use-returning-for-fetch-strategy-when-available"]], "The \u201cKeyedTuple\u201d object returned by Query is replaced by Row": [[25, "the-keyedtuple-object-returned-by-query-is-replaced-by-row"]], "Session features new \u201cautobegin\u201d behavior": [[25, "session-features-new-autobegin-behavior"]], "Rationale": [[25, "rationale"], [104, "rationale"]], "Viewonly relationships don\u2019t synchronize backrefs": [[25, "viewonly-relationships-don-t-synchronize-backrefs"]], "cascade_backrefs behavior deprecated for removal in 2.0": [[25, "cascade-backrefs-behavior-deprecated-for-removal-in-2-0"]], "Eager loaders emit during unexpire operations": [[25, "eager-loaders-emit-during-unexpire-operations"]], "Accessing an uninitialized collection attribute on a transient object no longer mutates __dict__": [[25, "accessing-an-uninitialized-collection-attribute-on-a-transient-object-no-longer-mutates-dict"]], "The \u201cNew instance conflicts with existing identity\u201d error is now a warning": [[25, "the-new-instance-conflicts-with-existing-identity-error-is-now-a-warning"]], "Persistence-related cascade operations disallowed with viewonly=True": [[25, "persistence-related-cascade-operations-disallowed-with-viewonly-true"]], "Stricter behavior when querying inheritance mappings using custom queries": [[25, "stricter-behavior-when-querying-inheritance-mappings-using-custom-queries"]], "pg8000 minimum version is 1.16.6, supports Python 3 only": [[25, "pg8000-minimum-version-is-1-16-6-supports-python-3-only"]], "psycopg2 version 2.7 or higher is required for the PostgreSQL psycopg2 dialect": [[25, "psycopg2-version-2-7-or-higher-is-required-for-the-postgresql-psycopg2-dialect"]], "psycopg2 dialect no longer has limitations regarding bound parameter names": [[25, "psycopg2-dialect-no-longer-has-limitations-regarding-bound-parameter-names"]], "psycopg2 dialect features \u201cexecute_values\u201d with RETURNING for INSERT statements by default": [[25, "psycopg2-dialect-features-execute-values-with-returning-for-insert-statements-by-default"]], "Removed \u201cjoin rewriting\u201d logic from SQLite dialect; updated imports": [[25, "removed-join-rewriting-logic-from-sqlite-dialect-updated-imports"]], "Added Sequence support for MariaDB 10.3": [[25, "added-sequence-support-for-mariadb-10-3"]], "Added Sequence support distinct from IDENTITY to SQL Server": [[25, "added-sequence-support-distinct-from-identity-to-sql-server"]], "What\u2019s New in SQLAlchemy 1.3?": [[24, "what-s-new-in-sqlalchemy-1-3"]], "General": [[24, "general"]], "Deprecation warnings are emitted for all deprecated elements; new deprecations added": [[24, "deprecation-warnings-are-emitted-for-all-deprecated-elements-new-deprecations-added"]], "Relationship to AliasedClass replaces the need for non primary mappers": [[24, "relationship-to-aliasedclass-replaces-the-need-for-non-primary-mappers"]], "selectin loading no longer uses JOIN for simple one-to-many": [[24, "selectin-loading-no-longer-uses-join-for-simple-one-to-many"]], "Improvement to the behavior of many-to-one query expressions": [[24, "improvement-to-the-behavior-of-many-to-one-query-expressions"]], "Many-to-one replacement won\u2019t raise for \u201craiseload\u201d or detached for \u201cold\u201d object": [[24, "many-to-one-replacement-won-t-raise-for-raiseload-or-detached-for-old-object"]], "\u201cdel\u201d implemented for ORM attributes": [[24, "del-implemented-for-orm-attributes"]], "info dictionary added to InstanceState": [[24, "info-dictionary-added-to-instancestate"]], "Horizontal Sharding extension supports bulk update and delete methods": [[24, "horizontal-sharding-extension-supports-bulk-update-and-delete-methods"]], "Association Proxy Improvements": [[24, "association-proxy-improvements"]], "Association proxy has new cascade_scalar_deletes flag": [[24, "association-proxy-has-new-cascade-scalar-deletes-flag"]], "AssociationProxy stores class-specific state on a per-class basis": [[24, "associationproxy-stores-class-specific-state-on-a-per-class-basis"]], "AssociationProxy now provides standard column operators for a column-oriented target": [[24, "associationproxy-now-provides-standard-column-operators-for-a-column-oriented-target"]], "Association Proxy now Strong References the Parent Object": [[24, "association-proxy-now-strong-references-the-parent-object"]], "Implemented bulk replace for sets, dicts with AssociationProxy": [[24, "implemented-bulk-replace-for-sets-dicts-with-associationproxy"]], "Many-to-one backref checks for collection duplicates during remove operation": [[24, "many-to-one-backref-checks-for-collection-duplicates-during-remove-operation"]], "Query.join() handles ambiguity in deciding the \u201cleft\u201d side more explicitly": [[24, "query-join-handles-ambiguity-in-deciding-the-left-side-more-explicitly"]], "FOR UPDATE clause is rendered within the joined eager load subquery as well as outside": [[24, "for-update-clause-is-rendered-within-the-joined-eager-load-subquery-as-well-as-outside"]], "passive_deletes=\u2019all\u2019 will leave FK unchanged for object removed from collection": [[24, "passive-deletes-all-will-leave-fk-unchanged-for-object-removed-from-collection"]], "New multi-column naming convention tokens, long name truncation": [[24, "new-multi-column-naming-convention-tokens-long-name-truncation"]], "Binary comparison interpretation for SQL functions": [[24, "binary-comparison-interpretation-for-sql-functions"]], "Expanding IN feature now supports empty lists": [[24, "expanding-in-feature-now-supports-empty-lists"]], "TypeEngine methods bind_expression, column_expression work with Variant, type-specific types": [[24, "typeengine-methods-bind-expression-column-expression-work-with-variant-type-specific-types"]], "New last-in-first-out strategy for QueuePool": [[24, "new-last-in-first-out-strategy-for-queuepool"]], "Key Changes - Core": [[24, "key-changes-core"]], "Coercion of string SQL fragments to text() fully removed": [[24, "coercion-of-string-sql-fragments-to-text-fully-removed"]], "\u201cthreadlocal\u201d engine strategy deprecated": [[24, "threadlocal-engine-strategy-deprecated"]], "convert_unicode parameters deprecated": [[24, "convert-unicode-parameters-deprecated"]], "Added basic reflection support for PostgreSQL partitioned tables": [[24, "added-basic-reflection-support-for-postgresql-partitioned-tables"]], "Protocol-level ping now used for pre-ping": [[24, "protocol-level-ping-now-used-for-pre-ping"]], "Control of parameter ordering within ON DUPLICATE KEY UPDATE": [[24, "control-of-parameter-ordering-within-on-duplicate-key-update"]], "Support for SQLite JSON Added": [[24, "support-for-sqlite-json-added"]], "Support for SQLite ON CONFLICT in constraints added": [[24, "support-for-sqlite-on-conflict-in-constraints-added"]], "National char datatypes de-emphasized for generic unicode, re-enabled with option": [[24, "national-char-datatypes-de-emphasized-for-generic-unicode-re-enabled-with-option"]], "cx_Oracle connect arguments modernized, deprecated parameters removed": [[24, "cx-oracle-connect-arguments-modernized-deprecated-parameters-removed"]], "Support for pyodbc fast_executemany": [[24, "support-for-pyodbc-fast-executemany"]], "New parameters to affect IDENTITY start and increment, use of Sequence deprecated": [[24, "new-parameters-to-affect-identity-start-and-increment-use-of-sequence-deprecated"]], "Changed StatementError formatting (newlines and %s)": [[24, "changed-statementerror-formatting-newlines-and-s"]], "Declarative Mapping Styles": [[95, "declarative-mapping-styles"]], "Using a Generated Base Class": [[95, "using-a-generated-base-class"]], "Creating an Explicit Base Non-Dynamically (for use with mypy, similar)": [[95, "creating-an-explicit-base-non-dynamically-for-use-with-mypy-similar"]], "Declarative Mapping using a Decorator (no declarative base)": [[95, "declarative-mapping-using-a-decorator-no-declarative-base"]], "Constructors and Object Initialization": [[89, "constructors-and-object-initialization"]], "Collection Configuration and Techniques": [[87, "collection-configuration-and-techniques"]], "Working with Large Collections": [[87, "working-with-large-collections"]], "Dynamic Relationship Loaders": [[87, "dynamic-relationship-loaders"]], "Setting Noload, RaiseLoad": [[87, "setting-noload-raiseload"]], "Using Passive Deletes": [[87, "using-passive-deletes"]], "Customizing Collection Access": [[87, "customizing-collection-access"]], "Dictionary Collections": [[87, "dictionary-collections"]], "Dealing with Key Mutations and back-populating for Dictionary collections": [[87, "dealing-with-key-mutations-and-back-populating-for-dictionary-collections"]], "Custom Collection Implementations": [[87, "custom-collection-implementations"]], "Do I need a custom collection implementation?": [[87, null]], "Annotating Custom Collections via Decorators": [[87, "annotating-custom-collections-via-decorators"]], "Custom Dictionary-Based Collections": [[87, "custom-dictionary-based-collections"]], "Instrumentation and Custom Types": [[87, "instrumentation-and-custom-types"]], "Collection Internals": [[87, "collection-internals"]], "Composite Column Types": [[88, "composite-column-types"]], "Tracking In-Place Mutations on Composites": [[88, "tracking-in-place-mutations-on-composites"]], "Redefining Comparison Operations for Composites": [[88, "redefining-comparison-operations-for-composites"]], "Nesting Composites": [[88, "nesting-composites"]], "ORM Events": [[97, "orm-events"]], "Session Events": [[97, "session-events"]], "Mapper Events": [[97, "mapper-events"]], "Instance Events": [[97, "instance-events"]], "Attribute Events": [[97, "attribute-events"]], "Query Events": [[97, "query-events"]], "Instrumentation Events": [[97, "module-sqlalchemy.orm.instrumentation"]], "Mapper Configuration with Declarative": [[92, "mapper-configuration-with-declarative"]], "Defining Mapped Properties with Declarative": [[92, "defining-mapped-properties-with-declarative"]], "Mapper Configuration Options with Declarative": [[92, "mapper-configuration-options-with-declarative"]], "Constructing mapper arguments dynamically": [[92, "constructing-mapper-arguments-dynamically"]], "Other Declarative Mapping Directives": [[92, "other-declarative-mapping-directives"]], "__declare_last__()": [[92, "declare-last"]], "__declare_first__()": [[92, "declare-first"]], "metadata": [[92, "metadata"]], "__abstract__": [[92, "abstract"]], "__table_cls__": [[92, "table-cls"]], "Cascades": [[85, "cascades"]], "The Origins of Cascade": [[85, null]], "save-update": [[85, "save-update"]], "delete": [[85, "delete"]], "Using delete cascade with many-to-many relationships": [[85, "using-delete-cascade-with-many-to-many-relationships"]], "Using foreign key ON DELETE cascade with ORM relationships": [[85, "using-foreign-key-on-delete-cascade-with-orm-relationships"]], "Notes on Passive Deletes": [[85, null]], "Using foreign key ON DELETE with many-to-many relationships": [[85, "using-foreign-key-on-delete-with-many-to-many-relationships"]], "delete-orphan": [[85, "delete-orphan"]], "merge": [[85, "merge"]], "refresh-expire": [[85, "refresh-expire"]], "expunge": [[85, "expunge"]], "Controlling Cascade on Backrefs": [[85, "controlling-cascade-on-backrefs"]], "Notes on Delete - Deleting Objects Referenced from Collections and Scalar Relationships": [[85, "notes-on-delete-deleting-objects-referenced-from-collections-and-scalar-relationships"]], "Contextual/Thread-local Sessions": [[90, "contextual-thread-local-sessions"]], "Implicit Method Access": [[90, "implicit-method-access"]], "Thread-Local Scope": [[90, "thread-local-scope"]], "Using Thread-Local Scope with Web Applications": [[90, "using-thread-local-scope-with-web-applications"]], "Using Custom Created Scopes": [[90, "using-custom-created-scopes"]], "Contextual Session API": [[90, "contextual-session-api"]], "Table Configuration with Declarative": [[96, "table-configuration-with-declarative"]], "Declarative Table": [[96, "declarative-table"]], "Accessing Table and Metadata": [[96, "accessing-table-and-metadata"]], "Declarative Table Configuration": [[96, "declarative-table-configuration"]], "Explicit Schema Name with Declarative Table": [[96, "explicit-schema-name-with-declarative-table"]], "Appending additional columns to an existing Declarative mapped class": [[96, "appending-additional-columns-to-an-existing-declarative-mapped-class"]], "Declarative with Imperative Table (a.k.a. Hybrid Declarative)": [[96, "declarative-with-imperative-table-a-k-a-hybrid-declarative"]], "Mapping Declaratively with Reflected Tables": [[96, "mapping-declaratively-with-reflected-tables"]], "Using DeferredReflection": [[96, "using-deferredreflection"]], "Using Automap": [[96, "using-automap"]], "Basic Relationship Patterns": [[84, "basic-relationship-patterns"]], "One To Many": [[84, "one-to-many"]], "Configuring Delete Behavior for One to Many": [[84, "configuring-delete-behavior-for-one-to-many"]], "Many To One": [[84, "many-to-one"]], "One To One": [[84, "one-to-one"]], "Many To Many": [[84, "many-to-many"]], "Deleting Rows from the Many to Many Table": [[84, "deleting-rows-from-the-many-to-many-table"]], "Association Object": [[84, "association-object"]], "Late-Evaluation of Relationship Arguments": [[84, "late-evaluation-of-relationship-arguments"]], "Late-Evaluation for a many-to-many relationship": [[84, "late-evaluation-for-a-many-to-many-relationship"]], "Mapping Classes with Declarative": [[93, "mapping-classes-with-declarative"]], "Composing Mapped Hierarchies with Mixins": [[94, "composing-mapped-hierarchies-with-mixins"]], "Augmenting the Base": [[94, "augmenting-the-base"]], "Mixing in Columns": [[94, "mixing-in-columns"]], "Mixing in Relationships": [[94, "mixing-in-relationships"]], "Using Advanced Relationship Arguments (e.g. primaryjoin, etc.)": [[94, "using-advanced-relationship-arguments-e-g-primaryjoin-etc"]], "Mixing in deferred(), column_property(), and other MapperProperty classes": [[94, "mixing-in-deferred-column-property-and-other-mapperproperty-classes"]], "Controlling table inheritance with mixins": [[94, "controlling-table-inheritance-with-mixins"]], "Mixing in Columns in Inheritance Scenarios": [[94, "mixing-in-columns-in-inheritance-scenarios"]], "Combining Table/Mapper Arguments from Multiple Mixins": [[94, "combining-table-mapper-arguments-from-multiple-mixins"]], "Creating Indexes with Mixins": [[94, "creating-indexes-with-mixins"]], "Integration with dataclasses and attrs": [[91, "integration-with-dataclasses-and-attrs"]], "Applying ORM Mappings to an existing dataclass": [[91, "applying-orm-mappings-to-an-existing-dataclass"]], "Mapping dataclasses using Declarative With Imperative Table": [[91, "mapping-dataclasses-using-declarative-with-imperative-table"]], "Mapping dataclasses using Declarative Mapping": [[91, "mapping-dataclasses-using-declarative-mapping"]], "Mapping dataclasses using Imperative Mapping": [[91, "mapping-dataclasses-using-imperative-mapping"]], "Using Declarative Mixins with Dataclasses": [[91, "using-declarative-mixins-with-dataclasses"]], "Applying ORM mappings to an existing attrs class": [[91, "applying-orm-mappings-to-an-existing-attrs-class"]], "Mapping attrs with Declarative \u201cImperative Table\u201d": [[91, "mapping-attrs-with-declarative-imperative-table"]], "Mapping attrs with Imperative Mapping": [[91, "mapping-attrs-with-imperative-mapping"]], "Events and Internals": [[100, "events-and-internals"]], "ORM Examples": [[98, "orm-examples"]], "Mapping Recipes": [[98, "mapping-recipes"]], "Adjacency List": [[98, "module-examples.adjacency_list"]], "Associations": [[98, "module-examples.association"]], "Asyncio Integration": [[98, "module-examples.asyncio"]], "Directed Graphs": [[98, "module-examples.graphs"]], "Dynamic Relations as Dictionaries": [[98, "module-examples.dynamic_dict"]], "Generic Associations": [[98, "module-examples.generic_associations"]], "Large Collections": [[98, "module-examples.large_collection"]], "Materialized Paths": [[98, "module-examples.materialized_paths"]], "Nested Sets": [[98, "module-examples.nested_sets"]], "File Listing": [[98, "file-listing"]], "Running all tests with time": [[98, "running-all-tests-with-time"]], "Dumping Profiles for Individual Tests": [[98, "dumping-profiles-for-individual-tests"]], "Writing your Own Suites": [[98, "writing-your-own-suites"]], "Relationship Join Conditions": [[98, "module-examples.join_conditions"]], "Space Invaders": [[98, "module-examples.space_invaders"]], "XML Persistence": [[98, "module-examples.elementtree"]], "Versioning Objects": [[98, "versioning-objects"]], "Versioning with a History Table": [[98, "module-examples.versioned_history"]], "Versioning using Temporal Rows": [[98, "module-examples.versioned_rows"]], "Vertical Attribute Mapping": [[98, "module-examples.vertical"]], "Inheritance Mapping Recipes": [[98, "inheritance-mapping-recipes"]], "Basic Inheritance Mappings": [[98, "module-examples.inheritance"]], "Special APIs": [[98, "special-apis"]], "Attribute Instrumentation": [[98, "module-examples.custom_attributes"]], "Horizontal Sharding": [[98, "module-examples.sharding"], [112, "module-sqlalchemy.ext.horizontal_shard"]], "ORM Query Events": [[98, "module-examples.extending_query"]], "Dogpile Caching": [[98, "module-examples.dogpile_caching"]], "PostGIS Integration": [[98, "module-examples.postgis"]], "Declarative Extensions": [[107, "declarative-extensions"]], "Baked Queries": [[104, "module-sqlalchemy.ext.baked"]], "Synopsis": [[104, "synopsis"], [30, "synopsis"], [31, "synopsis"], [115, "synopsis"]], "Measure twice, cut once": [[104, null]], "Special Query Techniques": [[104, "special-query-techniques"]], "Using IN expressions": [[104, "using-in-expressions"]], "Using Subqueries": [[104, "using-subqueries"], [151, "using-subqueries"]], "Using the before_compile event": [[104, "using-the-before-compile-event"]], "Disabling Baked Queries Session-wide": [[104, "disabling-baked-queries-session-wide"]], "Lazy Loading Integration": [[104, "lazy-loading-integration"]], "API Documentation": [[104, "api-documentation"], [101, "api-documentation"], [112, "api-documentation"]], "Basic Use": [[106, "basic-use"], [103, "basic-use"]], "Defining Attributes": [[106, "defining-attributes"]], "Accessing the MetaData": [[106, "accessing-the-metadata"]], "Class Constructor": [[106, "class-constructor"]], "Mapper Configuration": [[106, "mapper-configuration"]], "Defining SQL Expressions": [[106, "defining-sql-expressions"]], "Mixin and Custom Base Classes": [[109, "mixin-and-custom-base-classes"]], "Automap": [[103, "module-sqlalchemy.ext.automap"]], "Generating Mappings from an Existing MetaData": [[103, "generating-mappings-from-an-existing-metadata"]], "Specifying Classes Explicitly": [[103, "specifying-classes-explicitly"]], "Overriding Naming Schemes": [[103, "overriding-naming-schemes"]], "Relationship Detection": [[103, "relationship-detection"]], "Custom Relationship Arguments": [[103, "custom-relationship-arguments"]], "Many-to-Many relationships": [[103, "many-to-many-relationships"]], "Relationships with Inheritance": [[103, "relationships-with-inheritance"]], "Handling Simple Naming Conflicts": [[103, "handling-simple-naming-conflicts"]], "Using Automap with Explicit Declarations": [[103, "using-automap-with-explicit-declarations"]], "Intercepting Column Definitions": [[103, "intercepting-column-definitions"]], "API Reference": [[103, "api-reference"], [105, "api-reference"], [39, "api-reference"], [113, "api-reference"], [117, "api-reference"], [115, "api-reference"], [119, "api-reference"], [116, "api-reference"]], "Declarative API": [[105, "declarative-api"]], "Association Proxy": [[101, "module-sqlalchemy.ext.associationproxy"]], "Simplifying Scalar Collections": [[101, "simplifying-scalar-collections"]], "Creation of New Values": [[101, "creation-of-new-values"]], "Simplifying Association Objects": [[101, "simplifying-association-objects"]], "Proxying to Dictionary Based Collections": [[101, "proxying-to-dictionary-based-collections"]], "Composite Association Proxies": [[101, "composite-association-proxies"]], "Querying with Association Proxies": [[101, "querying-with-association-proxies"]], "Cascading Scalar Deletes": [[101, "cascading-scalar-deletes"]], "Configuring Relationships": [[110, "configuring-relationships"]], "Evaluation of relationship arguments": [[110, "evaluation-of-relationship-arguments"]], "Configuring Many-to-Many Relationships": [[110, "configuring-many-to-many-relationships"]], "Table Configuration": [[111, "table-configuration"]], "Using a Hybrid Approach with __table__": [[111, "using-a-hybrid-approach-with-table"]], "Using Reflection with Declarative": [[111, "using-reflection-with-declarative"]], "Declarative Inheritance": [[108, "declarative-inheritance"]], "ORM Exceptions": [[99, "module-sqlalchemy.orm.exc"]], "Asynchronous I/O (asyncio)": [[102, "asynchronous-i-o-asyncio"]], "Asyncio Platform Installation Notes (Including Apple M1)": [[102, "asyncio-platform-installation-notes-including-apple-m1"]], "Synopsis - Core": [[102, "synopsis-core"]], "Synopsis - ORM": [[102, "synopsis-orm"]], "Preventing Implicit IO when Using AsyncSession": [[102, "preventing-implicit-io-when-using-asyncsession"]], "Running Synchronous Methods and Functions under asyncio": [[102, "running-synchronous-methods-and-functions-under-asyncio"]], "Using events with the asyncio extension": [[102, "using-events-with-the-asyncio-extension"]], "asyncio and events, two opposites": [[102, null]], "Using awaitable-only driver methods in connection pool and other events": [[102, "using-awaitable-only-driver-methods-in-connection-pool-and-other-events"]], "Using multiple asyncio event loops": [[102, "using-multiple-asyncio-event-loops"]], "Using asyncio scoped session": [[102, "using-asyncio-scoped-session"]], "Using the Inspector to inspect schema objects": [[102, "using-the-inspector-to-inspect-schema-objects"]], "Engine API Documentation": [[102, "engine-api-documentation"]], "Result Set API Documentation": [[102, "result-set-api-documentation"]], "ORM Session API Documentation": [[102, "orm-session-api-documentation"]], "Session Basics": [[147, "session-basics"]], "What does the Session do ?": [[147, "what-does-the-session-do"]], "Basics of Using a Session": [[147, "basics-of-using-a-session"]], "Opening and Closing a Session": [[147, "opening-and-closing-a-session"]], "Framing out a begin / commit / rollback block": [[147, "framing-out-a-begin-commit-rollback-block"]], "Using a sessionmaker": [[147, "using-a-sessionmaker"]], "Querying (1.x Style)": [[147, "querying-1-x-style"]], "Querying (2.0 style)": [[147, "querying-2-0-style"]], "Adding New or Existing Items": [[147, "adding-new-or-existing-items"]], "Deleting": [[147, "deleting"], [151, "deleting"]], "Get by Primary Key": [[147, "get-by-primary-key"]], "Expiring / Refreshing": [[147, "expiring-refreshing"]], "UPDATE and DELETE with arbitrary WHERE clause": [[147, "update-and-delete-with-arbitrary-where-clause"]], "Selecting a Synchronization Strategy": [[147, "selecting-a-synchronization-strategy"]], "Selecting ORM Objects Inline with UPDATE.. RETURNING or INSERT..RETURNING": [[147, "selecting-orm-objects-inline-with-update-returning-or-insert-returning"]], "Auto Begin": [[147, "auto-begin"]], "Closing": [[147, "closing"]], "Session Frequently Asked Questions": [[147, "session-frequently-asked-questions"]], "When do I make a sessionmaker?": [[147, "when-do-i-make-a-sessionmaker"]], "When do I construct a Session, when do I commit it, and when do I close it?": [[147, "when-do-i-construct-a-session-when-do-i-commit-it-and-when-do-i-close-it"]], "tl;dr;": [[147, null]], "Is the Session a cache?": [[147, "is-the-session-a-cache"]], "How can I get the Session for a certain object?": [[147, "how-can-i-get-the-session-for-a-certain-object"]], "Is the session thread-safe?": [[147, "is-the-session-thread-safe"]], "State Management": [[149, "state-management"]], "Quickie Intro to Object States": [[149, "quickie-intro-to-object-states"]], "Getting the Current State of an Object": [[149, "getting-the-current-state-of-an-object"]], "Session Attributes": [[149, "session-attributes"]], "Session Referencing Behavior": [[149, "session-referencing-behavior"]], "Merging": [[149, "merging"]], "Merge Tips": [[149, "merge-tips"]], "Expunging": [[149, "expunging"]], "Refreshing / Expiring": [[149, "refreshing-expiring"]], "What Actually Loads": [[149, "what-actually-loads"]], "When to Expire or Refresh": [[149, "when-to-expire-or-refresh"]], "Transaction Isolation": [[149, null]], "Configuring a Version Counter": [[152, "configuring-a-version-counter"]], "Concurrent transaction updates": [[152, null]], "Simple Version Counting": [[152, "simple-version-counting"]], "Custom Version Counters / Types": [[152, "custom-version-counters-types"]], "Server Side Version Counters": [[152, "server-side-version-counters"]], "creating tables that refer to system columns": [[152, null]], "Programmatic or Conditional Version Counters": [[152, "programmatic-or-conditional-version-counters"]], "Mapping Columns and Expressions": [[143, "mapping-columns-and-expressions"]], "Using the Session": [[145, "module-sqlalchemy.orm.session"]], "Relationship Configuration": [[142, "relationship-configuration"]], "Special Relationship Persistence Patterns": [[141, "special-relationship-persistence-patterns"]], "Rows that point to themselves / Mutually Dependent Rows": [[141, "rows-that-point-to-themselves-mutually-dependent-rows"]], "Mutable Primary Keys / Update Cascades": [[141, "mutable-primary-keys-update-cascades"]], "Simulating limited ON UPDATE CASCADE without foreign key support": [[141, "simulating-limited-on-update-cascade-without-foreign-key-support"]], "Adjacency List Relationships": [[144, "adjacency-list-relationships"]], "Composite Adjacency Lists": [[144, "composite-adjacency-lists"]], "Self-Referential Query Strategies": [[144, "self-referential-query-strategies"]], "Configuring Self-Referential Eager Loading": [[144, "configuring-self-referential-eager-loading"]], "Relationships API": [[140, "relationships-api"]], "Transactions and Connection Management": [[150, "transactions-and-connection-management"]], "Managing Transactions": [[150, "managing-transactions"]], "Using SAVEPOINT": [[150, "using-savepoint"]], "Session-level vs. Engine level transaction control": [[150, "session-level-vs-engine-level-transaction-control"]], "Commit as you go": [[150, "commit-as-you-go"]], "Begin Once": [[150, "begin-once"]], "Nested Transaction": [[150, "nested-transaction"]], "Explicit Begin": [[150, "explicit-begin"]], "Migrating from the \u201csubtransaction\u201d pattern": [[150, "migrating-from-the-subtransaction-pattern"]], "Enabling Two-Phase Commit": [[150, "enabling-two-phase-commit"]], "Setting Transaction Isolation Levels / DBAPI AUTOCOMMIT": [[150, "setting-transaction-isolation-levels-dbapi-autocommit"]], "Setting Isolation For A Sessionmaker / Engine Wide": [[150, "setting-isolation-for-a-sessionmaker-engine-wide"]], "Setting Isolation for Individual Sessions": [[150, "setting-isolation-for-individual-sessions"]], "Setting Isolation for Individual Transactions": [[150, "setting-isolation-for-individual-transactions"]], "Tracking Transaction State with Events": [[150, "tracking-transaction-state-with-events"]], "Joining a Session into an External Transaction (such as for test suites)": [[150, "joining-a-session-into-an-external-transaction-such-as-for-test-suites"]], "Tracking queries, object and Session Changes with Events": [[148, "tracking-queries-object-and-session-changes-with-events"]], "Execute Events": [[148, "execute-events"]], "Basic Query Interception": [[148, "basic-query-interception"]], "Adding global WHERE / ON criteria": [[148, "adding-global-where-on-criteria"]], "Re-Executing Statements": [[148, "re-executing-statements"]], "Persistence Events": [[148, "persistence-events"]], "before_flush()": [[148, "before-flush"]], "after_flush()": [[148, "after-flush"]], "after_flush_postexec()": [[148, "after-flush-postexec"]], "Mapper-level Events": [[148, "mapper-level-events"]], "Object Lifecycle Events": [[148, "object-lifecycle-events"]], "Transient": [[148, "transient"]], "Transient to Pending": [[148, "transient-to-pending"]], "Pending to Persistent": [[148, "pending-to-persistent"]], "Pending to Transient": [[148, "pending-to-transient"]], "Loaded as Persistent": [[148, "loaded-as-persistent"]], "Persistent to Transient": [[148, "persistent-to-transient"]], "Persistent to Deleted": [[148, "persistent-to-deleted"]], "Deleted to Detached": [[148, "deleted-to-detached"]], "Persistent to Detached": [[148, "persistent-to-detached"]], "Detached to Persistent": [[148, "detached-to-persistent"]], "Deleted to Persistent": [[148, "deleted-to-persistent"]], "Transaction Events": [[148, "transaction-events"]], "Attribute Change Events": [[148, "attribute-change-events"]], "Object Relational Tutorial (1.x API)": [[151, "object-relational-tutorial-1-x-api"]], "Connecting": [[151, "connecting"], [57, "connecting"], [64, "dialect-mssql-pyodbc-connect"], [64, "dialect-mssql-mxodbc-connect"], [64, "dialect-mssql-pymssql-connect"], [67, "dialect-postgresql-psycopg2-connect"], [67, "dialect-postgresql-pg8000-connect"], [67, "dialect-postgresql-asyncpg-connect"], [67, "dialect-postgresql-psycopg2cffi-connect"], [67, "dialect-postgresql-pypostgresql-connect"], [67, "dialect-postgresql-pygresql-connect"], [65, "dialect-mysql-mysqldb-connect"], [65, "dialect-mysql-pymysql-connect"], [65, "dialect-mysql-mariadbconnector-connect"], [65, "dialect-mysql-mysqlconnector-connect"], [65, "dialect-mysql-asyncmy-connect"], [65, "dialect-mysql-aiomysql-connect"], [65, "dialect-mysql-cymysql-connect"], [65, "dialect-mysql-oursql-connect"], [65, "dialect-mysql-pyodbc-connect"], [68, "dialect-sqlite-pysqlite-connect"], [68, "dialect-sqlite-aiosqlite-connect"], [68, "dialect-sqlite-pysqlcipher-connect"], [66, "dialect-oracle-cx_oracle-connect"], [69, "dialect-sybase-pysybase-connect"], [69, "dialect-sybase-pyodbc-connect"], [69, "dialect-sybase-mxodbc-connect"], [62, "dialect-firebird-fdb-connect"], [62, "dialect-firebird-kinterbasdb-connect"]], "Declare a Mapping": [[151, "declare-a-mapping"]], "Tip": [[151, null]], "Create a Schema": [[151, "create-a-schema"]], "Classical Mappings": [[151, null]], "Minimal Table Descriptions vs. Full Descriptions": [[151, null]], "Create an Instance of the Mapped Class": [[151, "create-an-instance-of-the-mapped-class"]], "the __init__() method": [[151, null]], "Creating a Session": [[151, "creating-a-session"]], "Session Lifecycle Patterns": [[151, null]], "Adding and Updating Objects": [[151, "adding-and-updating-objects"]], "Session Object States": [[151, null]], "Common Filter Operators": [[151, "common-filter-operators"]], "Returning Lists and Scalars": [[151, "returning-lists-and-scalars"]], "Using Textual SQL": [[151, "using-textual-sql"], [57, "using-textual-sql"]], "Counting": [[151, "counting"]], "Counting on count()": [[151, null]], "Building a Relationship": [[151, "building-a-relationship"]], "Did you know ?": [[151, null]], "Querying with Joins": [[151, "querying-with-joins"]], "What does Query select from if there\u2019s multiple entities?": [[151, null]], "Selecting Entities from Subqueries": [[151, "selecting-entities-from-subqueries"], [138, "selecting-entities-from-subqueries"]], "Using EXISTS": [[151, "using-exists"]], "Eager Loading": [[151, "eager-loading"]], "joinedload() is not a replacement for join()": [[151, null]], "Explicit Join + Eagerload": [[151, "explicit-join-eagerload"]], "Configuring delete/delete-orphan Cascade": [[151, "configuring-delete-delete-orphan-cascade"]], "More on Cascades": [[151, null]], "Building a Many To Many Relationship": [[151, "building-a-many-to-many-relationship"]], "Further Reference": [[151, "further-reference"], [57, "further-reference"]], "Working with Data": [[153, "working-with-data"]], "Session API": [[146, "session-api"]], "Session and sessionmaker()": [[146, "session-and-sessionmaker"]], "Session Utilities": [[146, "session-utilities"]], "Attribute and State Management Utilities": [[146, "attribute-and-state-management-utilities"]], "ORM Querying Guide": [[138, "orm-querying-guide"]], "SELECT statements": [[138, "select-statements"]], "Selecting ORM Entities and Attributes": [[138, "selecting-orm-entities-and-attributes"]], "Selecting Individual Attributes": [[138, "selecting-individual-attributes"]], "Grouping Selected Attributes with Bundles": [[138, "grouping-selected-attributes-with-bundles"]], "Selecting ORM Aliases": [[138, "selecting-orm-aliases"]], "Getting ORM Results from Textual and Core Statements": [[138, "getting-orm-results-from-textual-and-core-statements"]], "Selecting Entities from UNIONs and other set operations": [[138, "selecting-entities-from-unions-and-other-set-operations"]], "Joins": [[138, "joins"]], "Simple Relationship Joins": [[138, "simple-relationship-joins"]], "Chaining Multiple Joins": [[138, "chaining-multiple-joins"]], "Joins to a Target Entity or Selectable": [[138, "joins-to-a-target-entity-or-selectable"]], "Joins to a Target with an ON Clause": [[138, "joins-to-a-target-with-an-on-clause"]], "Augmenting Built-in ON Clauses": [[138, "augmenting-built-in-on-clauses"]], "Joining to Subqueries": [[138, "joining-to-subqueries"]], "Controlling what to Join From": [[138, "controlling-what-to-join-from"]], "Special Relationship Operators": [[138, "special-relationship-operators"]], "ORM Loader Options": [[138, "orm-loader-options"]], "ORM Execution Options": [[138, "orm-execution-options"]], "Populate Existing": [[138, "populate-existing"]], "Autoflush": [[138, "autoflush"]], "Fetching Large Result Sets with Yield Per": [[138, "fetching-large-result-sets-with-yield-per"]], "ORM Update / Delete with Arbitrary WHERE clause": [[138, "orm-update-delete-with-arbitrary-where-clause"]], "Inspecting entities and columns from ORM-enabled SELECT and DML statements": [[138, "inspecting-entities-and-columns-from-orm-enabled-select-and-dml-statements"]], "Relationship Loading Techniques": [[128, "relationship-loading-techniques"]], "Configuring Loader Strategies at Mapping Time": [[128, "configuring-loader-strategies-at-mapping-time"]], "Relationship Loading with Loader Options": [[128, "relationship-loading-with-loader-options"]], "Adding Criteria to loader options": [[128, "adding-criteria-to-loader-options"]], "Specifying Sub-Options with Load.options()": [[128, "specifying-sub-options-with-load-options"]], "Lazy Loading": [[128, "lazy-loading"]], "Preventing unwanted lazy loads using raiseload": [[128, "preventing-unwanted-lazy-loads-using-raiseload"]], "Joined Eager Loading": [[128, "joined-eager-loading"]], "Joined eager loading and result set batching": [[128, "joined-eager-loading-and-result-set-batching"]], "The Zen of Joined Eager Loading": [[128, "the-zen-of-joined-eager-loading"]], "Subquery Eager Loading": [[128, "subquery-eager-loading"]], "The Importance of Ordering": [[128, "the-importance-of-ordering"]], "Select IN loading": [[128, "select-in-loading"]], "What Kind of Loading to Use ?": [[128, "what-kind-of-loading-to-use"]], "Polymorphic Eager Loading": [[128, "polymorphic-eager-loading"]], "Wildcard Loading Strategies": [[128, "wildcard-loading-strategies"]], "Per-Entity Wildcard Loading Strategies": [[128, "per-entity-wildcard-loading-strategies"]], "Routing Explicit Joins/Statements into Eagerly Loaded Collections": [[128, "routing-explicit-joins-statements-into-eagerly-loaded-collections"]], "Using contains_eager() to load a custom-filtered collection result": [[128, "using-contains-eager-to-load-a-custom-filtered-collection-result"]], "Creating Custom Load Rules": [[128, "creating-custom-load-rules"]], "Relationship Loader API": [[128, "relationship-loader-api"]], "Querying Data, Loading Objects": [[127, "querying-data-loading-objects"]], "Additional Persistence Techniques": [[136, "additional-persistence-techniques"]], "Embedding SQL Insert/Update Expressions into a Flush": [[136, "embedding-sql-insert-update-expressions-into-a-flush"]], "Using SQL Expressions with Sessions": [[136, "using-sql-expressions-with-sessions"]], "Forcing NULL on a column with a default": [[136, "forcing-null-on-a-column-with-a-default"]], "Evaluating None": [[136, null]], "Fetching Server-Generated Defaults": [[136, "fetching-server-generated-defaults"]], "Case 1: non primary key, RETURNING or equivalent is supported": [[136, "case-1-non-primary-key-returning-or-equivalent-is-supported"]], "Case 2: non primary key, RETURNING or equivalent is not supported or not needed": [[136, "case-2-non-primary-key-returning-or-equivalent-is-not-supported-or-not-needed"]], "Case 3: primary key, RETURNING or equivalent is supported": [[136, "case-3-primary-key-returning-or-equivalent-is-supported"]], "Case 4: primary key, RETURNING or equivalent is not supported": [[136, "case-4-primary-key-returning-or-equivalent-is-not-supported"]], "MySQL with DateTime primary key": [[136, "mysql-with-datetime-primary-key"]], "MySQL with TIMESTAMP primary key": [[136, "mysql-with-timestamp-primary-key"]], "SQLite with DateTime primary key": [[136, "sqlite-with-datetime-primary-key"]], "Notes on eagerly fetching client invoked SQL expressions used for INSERT or UPDATE": [[136, "notes-on-eagerly-fetching-client-invoked-sql-expressions-used-for-insert-or-update"]], "Using INSERT, UPDATE and ON CONFLICT (i.e. upsert) to return ORM Objects": [[136, "using-insert-update-and-on-conflict-i-e-upsert-to-return-orm-objects"]], "Using PostgreSQL ON CONFLICT with RETURNING to return upserted ORM objects": [[136, "using-postgresql-on-conflict-with-returning-to-return-upserted-orm-objects"]], "Partitioning Strategies (e.g. multiple database backends per Session)": [[136, "partitioning-strategies-e-g-multiple-database-backends-per-session"]], "Simple Vertical Partitioning": [[136, "simple-vertical-partitioning"]], "Coordination of Transactions for a multiple-engine Session": [[136, "coordination-of-transactions-for-a-multiple-engine-session"]], "Custom Vertical Partitioning": [[136, "custom-vertical-partitioning"]], "Horizontal Partitioning": [[136, "horizontal-partitioning"]], "Bulk Operations": [[136, "bulk-operations"]], "Usage": [[136, "usage"], [118, "usage"]], "Comparison to Core Insert / Update Constructs": [[136, "comparison-to-core-insert-update-constructs"]], "ORM Compatibility / Caveats": [[136, "orm-compatibility-caveats"]], "Loading Columns": [[126, "loading-columns"]], "Deferred Column Loading": [[126, "deferred-column-loading"]], "Deferred Column Loader Query Options": [[126, "deferred-column-loader-query-options"]], "Deferred Loading across Multiple Entities": [[126, "deferred-loading-across-multiple-entities"]], "Load Only and Wildcard Options": [[126, "load-only-and-wildcard-options"]], "Wildcard and Exclusionary Options with Multiple-Entity Queries": [[126, "wildcard-and-exclusionary-options-with-multiple-entity-queries"]], "Raiseload for Deferred Columns": [[126, "raiseload-for-deferred-columns"]], "Column Deferral API": [[126, "column-deferral-api"]], "Column Bundles": [[126, "column-bundles"]], "Mapping Table Columns": [[133, "mapping-table-columns"]], "Naming Columns Distinctly from Attribute Names": [[133, "naming-columns-distinctly-from-attribute-names"]], "Automating Column Naming Schemes from Reflected Tables": [[133, "automating-column-naming-schemes-from-reflected-tables"]], "Using column_property for column level options": [[133, "using-column-property-for-column-level-options"]], "Mapping to an Explicit Set of Primary Key Columns": [[133, "mapping-to-an-explicit-set-of-primary-key-columns"]], "Mapping a Subset of Table Columns": [[133, "mapping-a-subset-of-table-columns"]], "ORM Quick Start": [[139, "orm-quick-start"]], "Declare Models": [[139, "declare-models"]], "Create an Engine": [[139, "create-an-engine"]], "Emit CREATE TABLE DDL": [[139, "emit-create-table-ddl"]], "Create Objects and Persist": [[139, "create-objects-and-persist"]], "Simple SELECT": [[139, "simple-select"]], "SELECT with JOIN": [[139, "select-with-join"]], "Make Changes": [[139, "make-changes"]], "Some Deletes": [[139, "some-deletes"]], "Learn the above concepts in depth": [[139, "learn-the-above-concepts-in-depth"]], "ORM Mapped Class Configuration": [[131, "orm-mapped-class-configuration"]], "Class Mapping API": [[132, "class-mapping-api"]], "ORM Mapped Class Overview": [[134, "orm-mapped-class-overview"]], "ORM Mapping Styles": [[134, "orm-mapping-styles"]], "Declarative Mapping": [[134, "declarative-mapping"]], "Imperative Mapping": [[134, "imperative-mapping"]], "Mapped Class Essential Components": [[134, "mapped-class-essential-components"]], "The class to be mapped": [[134, "the-class-to-be-mapped"]], "The table, or other from clause object": [[134, "the-table-or-other-from-clause-object"]], "The properties dictionary": [[134, "the-properties-dictionary"]], "Other mapper configuration parameters": [[134, "other-mapper-configuration-parameters"]], "Mapped Class Behavior": [[134, "mapped-class-behavior"]], "Default Constructor": [[134, "default-constructor"]], "Runtime Introspection of Mapped classes, Instances and Mappers": [[134, "runtime-introspection-of-mapped-classes-instances-and-mappers"]], "Inspection of Mapper objects": [[134, "inspection-of-mapper-objects"]], "Inspection of Mapped Instances": [[134, "inspection-of-mapped-instances"]], "Changing Attribute Behavior": [[129, "changing-attribute-behavior"]], "Simple Validators": [[129, "simple-validators"]], "Using Custom Datatypes at the Core Level": [[129, "using-custom-datatypes-at-the-core-level"]], "Using Descriptors and Hybrids": [[129, "using-descriptors-and-hybrids"]], "Synonyms": [[129, "synonyms"]], "Operator Customization": [[129, "operator-customization"], [50, "operator-customization"], [57, "operator-customization"]], "SQL Expressions as Mapped Attributes": [[130, "sql-expressions-as-mapped-attributes"]], "Using a Hybrid": [[130, "using-a-hybrid"]], "Using column_property": [[130, "using-column-property"]], "Composing from Column Properties at Mapping Time": [[130, "composing-from-column-properties-at-mapping-time"]], "Using a plain descriptor": [[130, "using-a-plain-descriptor"]], "Query-time SQL expressions as mapped attributes": [[130, "query-time-sql-expressions-as-mapped-attributes"]], "Non-Traditional Mappings": [[135, "non-traditional-mappings"]], "Mapping a Class against Multiple Tables": [[135, "mapping-a-class-against-multiple-tables"]], "Mapping a Class against Arbitrary Subqueries": [[135, "mapping-a-class-against-arbitrary-subqueries"]], "Multiple Mappers for One Class": [[135, "multiple-mappers-for-one-class"]], "Query API": [[137, "query-api"]], "The Query Object": [[137, "the-query-object"]], "ORM-Specific Query Constructs": [[137, "orm-specific-query-constructs"]], "Defining Constraints and Indexes": [[32, "defining-constraints-and-indexes"]], "Defining Foreign Keys": [[32, "defining-foreign-keys"]], "Creating/Dropping Foreign Key Constraints via ALTER": [[32, "creating-dropping-foreign-key-constraints-via-alter"]], "ON UPDATE and ON DELETE": [[32, "on-update-and-on-delete"]], "UNIQUE Constraint": [[32, "unique-constraint"]], "CHECK Constraint": [[32, "check-constraint"]], "PRIMARY KEY Constraint": [[32, "primary-key-constraint"]], "Setting up Constraints when using the Declarative ORM Extension": [[32, "setting-up-constraints-when-using-the-declarative-orm-extension"]], "Configuring Constraint Naming Conventions": [[32, "configuring-constraint-naming-conventions"]], "Configuring a Naming Convention for a MetaData Collection": [[32, "configuring-a-naming-convention-for-a-metadata-collection"]], "The Default Naming Convention": [[32, "the-default-naming-convention"]], "Truncation of Long Names": [[32, "truncation-of-long-names"]], "Creating Custom Tokens for Naming Conventions": [[32, "creating-custom-tokens-for-naming-conventions"]], "Naming CHECK Constraints": [[32, "naming-check-constraints"]], "Configuring Naming for Boolean, Enum, and other schema types": [[32, "configuring-naming-for-boolean-enum-and-other-schema-types"]], "Constraints API": [[32, "constraints-api"]], "Indexes": [[32, "indexes"]], "Functional Indexes": [[32, "functional-indexes"]], "Index API": [[32, "index-api"]], "Engine Configuration": [[37, "engine-configuration"]], "Supported Databases": [[37, "supported-databases"]], "Database URLs": [[37, "database-urls"]], "Escaping Special Characters such as @ signs in Passwords": [[37, "escaping-special-characters-such-as-signs-in-passwords"]], "Creating URLs Programmatically": [[37, "creating-urls-programmatically"]], "Backend-Specific URLs": [[37, "backend-specific-urls"]], "Oracle": [[37, "oracle"], [66, "module-sqlalchemy.dialects.oracle.base"]], "Microsoft SQL Server": [[37, "microsoft-sql-server"], [64, "module-sqlalchemy.dialects.mssql.base"]], "SQLite": [[37, "sqlite"], [68, "module-sqlalchemy.dialects.sqlite.base"]], "Others": [[37, "others"]], "Engine Creation API": [[37, "engine-creation-api"]], "Pooling": [[37, "pooling"]], "Custom DBAPI connect() arguments / on-connect routines": [[37, "custom-dbapi-connect-arguments-on-connect-routines"]], "Special Keyword Arguments Passed to dbapi.connect()": [[37, "special-keyword-arguments-passed-to-dbapi-connect"]], "Add Parameters to the URL Query string": [[37, "add-parameters-to-the-url-query-string"]], "Use the connect_args dictionary parameter": [[37, "use-the-connect-args-dictionary-parameter"]], "Controlling how parameters are passed to the DBAPI connect() function": [[37, "controlling-how-parameters-are-passed-to-the-dbapi-connect-function"]], "Generating dynamic authentication tokens": [[37, "generating-dynamic-authentication-tokens"]], "Modifying the DBAPI connection after connect, or running commands after connect": [[37, "modifying-the-dbapi-connection-after-connect-or-running-commands-after-connect"]], "Fully Replacing the DBAPI connect() function": [[37, "fully-replacing-the-dbapi-connect-function"]], "Configuring Logging": [[37, "configuring-logging"]], "More on the Echo Flag": [[37, "more-on-the-echo-flag"]], "Setting the Logging Name": [[37, "setting-the-logging-name"]], "Setting Per-Connection / Sub-Engine Tokens": [[37, "setting-per-connection-sub-engine-tokens"]], "Hiding Parameters": [[37, "hiding-parameters"]], "Engine and Connection Use": [[38, "engine-and-connection-use"]], "Custom Types": [[33, "custom-types"]], "Overriding Type Compilation": [[33, "overriding-type-compilation"]], "Augmenting Existing Types": [[33, "augmenting-existing-types"]], "ORM Tip": [[33, null]], "TypeDecorator Recipes": [[33, "typedecorator-recipes"]], "Coercing Encoded Strings to Unicode": [[33, "coercing-encoded-strings-to-unicode"]], "Rounding Numerics": [[33, "rounding-numerics"]], "Store Timezone Aware Timestamps as Timezone Naive UTC": [[33, "store-timezone-aware-timestamps-as-timezone-naive-utc"]], "Backend-agnostic GUID Type": [[33, "backend-agnostic-guid-type"]], "Marshal JSON Strings": [[33, "marshal-json-strings"]], "Adding Mutability": [[33, "adding-mutability"]], "Dealing with Comparison Operations": [[33, "dealing-with-comparison-operations"]], "Applying SQL-level Bind/Result Processing": [[33, "applying-sql-level-bind-result-processing"]], "Redefining and Creating New Operators": [[33, "redefining-and-creating-new-operators"]], "Creating New Types": [[33, "creating-new-types"]], "Working with Custom Types and Reflection": [[33, "working-with-custom-types-and-reflection"]], "Core Exceptions": [[41, "module-sqlalchemy.exc"]], "Column INSERT/UPDATE Defaults": [[35, "column-insert-update-defaults"]], "Scalar Defaults": [[35, "scalar-defaults"]], "Python-Executed Functions": [[35, "python-executed-functions"]], "Context-Sensitive Default Functions": [[35, "context-sensitive-default-functions"]], "Client-Invoked SQL Expressions": [[35, "client-invoked-sql-expressions"]], "Server-invoked DDL-Explicit Default Expressions": [[35, "server-invoked-ddl-explicit-default-expressions"]], "Marking Implicitly Generated Values, timestamps, and Triggered Columns": [[35, "marking-implicitly-generated-values-timestamps-and-triggered-columns"]], "Defining Sequences": [[35, "defining-sequences"]], "Associating a Sequence on a SERIAL column": [[35, "associating-a-sequence-on-a-serial-column"]], "Executing a Sequence Standalone": [[35, "executing-a-sequence-standalone"]], "Associating a Sequence with the MetaData": [[35, "associating-a-sequence-with-the-metadata"]], "Associating a Sequence as the Server Side Default": [[35, "associating-a-sequence-as-the-server-side-default"]], "Computed Columns (GENERATED ALWAYS AS)": [[35, "computed-columns-generated-always-as"]], "Identity Columns (GENERATED { ALWAYS | BY DEFAULT } AS IDENTITY)": [[35, "identity-ddl"]], "Default Objects API": [[35, "default-objects-api"]], "Custom SQL Constructs and Compilation Extension": [[30, "module-sqlalchemy.ext.compiler"]], "Dialect-specific compilation rules": [[30, "dialect-specific-compilation-rules"]], "Compiling sub-elements of a custom expression construct": [[30, "compiling-sub-elements-of-a-custom-expression-construct"]], "Cross Compiling between SQL and DDL compilers": [[30, "cross-compiling-between-sql-and-ddl-compilers"]], "Enabling Autocommit on a Construct": [[30, "enabling-autocommit-on-a-construct"]], "Changing the default compilation of existing constructs": [[30, "changing-the-default-compilation-of-existing-constructs"]], "Changing Compilation of Types": [[30, "changing-compilation-of-types"]], "Subclassing Guidelines": [[30, "subclassing-guidelines"]], "Enabling Caching Support for Custom Constructs": [[30, "enabling-caching-support-for-custom-constructs"]], "Further Examples": [[30, "further-examples"]], "\u201cUTC timestamp\u201d function": [[30, "utc-timestamp-function"]], "\u201cGREATEST\u201d function": [[30, "greatest-function"]], "\u201cfalse\u201d expression": [[30, "false-expression"]], "Core API Basics": [[29, "core-api-basics"]], "Insert, Updates, Deletes": [[36, "insert-updates-deletes"]], "DML Foundational Constructors": [[36, "dml-foundational-constructors"]], "DML Class Documentation Constructors": [[36, "dml-class-documentation-constructors"]], "Customizing DDL": [[34, "customizing-ddl"]], "Custom DDL": [[34, "custom-ddl"]], "Controlling DDL Sequences": [[34, "controlling-ddl-sequences"]], "Using the built-in DDLElement Classes": [[34, "using-the-built-in-ddlelement-classes"]], "DDL Expression Constructs API": [[34, "ddl-expression-constructs-api"]], "Working with Engines and Connections": [[31, "module-sqlalchemy.engine"]], "Basic Usage": [[31, "basic-usage"]], "tip": [[31, null]], "Using Transactions": [[31, "using-transactions"]], "Nesting of Transaction Blocks": [[31, "nesting-of-transaction-blocks"]], "Arbitrary Transaction Nesting as an Antipattern": [[31, "arbitrary-transaction-nesting-as-an-antipattern"]], "Migrating from the \u201cnesting\u201d pattern": [[31, "migrating-from-the-nesting-pattern"]], "Library Level (e.g. emulated) Autocommit": [[31, "library-level-e-g-emulated-autocommit"]], "Setting Transaction Isolation Levels including DBAPI Autocommit": [[31, "setting-transaction-isolation-levels-including-dbapi-autocommit"]], "Understanding the DBAPI-Level Autocommit Isolation Level": [[31, "understanding-the-dbapi-level-autocommit-isolation-level"]], "Using Server Side Cursors (a.k.a. stream results)": [[31, "using-server-side-cursors-a-k-a-stream-results"]], "What we really mean is \u201cbuffered\u201d vs. \u201cunbuffered\u201d results": [[31, null]], "Streaming with a fixed buffer via yield_per": [[31, "streaming-with-a-fixed-buffer-via-yield-per"]], "Streaming with a dynamically growing buffer using stream_results": [[31, "streaming-with-a-dynamically-growing-buffer-using-stream-results"]], "Connectionless Execution, Implicit Execution": [[31, "connectionless-execution-implicit-execution"]], "Translation of Schema Names": [[31, "translation-of-schema-names"]], "SQL Compilation Caching": [[31, "sql-compilation-caching"]], "Configuration": [[31, "configuration"]], "Estimating Cache Performance Using Logging": [[31, "estimating-cache-performance-using-logging"]], "How much memory does the cache use?": [[31, "how-much-memory-does-the-cache-use"]], "Disabling or using an alternate dictionary to cache some (or all) statements": [[31, "disabling-or-using-an-alternate-dictionary-to-cache-some-or-all-statements"]], "Caching for Third Party Dialects": [[31, "caching-for-third-party-dialects"]], "Example: Rendering LIMIT / OFFSET with post compile parameters": [[31, "example-rendering-limit-offset-with-post-compile-parameters"]], "Using Lambdas to add significant speed gains to statement production": [[31, "using-lambdas-to-add-significant-speed-gains-to-statement-production"]], "Quick Guidelines for Lambdas": [[31, "quick-guidelines-for-lambdas"]], "Cache Key Generation": [[31, "cache-key-generation"]], "Engine Disposal": [[31, "engine-disposal"]], "Working with Driver SQL and Raw DBAPI Connections": [[31, "working-with-driver-sql-and-raw-dbapi-connections"]], "Invoking SQL strings directly to the driver": [[31, "invoking-sql-strings-directly-to-the-driver"]], "Working with the DBAPI cursor directly": [[31, "working-with-the-dbapi-cursor-directly"]], "Calling Stored Procedures and User Defined Functions": [[31, "calling-stored-procedures-and-user-defined-functions"]], "Multiple Result Sets": [[31, "multiple-result-sets"]], "Registering New Dialects": [[31, "registering-new-dialects"]], "Registering Dialects In-Process": [[31, "registering-dialects-in-process"]], "Connection / Engine API": [[31, "connection-engine-api"]], "Result Set API": [[31, "result-set-api"]], "Appendix:  Copyright": [[28, "appendix-copyright"]], "Events": [[39, "events"]], "Event Registration": [[39, "event-registration"]], "Named Argument Styles": [[39, "named-argument-styles"]], "Targets": [[39, "targets"]], "Modifiers": [[39, "modifiers"]], "Event Reference": [[39, "event-reference"]], "Core Events": [[40, "core-events"]], "SQL Execution and Connection Events": [[40, "sql-execution-and-connection-events"]], "Schema Events": [[40, "schema-events"]], "Mapping Class Inheritance Hierarchies": [[121, "mapping-class-inheritance-hierarchies"]], "Joined Table Inheritance": [[121, "joined-table-inheritance"]], "Joined inheritance primary keys": [[121, null]], "Relationships with Joined Inheritance": [[121, "relationships-with-joined-inheritance"]], "Loading Joined Inheritance Mappings": [[121, "loading-joined-inheritance-mappings"]], "Single Table Inheritance": [[121, "single-table-inheritance"]], "Resolving Column Conflicts": [[121, "resolving-column-conflicts"]], "Relationships with Single Table Inheritance": [[121, "relationships-with-single-table-inheritance"]], "Loading Single Inheritance Mappings": [[121, "loading-single-inheritance-mappings"]], "Concrete Table Inheritance": [[121, "concrete-table-inheritance"]], "Concrete Polymorphic Loading Configuration": [[121, "concrete-polymorphic-loading-configuration"]], "Abstract Concrete Classes": [[121, "abstract-concrete-classes"]], "Classical and Semi-Classical Concrete Polymorphic Configuration": [[121, "classical-and-semi-classical-concrete-polymorphic-configuration"]], "Relationships with Concrete Inheritance": [[121, "relationships-with-concrete-inheritance"]], "Loading Concrete Inheritance Mappings": [[121, "loading-concrete-inheritance-mappings"]], "Loading Inheritance Hierarchies": [[122, "loading-inheritance-hierarchies"]], "Using with_polymorphic": [[122, "using-with-polymorphic"]], "Using aliasing with with_polymorphic": [[122, "using-aliasing-with-with-polymorphic"]], "Referring to Specific Subclass Attributes": [[122, "referring-to-specific-subclass-attributes"]], "Setting with_polymorphic at mapper configuration time": [[122, "setting-with-polymorphic-at-mapper-configuration-time"]], "Setting with_polymorphic against a query": [[122, "setting-with-polymorphic-against-a-query"]], "Polymorphic Selectin Loading": [[122, "polymorphic-selectin-loading"]], "Combining selectin and with_polymorphic": [[122, "combining-selectin-and-with-polymorphic"]], "Referring to specific subtypes on relationships": [[122, "referring-to-specific-subtypes-on-relationships"]], "Eager Loading of Specific or Polymorphic Subtypes": [[122, "eager-loading-of-specific-or-polymorphic-subtypes"]], "Loading objects with joined table inheritance": [[122, "loading-objects-with-joined-table-inheritance"]], "Loading objects with single table inheritance": [[122, "loading-objects-with-single-table-inheritance"]], "Inheritance Loading API": [[122, "inheritance-loading-api"]], "Hybrid Attributes": [[113, "module-sqlalchemy.ext.hybrid"]], "Defining Expression Behavior Distinct from Attribute Behavior": [[113, "defining-expression-behavior-distinct-from-attribute-behavior"]], "Defining Setters": [[113, "defining-setters"]], "Allowing Bulk ORM Update": [[113, "allowing-bulk-orm-update"]], "Working with Relationships": [[113, "working-with-relationships"]], "Join-Dependent Relationship Hybrid": [[113, "join-dependent-relationship-hybrid"]], "Correlated Subquery Relationship Hybrid": [[113, "correlated-subquery-relationship-hybrid"]], "Building Custom Comparators": [[113, "building-custom-comparators"]], "Reusing Hybrid Properties across Subclasses": [[113, "reusing-hybrid-properties-across-subclasses"]], "Hybrid Value Objects": [[113, "hybrid-value-objects"]], "Building Transformers": [[113, "building-transformers"]], "Mypy  / Pep-484 Support for ORM Mappings": [[118, "mypy-pep-484-support-for-orm-mappings"]], "SQLAlchemy Mypy Plugin Status Update": [[118, null]], "What the Plugin Does": [[118, "what-the-plugin-does"]], "Introspection of Columns based on TypeEngine": [[118, "introspection-of-columns-based-on-typeengine"]], "Columns that Don\u2019t have an Explicit Type": [[118, "columns-that-don-t-have-an-explicit-type"]], "Mapping Columns with Imperative Table": [[118, "mapping-columns-with-imperative-table"]], "Mapping Relationships": [[118, "mapping-relationships"]], "Using @declared_attr and Declarative Mixins": [[118, "using-declared-attr-and-declarative-mixins"]], "Combining with Dataclasses or Other Type-Sensitive Attribute Systems": [[118, "combining-with-dataclasses-or-other-type-sensitive-attribute-systems"]], "Configuring how Relationship Joins": [[124, "configuring-how-relationship-joins"]], "Handling Multiple Join Paths": [[124, "handling-multiple-join-paths"]], "Specifying Alternate Join Conditions": [[124, "specifying-alternate-join-conditions"]], "Creating Custom Foreign Conditions": [[124, "creating-custom-foreign-conditions"]], "Using custom operators in join conditions": [[124, "using-custom-operators-in-join-conditions"]], "Custom operators based on SQL functions": [[124, "custom-operators-based-on-sql-functions"]], "Overlapping Foreign Keys": [[124, "overlapping-foreign-keys"]], "Non-relational Comparisons / Materialized Path": [[124, "non-relational-comparisons-materialized-path"]], "Self-Referential Many-to-Many Relationship": [[124, "self-referential-many-to-many-relationship"]], "Composite \u201cSecondary\u201d Joins": [[124, "composite-secondary-joins"]], "Relationship to Aliased Class": [[124, "relationship-to-aliased-class"]], "Using the AliasedClass target in Queries": [[124, "using-the-aliasedclass-target-in-queries"]], "Row-Limited Relationships with Window Functions": [[124, "row-limited-relationships-with-window-functions"]], "Building Query-Enabled Properties": [[124, "building-query-enabled-properties"]], "SQLAlchemy ORM": [[120, "sqlalchemy-orm"]], "Mutation Tracking": [[117, "module-sqlalchemy.ext.mutable"]], "Establishing Mutability on Scalar Column Values": [[117, "establishing-mutability-on-scalar-column-values"]], "Supporting Pickling": [[117, "supporting-pickling"], [117, "id1"]], "Receiving Events": [[117, "receiving-events"]], "Establishing Mutability on Composites": [[117, "establishing-mutability-on-composites"]], "Coercing Mutable Composites": [[117, "coercing-mutable-composites"]], "ORM Extensions": [[114, "orm-extensions"]], "Indexable": [[115, "module-sqlalchemy.ext.indexable"]], "Default Values": [[115, "default-values"]], "Subclassing": [[115, "subclassing"]], "ORM Internals": [[123, "orm-internals"]], "Ordering List": [[119, "module-sqlalchemy.ext.orderinglist"]], "Alternate Class Instrumentation": [[116, "module-sqlalchemy.ext.instrumentation"]], "SQLAlchemy 2.0 Future (Core)": [[45, "sqlalchemy-2-0-future-core"]], "Selectables, Tables, FROM objects": [[54, "selectables-tables-from-objects"]], "Selectable Foundational Constructors": [[54, "selectable-foundational-constructors"]], "Selectable Modifier Constructors": [[54, "selectable-modifier-constructors"]], "Selectable Class Documentation": [[54, "selectable-class-documentation"]], "Label Style Constants": [[54, "label-style-constants"]], "Reflecting Database Objects": [[52, "reflecting-database-objects"]], "Overriding Reflected Columns": [[52, "overriding-reflected-columns"]], "Reflecting Views": [[52, "reflecting-views"]], "Reflecting All Tables at Once": [[52, "reflecting-all-tables-at-once"]], "Reflecting Tables from Other Schemas": [[52, "reflecting-tables-from-other-schemas"]], "Interaction of Schema-qualified Reflection with the Default Schema": [[52, "interaction-of-schema-qualified-reflection-with-the-default-schema"]], "Section Best Practices Summarized": [[52, null], [67, null]], "Fine Grained Reflection with Inspector": [[52, "fine-grained-reflection-with-inspector"]], "Reflecting with Database-Agnostic Types": [[52, "reflecting-with-database-agnostic-types"]], "Limitations of Reflection": [[52, "limitations-of-reflection"]], "Schema Definition Language": [[53, "schema-definition-language"]], "SQL Statements and Expressions API": [[42, "module-sqlalchemy.sql.expression"]], "Connection Pooling": [[51, "module-sqlalchemy.pool"]], "Connection Pool Configuration": [[51, "connection-pool-configuration"]], "Switching Pool Implementations": [[51, "switching-pool-implementations"]], "Using a Custom Connection Function": [[51, "using-a-custom-connection-function"]], "Constructing a Pool": [[51, "constructing-a-pool"]], "Reset On Return": [[51, "reset-on-return"]], "Disabling Reset on Return for non-transactional connections": [[51, "disabling-reset-on-return-for-non-transactional-connections"]], "Custom Reset-on-Return Schemes": [[51, "custom-reset-on-return-schemes"]], "Logging reset-on-return events": [[51, "logging-reset-on-return-events"]], "Pool Events": [[51, "pool-events"]], "Dealing with Disconnects": [[51, "dealing-with-disconnects"]], "Disconnect Handling - Pessimistic": [[51, "disconnect-handling-pessimistic"]], "Custom / Legacy Pessimistic Ping": [[51, "custom-legacy-pessimistic-ping"]], "Disconnect Handling - Optimistic": [[51, "disconnect-handling-optimistic"]], "Setting Pool Recycle": [[51, "setting-pool-recycle"]], "More on Invalidation": [[51, "more-on-invalidation"]], "Using FIFO vs. LIFO": [[51, "using-fifo-vs-lifo"]], "Using Connection Pools with Multiprocessing or os.fork()": [[51, "using-connection-pools-with-multiprocessing-or-os-fork"]], "API Documentation - Available Pool Implementations": [[51, "api-documentation-available-pool-implementations"]], "SQLAlchemy Core": [[46, "sqlalchemy-core"]], "Core Internals": [[48, "core-internals"]], "Describing Databases with MetaData": [[49, "module-sqlalchemy.schema"]], "Accessing Tables and Columns": [[49, "accessing-tables-and-columns"]], "Creating and Dropping Database Tables": [[49, "creating-and-dropping-database-tables"]], "Altering Database Objects through Migrations": [[49, "altering-database-objects-through-migrations"]], "Specifying the Schema Name": [[49, "specifying-the-schema-name"]], "What\u2019s \u201cschema\u201d ?": [[49, null]], "Specifying a Default Schema Name with MetaData": [[49, "specifying-a-default-schema-name-with-metadata"]], "Applying Dynamic Schema Naming Conventions": [[49, "applying-dynamic-schema-naming-conventions"]], "Setting a Default Schema for New Connections": [[49, "setting-a-default-schema-for-new-connections"]], "Schemas and Reflection": [[49, "schemas-and-reflection"]], "Backend-Specific Options": [[49, "backend-specific-options"]], "Column, Table, MetaData API": [[49, "column-table-metadata-api"]], "SQL and Generic Functions": [[44, "sql-and-generic-functions"]], "Function API": [[44, "function-api"]], "Selected \u201cKnown\u201d Functions": [[44, "selected-known-functions"]], "Operator Reference": [[50, "operator-reference"]], "Comparison Operators": [[50, "comparison-operators"]], "IN Comparisons": [[50, "in-comparisons"]], "IN against a list of values": [[50, "in-against-a-list-of-values"]], "Empty IN Expressions": [[50, "empty-in-expressions"]], "NOT IN": [[50, "not-in"]], "Tuple IN Expressions": [[50, "tuple-in-expressions"]], "Subquery IN": [[50, "subquery-in"]], "Identity Comparisons": [[50, "identity-comparisons"]], "String Comparisons": [[50, "string-comparisons"]], "String Containment": [[50, "string-containment"]], "String matching": [[50, "string-matching"]], "String Alteration": [[50, "string-alteration"]], "Arithmetic Operators": [[50, "arithmetic-operators"]], "Using Conjunctions and Negations": [[50, "using-conjunctions-and-negations"]], "Conjunction Operators": [[50, "conjunction-operators"]], "Runtime Inspection API": [[47, "module-sqlalchemy.inspection"]], "Available Inspection Targets": [[47, "available-inspection-targets"]], "Expression Serializer Extension": [[55, "module-sqlalchemy.ext.serializer"]], "SQL Expression Language Foundational Constructs": [[43, "sql-expression-language-foundational-constructs"]], "SQL Expression Language Tutorial (1.x API)": [[57, "sql-expression-language-tutorial-1-x-api"]], "Define and Create Tables": [[57, "define-and-create-tables"]], "Insert Expressions": [[57, "insert-expressions"]], "Executing": [[57, "executing"]], "Executing Multiple Statements": [[57, "executing-multiple-statements"]], "Selecting": [[57, "selecting"]], "Results and Rows are changing": [[57, null]], "Selecting Specific Columns": [[57, "selecting-specific-columns"]], "Operators": [[57, "operators"]], "Commonly Used Operators": [[57, "commonly-used-operators"]], "Conjunctions": [[57, "conjunctions"]], "Specifying Bound Parameter Behaviors": [[57, "specifying-bound-parameter-behaviors"]], "Specifying Result-Column Behaviors": [[57, "specifying-result-column-behaviors"]], "Using text() fragments inside bigger statements": [[57, "using-text-fragments-inside-bigger-statements"]], "Using More Specific Text with table(), literal_column(), and column()": [[57, "using-more-specific-text-with-table-expression-literal-column-and-expression-column"]], "Using Aliases and Subqueries": [[57, "using-aliases-and-subqueries"]], "Using Joins": [[57, "using-joins"]], "Common Table Expressions (CTE)": [[57, "common-table-expressions-cte"]], "Everything Else": [[57, "everything-else"]], "Bind Parameter Objects": [[57, "bind-parameter-objects"]], "Functions": [[57, "functions"]], "Window Functions": [[57, "window-functions"]], "Unions and Other Set Operations": [[57, "unions-and-other-set-operations"]], "Ordering Unions": [[57, "ordering-unions"]], "Scalar Selects": [[57, "scalar-selects"]], "Correlated Subqueries": [[57, "correlated-subqueries"]], "Ordering, Grouping, Limiting, Offset\u2026ing\u2026": [[57, "ordering-grouping-limiting-offset-ing"]], "Inserts, Updates and Deletes": [[57, "inserts-updates-and-deletes"]], "Multiple Table Updates": [[57, "multiple-table-updates"]], "Parameter-Ordered Updates": [[57, "parameter-ordered-updates"]], "Deletes": [[57, "deletes"]], "Matched Row Counts": [[57, "matched-row-counts"]], "Visitor and Traversal Utilities": [[61, "visitor-and-traversal-utilities"]], "Base Type API": [[58, "base-type-api"]], "Supported Microsoft SQL Server versions": [[64, "id3"]], "DBAPI Support": [[64, "dialect-mssql"], [67, "dialect-postgresql"], [65, "dialect-mysql"], [68, "dialect-sqlite"], [66, "dialect-oracle"], [69, "dialect-sybase"], [62, "dialect-firebird"]], "External Dialects": [[64, "external-dialects"], [63, "external-dialects"]], "Auto Increment Behavior / IDENTITY Columns": [[64, "auto-increment-behavior-identity-columns"]], "Controlling \u201cStart\u201d and \u201cIncrement\u201d": [[64, "controlling-start-and-increment"]], "Using IDENTITY with Non-Integer numeric types": [[64, "using-identity-with-non-integer-numeric-types"]], "INSERT behavior": [[64, "insert-behavior"]], "SEQUENCE support": [[64, "sequence-support"]], "MAX on VARCHAR / NVARCHAR": [[64, "max-on-varchar-nvarchar"]], "Collation Support": [[64, "collation-support"]], "LIMIT/OFFSET Support": [[64, "limit-offset-support"]], "Transaction Isolation Level": [[64, "transaction-isolation-level"], [67, "transaction-isolation-level"], [65, "transaction-isolation-level"]], "Temporary Table / Resource Reset for Connection Pooling": [[64, "temporary-table-resource-reset-for-connection-pooling"], [67, "temporary-table-resource-reset-for-connection-pooling"]], "Nullability": [[64, "nullability"]], "Date / Time Handling": [[64, "date-time-handling"]], "Large Text/Binary Type Deprecation": [[64, "large-text-binary-type-deprecation"]], "Multipart Schema Names": [[64, "multipart-schema-names"]], "Legacy Schema Mode": [[64, "legacy-schema-mode"]], "Clustered Index Support": [[64, "clustered-index-support"]], "MSSQL-Specific Index Options": [[64, "mssql-specific-index-options"]], "INCLUDE": [[64, "include"]], "Filtered Indexes": [[64, "filtered-indexes"]], "Index ordering": [[64, "index-ordering"]], "Compatibility Levels": [[64, "compatibility-levels"]], "Triggers": [[64, "triggers"]], "Rowcount Support / ORM Versioning": [[64, "rowcount-support-orm-versioning"]], "Enabling Snapshot Isolation": [[64, "enabling-snapshot-isolation"]], "SQL Server SQL Constructs": [[64, "sql-server-sql-constructs"]], "SQL Server Data Types": [[64, "sql-server-data-types"]], "PyODBC": [[64, "module-sqlalchemy.dialects.mssql.pyodbc"]], "DBAPI": [[64, "dialect-mssql-pyodbc-url"], [64, "dialect-mssql-mxodbc-url"], [67, "dialect-postgresql-psycopg2-url"], [67, "dialect-postgresql-pg8000-url"], [67, "dialect-postgresql-asyncpg-url"], [67, "dialect-postgresql-psycopg2cffi-url"], [67, "dialect-postgresql-pypostgresql-url"], [67, "dialect-postgresql-pygresql-url"], [65, "dialect-mysql-mysqldb-url"], [65, "dialect-mysql-pymysql-url"], [65, "dialect-mysql-mariadbconnector-url"], [65, "dialect-mysql-mysqlconnector-url"], [65, "dialect-mysql-asyncmy-url"], [65, "dialect-mysql-aiomysql-url"], [65, "dialect-mysql-cymysql-url"], [65, "dialect-mysql-oursql-url"], [65, "dialect-mysql-pyodbc-url"], [68, "dialect-sqlite-pysqlite-url"], [68, "dialect-sqlite-aiosqlite-url"], [66, "dialect-oracle-cx_oracle-url"], [69, "dialect-sybase-pysybase-url"], [69, "dialect-sybase-pyodbc-url"], [69, "dialect-sybase-mxodbc-url"], [62, "dialect-firebird-fdb-url"], [62, "dialect-firebird-kinterbasdb-url"]], "Connecting to PyODBC": [[64, "connecting-to-pyodbc"]], "DSN Connections": [[64, "dsn-connections"]], "Hostname Connections": [[64, "hostname-connections"]], "Pass through exact Pyodbc string": [[64, "pass-through-exact-pyodbc-string"]], "Connecting to databases with access tokens": [[64, "connecting-to-databases-with-access-tokens"]], "Avoiding transaction-related exceptions on Azure Synapse Analytics": [[64, "avoiding-transaction-related-exceptions-on-azure-synapse-analytics"]], "Enable autocommit for Azure SQL Data Warehouse (DW) connections": [[64, "enable-autocommit-for-azure-sql-data-warehouse-dw-connections"]], "Avoiding sending large string parameters as TEXT/NTEXT": [[64, "avoiding-sending-large-string-parameters-as-text-ntext"]], "Pyodbc Pooling / connection close behavior": [[64, "pyodbc-pooling-connection-close-behavior"]], "Driver / Unicode Support": [[64, "driver-unicode-support"]], "Rowcount Support": [[64, "rowcount-support"]], "Fast Executemany Mode": [[64, "fast-executemany-mode"]], "Setinputsizes Support": [[64, "setinputsizes-support"]], "mxODBC": [[64, "module-sqlalchemy.dialects.mssql.mxodbc"]], "Execution Modes": [[64, "execution-modes"]], "pymssql": [[64, "module-sqlalchemy.dialects.mssql.pymssql"]], "SQL Datatype Objects": [[60, "sql-datatype-objects"]], "Supported PostgreSQL versions": [[67, "id11"]], "Sequences/SERIAL/IDENTITY": [[67, "sequences-serial-identity"]], "PostgreSQL 10 and above IDENTITY columns": [[67, "postgresql-10-and-above-identity-columns"]], "Server Side Cursors": [[67, "server-side-cursors"], [65, "server-side-cursors"], [65, "id3"]], "Setting READ ONLY / DEFERRABLE": [[67, "setting-read-only-deferrable"]], "Setting Alternate Search Paths on Connect": [[67, "setting-alternate-search-paths-on-connect"]], "Remote-Schema Table Introspection and PostgreSQL search_path": [[67, "remote-schema-table-introspection-and-postgresql-search-path"]], "Best Practices for PostgreSQL Schema reflection": [[67, null]], "INSERT/UPDATE\u2026RETURNING": [[67, "insert-update-returning"]], "INSERT\u2026ON CONFLICT (Upsert)": [[67, "insert-on-conflict-upsert"], [68, "insert-on-conflict-upsert"]], "Specifying the Target": [[67, "specifying-the-target"], [68, "specifying-the-target"]], "The SET Clause": [[67, "the-set-clause"], [68, "the-set-clause"]], "Updating using the Excluded INSERT Values": [[67, "updating-using-the-excluded-insert-values"], [68, "updating-using-the-excluded-insert-values"]], "Additional WHERE Criteria": [[67, "additional-where-criteria"], [68, "additional-where-criteria"]], "Skipping Rows with DO NOTHING": [[67, "skipping-rows-with-do-nothing"], [68, "skipping-rows-with-do-nothing"]], "Full Text Search": [[67, "full-text-search"]], "FROM ONLY \u2026": [[67, "from-only"]], "PostgreSQL-Specific Index Options": [[67, "postgresql-specific-index-options"]], "Covering Indexes": [[67, "covering-indexes"]], "Partial Indexes": [[67, "partial-indexes"], [68, "partial-indexes"]], "Operator Classes": [[67, "operator-classes"]], "Index Types": [[67, "index-types"], [65, "index-types"]], "Index Storage Parameters": [[67, "index-storage-parameters"]], "Indexes with CONCURRENTLY": [[67, "indexes-with-concurrently"]], "PostgreSQL Index Reflection": [[67, "postgresql-index-reflection"]], "Special Reflection Options": [[67, "special-reflection-options"]], "PostgreSQL Table Options": [[67, "postgresql-table-options"]], "PostgreSQL Constraint Options": [[67, "postgresql-constraint-options"]], "Table values, Table and Column valued functions, Row and Tuple objects": [[67, "table-values-table-and-column-valued-functions-row-and-tuple-objects"]], "Column Valued Functions": [[67, "column-valued-functions"]], "Row Types": [[67, "row-types"]], "Table Types passed to Functions": [[67, "table-types-passed-to-functions"]], "ARRAY Types": [[67, "array-types"]], "JSON Types": [[67, "json-types"]], "HSTORE Type": [[67, "hstore-type"]], "ENUM Types": [[67, "enum-types"]], "Using ENUM with ARRAY": [[67, "using-enum-with-array"]], "Using JSON/JSONB with ARRAY": [[67, "using-json-jsonb-with-array"]], "PostgreSQL Data Types and Custom SQL Constructs": [[67, "postgresql-data-types-and-custom-sql-constructs"]], "Range Types": [[67, "range-types"]], "PostgreSQL Constraint Types": [[67, "postgresql-constraint-types"]], "PostgreSQL DML Constructs": [[67, "postgresql-dml-constructs"]], "psycopg2": [[67, "module-sqlalchemy.dialects.postgresql.psycopg2"]], "psycopg2 Connect Arguments": [[67, "psycopg2-connect-arguments"]], "SSL Connections": [[67, "ssl-connections"], [67, "pg8000-ssl"], [65, "ssl-connections"], [65, "pymysql-ssl"]], "Unix Domain Connections": [[67, "unix-domain-connections"]], "Specifying multiple fallback hosts": [[67, "specifying-multiple-fallback-hosts"]], "Empty DSN Connections / Environment Variable Connections": [[67, "empty-dsn-connections-environment-variable-connections"]], "Per-Statement/Connection Execution Options": [[67, "per-statement-connection-execution-options"]], "Psycopg2 Fast Execution Helpers": [[67, "psycopg2-fast-execution-helpers"]], "Unicode with Psycopg2": [[67, "unicode-with-psycopg2"]], "Disabling Native Unicode": [[67, "disabling-native-unicode"]], "Transactions": [[67, "transactions"]], "Psycopg2 Transaction Isolation Level": [[67, "psycopg2-transaction-isolation-level"]], "NOTICE logging": [[67, "notice-logging"]], "HSTORE type": [[67, "psycopg2-hstore"]], "pg8000": [[67, "module-sqlalchemy.dialects.postgresql.pg8000"]], "Unicode": [[67, "unicode"], [65, "unicode"], [65, "mysqldb-unicode"], [65, "id4"], [65, "id9"], [68, "unicode"], [66, "unicode"]], "pg8000 Transaction Isolation Level": [[67, "pg8000-transaction-isolation-level"]], "asyncpg": [[67, "module-sqlalchemy.dialects.postgresql.asyncpg"]], "Prepared Statement Cache": [[67, "prepared-statement-cache"]], "Disabling the PostgreSQL JIT to improve ENUM datatype handling": [[67, "disabling-the-postgresql-jit-to-improve-enum-datatype-handling"]], "psycopg2cffi": [[67, "module-sqlalchemy.dialects.postgresql.psycopg2cffi"]], "py-postgresql": [[67, "module-sqlalchemy.dialects.postgresql.pypostgresql"]], "pygresql": [[67, "module-sqlalchemy.dialects.postgresql.pygresql"]], "MySQL and MariaDB": [[65, "module-sqlalchemy.dialects.mysql.base"]], "Supported MySQL / MariaDB versions": [[65, "id10"]], "Supported Versions and Features": [[65, "supported-versions-and-features"]], "MariaDB Support": [[65, "mariadb-support"]], "MariaDB-Only Mode": [[65, "mariadb-only-mode"]], "Connection Timeouts and Disconnects": [[65, "connection-timeouts-and-disconnects"]], "CREATE TABLE arguments including Storage Engines": [[65, "create-table-arguments-including-storage-engines"]], "Case Sensitivity and Table Reflection": [[65, "case-sensitivity-and-table-reflection"]], "AUTO_INCREMENT Behavior": [[65, "auto-increment-behavior"]], "Charset Selection": [[65, "charset-selection"]], "Dealing with Binary Data Warnings and Unicode": [[65, "dealing-with-binary-data-warnings-and-unicode"]], "ANSI Quoting Style": [[65, "ansi-quoting-style"]], "Changing the sql_mode": [[65, "changing-the-sql-mode"]], "MySQL / MariaDB SQL Extensions": [[65, "mysql-mariadb-sql-extensions"]], "INSERT\u2026ON DUPLICATE KEY UPDATE (Upsert)": [[65, "insert-on-duplicate-key-update-upsert"]], "rowcount Support": [[65, "rowcount-support"]], "MySQL / MariaDB- Specific Index Options": [[65, "mysql-mariadb-specific-index-options"]], "Index Length": [[65, "index-length"]], "Index Prefixes": [[65, "index-prefixes"]], "Index Parsers": [[65, "index-parsers"]], "MySQL / MariaDB Foreign Keys": [[65, "mysql-mariadb-foreign-keys"]], "Foreign Key Arguments to Avoid": [[65, "foreign-key-arguments-to-avoid"]], "Reflection of Foreign Key Constraints": [[65, "reflection-of-foreign-key-constraints"]], "MySQL / MariaDB Unique Constraints and Reflection": [[65, "mysql-mariadb-unique-constraints-and-reflection"]], "TIMESTAMP / DATETIME issues": [[65, "timestamp-datetime-issues"]], "Rendering ON UPDATE CURRENT TIMESTAMP for MySQL / MariaDB\u2019s explicit_defaults_for_timestamp": [[65, "rendering-on-update-current-timestamp-for-mysql-mariadb-s-explicit-defaults-for-timestamp"]], "TIMESTAMP Columns and NULL": [[65, "timestamp-columns-and-null"]], "MySQL SQL Constructs": [[65, "mysql-sql-constructs"]], "MySQL Data Types": [[65, "mysql-data-types"]], "MySQL DML Constructs": [[65, "mysql-dml-constructs"]], "mysqlclient (fork of MySQL-Python)": [[65, "module-sqlalchemy.dialects.mysql.mysqldb"]], "Driver Status": [[65, "driver-status"], [65, "id6"]], "Using MySQLdb with Google Cloud SQL": [[65, "using-mysqldb-with-google-cloud-sql"]], "PyMySQL": [[65, "module-sqlalchemy.dialects.mysql.pymysql"]], "MySQL-Python Compatibility": [[65, "mysql-python-compatibility"]], "MariaDB-Connector": [[65, "module-sqlalchemy.dialects.mysql.mariadbconnector"]], "MySQL-Connector": [[65, "module-sqlalchemy.dialects.mysql.mysqlconnector"]], "asyncmy": [[65, "asyncmy"]], "aiomysql": [[65, "aiomysql"]], "cymysql": [[65, "module-sqlalchemy.dialects.mysql.cymysql"]], "OurSQL": [[65, "module-sqlalchemy.dialects.mysql.oursql"]], "pyodbc": [[65, "module-sqlalchemy.dialects.mysql.pyodbc"], [69, "module-sqlalchemy.dialects.sybase.pyodbc"]], "Supported SQLite versions": [[68, "id10"]], "Date and Time Types": [[68, "date-and-time-types"]], "Ensuring Text affinity": [[68, "ensuring-text-affinity"]], "SQLite Auto Incrementing Behavior": [[68, "sqlite-auto-incrementing-behavior"]], "Using the AUTOINCREMENT Keyword": [[68, "using-the-autoincrement-keyword"]], "Allowing autoincrement behavior SQLAlchemy types other than Integer/INTEGER": [[68, "allowing-autoincrement-behavior-sqlalchemy-types-other-than-integer-integer"]], "Database Locking Behavior / Concurrency": [[68, "database-locking-behavior-concurrency"]], "Transaction Isolation Level / Autocommit": [[68, "transaction-isolation-level-autocommit"], [66, "transaction-isolation-level-autocommit"]], "SAVEPOINT Support": [[68, "savepoint-support"]], "Transactional DDL": [[68, "transactional-ddl"]], "Foreign Key Support": [[68, "foreign-key-support"]], "ON CONFLICT support for constraints": [[68, "on-conflict-support-for-constraints"]], "Type Reflection": [[68, "type-reflection"]], "Dotted Column Names": [[68, "dotted-column-names"]], "SQLite-specific table options": [[68, "sqlite-specific-table-options"]], "SQLite Data Types": [[68, "sqlite-data-types"]], "SQLite DML Constructs": [[68, "sqlite-dml-constructs"]], "Pysqlite": [[68, "pysqlite"]], "Driver": [[68, "driver"], [68, "id8"]], "Connect Strings": [[68, "connect-strings"], [68, "id9"]], "URI Connections": [[68, "uri-connections"]], "Regular Expression Support": [[68, "regular-expression-support"]], "Compatibility with sqlite3 \u201cnative\u201d date and datetime types": [[68, "compatibility-with-sqlite3-native-date-and-datetime-types"]], "Threading/Pooling Behavior": [[68, "threading-pooling-behavior"]], "Using a Memory Database in Multiple Threads": [[68, "using-a-memory-database-in-multiple-threads"]], "Using Temporary Tables with SQLite": [[68, "using-temporary-tables-with-sqlite"]], "Dealing with Mixed String / Binary Columns in Python 3": [[68, "dealing-with-mixed-string-binary-columns-in-python-3"]], "Serializable isolation / Savepoints / Transactional DDL": [[68, "serializable-isolation-savepoints-transactional-ddl"]], "User-Defined Functions": [[68, "user-defined-functions"], [68, "aiosqlite-udfs"]], "Aiosqlite": [[68, "aiosqlite"]], "Pysqlcipher": [[68, "pysqlcipher"]], "Pooling Behavior": [[68, "pooling-behavior"]], "Supported Oracle versions": [[66, "id5"]], "Auto Increment Behavior": [[66, "auto-increment-behavior"]], "Specifying GENERATED AS IDENTITY (Oracle 12 and above)": [[66, "specifying-generated-as-identity-oracle-12-and-above"]], "Using a SEQUENCE (all Oracle versions)": [[66, "using-a-sequence-all-oracle-versions"]], "Identifier Casing": [[66, "identifier-casing"]], "Max Identifier Lengths": [[66, "max-identifier-lengths"]], "LIMIT/OFFSET/FETCH Support": [[66, "limit-offset-fetch-support"]], "Notes on LIMIT / OFFSET emulation (when fetch() method cannot be used)": [[66, "notes-on-limit-offset-emulation-when-fetch-method-cannot-be-used"]], "ON UPDATE CASCADE": [[66, "on-update-cascade"]], "Oracle 8 Compatibility": [[66, "oracle-8-compatibility"]], "Synonym/DBLINK Reflection": [[66, "synonym-dblink-reflection"]], "Constraint Reflection": [[66, "constraint-reflection"]], "Table names with SYSTEM/SYSAUX tablespaces": [[66, "table-names-with-system-sysaux-tablespaces"]], "DateTime Compatibility": [[66, "datetime-compatibility"]], "Oracle Table Options": [[66, "oracle-table-options"]], "Oracle Specific Index Options": [[66, "oracle-specific-index-options"]], "Bitmap Indexes": [[66, "bitmap-indexes"]], "Index compression": [[66, "index-compression"]], "Oracle Data Types": [[66, "oracle-data-types"]], "cx_Oracle": [[66, "cx-oracle"]], "DSN vs. Hostname connections": [[66, "dsn-vs-hostname-connections"]], "Hostname Connections with Easy Connect Syntax": [[66, "hostname-connections-with-easy-connect-syntax"]], "Connections with tnsnames.ora or Oracle Cloud": [[66, "connections-with-tnsnames-ora-or-oracle-cloud"]], "SID Connections": [[66, "sid-connections"]], "Passing cx_Oracle connect arguments": [[66, "passing-cx-oracle-connect-arguments"]], "Options consumed by the SQLAlchemy cx_Oracle dialect outside of the driver": [[66, "options-consumed-by-the-sqlalchemy-cx-oracle-dialect-outside-of-the-driver"]], "Using cx_Oracle SessionPool": [[66, "using-cx-oracle-sessionpool"]], "Using Oracle Database Resident Connection Pooling (DRCP)": [[66, "using-oracle-database-resident-connection-pooling-drcp"]], "Ensuring the Correct Client Encoding": [[66, "ensuring-the-correct-client-encoding"]], "Unicode-specific Column datatypes": [[66, "unicode-specific-column-datatypes"]], "Unicode Coercion of result rows under Python 2": [[66, "unicode-coercion-of-result-rows-under-python-2"]], "Encoding Errors": [[66, "encoding-errors"]], "Fine grained control over cx_Oracle data binding performance with setinputsizes": [[66, "fine-grained-control-over-cx-oracle-data-binding-performance-with-setinputsizes"]], "Example 1 - logging all setinputsizes calls": [[66, "example-1-logging-all-setinputsizes-calls"]], "Example 2 - remove all bindings to CLOB": [[66, "example-2-remove-all-bindings-to-clob"]], "LOB Objects": [[66, "lob-objects"]], "Two Phase Transactions Not Supported": [[66, "two-phase-transactions-not-supported"]], "Precision Numerics": [[66, "precision-numerics"]], "The Type Hierarchy": [[59, "module-sqlalchemy.types"]], "The \u201cCamelCase\u201d datatypes": [[59, "the-camelcase-datatypes"]], "The \u201cUPPERCASE\u201d datatypes": [[59, "the-uppercase-datatypes"]], "Backend-specific \u201cUPPERCASE\u201d datatypes": [[59, "backend-specific-uppercase-datatypes"]], "Using \u201cUPPERCASE\u201d and Backend-specific types for multiple backends": [[59, "using-uppercase-and-backend-specific-types-for-multiple-backends"]], "Generic \u201cCamelCase\u201d Types": [[59, "generic-camelcase-types"]], "SQL Standard and Multiple Vendor \u201cUPPERCASE\u201d Types": [[59, "sql-standard-and-multiple-vendor-uppercase-types"]], "Dialects": [[63, "dialects"]], "Included Dialects": [[63, "included-dialects"]], "Support Levels for Included Dialects": [[63, "support-levels-for-included-dialects"]], "Supported database versions for included dialects": [[63, "id6"]], "Support Definitions": [[63, "support-definitions"]], "Deprecated, no longer supported dialects": [[63, "deprecated-no-longer-supported-dialects"]], "Sybase": [[69, "module-sqlalchemy.dialects.sybase.base"]], "python-sybase": [[69, "module-sqlalchemy.dialects.sybase.pysybase"]], "Unicode Support": [[69, "unicode-support"], [69, "id1"]], "mxodbc": [[69, "module-sqlalchemy.dialects.sybase.mxodbc"]], "Firebird": [[62, "module-sqlalchemy.dialects.firebird.base"]], "Firebird Dialects": [[62, "firebird-dialects"]], "Locking Behavior": [[62, "locking-behavior"]], "RETURNING support": [[62, "returning-support"]], "fdb": [[62, "module-sqlalchemy.dialects.firebird.fdb"]], "Arguments": [[62, "arguments"], [62, "id1"]], "kinterbasdb": [[62, "module-sqlalchemy.dialects.firebird.kinterbasdb"]], "Column Elements and Expressions": [[56, "column-elements-and-expressions"]], "Column Element Foundational Constructors": [[56, "column-element-foundational-constructors"]], "Column Element Modifier Constructors": [[56, "column-element-modifier-constructors"]], "Column Element Class Documentation": [[56, "column-element-class-documentation"]], "1.3 Changelog": [[12, "changelog"]], "1.3.25": [[12, "change-1.3.25"]], "orm": [[12, "change-1.3.25-orm"], [12, "change-1.3.24-orm"], [12, "change-1.3.21-orm"], [12, "change-1.3.20-orm"], [12, "change-1.3.19-orm"], [12, "change-1.3.18-orm"], [12, "change-1.3.17-orm"], [12, "change-1.3.16-orm"], [12, "change-1.3.15-orm"], [12, "change-1.3.14-orm"], [12, "change-1.3.13-orm"], [12, "change-1.3.12-orm"], [12, "change-1.3.11-orm"], [12, "change-1.3.9-orm"], [12, "change-1.3.8-orm"], [12, "change-1.3.7-orm"], [12, "change-1.3.6-orm"], [12, "change-1.3.5-orm"], [12, "change-1.3.4-orm"], [12, "change-1.3.3-orm"], [12, "change-1.3.2-orm"], [12, "change-1.3.1-orm"], [12, "change-1.3.0-orm"], [12, "change-1.3.0b3-orm"], [12, "change-1.3.0b2-orm"], [12, "change-1.3.0b1-orm"], [2, "change-0.3.11-orm"], [2, "change-0.3.10-orm"], [2, "change-0.3.9-orm"], [2, "change-0.3.8-orm"], [2, "change-0.3.7-orm"], [2, "change-0.3.6-orm"], [2, "change-0.3.5-orm"], [2, "change-0.3.4-orm"], [2, "change-0.3.1-orm"], [2, "change-0.3.0-orm"], [11, "change-1.2.19-orm"], [11, "change-1.2.18-orm"], [11, "change-1.2.17-orm"], [11, "change-1.2.15-orm"], [11, "change-1.2.14-orm"], [11, "change-1.2.13-orm"], [11, "change-1.2.12-orm"], [11, "change-1.2.10-orm"], [11, "change-1.2.9-orm"], [11, "change-1.2.8-orm"], [11, "change-1.2.7-orm"], [11, "change-1.2.6-orm"], [11, "change-1.2.5-orm"], [11, "change-1.2.4-orm"], [11, "change-1.2.3-orm"], [11, "change-1.2.2-orm"], [11, "change-1.2.1-orm"], [11, "change-1.2.0-orm"], [11, "change-1.2.0b3-orm"], [11, "change-1.2.0b2-orm"], [11, "change-1.2.0b1-orm"], [3, "change-0.4.8-orm"], [3, "change-0.4.7p1-orm"], [3, "change-0.4.7-orm"], [3, "change-0.4.6-orm"], [3, "change-0.4.5-orm"], [3, "change-0.4.4-orm"], [3, "change-0.4.3-orm"], [3, "change-0.4.2p3-orm"], [3, "change-0.4.2-orm"], [3, "change-0.4.1-orm"], [3, "change-0.4.0beta1-orm"], [6, "change-0.7.11-orm"], [6, "change-0.7.10-orm"], [6, "change-0.7.9-orm"], [6, "change-0.7.8-orm"], [6, "change-0.7.7-orm"], [6, "change-0.7.6-orm"], [6, "change-0.7.5-orm"], [6, "change-0.7.4-orm"], [6, "change-0.7.3-orm"], [6, "change-0.7.2-orm"], [6, "change-0.7.1-orm"], [6, "change-0.7.0-orm"], [6, "change-0.7.0b4-orm"], [6, "change-0.7.0b3-orm"], [6, "change-0.7.0b2-orm"], [6, "change-0.7.0b1-orm"], [5, "change-0.6.9-orm"], [5, "change-0.6.8-orm"], [5, "change-0.6.7-orm"], [5, "change-0.6.6-orm"], [5, "change-0.6.5-orm"], [5, "change-0.6.4-orm"], [5, "change-0.6.3-orm"], [5, "change-0.6.2-orm"], [5, "change-0.6.1-orm"], [5, "change-0.6.0-orm"], [5, "change-0.6beta3-orm"], [5, "change-0.6beta2-orm"], [5, "change-0.6beta1-orm"], [10, "change-1.1.16-orm"], [10, "change-1.1.15-orm"], [10, "change-1.1.14-orm"], [10, "change-1.1.12-orm"], [10, "change-1.1.11-orm"], [10, "change-1.1.10-orm"], [10, "change-1.1.7-orm"], [10, "change-1.1.6-orm"], [10, "change-1.1.5-orm"], [10, "change-1.1.4-orm"], [10, "change-1.1.3-orm"], [10, "change-1.1.2-orm"], [10, "change-1.1.0-orm"], [10, "change-1.1.0b3-orm"], [10, "change-1.1.0b1-orm"], [8, "change-0.9.10-orm"], [8, "change-0.9.9-orm"], [8, "change-0.9.8-orm"], [8, "change-0.9.7-orm"], [8, "change-0.9.6-orm"], [8, "change-0.9.5-orm"], [8, "change-0.9.4-orm"], [8, "change-0.9.3-orm"], [8, "change-0.9.2-orm"], [8, "change-0.9.1-orm"], [8, "change-0.9.0-orm"], [8, "change-0.9.0b1-orm"], [4, "change-0.5.7-orm"], [4, "change-0.5.6-orm"], [4, "change-0.5.5-orm"], [4, "change-0.5.4p1-orm"], [4, "change-0.5.4-orm"], [4, "change-0.5.3-orm"], [4, "change-0.5.2-orm"], [4, "change-0.5.1-orm"], [4, "change-0.5.0-orm"], [4, "change-0.5.0rc4-orm"], [4, "change-0.5.0rc3-orm"], [4, "change-0.5.0rc2-orm"], [4, "change-0.5.0rc1-orm"], [4, "change-0.5.0beta3-orm"], [4, "change-0.5.0beta2-orm"], [4, "change-0.5.0beta1-orm"], [9, "change-1.0.17-orm"], [9, "change-1.0.16-orm"], [9, "change-1.0.15-orm"], [9, "change-1.0.13-orm"], [9, "change-1.0.12-orm"], [9, "change-1.0.11-orm"], [9, "change-1.0.10-orm"], [9, "change-1.0.9-orm"], [9, "change-1.0.7-orm"], [9, "change-1.0.6-orm"], [9, "change-1.0.5-orm"], [9, "change-1.0.4-orm"], [9, "change-1.0.3-orm"], [9, "change-1.0.1-orm"], [9, "change-1.0.0-orm"], [9, "change-1.0.0b5-orm"], [9, "change-1.0.0b2-orm"], [9, "change-1.0.0b1-orm"], [7, "change-0.8.7-orm"], [7, "change-0.8.6-orm"], [7, "change-0.8.5-orm"], [7, "change-0.8.4-orm"], [7, "change-0.8.3-orm"], [7, "change-0.8.2-orm"], [7, "change-0.8.1-orm"], [7, "change-0.8.0-orm"], [7, "change-0.8.0b2-orm"], [7, "change-0.8.0b1-orm"], [13, "change-1.4.46-orm"], [13, "change-1.4.45-orm"], [13, "change-1.4.43-orm"], [13, "change-1.4.42-orm"], [13, "change-1.4.41-orm"], [13, "change-1.4.40-orm"], [13, "change-1.4.39-orm"], [13, "change-1.4.38-orm"], [13, "change-1.4.37-orm"], [13, "change-1.4.36-orm"], [13, "change-1.4.34-orm"], [13, "change-1.4.33-orm"], [13, "change-1.4.32-orm"], [13, "change-1.4.31-orm"], [13, "change-1.4.30-orm"], [13, "change-1.4.29-orm"], [13, "change-1.4.28-orm"], [13, "change-1.4.27-orm"], [13, "change-1.4.26-orm"], [13, "change-1.4.24-orm"], [13, "change-1.4.23-orm"], [13, "change-1.4.22-orm"], [13, "change-1.4.21-orm"], [13, "change-1.4.20-orm"], [13, "change-1.4.19-orm"], [13, "change-1.4.18-orm"], [13, "change-1.4.17-orm"], [13, "change-1.4.16-orm"], [13, "change-1.4.15-orm"], [13, "change-1.4.14-orm"], [13, "change-1.4.13-orm"], [13, "change-1.4.12-orm"], [13, "change-1.4.10-orm"], [13, "change-1.4.9-orm"], [13, "change-1.4.8-orm"], [13, "change-1.4.7-orm"], [13, "change-1.4.6-orm"], [13, "change-1.4.5-orm"], [13, "change-1.4.4-orm"], [13, "change-1.4.3-orm"], [13, "change-1.4.2-orm"], [13, "change-1.4.1-orm"], [13, "change-1.4.0-orm"], [13, "change-1.4.0b3-orm"], [13, "change-1.4.0b2-orm"], [13, "change-1.4.0b1-orm"]], "schema": [[12, "change-1.3.25-schema"], [12, "change-1.3.24-schema"], [12, "change-1.3.18-schema"], [12, "change-1.3.17-schema"], [12, "change-1.3.16-schema"], [12, "change-1.3.11-schema"], [12, "change-1.3.0-schema"], [2, "change-0.3.0-schema"], [11, "change-1.2.0b1-schema"], [3, "change-0.4.7-schema"], [6, "change-0.7.4-schema"], [6, "change-0.7.3-schema"], [6, "change-0.7.2-schema"], [6, "change-0.7.0b4-schema"], [5, "change-0.6.9-schema"], [5, "change-0.6beta1-schema"], [10, "change-1.1.10-schema"], [10, "change-1.1.0b1-schema"], [8, "change-0.9.9-schema"], [8, "change-0.9.2-schema"], [8, "change-0.9.1-schema"], [8, "change-0.9.0-schema"], [4, "change-0.5.4-schema"], [4, "change-0.5.1-schema"], [4, "change-0.5.0rc1-schema"], [4, "change-0.5.0beta2-schema"], [9, "change-1.0.7-schema"], [9, "change-1.0.4-schema"], [9, "change-1.0.0b4-schema"], [9, "change-1.0.0b1-schema"], [7, "change-0.8.0-schema"], [13, "change-1.4.38-schema"], [13, "change-1.4.36-schema"], [13, "change-1.4.33-schema"], [13, "change-1.4.27-schema"], [13, "change-1.4.23-schema"], [13, "change-1.4.20-schema"], [13, "change-1.4.12-schema"], [13, "change-1.4.10-schema"], [13, "change-1.4.7-schema"], [13, "change-1.4.6-schema"], [13, "change-1.4.5-schema"], [13, "change-1.4.3-schema"], [13, "change-1.4.0-schema"], [13, "change-1.4.0b2-schema"], [13, "change-1.4.0b1-schema"]], "postgresql": [[12, "change-1.3.25-postgresql"], [12, "change-1.3.24-postgresql"], [12, "change-1.3.23-postgresql"], [12, "change-1.3.21-postgresql"], [12, "change-1.3.20-postgresql"], [12, "change-1.3.19-postgresql"], [12, "change-1.3.17-postgresql"], [12, "change-1.3.16-postgresql"], [12, "change-1.3.14-postgresql"], [12, "change-1.3.13-postgresql"], [12, "change-1.3.8-postgresql"], [12, "change-1.3.7-postgresql"], [12, "change-1.3.6-postgresql"], [12, "change-1.3.5-postgresql"], [12, "change-1.3.4-postgresql"], [12, "change-1.3.3-postgresql"], [12, "change-1.3.2-postgresql"], [12, "change-1.3.0b3-postgresql"], [12, "change-1.3.0b1-postgresql"], [11, "change-1.2.17-postgresql"], [11, "change-1.2.16-postgresql"], [11, "change-1.2.13-postgresql"], [11, "change-1.2.12-postgresql"], [11, "change-1.2.7-postgresql"], [11, "change-1.2.6-postgresql"], [11, "change-1.2.5-postgresql"], [11, "change-1.2.3-postgresql"], [11, "change-1.2.0-postgresql"], [11, "change-1.2.0b3-postgresql"], [11, "change-1.2.0b1-postgresql"], [6, "change-0.7.11-postgresql"], [6, "change-0.7.9-postgresql"], [6, "change-0.7.8-postgresql"], [6, "change-0.7.7-postgresql"], [6, "change-0.7.4-postgresql"], [6, "change-0.7.3-postgresql"], [6, "change-0.7.2-postgresql"], [6, "change-0.7.1-postgresql"], [6, "change-0.7.0-postgresql"], [6, "change-0.7.0b4-postgresql"], [6, "change-0.7.0b3-postgresql"], [6, "change-0.7.0b2-postgresql"], [6, "change-0.7.0b1-postgresql"], [5, "change-0.6.9-postgresql"], [5, "change-0.6.8-postgresql"], [5, "change-0.6.7-postgresql"], [5, "change-0.6.6-postgresql"], [5, "change-0.6.5-postgresql"], [5, "change-0.6.4-postgresql"], [5, "change-0.6.2-postgresql"], [5, "change-0.6.0-postgresql"], [5, "change-0.6beta3-postgresql"], [5, "change-0.6beta1-postgresql"], [10, "change-1.1.18-postgresql"], [10, "change-1.1.16-postgresql"], [10, "change-1.1.15-postgresql"], [10, "change-1.1.11-postgresql"], [10, "change-1.1.10-postgresql"], [10, "change-1.1.8-postgresql"], [10, "change-1.1.6-postgresql"], [10, "change-1.1.5-postgresql"], [10, "change-1.1.4-postgresql"], [10, "change-1.1.3-postgresql"], [10, "change-1.1.2-postgresql"], [10, "change-1.1.0-postgresql"], [10, "change-1.1.0b3-postgresql"], [10, "change-1.1.0b2-postgresql"], [10, "change-1.1.0b1-postgresql"], [8, "change-0.9.10-postgresql"], [8, "change-0.9.9-postgresql"], [8, "change-0.9.8-postgresql"], [8, "change-0.9.7-postgresql"], [8, "change-0.9.5-postgresql"], [8, "change-0.9.4-postgresql"], [8, "change-0.9.3-postgresql"], [8, "change-0.9.2-postgresql"], [8, "change-0.9.0-postgresql"], [8, "change-0.9.0b1-postgresql"], [4, "change-0.5.8-postgresql"], [4, "change-0.5.7-postgresql"], [4, "change-0.5.4p2-postgresql"], [4, "change-0.5.3-postgresql"], [9, "change-1.0.14-postgresql"], [9, "change-1.0.13-postgresql"], [9, "change-1.0.12-postgresql"], [9, "change-1.0.10-postgresql"], [9, "change-1.0.9-postgresql"], [9, "change-1.0.6-postgresql"], [9, "change-1.0.5-postgresql"], [9, "change-1.0.0-postgresql"], [9, "change-1.0.0b5-postgresql"], [9, "change-1.0.0b1-postgresql"], [7, "change-0.8.7-postgresql"], [7, "change-0.8.6-postgresql"], [7, "change-0.8.5-postgresql"], [7, "change-0.8.4-postgresql"], [7, "change-0.8.3-postgresql"], [7, "change-0.8.2-postgresql"], [7, "change-0.8.1-postgresql"], [7, "change-0.8.0-postgresql"], [7, "change-0.8.0b2-postgresql"], [7, "change-0.8.0b1-postgresql"], [13, "change-1.4.46-postgresql"], [13, "change-1.4.45-postgresql"], [13, "change-1.4.44-postgresql"], [13, "change-1.4.42-postgresql"], [13, "change-1.4.40-postgresql"], [13, "change-1.4.36-postgresql"], [13, "change-1.4.34-postgresql"], [13, "change-1.4.32-postgresql"], [13, "change-1.4.31-postgresql"], [13, "change-1.4.30-postgresql"], [13, "change-1.4.28-postgresql"], [13, "change-1.4.27-postgresql"], [13, "change-1.4.26-postgresql"], [13, "change-1.4.24-postgresql"], [13, "change-1.4.23-postgresql"], [13, "change-1.4.21-postgresql"], [13, "change-1.4.19-postgresql"], [13, "change-1.4.18-postgresql"], [13, "change-1.4.13-postgresql"], [13, "change-1.4.12-postgresql"], [13, "change-1.4.9-postgresql"], [13, "change-1.4.5-postgresql"], [13, "change-1.4.4-postgresql"], [13, "change-1.4.3-postgresql"], [13, "change-1.4.2-postgresql"], [13, "change-1.4.0-postgresql"], [13, "change-1.4.0b2-postgresql"], [13, "change-1.4.0b1-postgresql"]], "mysql": [[12, "change-1.3.25-mysql"], [12, "change-1.3.23-mysql"], [12, "change-1.3.21-mysql"], [12, "change-1.3.20-mysql"], [12, "change-1.3.19-mysql"], [12, "change-1.3.18-mysql"], [12, "change-1.3.16-mysql"], [12, "change-1.3.14-mysql"], [12, "change-1.3.11-mysql"], [12, "change-1.3.7-mysql"], [12, "change-1.3.6-mysql"], [12, "change-1.3.5-mysql"], [12, "change-1.3.4-mysql"], [12, "change-1.3.0b1-mysql"], [2, "change-0.3.11-mysql"], [2, "change-0.3.9-mysql"], [2, "change-0.3.8-mysql"], [2, "change-0.3.7-mysql"], [2, "change-0.3.6-mysql"], [2, "change-0.3.5-mysql"], [2, "change-0.3.4-mysql"], [11, "change-1.2.18-mysql"], [11, "change-1.2.14-mysql"], [11, "change-1.2.13-mysql"], [11, "change-1.2.9-mysql"], [11, "change-1.2.5-mysql"], [11, "change-1.2.2-mysql"], [11, "change-1.2.0-mysql"], [11, "change-1.2.0b3-mysql"], [11, "change-1.2.0b1-mysql"], [3, "change-0.4.8-mysql"], [3, "change-0.4.7-mysql"], [3, "change-0.4.5-mysql"], [3, "change-0.4.0beta1-mysql"], [6, "change-0.7.11-mysql"], [6, "change-0.7.10-mysql"], [6, "change-0.7.9-mysql"], [6, "change-0.7.8-mysql"], [6, "change-0.7.7-mysql"], [6, "change-0.7.6-mysql"], [6, "change-0.7.5-mysql"], [6, "change-0.7.4-mysql"], [6, "change-0.7.3-mysql"], [6, "change-0.7.2-mysql"], [6, "change-0.7.1-mysql"], [6, "change-0.7.0b1-mysql"], [5, "change-0.6.9-mysql"], [5, "change-0.6.7-mysql"], [5, "change-0.6.6-mysql"], [5, "change-0.6.5-mysql"], [5, "change-0.6.3-mysql"], [5, "change-0.6.2-mysql"], [5, "change-0.6.1-mysql"], [5, "change-0.6beta3-mysql"], [5, "change-0.6beta2-mysql"], [5, "change-0.6beta1-mysql"], [10, "change-1.1.18-mysql"], [10, "change-1.1.16-mysql"], [10, "change-1.1.15-mysql"], [10, "change-1.1.11-mysql"], [10, "change-1.1.10-mysql"], [10, "change-1.1.6-mysql"], [10, "change-1.1.5-mysql"], [10, "change-1.1.4-mysql"], [10, "change-1.1.0-mysql"], [10, "change-1.1.0b2-mysql"], [10, "change-1.1.0b1-mysql"], [8, "change-0.9.10-mysql"], [8, "change-0.9.9-mysql"], [8, "change-0.9.8-mysql"], [8, "change-0.9.7-mysql"], [8, "change-0.9.5-mysql"], [8, "change-0.9.4-mysql"], [8, "change-0.9.3-mysql"], [8, "change-0.9.2-mysql"], [8, "change-0.9.0-mysql"], [8, "change-0.9.0b1-mysql"], [4, "change-0.5.4-mysql"], [4, "change-0.5.1-mysql"], [4, "change-0.5.0-mysql"], [4, "change-0.5.0rc3-mysql"], [4, "change-0.5.0rc2-mysql"], [4, "change-0.5.0rc1-mysql"], [4, "change-0.5.0beta3-mysql"], [4, "change-0.5.0beta1-mysql"], [9, "change-1.0.15-mysql"], [9, "change-1.0.11-mysql"], [9, "change-1.0.10-mysql"], [9, "change-1.0.0b4-mysql"], [9, "change-1.0.0b3-mysql"], [9, "change-1.0.0b2-mysql"], [9, "change-1.0.0b1-mysql"], [7, "change-0.8.7-mysql"], [7, "change-0.8.5-mysql"], [7, "change-0.8.3-mysql"], [7, "change-0.8.2-mysql"], [7, "change-0.8.1-mysql"], [7, "change-0.8.0-mysql"], [7, "change-0.8.0b1-mysql"], [13, "change-1.4.42-mysql"], [13, "change-1.4.37-mysql"], [13, "change-1.4.36-mysql"], [13, "change-1.4.32-mysql"], [13, "change-1.4.31-mysql"], [13, "change-1.4.30-mysql"], [13, "change-1.4.27-mysql"], [13, "change-1.4.26-mysql"], [13, "change-1.4.20-mysql"], [13, "change-1.4.19-mysql"], [13, "change-1.4.15-mysql"], [13, "change-1.4.5-mysql"], [13, "change-1.4.0b2-mysql"], [13, "change-1.4.0b1-mysql"]], "sqlite": [[12, "change-1.3.25-sqlite"], [12, "change-1.3.21-sqlite"], [12, "change-1.3.19-sqlite"], [12, "change-1.3.18-sqlite"], [12, "change-1.3.16-sqlite"], [12, "change-1.3.12-sqlite"], [12, "change-1.3.9-sqlite"], [12, "change-1.3.8-sqlite"], [12, "change-1.3.7-sqlite"], [12, "change-1.3.6-sqlite"], [12, "change-1.3.0b1-sqlite"], [2, "change-0.3.11-sqlite"], [2, "change-0.3.9-sqlite"], [2, "change-0.3.7-sqlite"], [2, "change-0.3.0-sqlite"], [11, "change-1.2.18-sqlite"], [11, "change-1.2.16-sqlite"], [11, "change-1.2.9-sqlite"], [11, "change-1.2.3-sqlite"], [11, "change-1.2.0b3-sqlite"], [3, "change-0.4.8-sqlite"], [6, "change-0.7.10-sqlite"], [6, "change-0.7.9-sqlite"], [6, "change-0.7.7-sqlite"], [6, "change-0.7.6-sqlite"], [6, "change-0.7.5-sqlite"], [6, "change-0.7.3-sqlite"], [6, "change-0.7.2-sqlite"], [6, "change-0.7.1-sqlite"], [6, "change-0.7.0b4-sqlite"], [5, "change-0.6.7-sqlite"], [5, "change-0.6.6-sqlite"], [5, "change-0.6.1-sqlite"], [5, "change-0.6beta2-sqlite"], [5, "change-0.6beta1-sqlite"], [10, "change-1.1.15-sqlite"], [10, "change-1.1.4-sqlite"], [10, "change-1.1.0b1-sqlite"], [8, "change-0.9.10-sqlite"], [8, "change-0.9.9-sqlite"], [8, "change-0.9.8-sqlite"], [8, "change-0.9.7-sqlite"], [8, "change-0.9.3-sqlite"], [8, "change-0.9.2-sqlite"], [8, "change-0.9.0b1-sqlite"], [4, "change-0.5.7-sqlite"], [4, "change-0.5.4-sqlite"], [4, "change-0.5.3-sqlite"], [4, "change-0.5.0-sqlite"], [4, "change-0.5.0rc2-sqlite"], [4, "change-0.5.0beta2-sqlite"], [9, "change-1.0.8-sqlite"], [9, "change-1.0.1-sqlite"], [9, "change-1.0.0b1-sqlite"], [7, "change-0.8.5-sqlite"], [7, "change-0.8.3-sqlite"], [7, "change-0.8.2-sqlite"], [7, "change-0.8.0b2-sqlite"], [7, "change-0.8.0b1-sqlite"], [13, "change-1.4.46-sqlite"], [13, "change-1.4.45-sqlite"], [13, "change-1.4.33-sqlite"], [13, "change-1.4.32-sqlite"], [13, "change-1.4.24-sqlite"], [13, "change-1.4.18-sqlite"], [13, "change-1.4.12-sqlite"], [13, "change-1.4.3-sqlite"], [13, "change-1.4.0b2-sqlite"], [13, "change-1.4.0b1-sqlite"]], "1.3.24": [[12, "change-1.3.24"]], "engine": [[12, "change-1.3.24-engine"], [12, "change-1.3.20-engine"], [12, "change-1.3.18-engine"], [12, "change-1.3.17-engine"], [12, "change-1.3.14-engine"], [12, "change-1.3.13-engine"], [12, "change-1.3.11-engine"], [12, "change-1.3.9-engine"], [12, "change-1.3.8-engine"], [12, "change-1.3.6-engine"], [12, "change-1.3.4-engine"], [12, "change-1.3.0-engine"], [12, "change-1.3.0b2-engine"], [12, "change-1.3.0b1-engine"], [2, "change-0.3.11-engine"], [11, "change-1.2.19-engine"], [11, "change-1.2.16-engine"], [11, "change-1.2.8-engine"], [11, "change-1.2.6-engine"], [11, "change-1.2.4-engine"], [11, "change-1.2.3-engine"], [11, "change-1.2.0-engine"], [11, "change-1.2.0b3-engine"], [11, "change-1.2.0b1-engine"], [6, "change-0.7.11-engine"], [6, "change-0.7.10-engine"], [6, "change-0.7.9-engine"], [6, "change-0.7.8-engine"], [6, "change-0.7.6-engine"], [6, "change-0.7.5-engine"], [6, "change-0.7.4-engine"], [6, "change-0.7.3-engine"], [6, "change-0.7.2-engine"], [6, "change-0.7.1-engine"], [6, "change-0.7.0b4-engine"], [6, "change-0.7.0b3-engine"], [5, "change-0.6.9-engine"], [5, "change-0.6.8-engine"], [5, "change-0.6.7-engine"], [5, "change-0.6.6-engine"], [5, "change-0.6.5-engine"], [5, "change-0.6.4-engine"], [10, "change-1.1.7-engine"], [10, "change-1.1.5-engine"], [10, "change-1.1.4-engine"], [10, "change-1.1.0b1-engine"], [8, "change-0.9.10-engine"], [8, "change-0.9.9-engine"], [8, "change-0.9.8-engine"], [8, "change-0.9.7-engine"], [8, "change-0.9.5-engine"], [8, "change-0.9.4-engine"], [8, "change-0.9.3-engine"], [8, "change-0.9.2-engine"], [8, "change-0.9.0-engine"], [8, "change-0.9.0b1-engine"], [9, "change-1.0.14-engine"], [9, "change-1.0.12-engine"], [9, "change-1.0.8-engine"], [9, "change-1.0.7-engine"], [9, "change-1.0.5-engine"], [9, "change-1.0.3-engine"], [9, "change-1.0.1-engine"], [9, "change-1.0.0b2-engine"], [9, "change-1.0.0b1-engine"], [7, "change-0.8.5-engine"], [7, "change-0.8.4-engine"], [7, "change-0.8.3-engine"], [7, "change-0.8.2-engine"], [7, "change-0.8.0b2-engine"], [7, "change-0.8.0b1-engine"], [13, "change-1.4.46-engine"], [13, "change-1.4.45-engine"], [13, "change-1.4.43-engine"], [13, "change-1.4.42-engine"], [13, "change-1.4.40-engine"], [13, "change-1.4.38-engine"], [13, "change-1.4.37-engine"], [13, "change-1.4.36-engine"], [13, "change-1.4.33-engine"], [13, "change-1.4.32-engine"], [13, "change-1.4.29-engine"], [13, "change-1.4.28-engine"], [13, "change-1.4.27-engine"], [13, "change-1.4.26-engine"], [13, "change-1.4.24-engine"], [13, "change-1.4.22-engine"], [13, "change-1.4.20-engine"], [13, "change-1.4.16-engine"], [13, "change-1.4.14-engine"], [13, "change-1.4.13-engine"], [13, "change-1.4.12-engine"], [13, "change-1.4.11-engine"], [13, "change-1.4.8-engine"], [13, "change-1.4.7-engine"], [13, "change-1.4.4-engine"], [13, "change-1.4.3-engine"], [13, "change-1.4.2-engine"], [13, "change-1.4.1-engine"], [13, "change-1.4.0-engine"], [13, "change-1.4.0b3-engine"], [13, "change-1.4.0b2-engine"], [13, "change-1.4.0b1-engine"]], "mssql": [[12, "change-1.3.24-mssql"], [12, "change-1.3.21-mssql"], [12, "change-1.3.20-mssql"], [12, "change-1.3.19-mssql"], [12, "change-1.3.18-mssql"], [12, "change-1.3.17-mssql"], [12, "change-1.3.16-mssql"], [12, "change-1.3.14-mssql"], [12, "change-1.3.13-mssql"], [12, "change-1.3.12-mssql"], [12, "change-1.3.11-mssql"], [12, "change-1.3.10-mssql"], [12, "change-1.3.9-mssql"], [12, "change-1.3.7-mssql"], [12, "change-1.3.6-mssql"], [12, "change-1.3.4-mssql"], [12, "change-1.3.3-mssql"], [12, "change-1.3.1-mssql"], [12, "change-1.3.0b2-mssql"], [12, "change-1.3.0b1-mssql"], [2, "change-0.3.11-mssql"], [2, "change-0.3.9-mssql"], [2, "change-0.3.7-mssql"], [2, "change-0.3.5-mssql"], [2, "change-0.3.4-mssql"], [11, "change-1.2.19-mssql"], [11, "change-1.2.18-mssql"], [11, "change-1.2.9-mssql"], [11, "change-1.2.8-mssql"], [11, "change-1.2.7-mssql"], [11, "change-1.2.6-mssql"], [11, "change-1.2.2-mssql"], [11, "change-1.2.1-mssql"], [11, "change-1.2.0-mssql"], [11, "change-1.2.0b3-mssql"], [11, "change-1.2.0b1-mssql"], [3, "change-0.4.6-mssql"], [3, "change-0.4.5-mssql"], [6, "change-0.7.10-mssql"], [6, "change-0.7.9-mssql"], [6, "change-0.7.7-mssql"], [6, "change-0.7.6-mssql"], [6, "change-0.7.5-mssql"], [6, "change-0.7.4-mssql"], [6, "change-0.7.3-mssql"], [6, "change-0.7.2-mssql"], [6, "change-0.7.0-mssql"], [6, "change-0.7.0b3-mssql"], [6, "change-0.7.0b1-mssql"], [5, "change-0.6.9-mssql"], [5, "change-0.6.8-mssql"], [5, "change-0.6.7-mssql"], [5, "change-0.6.6-mssql"], [5, "change-0.6.5-mssql"], [5, "change-0.6.4-mssql"], [5, "change-0.6.2-mssql"], [5, "change-0.6beta2-mssql"], [5, "change-0.6beta1-mssql"], [10, "change-1.1.15-mssql"], [10, "change-1.1.11-mssql"], [10, "change-1.1.6-mssql"], [10, "change-1.1.5-mssql"], [10, "change-1.1.4-mssql"], [10, "change-1.1.1-mssql"], [10, "change-1.1.0-mssql"], [10, "change-1.1.0b1-mssql"], [8, "change-0.9.8-mssql"], [8, "change-0.9.7-mssql"], [8, "change-0.9.5-mssql"], [8, "change-0.9.2-mssql"], [8, "change-0.9.0-mssql"], [8, "change-0.9.0b1-mssql"], [4, "change-0.5.7-mssql"], [4, "change-0.5.4-mssql"], [4, "change-0.5.3-mssql"], [4, "change-0.5.2-mssql"], [4, "change-0.5.1-mssql"], [4, "change-0.5.0-mssql"], [4, "change-0.5.0rc4-mssql"], [9, "change-1.0.16-mssql"], [9, "change-1.0.13-mssql"], [9, "change-1.0.12-mssql"], [9, "change-1.0.10-mssql"], [9, "change-1.0.6-mssql"], [9, "change-1.0.5-mssql"], [9, "change-1.0.0-mssql"], [9, "change-1.0.0b4-mssql"], [9, "change-1.0.0b1-mssql"], [7, "change-0.8.7-mssql"], [7, "change-0.8.5-mssql"], [7, "change-0.8.4-mssql"], [7, "change-0.8.2-mssql"], [7, "change-0.8.1-mssql"], [7, "change-0.8.0-mssql"], [7, "change-0.8.0b2-mssql"], [7, "change-0.8.0b1-mssql"], [13, "change-1.4.43-mssql"], [13, "change-1.4.42-mssql"], [13, "change-1.4.41-mssql"], [13, "change-1.4.40-mssql"], [13, "change-1.4.37-mssql"], [13, "change-1.4.33-mssql"], [13, "change-1.4.31-mssql"], [13, "change-1.4.27-mssql"], [13, "change-1.4.26-mssql"], [13, "change-1.4.24-mssql"], [13, "change-1.4.23-mssql"], [13, "change-1.4.21-mssql"], [13, "change-1.4.19-mssql"], [13, "change-1.4.16-mssql"], [13, "change-1.4.12-mssql"], [13, "change-1.4.10-mssql"], [13, "change-1.4.8-mssql"], [13, "change-1.4.5-mssql"], [13, "change-1.4.1-mssql"], [13, "change-1.4.0-mssql"], [13, "change-1.4.0b2-mssql"], [13, "change-1.4.0b1-mssql"]], "1.3.23": [[12, "change-1.3.23"]], "sql": [[12, "change-1.3.23-sql"], [12, "change-1.3.21-sql"], [12, "change-1.3.20-sql"], [12, "change-1.3.19-sql"], [12, "change-1.3.18-sql"], [12, "change-1.3.16-sql"], [12, "change-1.3.14-sql"], [12, "change-1.3.13-sql"], [12, "change-1.3.12-sql"], [12, "change-1.3.11-sql"], [12, "change-1.3.9-sql"], [12, "change-1.3.7-sql"], [12, "change-1.3.6-sql"], [12, "change-1.3.5-sql"], [12, "change-1.3.4-sql"], [12, "change-1.3.2-sql"], [12, "change-1.3.0-sql"], [12, "change-1.3.0b3-sql"], [12, "change-1.3.0b2-sql"], [12, "change-1.3.0b1-sql"], [2, "change-0.3.11-sql"], [2, "change-0.3.10-sql"], [2, "change-0.3.9-sql"], [2, "change-0.3.8-sql"], [2, "change-0.3.7-sql"], [2, "change-0.3.6-sql"], [2, "change-0.3.5-sql"], [2, "change-0.3.4-sql"], [2, "change-0.3.0-sql"], [11, "change-1.2.18-sql"], [11, "change-1.2.16-sql"], [11, "change-1.2.13-sql"], [11, "change-1.2.11-sql"], [11, "change-1.2.10-sql"], [11, "change-1.2.9-sql"], [11, "change-1.2.8-sql"], [11, "change-1.2.7-sql"], [11, "change-1.2.6-sql"], [11, "change-1.2.5-sql"], [11, "change-1.2.4-sql"], [11, "change-1.2.3-sql"], [11, "change-1.2.1-sql"], [11, "change-1.2.0-sql"], [11, "change-1.2.0b3-sql"], [11, "change-1.2.0b1-sql"], [3, "change-0.4.8-sql"], [3, "change-0.4.7-sql"], [3, "change-0.4.6-sql"], [3, "change-0.4.5-sql"], [3, "change-0.4.4-sql"], [3, "change-0.4.3-sql"], [3, "change-0.4.2p3-sql"], [3, "change-0.4.2-sql"], [3, "change-0.4.1-sql"], [3, "change-0.4.0beta1-sql"], [6, "change-0.7.11-sql"], [6, "change-0.7.10-sql"], [6, "change-0.7.9-sql"], [6, "change-0.7.8-sql"], [6, "change-0.7.7-sql"], [6, "change-0.7.6-sql"], [6, "change-0.7.5-sql"], [6, "change-0.7.4-sql"], [6, "change-0.7.2-sql"], [6, "change-0.7.1-sql"], [6, "change-0.7.0-sql"], [6, "change-0.7.0b4-sql"], [6, "change-0.7.0b3-sql"], [6, "change-0.7.0b2-sql"], [6, "change-0.7.0b1-sql"], [5, "change-0.6.9-sql"], [5, "change-0.6.8-sql"], [5, "change-0.6.7-sql"], [5, "change-0.6.6-sql"], [5, "change-0.6.5-sql"], [5, "change-0.6.4-sql"], [5, "change-0.6.2-sql"], [5, "change-0.6.1-sql"], [5, "change-0.6.0-sql"], [5, "change-0.6beta3-sql"], [5, "change-0.6beta2-sql"], [5, "change-0.6beta1-sql"], [10, "change-1.1.16-sql"], [10, "change-1.1.15-sql"], [10, "change-1.1.14-sql"], [10, "change-1.1.11-sql"], [10, "change-1.1.9-sql"], [10, "change-1.1.7-sql"], [10, "change-1.1.6-sql"], [10, "change-1.1.5-sql"], [10, "change-1.1.4-sql"], [10, "change-1.1.3-sql"], [10, "change-1.1.2-sql"], [10, "change-1.1.0-sql"], [10, "change-1.1.0b3-sql"], [10, "change-1.1.0b2-sql"], [10, "change-1.1.0b1-sql"], [8, "change-0.9.10-sql"], [8, "change-0.9.9-sql"], [8, "change-0.9.8-sql"], [8, "change-0.9.7-sql"], [8, "change-0.9.5-sql"], [8, "change-0.9.4-sql"], [8, "change-0.9.3-sql"], [8, "change-0.9.2-sql"], [8, "change-0.9.1-sql"], [8, "change-0.9.0-sql"], [8, "change-0.9.0b1-sql"], [4, "change-0.5.9-sql"], [4, "change-0.5.8-sql"], [4, "change-0.5.7-sql"], [4, "change-0.5.6-sql"], [4, "change-0.5.5-sql"], [4, "change-0.5.4p2-sql"], [4, "change-0.5.4-sql"], [4, "change-0.5.3-sql"], [4, "change-0.5.2-sql"], [4, "change-0.5.1-sql"], [4, "change-0.5.0-sql"], [4, "change-0.5.0rc4-sql"], [4, "change-0.5.0rc3-sql"], [4, "change-0.5.0rc2-sql"], [4, "change-0.5.0rc1-sql"], [4, "change-0.5.0beta3-sql"], [4, "change-0.5.0beta2-sql"], [4, "change-0.5.0beta1-sql"], [9, "change-1.0.15-sql"], [9, "change-1.0.14-sql"], [9, "change-1.0.13-sql"], [9, "change-1.0.12-sql"], [9, "change-1.0.11-sql"], [9, "change-1.0.10-sql"], [9, "change-1.0.9-sql"], [9, "change-1.0.7-sql"], [9, "change-1.0.6-sql"], [9, "change-1.0.5-sql"], [9, "change-1.0.3-sql"], [9, "change-1.0.2-sql"], [9, "change-1.0.1-sql"], [9, "change-1.0.0-sql"], [9, "change-1.0.0b5-sql"], [9, "change-1.0.0b4-sql"], [9, "change-1.0.0b1-sql"], [7, "change-0.8.7-sql"], [7, "change-0.8.6-sql"], [7, "change-0.8.5-sql"], [7, "change-0.8.4-sql"], [7, "change-0.8.3-sql"], [7, "change-0.8.2-sql"], [7, "change-0.8.1-sql"], [7, "change-0.8.0-sql"], [7, "change-0.8.0b2-sql"], [7, "change-0.8.0b1-sql"], [13, "change-1.4.46-sql"], [13, "change-1.4.45-sql"], [13, "change-1.4.44-sql"], [13, "change-1.4.43-sql"], [13, "change-1.4.41-sql"], [13, "change-1.4.40-sql"], [13, "change-1.4.38-sql"], [13, "change-1.4.37-sql"], [13, "change-1.4.35-sql"], [13, "change-1.4.33-sql"], [13, "change-1.4.32-sql"], [13, "change-1.4.30-sql"], [13, "change-1.4.28-sql"], [13, "change-1.4.27-sql"], [13, "change-1.4.26-sql"], [13, "change-1.4.24-sql"], [13, "change-1.4.23-sql"], [13, "change-1.4.22-sql"], [13, "change-1.4.21-sql"], [13, "change-1.4.20-sql"], [13, "change-1.4.19-sql"], [13, "change-1.4.16-sql"], [13, "change-1.4.15-sql"], [13, "change-1.4.14-sql"], [13, "change-1.4.12-sql"], [13, "change-1.4.10-sql"], [13, "change-1.4.9-sql"], [13, "change-1.4.8-sql"], [13, "change-1.4.7-sql"], [13, "change-1.4.6-sql"], [13, "change-1.4.5-sql"], [13, "change-1.4.2-sql"], [13, "change-1.4.0-sql"], [13, "change-1.4.0b3-sql"], [13, "change-1.4.0b2-sql"], [13, "change-1.4.0b1-sql"]], "oracle": [[12, "change-1.3.23-oracle"], [12, "change-1.3.22-oracle"], [12, "change-1.3.21-oracle"], [12, "change-1.3.18-oracle"], [12, "change-1.3.17-oracle"], [12, "change-1.3.16-oracle"], [12, "change-1.3.14-oracle"], [12, "change-1.3.11-oracle"], [12, "change-1.3.10-oracle"], [12, "change-1.3.9-oracle"], [12, "change-1.3.0b1-oracle"], [2, "change-0.3.11-oracle"], [2, "change-0.3.9-oracle"], [2, "change-0.3.7-oracle"], [2, "change-0.3.6-oracle"], [2, "change-0.3.5-oracle"], [2, "change-0.3.4-oracle"], [2, "change-0.3.0-oracle"], [11, "change-1.2.19-oracle"], [11, "change-1.2.17-oracle"], [11, "change-1.2.12-oracle"], [11, "change-1.2.11-oracle"], [11, "change-1.2.9-oracle"], [11, "change-1.2.8-oracle"], [11, "change-1.2.7-oracle"], [11, "change-1.2.6-oracle"], [11, "change-1.2.3-oracle"], [11, "change-1.2.2-oracle"], [11, "change-1.2.1-oracle"], [11, "change-1.2.0-oracle"], [11, "change-1.2.0b3-oracle"], [11, "change-1.2.0b1-oracle"], [3, "change-0.4.8-oracle"], [3, "change-0.4.7-oracle"], [3, "change-0.4.5-oracle"], [3, "change-0.4.0beta2-oracle"], [3, "change-0.4.0beta1-oracle"], [6, "change-0.7.10-oracle"], [6, "change-0.7.8-oracle"], [6, "change-0.7.6-oracle"], [6, "change-0.7.5-oracle"], [6, "change-0.7.3-oracle"], [6, "change-0.7.2-oracle"], [6, "change-0.7.0b4-oracle"], [5, "change-0.6.9-oracle"], [5, "change-0.6.7-oracle"], [5, "change-0.6.6-oracle"], [5, "change-0.6.5-oracle"], [5, "change-0.6.4-oracle"], [5, "change-0.6.3-oracle"], [5, "change-0.6.2-oracle"], [5, "change-0.6.1-oracle"], [5, "change-0.6.0-oracle"], [5, "change-0.6beta3-oracle"], [5, "change-0.6beta2-oracle"], [5, "change-0.6beta1-oracle"], [10, "change-1.1.13-oracle"], [10, "change-1.1.12-oracle"], [10, "change-1.1.11-oracle"], [10, "change-1.1.10-oracle"], [10, "change-1.1.7-oracle"], [10, "change-1.1.5-oracle"], [10, "change-1.1.0b3-oracle"], [8, "change-0.9.8-oracle"], [8, "change-0.9.7-oracle"], [8, "change-0.9.4-oracle"], [8, "change-0.9.2-oracle"], [8, "change-0.9.0-oracle"], [8, "change-0.9.0b1-oracle"], [4, "change-0.5.7-oracle"], [4, "change-0.5.6-oracle"], [4, "change-0.5.0-oracle"], [4, "change-0.5.0rc3-oracle"], [4, "change-0.5.0rc2-oracle"], [4, "change-0.5.0rc1-oracle"], [4, "change-0.5.0beta1-oracle"], [9, "change-1.0.19-oracle"], [9, "change-1.0.18-oracle"], [9, "change-1.0.14-oracle"], [9, "change-1.0.13-oracle"], [9, "change-1.0.12-oracle"], [9, "change-1.0.9-oracle"], [9, "change-1.0.0b1-oracle"], [7, "change-0.8.4-oracle"], [7, "change-0.8.3-oracle"], [7, "change-0.8.0-oracle"], [7, "change-0.8.0b2-oracle"], [7, "change-0.8.0b1-oracle"], [13, "change-1.4.45-oracle"], [13, "change-1.4.44-oracle"], [13, "change-1.4.43-oracle"], [13, "change-1.4.37-oracle"], [13, "change-1.4.32-oracle"], [13, "change-1.4.24-oracle"], [13, "change-1.4.5-oracle"], [13, "change-1.4.0b2-oracle"], [13, "change-1.4.0b1-oracle"]], "misc": [[12, "change-1.3.23-misc"], [12, "change-1.3.20-misc"], [12, "change-1.3.19-misc"], [12, "change-1.3.16-misc"], [12, "change-1.3.14-misc"], [12, "change-1.3.13-misc"], [12, "change-1.3.11-misc"], [12, "change-1.3.7-misc"], [12, "change-1.3.4-misc"], [12, "change-1.3.3-misc"], [12, "change-1.3.0b3-misc"], [12, "change-1.3.0b2-misc"], [12, "change-1.3.0b1-misc"], [2, "change-0.3.11-misc"], [2, "change-0.3.10-misc"], [2, "change-0.3.9-misc"], [2, "change-0.3.8-misc"], [2, "change-0.3.7-misc"], [2, "change-0.3.6-misc"], [2, "change-0.3.5-misc"], [2, "change-0.3.4-misc"], [2, "change-0.3.1-misc"], [2, "change-0.3.0-misc"], [11, "change-1.2.16-misc"], [11, "change-1.2.15-misc"], [11, "change-1.2.13-misc"], [11, "change-1.2.12-misc"], [11, "change-1.2.11-misc"], [11, "change-1.2.9-misc"], [11, "change-1.2.8-misc"], [11, "change-1.2.6-misc"], [11, "change-1.2.3-misc"], [11, "change-1.2.1-misc"], [11, "change-1.2.0-misc"], [11, "change-1.2.0b1-misc"], [3, "change-0.4.7-misc"], [3, "change-0.4.6-misc"], [3, "change-0.4.5-misc"], [3, "change-0.4.4-misc"], [3, "change-0.4.3-misc"], [3, "change-0.4.2p3-misc"], [3, "change-0.4.2-misc"], [3, "change-0.4.1-misc"], [3, "change-0.4.0beta2-misc"], [3, "change-0.4.0beta1-misc"], [6, "change-0.7.5-misc"], [6, "change-0.7.4-misc"], [6, "change-0.7.3-misc"], [6, "change-0.7.0-misc"], [6, "change-0.7.0b4-misc"], [6, "change-0.7.0b3-misc"], [6, "change-0.7.0b2-misc"], [6, "change-0.7.0b1-misc"], [5, "change-0.6.7-misc"], [5, "change-0.6.6-misc"], [5, "change-0.6.5-misc"], [5, "change-0.6.4-misc"], [5, "change-0.6.2-misc"], [5, "change-0.6.1-misc"], [5, "change-0.6.0-misc"], [5, "change-0.6beta3-misc"], [5, "change-0.6beta2-misc"], [5, "change-0.6beta1-misc"], [10, "change-1.1.16-misc"], [10, "change-1.1.10-misc"], [10, "change-1.1.9-misc"], [10, "change-1.1.8-misc"], [10, "change-1.1.6-misc"], [10, "change-1.1.5-misc"], [10, "change-1.1.1-misc"], [10, "change-1.1.0-misc"], [10, "change-1.1.0b3-misc"], [10, "change-1.1.0b1-misc"], [8, "change-0.9.10-misc"], [8, "change-0.9.9-misc"], [8, "change-0.9.8-misc"], [8, "change-0.9.7-misc"], [8, "change-0.9.5-misc"], [8, "change-0.9.4-misc"], [8, "change-0.9.3-misc"], [8, "change-0.9.2-misc"], [8, "change-0.9.0-misc"], [8, "change-0.9.0b1-misc"], [4, "change-0.5.7-misc"], [4, "change-0.5.6-misc"], [4, "change-0.5.5-misc"], [4, "change-0.5.1-misc"], [4, "change-0.5.0-misc"], [4, "change-0.5.0rc4-misc"], [4, "change-0.5.0rc3-misc"], [4, "change-0.5.0rc1-misc"], [4, "change-0.5.0beta3-misc"], [4, "change-0.5.0beta1-misc"], [9, "change-1.0.17-misc"], [9, "change-1.0.16-misc"], [9, "change-1.0.15-misc"], [9, "change-1.0.13-misc"], [9, "change-1.0.12-misc"], [9, "change-1.0.11-misc"], [9, "change-1.0.10-misc"], [9, "change-1.0.9-misc"], [9, "change-1.0.8-misc"], [9, "change-1.0.6-misc"], [9, "change-1.0.5-misc"], [9, "change-1.0.4-misc"], [9, "change-1.0.3-misc"], [9, "change-1.0.0b1-misc"], [7, "change-0.8.7-misc"], [7, "change-0.8.6-misc"], [7, "change-0.8.5-misc"], [7, "change-0.8.4-misc"], [7, "change-0.8.3-misc"], [7, "change-0.8.2-misc"], [7, "change-0.8.0b2-misc"], [7, "change-0.8.0b1-misc"], [13, "change-1.4.40-misc"], [13, "change-1.4.33-misc"], [13, "change-1.4.23-misc"], [13, "change-1.4.20-misc"], [13, "change-1.4.16-misc"], [13, "change-1.4.10-misc"], [13, "change-1.4.4-misc"], [13, "change-1.4.1-misc"], [13, "change-1.4.0-misc"], [13, "change-1.4.0b2-misc"], [13, "change-1.4.0b1-misc"]], "1.3.22": [[12, "change-1.3.22"]], "1.3.21": [[12, "change-1.3.21"]], "1.3.20": [[12, "change-1.3.20"]], "tests": [[12, "change-1.3.20-tests"], [12, "change-1.3.16-tests"], [12, "change-1.3.13-tests"], [12, "change-1.3.11-tests"], [12, "change-1.3.9-tests"], [12, "change-1.3.0b3-tests"], [11, "change-1.2.8-tests"], [11, "change-1.2.3-tests"], [11, "change-1.2.1-tests"], [11, "change-1.2.0b2-tests"], [6, "change-0.7.11-tests"], [5, "change-0.6.5-tests"], [10, "change-1.1.12-tests"], [8, "change-0.9.10-tests"], [8, "change-0.9.7-tests"], [8, "change-0.9.5-tests"], [8, "change-0.9.4-tests"], [9, "change-1.0.18-tests"], [9, "change-1.0.10-tests"], [9, "change-1.0.4-tests"], [9, "change-1.0.0-tests"], [9, "change-1.0.0b1-tests"], [7, "change-0.8.0-tests"], [13, "change-1.4.46-tests"], [13, "change-1.4.44-tests"], [13, "change-1.4.36-tests"], [13, "change-1.4.32-tests"], [13, "change-1.4.29-tests"], [13, "change-1.4.28-tests"], [13, "change-1.4.7-tests"], [13, "change-1.4.0b2-tests"]], "1.3.19": [[12, "change-1.3.19"]], "orm declarative": [[12, "change-1.3.19-orm-declarative"], [12, "change-1.3.16-orm-declarative"], [12, "change-1.3.0b3-orm-declarative"], [12, "change-1.3.0b2-orm-declarative"], [12, "change-1.3.0b1-orm-declarative"], [11, "change-1.2.15-orm-declarative"], [11, "change-1.2.13-orm-declarative"], [11, "change-1.2.12-orm-declarative"], [11, "change-1.2.11-orm-declarative"], [11, "change-1.2.0-orm-declarative"], [11, "change-1.2.0b3-orm-declarative"], [11, "change-1.2.0b1-orm-declarative"], [10, "change-1.1.15-orm-declarative"], [10, "change-1.1.6-orm-declarative"], [10, "change-1.1.0-orm-declarative"], [8, "change-0.9.8-orm-declarative"], [8, "change-0.9.3-orm-declarative"], [8, "change-0.9.1-orm-declarative"], [8, "change-0.9.0-orm-declarative"], [8, "change-0.9.0b1-orm-declarative"], [9, "change-1.0.10-orm-declarative"], [9, "change-1.0.7-orm-declarative"], [9, "change-1.0.2-orm-declarative"], [9, "change-1.0.0b2-orm-declarative"], [9, "change-1.0.0b1-orm-declarative"], [7, "change-0.8.3-orm-declarative"], [7, "change-0.8.2-orm-declarative"], [7, "change-0.8.1-orm-declarative"], [13, "change-1.4.40-orm-declarative"], [13, "change-1.4.36-orm-declarative"], [13, "change-1.4.11-orm-declarative"], [13, "change-1.4.3-orm-declarative"], [13, "change-1.4.1-orm-declarative"], [13, "change-1.4.0b2-orm-declarative"]], "1.3.18": [[12, "change-1.3.18"]], "examples": [[12, "change-1.3.18-examples"], [11, "change-1.2.19-examples"], [6, "change-0.7.6-examples"], [6, "change-0.7.5-examples"], [6, "change-0.7.4-examples"], [6, "change-0.7.3-examples"], [6, "change-0.7.2-examples"], [6, "change-0.7.0-examples"], [6, "change-0.7.0b3-examples"], [6, "change-0.7.0b2-examples"], [5, "change-0.6.9-examples"], [5, "change-0.6.7-examples"], [5, "change-0.6.6-examples"], [5, "change-0.6.4-examples"], [5, "change-0.6.0-examples"], [5, "change-0.6beta2-examples"], [10, "change-1.1.5-examples"], [8, "change-0.9.9-examples"], [8, "change-0.9.5-examples"], [8, "change-0.9.4-examples"], [8, "change-0.9.3-examples"], [8, "change-0.9.2-examples"], [8, "change-0.9.0-examples"], [8, "change-0.9.0b1-examples"], [9, "change-1.0.14-examples"], [9, "change-1.0.13-examples"], [9, "change-1.0.9-examples"], [9, "change-1.0.0b1-examples"], [7, "change-0.8.3-examples"], [7, "change-0.8.2-examples"], [7, "change-0.8.1-examples"], [7, "change-0.8.0-examples"], [7, "change-0.8.0b1-examples"], [13, "change-1.4.26-examples"]], "1.3.17": [[12, "change-1.3.17"]], "firebird": [[12, "change-1.3.17-firebird"], [12, "change-1.3.11-firebird"], [2, "change-0.3.11-firebird"], [2, "change-0.3.8-firebird"], [2, "change-0.3.4-firebird"], [2, "change-0.3.0-firebird"], [3, "change-0.4.6-firebird"], [3, "change-0.4.2-firebird"], [6, "change-0.7.0b3-firebird"], [6, "change-0.7.0b1-firebird"], [5, "change-0.6.7-firebird"], [5, "change-0.6.6-firebird"], [5, "change-0.6.4-firebird"], [5, "change-0.6.2-firebird"], [5, "change-0.6.1-firebird"], [5, "change-0.6.0-firebird"], [5, "change-0.6beta1-firebird"], [10, "change-1.1.5-firebird"], [8, "change-0.9.5-firebird"], [8, "change-0.9.0-firebird"], [8, "change-0.9.0b1-firebird"], [4, "change-0.5.8-firebird"], [4, "change-0.5.0beta1-firebird"], [9, "change-1.0.1-firebird"], [7, "change-0.8.5-firebird"], [7, "change-0.8.2-firebird"], [7, "change-0.8.0b2-firebird"], [7, "change-0.8.0b1-firebird"], [13, "change-1.4.0b1-firebird"]], "1.3.16": [[12, "change-1.3.16"]], "1.3.15": [[12, "change-1.3.15"]], "1.3.14": [[12, "change-1.3.14"]], "general": [[12, "change-1.3.14-general"], [12, "change-1.3.0b2-general"], [2, "change-0.3.10-general"], [2, "change-0.3.9-general"], [2, "change-0.3.4-general"], [2, "change-0.3.0-general"], [3, "change-0.4.3-general"], [3, "change-0.4.2p3-general"], [6, "change-0.7.3-general"], [6, "change-0.7.1-general"], [6, "change-0.7.0b4-general"], [6, "change-0.7.0b3-general"], [6, "change-0.7.0b1-general"], [5, "change-0.6.9-general"], [8, "change-0.9.4-general"], [8, "change-0.9.0b1-general"], [4, "change-0.5.5-general"], [4, "change-0.5.0-general"], [4, "change-0.5.0rc4-general"], [4, "change-0.5.0beta1-general"], [9, "change-1.0.0b1-general"], [7, "change-0.8.6-general"], [7, "change-0.8.0b1-general"], [13, "change-1.4.46-general"], [13, "change-1.4.23-general"], [13, "change-1.4.16-general"], [13, "change-1.4.15-general"], [13, "change-1.4.0b2-general"], [13, "change-1.4.0b1-general"]], "1.3.13": [[12, "change-1.3.13"]], "1.3.12": [[12, "change-1.3.12"]], "1.3.11": [[12, "change-1.3.11"]], "1.3.10": [[12, "change-1.3.10"]], "1.3.9": [[12, "change-1.3.9"]], "1.3.8": [[12, "change-1.3.8"]], "1.3.7": [[12, "change-1.3.7"]], "1.3.6": [[12, "change-1.3.6"]], "1.3.5": [[12, "change-1.3.5"]], "1.3.4": [[12, "change-1.3.4"]], "1.3.3": [[12, "change-1.3.3"]], "1.3.2": [[12, "change-1.3.2"]], "1.3.1": [[12, "change-1.3.1"]], "1.3.0": [[12, "change-1.3.0"]], "1.3.0b3": [[12, "change-1.3.0b3"]], "1.3.0b2": [[12, "change-1.3.0b2"]], "1.3.0b1": [[12, "change-1.3.0b1"]], "0.3 Changelog": [[2, "changelog"]], "0.3.11": [[2, "change-0.3.11"]], "0.3.10": [[2, "change-0.3.10"]], "0.3.9": [[2, "change-0.3.9"]], "0.3.8": [[2, "change-0.3.8"]], "0.3.7": [[2, "change-0.3.7"]], "extensions": [[2, "change-0.3.7-extensions"], [2, "change-0.3.6-extensions"], [2, "change-0.3.5-extensions"], [2, "change-0.3.4-extensions"], [3, "change-0.4.4-extensions"], [3, "change-0.4.0beta1-extensions"], [4, "change-0.5.4-extensions"], [4, "change-0.5.3-extensions"], [4, "change-0.5.0beta2-extensions"], [13, "change-1.4.38-extensions"], [13, "change-1.4.0b1-extensions"]], "0.3.6": [[2, "change-0.3.6"]], "0.3.5": [[2, "change-0.3.5"]], "0.3.4": [[2, "change-0.3.4"]], "0.3.3": [[2, "change-0.3.3"]], "0.3.2": [[2, "change-0.3.2"]], "0.3.1": [[2, "change-0.3.1"]], "0.3.0": [[2, "change-0.3.0"]], "1.2 Changelog": [[11, "changelog"]], "1.2.19": [[11, "change-1.2.19"]], "1.2.18": [[11, "change-1.2.18"]], "1.2.17": [[11, "change-1.2.17"]], "1.2.16": [[11, "change-1.2.16"]], "1.2.15": [[11, "change-1.2.15"]], "1.2.14": [[11, "change-1.2.14"]], "1.2.13": [[11, "change-1.2.13"]], "1.2.12": [[11, "change-1.2.12"]], "1.2.11": [[11, "change-1.2.11"]], "1.2.10": [[11, "change-1.2.10"]], "1.2.9": [[11, "change-1.2.9"]], "1.2.8": [[11, "change-1.2.8"]], "1.2.7": [[11, "change-1.2.7"]], "1.2.6": [[11, "change-1.2.6"]], "1.2.5": [[11, "change-1.2.5"]], "1.2.4": [[11, "change-1.2.4"]], "1.2.3": [[11, "change-1.2.3"]], "1.2.2": [[11, "change-1.2.2"]], "1.2.1": [[11, "change-1.2.1"]], "1.2.0": [[11, "change-1.2.0"]], "1.2.0b3": [[11, "change-1.2.0b3"]], "1.2.0b2": [[11, "change-1.2.0b2"]], "1.2.0b1": [[11, "change-1.2.0b1"]], "0.4 Changelog": [[3, "changelog"]], "0.4.8": [[3, "change-0.4.8"]], "0.4.7p1": [[3, "change-0.4.7p1"]], "0.4.7": [[3, "change-0.4.7"]], "0.4.6": [[3, "change-0.4.6"]], "0.4.5": [[3, "change-0.4.5"]], "0.4.4": [[3, "change-0.4.4"]], "0.4.3": [[3, "change-0.4.3"]], "0.4.2p3": [[3, "change-0.4.2p3"]], "0.4.2": [[3, "change-0.4.2"]], "0.4.1": [[3, "change-0.4.1"]], "0.4.0": [[3, "change-0.4.0"]], "0.4.0beta6": [[3, "change-0.4.0beta6"]], "0.4.0beta5": [[3, "change-0.4.0beta5"]], "0.4.0beta4": [[3, "change-0.4.0beta4"]], "0.4.0beta3": [[3, "change-0.4.0beta3"]], "0.4.0beta2": [[3, "change-0.4.0beta2"]], "0.4.0beta1": [[3, "change-0.4.0beta1"]], "0.7 Changelog": [[6, "changelog"]], "0.7.11": [[6, "change-0.7.11"]], "0.7.10": [[6, "change-0.7.10"]], "0.7.9": [[6, "change-0.7.9"]], "0.7.8": [[6, "change-0.7.8"]], "0.7.7": [[6, "change-0.7.7"]], "0.7.6": [[6, "change-0.7.6"]], "0.7.5": [[6, "change-0.7.5"]], "0.7.4": [[6, "change-0.7.4"]], "0.7.3": [[6, "change-0.7.3"]], "0.7.2": [[6, "change-0.7.2"]], "0.7.1": [[6, "change-0.7.1"]], "0.7.0": [[6, "change-0.7.0"]], "0.7.0b4": [[6, "change-0.7.0b4"]], "0.7.0b3": [[6, "change-0.7.0b3"]], "0.7.0b2": [[6, "change-0.7.0b2"]], "0.7.0b1": [[6, "change-0.7.0b1"]], "0.6 Changelog": [[5, "changelog"]], "0.6.9": [[5, "change-0.6.9"]], "0.6.8": [[5, "change-0.6.8"]], "0.6.7": [[5, "change-0.6.7"]], "0.6.6": [[5, "change-0.6.6"]], "0.6.5": [[5, "change-0.6.5"]], "0.6.4": [[5, "change-0.6.4"]], "0.6.3": [[5, "change-0.6.3"]], "0.6.2": [[5, "change-0.6.2"]], "0.6.1": [[5, "change-0.6.1"]], "0.6.0": [[5, "change-0.6.0"]], "0.6beta3": [[5, "change-0.6beta3"]], "0.6beta2": [[5, "change-0.6beta2"]], "0.6beta1": [[5, "change-0.6beta1"]], "1.1 Changelog": [[10, "changelog"]], "1.1.18": [[10, "change-1.1.18"]], "1.1.17": [[10, "change-1.1.17"]], "1.1.16": [[10, "change-1.1.16"]], "1.1.15": [[10, "change-1.1.15"]], "1.1.14": [[10, "change-1.1.14"]], "1.1.13": [[10, "change-1.1.13"]], "1.1.12": [[10, "change-1.1.12"]], "1.1.11": [[10, "change-1.1.11"]], "1.1.10": [[10, "change-1.1.10"]], "1.1.9": [[10, "change-1.1.9"]], "1.1.8": [[10, "change-1.1.8"]], "1.1.7": [[10, "change-1.1.7"]], "1.1.6": [[10, "change-1.1.6"]], "1.1.5": [[10, "change-1.1.5"]], "1.1.4": [[10, "change-1.1.4"]], "1.1.3": [[10, "change-1.1.3"]], "1.1.2": [[10, "change-1.1.2"]], "1.1.1": [[10, "change-1.1.1"]], "1.1.0": [[10, "change-1.1.0"]], "1.1.0b3": [[10, "change-1.1.0b3"]], "1.1.0b2": [[10, "change-1.1.0b2"]], "1.1.0b1": [[10, "change-1.1.0b1"]], "0.9 Changelog": [[8, "changelog"]], "0.9.10": [[8, "change-0.9.10"]], "0.9.9": [[8, "change-0.9.9"]], "0.9.8": [[8, "change-0.9.8"]], "0.9.7": [[8, "change-0.9.7"]], "0.9.6": [[8, "change-0.9.6"]], "0.9.5": [[8, "change-0.9.5"]], "0.9.4": [[8, "change-0.9.4"]], "0.9.3": [[8, "change-0.9.3"]], "0.9.2": [[8, "change-0.9.2"]], "0.9.1": [[8, "change-0.9.1"]], "0.9.0": [[8, "change-0.9.0"]], "0.9.0b1": [[8, "change-0.9.0b1"]], "0.5 Changelog": [[4, "changelog"]], "0.5.9": [[4, "change-0.5.9"]], "0.5.8": [[4, "change-0.5.8"]], "0.5.7": [[4, "change-0.5.7"]], "0.5.6": [[4, "change-0.5.6"]], "0.5.5": [[4, "change-0.5.5"]], "0.5.4p2": [[4, "change-0.5.4p2"]], "0.5.4p1": [[4, "change-0.5.4p1"]], "0.5.4": [[4, "change-0.5.4"]], "0.5.3": [[4, "change-0.5.3"]], "0.5.2": [[4, "change-0.5.2"]], "0.5.1": [[4, "change-0.5.1"]], "0.5.0": [[4, "change-0.5.0"]], "0.5.0rc4": [[4, "change-0.5.0rc4"]], "0.5.0rc3": [[4, "change-0.5.0rc3"]], "0.5.0rc2": [[4, "change-0.5.0rc2"]], "0.5.0rc1": [[4, "change-0.5.0rc1"]], "0.5.0beta3": [[4, "change-0.5.0beta3"]], "0.5.0beta2": [[4, "change-0.5.0beta2"]], "0.5.0beta1": [[4, "change-0.5.0beta1"]], "1.0 Changelog": [[9, "changelog"]], "1.0.19": [[9, "change-1.0.19"]], "1.0.18": [[9, "change-1.0.18"]], "1.0.17": [[9, "change-1.0.17"]], "1.0.16": [[9, "change-1.0.16"]], "1.0.15": [[9, "change-1.0.15"]], "1.0.14": [[9, "change-1.0.14"]], "1.0.13": [[9, "change-1.0.13"]], "1.0.12": [[9, "change-1.0.12"]], "1.0.11": [[9, "change-1.0.11"]], "1.0.10": [[9, "change-1.0.10"]], "1.0.9": [[9, "change-1.0.9"]], "1.0.8": [[9, "change-1.0.8"]], "1.0.7": [[9, "change-1.0.7"]], "1.0.6": [[9, "change-1.0.6"]], "1.0.5": [[9, "change-1.0.5"]], "1.0.4": [[9, "change-1.0.4"]], "1.0.3": [[9, "change-1.0.3"]], "1.0.2": [[9, "change-1.0.2"]], "1.0.1": [[9, "change-1.0.1"]], "1.0.0": [[9, "change-1.0.0"]], "1.0.0b5": [[9, "change-1.0.0b5"]], "1.0.0b4": [[9, "change-1.0.0b4"]], "1.0.0b3": [[9, "change-1.0.0b3"]], "1.0.0b2": [[9, "change-1.0.0b2"]], "1.0.0b1": [[9, "change-1.0.0b1"]], "0.8 Changelog": [[7, "changelog"]], "0.8.7": [[7, "change-0.8.7"]], "0.8.6": [[7, "change-0.8.6"]], "0.8.5": [[7, "change-0.8.5"]], "0.8.4": [[7, "change-0.8.4"]], "0.8.3": [[7, "change-0.8.3"]], "0.8.2": [[7, "change-0.8.2"]], "0.8.1": [[7, "change-0.8.1"]], "0.8.0": [[7, "change-0.8.0"]], "0.8.0b2": [[7, "change-0.8.0b2"]], "0.8.0b1": [[7, "change-0.8.0b1"]], "1.4 Changelog": [[13, "changelog"]], "1.4.46": [[13, "change-1.4.46"]], "1.4.45": [[13, "change-1.4.45"]], "asyncio": [[13, "change-1.4.45-asyncio"], [13, "change-1.4.42-asyncio"], [13, "change-1.4.41-asyncio"], [13, "change-1.4.40-asyncio"], [13, "change-1.4.36-asyncio"], [13, "change-1.4.32-asyncio"], [13, "change-1.4.30-asyncio"], [13, "change-1.4.29-asyncio"], [13, "change-1.4.24-asyncio"], [13, "change-1.4.19-asyncio"], [13, "change-1.4.18-asyncio"], [13, "change-1.4.13-asyncio"], [13, "change-1.4.8-asyncio"], [13, "change-1.4.6-asyncio"], [13, "change-1.4.5-asyncio"], [13, "change-1.4.0b2-asyncio"]], "1.4.44": [[13, "change-1.4.44"]], "1.4.43": [[13, "change-1.4.43"]], "1.4.42": [[13, "change-1.4.42"]], "1.4.41": [[13, "change-1.4.41"]], "1.4.40": [[13, "change-1.4.40"]], "mypy": [[13, "change-1.4.40-mypy"], [13, "change-1.4.30-mypy"], [13, "change-1.4.29-mypy"], [13, "change-1.4.28-mypy"], [13, "change-1.4.26-mypy"], [13, "change-1.4.24-mypy"], [13, "change-1.4.23-mypy"], [13, "change-1.4.19-mypy"], [13, "change-1.4.10-mypy"], [13, "change-1.4.8-mypy"], [13, "change-1.4.7-mypy"], [13, "change-1.4.6-mypy"], [13, "change-1.4.5-mypy"], [13, "change-1.4.3-mypy"], [13, "change-1.4.2-mypy"], [13, "change-1.4.0-mypy"]], "1.4.39": [[13, "change-1.4.39"]], "1.4.38": [[13, "change-1.4.38"]], "1.4.37": [[13, "change-1.4.37"]], "1.4.36": [[13, "change-1.4.36"]], "1.4.35": [[13, "change-1.4.35"]], "1.4.34": [[13, "change-1.4.34"]], "1.4.33": [[13, "change-1.4.33"]], "1.4.32": [[13, "change-1.4.32"]], "mariadb": [[13, "change-1.4.32-mariadb"], [13, "change-1.4.29-mariadb"]], "1.4.31": [[13, "change-1.4.31"]], "1.4.30": [[13, "change-1.4.30"]], "1.4.29": [[13, "change-1.4.29"]], "1.4.28": [[13, "change-1.4.28"]], "platform": [[13, "change-1.4.28-platform"], [13, "change-1.4.25-platform"], [13, "change-1.4.24-platform"], [13, "change-1.4.0b2-platform"], [13, "change-1.4.0b1-platform"]], "1.4.27": [[13, "change-1.4.27"]], "1.4.26": [[13, "change-1.4.26"]], "1.4.25": [[13, "change-1.4.25"]], "1.4.24": [[13, "change-1.4.24"]], "1.4.23": [[13, "change-1.4.23"]], "1.4.22": [[13, "change-1.4.22"]], "1.4.21": [[13, "change-1.4.21"]], "1.4.20": [[13, "change-1.4.20"]], "1.4.19": [[13, "change-1.4.19"]], "1.4.18": [[13, "change-1.4.18"]], "1.4.17": [[13, "change-1.4.17"]], "1.4.16": [[13, "change-1.4.16"]], "1.4.15": [[13, "change-1.4.15"]], "1.4.14": [[13, "change-1.4.14"]], "1.4.13": [[13, "change-1.4.13"]], "1.4.12": [[13, "change-1.4.12"]], "1.4.11": [[13, "change-1.4.11"]], "1.4.10": [[13, "change-1.4.10"]], "1.4.9": [[13, "change-1.4.9"]], "1.4.8": [[13, "change-1.4.8"]], "1.4.7": [[13, "change-1.4.7"]], "1.4.6": [[13, "change-1.4.6"]], "1.4.5": [[13, "change-1.4.5"]], "1.4.4": [[13, "change-1.4.4"]], "1.4.3": [[13, "change-1.4.3"]], "1.4.2": [[13, "change-1.4.2"]], "1.4.1": [[13, "change-1.4.1"]], "1.4.0": [[13, "change-1.4.0"]], "1.4.0b3": [[13, "change-1.4.0b3"]], "1.4.0b2": [[13, "change-1.4.0b2"]], "1.4.0b1": [[13, "change-1.4.0b1"]], "0.1 Changelog": [[0, "changelog"]], "0.1.7": [[0, "change-0.1.7"]], "0.1.6": [[0, "change-0.1.6"]], "0.1.5": [[0, "change-0.1.5"]], "0.1.4": [[0, "change-0.1.4"]], "0.1.3": [[0, "change-0.1.3"]], "0.1.2": [[0, "change-0.1.2"]], "0.1.1": [[0, "change-0.1.1"]], "0.2 Changelog": [[1, "changelog"]], "0.2.8": [[1, "change-0.2.8"]], "0.2.7": [[1, "change-0.2.7"]], "0.2.6": [[1, "change-0.2.6"]], "0.2.5": [[1, "change-0.2.5"]], "0.2.4": [[1, "change-0.2.4"]], "0.2.3": [[1, "change-0.2.3"]], "0.2.2": [[1, "change-0.2.2"]], "0.2.1": [[1, "change-0.2.1"]], "0.2.0": [[1, "change-0.2.0"]]}, "indexentries": {"pep 487": [[12, "index-0"]], "python enhancement proposals": [[12, "index-0"], [13, "index-0"], [13, "index-1"], [26, "index-0"], [26, "index-1"], [26, "index-2"], [31, "index-1"], [48, "index-0"], [48, "index-1"], [49, "index-0"], [56, "index-0"], [56, "index-1"], [56, "index-2"], [83, "index-0"], [84, "index-0"], [95, "index-0"], [101, "index-0"], [118, "index-0"], [118, "index-1"], [123, "index-0"], [123, "index-1"], [123, "index-2"], [123, "index-3"], [140, "index-0"]], "pep 517": [[13, "index-1"]], "pep 632": [[13, "index-0"]], "pep 249": [[26, "index-1"], [26, "index-2"], [31, "index-1"], [48, "index-0"], [48, "index-1"]], "pep 484": [[26, "index-0"], [49, "index-0"], [56, "index-0"], [56, "index-1"], [56, "index-2"], [83, "index-0"], [84, "index-0"], [95, "index-0"], [101, "index-0"], [118, "index-0"], [123, "index-0"], [123, "index-1"], [123, "index-2"], [123, "index-3"], [140, "index-0"]], "compiles() (in module sqlalchemy.ext.compiler)": [[30, "sqlalchemy.ext.compiler.compiles"]], "deregister() (in module sqlalchemy.ext.compiler)": [[30, "sqlalchemy.ext.compiler.deregister"]], "module": [[30, "module-sqlalchemy.ext.compiler"], [31, "module-sqlalchemy.engine"], [41, "module-sqlalchemy.exc"], [42, "module-sqlalchemy.sql.expression"], [45, "module-sqlalchemy.future"], [47, "module-sqlalchemy.inspection"], [49, "module-sqlalchemy.schema"], [51, "module-sqlalchemy.pool"], [55, "module-sqlalchemy.ext.serializer"], [59, "module-sqlalchemy.types"], [61, "module-sqlalchemy.sql.visitors"], [62, "module-sqlalchemy.dialects.firebird.base"], [62, "module-sqlalchemy.dialects.firebird.fdb"], [62, "module-sqlalchemy.dialects.firebird.kinterbasdb"], [64, "module-sqlalchemy.dialects.mssql.base"], [64, "module-sqlalchemy.dialects.mssql.mxodbc"], [64, "module-sqlalchemy.dialects.mssql.pymssql"], [64, "module-sqlalchemy.dialects.mssql.pyodbc"], [65, "module-sqlalchemy.dialects.mysql.aiomysql"], [65, "module-sqlalchemy.dialects.mysql.asyncmy"], [65, "module-sqlalchemy.dialects.mysql.base"], [65, "module-sqlalchemy.dialects.mysql.cymysql"], [65, "module-sqlalchemy.dialects.mysql.mariadbconnector"], [65, "module-sqlalchemy.dialects.mysql.mysqlconnector"], [65, "module-sqlalchemy.dialects.mysql.mysqldb"], [65, "module-sqlalchemy.dialects.mysql.oursql"], [65, "module-sqlalchemy.dialects.mysql.pymysql"], [65, "module-sqlalchemy.dialects.mysql.pyodbc"], [66, "module-sqlalchemy.dialects.oracle.base"], [66, "module-sqlalchemy.dialects.oracle.cx_oracle"], [67, "module-sqlalchemy.dialects.postgresql.asyncpg"], [67, "module-sqlalchemy.dialects.postgresql.base"], [67, "module-sqlalchemy.dialects.postgresql.pg8000"], [67, "module-sqlalchemy.dialects.postgresql.psycopg2"], [67, "module-sqlalchemy.dialects.postgresql.psycopg2cffi"], [67, "module-sqlalchemy.dialects.postgresql.pygresql"], [67, "module-sqlalchemy.dialects.postgresql.pypostgresql"], [68, "module-sqlalchemy.dialects.sqlite"], [68, "module-sqlalchemy.dialects.sqlite.aiosqlite"], [68, "module-sqlalchemy.dialects.sqlite.base"], [68, "module-sqlalchemy.dialects.sqlite.pysqlcipher"], [68, "module-sqlalchemy.dialects.sqlite.pysqlite"], [69, "module-sqlalchemy.dialects.sybase.base"], [69, "module-sqlalchemy.dialects.sybase.mxodbc"], [69, "module-sqlalchemy.dialects.sybase.pyodbc"], [69, "module-sqlalchemy.dialects.sybase.pysybase"], [97, "module-sqlalchemy.orm.instrumentation"], [98, "module-examples.adjacency_list"], [98, "module-examples.association"], [98, "module-examples.asyncio"], [98, "module-examples.custom_attributes"], [98, "module-examples.dogpile_caching"], [98, "module-examples.dynamic_dict"], [98, "module-examples.elementtree"], [98, "module-examples.extending_query"], [98, "module-examples.generic_associations"], [98, "module-examples.graphs"], [98, "module-examples.inheritance"], [98, "module-examples.join_conditions"], [98, "module-examples.large_collection"], [98, "module-examples.materialized_paths"], [98, "module-examples.nested_sets"], [98, "module-examples.performance"], [98, "module-examples.postgis"], [98, "module-examples.sharding"], [98, "module-examples.space_invaders"], [98, "module-examples.versioned_history"], [98, "module-examples.versioned_rows"], [98, "module-examples.vertical"], [99, "module-sqlalchemy.orm.exc"], [101, "module-sqlalchemy.ext.associationproxy"], [103, "module-sqlalchemy.ext.automap"], [104, "module-sqlalchemy.ext.baked"], [105, "module-sqlalchemy.ext.declarative"], [112, "module-sqlalchemy.ext.horizontal_shard"], [113, "module-sqlalchemy.ext.hybrid"], [115, "module-sqlalchemy.ext.indexable"], [116, "module-sqlalchemy.ext.instrumentation"], [117, "module-sqlalchemy.ext.mutable"], [119, "module-sqlalchemy.ext.orderinglist"], [145, "module-sqlalchemy.orm.session"]], "sqlalchemy.ext.compiler": [[30, "module-sqlalchemy.ext.compiler"]], "basecursorresult (class in sqlalchemy.engine)": [[31, "sqlalchemy.engine.BaseCursorResult"]], "chunkediteratorresult (class in sqlalchemy.engine)": [[31, "sqlalchemy.engine.ChunkedIteratorResult"]], "connection": [[31, "index-0"]], "connection (class in sqlalchemy.engine)": [[31, "sqlalchemy.engine.Connection"]], "createengineplugin (class in sqlalchemy.engine)": [[31, "sqlalchemy.engine.CreateEnginePlugin"]], "cursorresult (class in sqlalchemy.engine)": [[31, "sqlalchemy.engine.CursorResult"]], "engine (class in sqlalchemy.engine)": [[31, "sqlalchemy.engine.Engine"]], "exceptioncontext (class in sqlalchemy.engine)": [[31, "sqlalchemy.engine.ExceptionContext"]], "filterresult (class in sqlalchemy.engine)": [[31, "sqlalchemy.engine.FilterResult"]], "frozenresult (class in sqlalchemy.engine)": [[31, "sqlalchemy.engine.FrozenResult"]], "iteratorresult (class in sqlalchemy.engine)": [[31, "sqlalchemy.engine.IteratorResult"]], "legacycursorresult (class in sqlalchemy.engine)": [[31, "sqlalchemy.engine.LegacyCursorResult"]], "legacyrow (class in sqlalchemy.engine)": [[31, "sqlalchemy.engine.LegacyRow"]], "mappingresult (class in sqlalchemy.engine)": [[31, "sqlalchemy.engine.MappingResult"]], "mergedresult (class in sqlalchemy.engine)": [[31, "sqlalchemy.engine.MergedResult"]], "nestedtransaction (class in sqlalchemy.engine)": [[31, "sqlalchemy.engine.NestedTransaction"]], "result (class in sqlalchemy.engine)": [[31, "sqlalchemy.engine.Result"]], "roottransaction (class in sqlalchemy.engine)": [[31, "sqlalchemy.engine.RootTransaction"]], "row (class in sqlalchemy.engine)": [[31, "sqlalchemy.engine.Row"]], "rowmapping (class in sqlalchemy.engine)": [[31, "sqlalchemy.engine.RowMapping"]], "scalarresult (class in sqlalchemy.engine)": [[31, "sqlalchemy.engine.ScalarResult"]], "transaction": [[31, "index-2"]], "transaction (class in sqlalchemy.engine)": [[31, "sqlalchemy.engine.Transaction"]], "twophasetransaction (class in sqlalchemy.engine)": [[31, "sqlalchemy.engine.TwoPhaseTransaction"]], "__init__() (sqlalchemy.engine.connection method)": [[31, "sqlalchemy.engine.Connection.__init__"]], "__init__() (sqlalchemy.engine.createengineplugin method)": [[31, "sqlalchemy.engine.CreateEnginePlugin.__init__"]], "_asdict() (sqlalchemy.engine.row method)": [[31, "sqlalchemy.engine.Row._asdict"]], "_fields (sqlalchemy.engine.row attribute)": [[31, "sqlalchemy.engine.Row._fields"]], "_mapping (sqlalchemy.engine.row attribute)": [[31, "sqlalchemy.engine.Row._mapping"]], "all() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.all"]], "all() (sqlalchemy.engine.mappingresult method)": [[31, "sqlalchemy.engine.MappingResult.all"]], "all() (sqlalchemy.engine.result method)": [[31, "sqlalchemy.engine.Result.all"]], "all() (sqlalchemy.engine.scalarresult method)": [[31, "sqlalchemy.engine.ScalarResult.all"]], "begin() (sqlalchemy.engine.connection method)": [[31, "sqlalchemy.engine.Connection.begin"]], "begin() (sqlalchemy.engine.engine method)": [[31, "sqlalchemy.engine.Engine.begin"]], "begin_nested() (sqlalchemy.engine.connection method)": [[31, "sqlalchemy.engine.Connection.begin_nested"]], "begin_twophase() (sqlalchemy.engine.connection method)": [[31, "sqlalchemy.engine.Connection.begin_twophase"]], "chained_exception (sqlalchemy.engine.exceptioncontext attribute)": [[31, "sqlalchemy.engine.ExceptionContext.chained_exception"]], "clear_compiled_cache() (sqlalchemy.engine.engine method)": [[31, "sqlalchemy.engine.Engine.clear_compiled_cache"]], "close() (sqlalchemy.engine.connection method)": [[31, "sqlalchemy.engine.Connection.close"]], "close() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.close"]], "close() (sqlalchemy.engine.filterresult method)": [[31, "sqlalchemy.engine.FilterResult.close"]], "close() (sqlalchemy.engine.legacycursorresult method)": [[31, "sqlalchemy.engine.LegacyCursorResult.close"]], "close() (sqlalchemy.engine.mappingresult method)": [[31, "sqlalchemy.engine.MappingResult.close"]], "close() (sqlalchemy.engine.nestedtransaction method)": [[31, "sqlalchemy.engine.NestedTransaction.close"]], "close() (sqlalchemy.engine.result method)": [[31, "sqlalchemy.engine.Result.close"]], "close() (sqlalchemy.engine.roottransaction method)": [[31, "sqlalchemy.engine.RootTransaction.close"]], "close() (sqlalchemy.engine.scalarresult method)": [[31, "sqlalchemy.engine.ScalarResult.close"]], "close() (sqlalchemy.engine.transaction method)": [[31, "sqlalchemy.engine.Transaction.close"]], "close() (sqlalchemy.engine.twophasetransaction method)": [[31, "sqlalchemy.engine.TwoPhaseTransaction.close"]], "closed (sqlalchemy.engine.connection attribute)": [[31, "sqlalchemy.engine.Connection.closed"]], "closed (sqlalchemy.engine.filterresult attribute)": [[31, "sqlalchemy.engine.FilterResult.closed"]], "closed (sqlalchemy.engine.iteratorresult attribute)": [[31, "sqlalchemy.engine.IteratorResult.closed"]], "closed (sqlalchemy.engine.mappingresult attribute)": [[31, "sqlalchemy.engine.MappingResult.closed"]], "closed (sqlalchemy.engine.result attribute)": [[31, "sqlalchemy.engine.Result.closed"]], "closed (sqlalchemy.engine.scalarresult attribute)": [[31, "sqlalchemy.engine.ScalarResult.closed"]], "columns() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.columns"]], "columns() (sqlalchemy.engine.mappingresult method)": [[31, "sqlalchemy.engine.MappingResult.columns"]], "columns() (sqlalchemy.engine.result method)": [[31, "sqlalchemy.engine.Result.columns"]], "commit() (sqlalchemy.engine.nestedtransaction method)": [[31, "sqlalchemy.engine.NestedTransaction.commit"]], "commit() (sqlalchemy.engine.roottransaction method)": [[31, "sqlalchemy.engine.RootTransaction.commit"]], "commit() (sqlalchemy.engine.transaction method)": [[31, "sqlalchemy.engine.Transaction.commit"]], "commit() (sqlalchemy.engine.twophasetransaction method)": [[31, "sqlalchemy.engine.TwoPhaseTransaction.commit"]], "connect() (sqlalchemy.engine.connection method)": [[31, "sqlalchemy.engine.Connection.connect"]], "connect() (sqlalchemy.engine.engine method)": [[31, "sqlalchemy.engine.Engine.connect"]], "connection (sqlalchemy.engine.connection attribute)": [[31, "sqlalchemy.engine.Connection.connection"]], "connection (sqlalchemy.engine.exceptioncontext attribute)": [[31, "sqlalchemy.engine.ExceptionContext.connection"]], "count (sqlalchemy.engine.row attribute)": [[31, "sqlalchemy.engine.Row.count"]], "cursor (sqlalchemy.engine.exceptioncontext attribute)": [[31, "sqlalchemy.engine.ExceptionContext.cursor"]], "default_isolation_level (sqlalchemy.engine.connection attribute)": [[31, "sqlalchemy.engine.Connection.default_isolation_level"]], "detach() (sqlalchemy.engine.connection method)": [[31, "sqlalchemy.engine.Connection.detach"]], "dispose() (sqlalchemy.engine.engine method)": [[31, "sqlalchemy.engine.Engine.dispose"]], "driver (sqlalchemy.engine.engine attribute)": [[31, "sqlalchemy.engine.Engine.driver"]], "engine (sqlalchemy.engine.engine attribute)": [[31, "sqlalchemy.engine.Engine.engine"]], "engine (sqlalchemy.engine.exceptioncontext attribute)": [[31, "sqlalchemy.engine.ExceptionContext.engine"]], "engine_created() (sqlalchemy.engine.createengineplugin method)": [[31, "sqlalchemy.engine.CreateEnginePlugin.engine_created"]], "exec_driver_sql() (sqlalchemy.engine.connection method)": [[31, "sqlalchemy.engine.Connection.exec_driver_sql"]], "execute() (sqlalchemy.engine.connection method)": [[31, "sqlalchemy.engine.Connection.execute"]], "execute() (sqlalchemy.engine.engine method)": [[31, "sqlalchemy.engine.Engine.execute"]], "execution_context (sqlalchemy.engine.exceptioncontext attribute)": [[31, "sqlalchemy.engine.ExceptionContext.execution_context"]], "execution_options() (sqlalchemy.engine.connection method)": [[31, "sqlalchemy.engine.Connection.execution_options"]], "execution_options() (sqlalchemy.engine.engine method)": [[31, "sqlalchemy.engine.Engine.execution_options"]], "fetchall() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.fetchall"]], "fetchall() (sqlalchemy.engine.mappingresult method)": [[31, "sqlalchemy.engine.MappingResult.fetchall"]], "fetchall() (sqlalchemy.engine.result method)": [[31, "sqlalchemy.engine.Result.fetchall"]], "fetchall() (sqlalchemy.engine.scalarresult method)": [[31, "sqlalchemy.engine.ScalarResult.fetchall"]], "fetchmany() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.fetchmany"]], "fetchmany() (sqlalchemy.engine.mappingresult method)": [[31, "sqlalchemy.engine.MappingResult.fetchmany"]], "fetchmany() (sqlalchemy.engine.result method)": [[31, "sqlalchemy.engine.Result.fetchmany"]], "fetchmany() (sqlalchemy.engine.scalarresult method)": [[31, "sqlalchemy.engine.ScalarResult.fetchmany"]], "fetchone() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.fetchone"]], "fetchone() (sqlalchemy.engine.mappingresult method)": [[31, "sqlalchemy.engine.MappingResult.fetchone"]], "fetchone() (sqlalchemy.engine.result method)": [[31, "sqlalchemy.engine.Result.fetchone"]], "first() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.first"]], "first() (sqlalchemy.engine.mappingresult method)": [[31, "sqlalchemy.engine.MappingResult.first"]], "first() (sqlalchemy.engine.result method)": [[31, "sqlalchemy.engine.Result.first"]], "first() (sqlalchemy.engine.scalarresult method)": [[31, "sqlalchemy.engine.ScalarResult.first"]], "freeze() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.freeze"]], "freeze() (sqlalchemy.engine.result method)": [[31, "sqlalchemy.engine.Result.freeze"]], "get_execution_options() (sqlalchemy.engine.connection method)": [[31, "sqlalchemy.engine.Connection.get_execution_options"]], "get_execution_options() (sqlalchemy.engine.engine method)": [[31, "sqlalchemy.engine.Engine.get_execution_options"]], "get_isolation_level() (sqlalchemy.engine.connection method)": [[31, "sqlalchemy.engine.Connection.get_isolation_level"]], "get_nested_transaction() (sqlalchemy.engine.connection method)": [[31, "sqlalchemy.engine.Connection.get_nested_transaction"]], "get_transaction() (sqlalchemy.engine.connection method)": [[31, "sqlalchemy.engine.Connection.get_transaction"]], "handle_dialect_kwargs() (sqlalchemy.engine.createengineplugin method)": [[31, "sqlalchemy.engine.CreateEnginePlugin.handle_dialect_kwargs"]], "handle_pool_kwargs() (sqlalchemy.engine.createengineplugin method)": [[31, "sqlalchemy.engine.CreateEnginePlugin.handle_pool_kwargs"]], "has_key() (sqlalchemy.engine.legacyrow method)": [[31, "sqlalchemy.engine.LegacyRow.has_key"]], "has_table() (sqlalchemy.engine.engine method)": [[31, "sqlalchemy.engine.Engine.has_table"]], "in_nested_transaction() (sqlalchemy.engine.connection method)": [[31, "sqlalchemy.engine.Connection.in_nested_transaction"]], "in_transaction() (sqlalchemy.engine.connection method)": [[31, "sqlalchemy.engine.Connection.in_transaction"]], "index (sqlalchemy.engine.row attribute)": [[31, "sqlalchemy.engine.Row.index"]], "info (sqlalchemy.engine.connection attribute)": [[31, "sqlalchemy.engine.Connection.info"]], "inserted_primary_key (sqlalchemy.engine.basecursorresult attribute)": [[31, "sqlalchemy.engine.BaseCursorResult.inserted_primary_key"]], "inserted_primary_key (sqlalchemy.engine.cursorresult attribute)": [[31, "sqlalchemy.engine.CursorResult.inserted_primary_key"]], "inserted_primary_key_rows (sqlalchemy.engine.basecursorresult attribute)": [[31, "sqlalchemy.engine.BaseCursorResult.inserted_primary_key_rows"]], "inserted_primary_key_rows (sqlalchemy.engine.cursorresult attribute)": [[31, "sqlalchemy.engine.CursorResult.inserted_primary_key_rows"]], "invalidate() (sqlalchemy.engine.connection method)": [[31, "sqlalchemy.engine.Connection.invalidate"]], "invalidate_pool_on_disconnect (sqlalchemy.engine.exceptioncontext attribute)": [[31, "sqlalchemy.engine.ExceptionContext.invalidate_pool_on_disconnect"]], "invalidated (sqlalchemy.engine.connection attribute)": [[31, "sqlalchemy.engine.Connection.invalidated"]], "is_disconnect (sqlalchemy.engine.exceptioncontext attribute)": [[31, "sqlalchemy.engine.ExceptionContext.is_disconnect"]], "is_insert (sqlalchemy.engine.basecursorresult attribute)": [[31, "sqlalchemy.engine.BaseCursorResult.is_insert"]], "is_insert (sqlalchemy.engine.cursorresult attribute)": [[31, "sqlalchemy.engine.CursorResult.is_insert"]], "items() (sqlalchemy.engine.legacyrow method)": [[31, "sqlalchemy.engine.LegacyRow.items"]], "items() (sqlalchemy.engine.rowmapping method)": [[31, "sqlalchemy.engine.RowMapping.items"]], "iterkeys() (sqlalchemy.engine.legacyrow method)": [[31, "sqlalchemy.engine.LegacyRow.iterkeys"]], "itervalues() (sqlalchemy.engine.legacyrow method)": [[31, "sqlalchemy.engine.LegacyRow.itervalues"]], "keys() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.keys"]], "keys() (sqlalchemy.engine.mappingresult method)": [[31, "sqlalchemy.engine.MappingResult.keys"]], "keys() (sqlalchemy.engine.result method)": [[31, "sqlalchemy.engine.Result.keys"]], "keys() (sqlalchemy.engine.row method)": [[31, "sqlalchemy.engine.Row.keys"]], "keys() (sqlalchemy.engine.rowmapping method)": [[31, "sqlalchemy.engine.RowMapping.keys"]], "last_inserted_params() (sqlalchemy.engine.basecursorresult method)": [[31, "sqlalchemy.engine.BaseCursorResult.last_inserted_params"]], "last_inserted_params() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.last_inserted_params"]], "last_updated_params() (sqlalchemy.engine.basecursorresult method)": [[31, "sqlalchemy.engine.BaseCursorResult.last_updated_params"]], "last_updated_params() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.last_updated_params"]], "lastrow_has_defaults() (sqlalchemy.engine.basecursorresult method)": [[31, "sqlalchemy.engine.BaseCursorResult.lastrow_has_defaults"]], "lastrow_has_defaults() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.lastrow_has_defaults"]], "lastrowid (sqlalchemy.engine.basecursorresult attribute)": [[31, "sqlalchemy.engine.BaseCursorResult.lastrowid"]], "lastrowid (sqlalchemy.engine.cursorresult attribute)": [[31, "sqlalchemy.engine.CursorResult.lastrowid"]], "mappings() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.mappings"]], "mappings() (sqlalchemy.engine.result method)": [[31, "sqlalchemy.engine.Result.mappings"]], "merge() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.merge"]], "merge() (sqlalchemy.engine.result method)": [[31, "sqlalchemy.engine.Result.merge"]], "name (sqlalchemy.engine.engine attribute)": [[31, "sqlalchemy.engine.Engine.name"]], "one() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.one"]], "one() (sqlalchemy.engine.mappingresult method)": [[31, "sqlalchemy.engine.MappingResult.one"]], "one() (sqlalchemy.engine.result method)": [[31, "sqlalchemy.engine.Result.one"]], "one() (sqlalchemy.engine.scalarresult method)": [[31, "sqlalchemy.engine.ScalarResult.one"]], "one_or_none() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.one_or_none"]], "one_or_none() (sqlalchemy.engine.mappingresult method)": [[31, "sqlalchemy.engine.MappingResult.one_or_none"]], "one_or_none() (sqlalchemy.engine.result method)": [[31, "sqlalchemy.engine.Result.one_or_none"]], "one_or_none() (sqlalchemy.engine.scalarresult method)": [[31, "sqlalchemy.engine.ScalarResult.one_or_none"]], "original_exception (sqlalchemy.engine.exceptioncontext attribute)": [[31, "sqlalchemy.engine.ExceptionContext.original_exception"]], "parameters (sqlalchemy.engine.exceptioncontext attribute)": [[31, "sqlalchemy.engine.ExceptionContext.parameters"]], "partitions() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.partitions"]], "partitions() (sqlalchemy.engine.mappingresult method)": [[31, "sqlalchemy.engine.MappingResult.partitions"]], "partitions() (sqlalchemy.engine.result method)": [[31, "sqlalchemy.engine.Result.partitions"]], "partitions() (sqlalchemy.engine.scalarresult method)": [[31, "sqlalchemy.engine.ScalarResult.partitions"]], "postfetch_cols() (sqlalchemy.engine.basecursorresult method)": [[31, "sqlalchemy.engine.BaseCursorResult.postfetch_cols"]], "postfetch_cols() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.postfetch_cols"]], "prefetch_cols() (sqlalchemy.engine.basecursorresult method)": [[31, "sqlalchemy.engine.BaseCursorResult.prefetch_cols"]], "prefetch_cols() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.prefetch_cols"]], "prepare() (sqlalchemy.engine.twophasetransaction method)": [[31, "sqlalchemy.engine.TwoPhaseTransaction.prepare"]], "raw_connection() (sqlalchemy.engine.engine method)": [[31, "sqlalchemy.engine.Engine.raw_connection"]], "returned_defaults (sqlalchemy.engine.basecursorresult attribute)": [[31, "sqlalchemy.engine.BaseCursorResult.returned_defaults"]], "returned_defaults (sqlalchemy.engine.cursorresult attribute)": [[31, "sqlalchemy.engine.CursorResult.returned_defaults"]], "returned_defaults_rows (sqlalchemy.engine.basecursorresult attribute)": [[31, "sqlalchemy.engine.BaseCursorResult.returned_defaults_rows"]], "returned_defaults_rows (sqlalchemy.engine.cursorresult attribute)": [[31, "sqlalchemy.engine.CursorResult.returned_defaults_rows"]], "returns_rows (sqlalchemy.engine.basecursorresult attribute)": [[31, "sqlalchemy.engine.BaseCursorResult.returns_rows"]], "returns_rows (sqlalchemy.engine.cursorresult attribute)": [[31, "sqlalchemy.engine.CursorResult.returns_rows"]], "rollback() (sqlalchemy.engine.nestedtransaction method)": [[31, "sqlalchemy.engine.NestedTransaction.rollback"]], "rollback() (sqlalchemy.engine.roottransaction method)": [[31, "sqlalchemy.engine.RootTransaction.rollback"]], "rollback() (sqlalchemy.engine.transaction method)": [[31, "sqlalchemy.engine.Transaction.rollback"]], "rollback() (sqlalchemy.engine.twophasetransaction method)": [[31, "sqlalchemy.engine.TwoPhaseTransaction.rollback"]], "rowcount (sqlalchemy.engine.basecursorresult attribute)": [[31, "sqlalchemy.engine.BaseCursorResult.rowcount"]], "rowcount (sqlalchemy.engine.cursorresult attribute)": [[31, "sqlalchemy.engine.CursorResult.rowcount"]], "run_callable() (sqlalchemy.engine.connection method)": [[31, "sqlalchemy.engine.Connection.run_callable"]], "run_callable() (sqlalchemy.engine.engine method)": [[31, "sqlalchemy.engine.Engine.run_callable"]], "scalar() (sqlalchemy.engine.connection method)": [[31, "sqlalchemy.engine.Connection.scalar"]], "scalar() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.scalar"]], "scalar() (sqlalchemy.engine.engine method)": [[31, "sqlalchemy.engine.Engine.scalar"]], "scalar() (sqlalchemy.engine.result method)": [[31, "sqlalchemy.engine.Result.scalar"]], "scalar_one() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.scalar_one"]], "scalar_one() (sqlalchemy.engine.result method)": [[31, "sqlalchemy.engine.Result.scalar_one"]], "scalar_one_or_none() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.scalar_one_or_none"]], "scalar_one_or_none() (sqlalchemy.engine.result method)": [[31, "sqlalchemy.engine.Result.scalar_one_or_none"]], "scalars() (sqlalchemy.engine.connection method)": [[31, "sqlalchemy.engine.Connection.scalars"]], "scalars() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.scalars"]], "scalars() (sqlalchemy.engine.result method)": [[31, "sqlalchemy.engine.Result.scalars"]], "schema_for_object() (sqlalchemy.engine.connection method)": [[31, "sqlalchemy.engine.Connection.schema_for_object"]], "sqlalchemy.engine": [[31, "module-sqlalchemy.engine"]], "sqlalchemy_exception (sqlalchemy.engine.exceptioncontext attribute)": [[31, "sqlalchemy.engine.ExceptionContext.sqlalchemy_exception"]], "statement (sqlalchemy.engine.exceptioncontext attribute)": [[31, "sqlalchemy.engine.ExceptionContext.statement"]], "supports_sane_multi_rowcount() (sqlalchemy.engine.basecursorresult method)": [[31, "sqlalchemy.engine.BaseCursorResult.supports_sane_multi_rowcount"]], "supports_sane_multi_rowcount() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.supports_sane_multi_rowcount"]], "supports_sane_rowcount() (sqlalchemy.engine.basecursorresult method)": [[31, "sqlalchemy.engine.BaseCursorResult.supports_sane_rowcount"]], "supports_sane_rowcount() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.supports_sane_rowcount"]], "table_names() (sqlalchemy.engine.engine method)": [[31, "sqlalchemy.engine.Engine.table_names"]], "thread safety": [[31, "index-0"], [31, "index-2"]], "transaction() (sqlalchemy.engine.connection method)": [[31, "sqlalchemy.engine.Connection.transaction"]], "transaction() (sqlalchemy.engine.engine method)": [[31, "sqlalchemy.engine.Engine.transaction"]], "unique() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.unique"]], "unique() (sqlalchemy.engine.mappingresult method)": [[31, "sqlalchemy.engine.MappingResult.unique"]], "unique() (sqlalchemy.engine.result method)": [[31, "sqlalchemy.engine.Result.unique"]], "unique() (sqlalchemy.engine.scalarresult method)": [[31, "sqlalchemy.engine.ScalarResult.unique"]], "update_execution_options() (sqlalchemy.engine.engine method)": [[31, "sqlalchemy.engine.Engine.update_execution_options"]], "update_url() (sqlalchemy.engine.createengineplugin method)": [[31, "sqlalchemy.engine.CreateEnginePlugin.update_url"]], "values() (sqlalchemy.engine.legacyrow method)": [[31, "sqlalchemy.engine.LegacyRow.values"]], "values() (sqlalchemy.engine.rowmapping method)": [[31, "sqlalchemy.engine.RowMapping.values"]], "yield_per() (sqlalchemy.engine.chunkediteratorresult method)": [[31, "sqlalchemy.engine.ChunkedIteratorResult.yield_per"]], "yield_per() (sqlalchemy.engine.cursorresult method)": [[31, "sqlalchemy.engine.CursorResult.yield_per"]], "yield_per() (sqlalchemy.engine.filterresult method)": [[31, "sqlalchemy.engine.FilterResult.yield_per"]], "yield_per() (sqlalchemy.engine.mappingresult method)": [[31, "sqlalchemy.engine.MappingResult.yield_per"]], "yield_per() (sqlalchemy.engine.result method)": [[31, "sqlalchemy.engine.Result.yield_per"]], "yield_per() (sqlalchemy.engine.scalarresult method)": [[31, "sqlalchemy.engine.ScalarResult.yield_per"]], "checkconstraint (class in sqlalchemy.schema)": [[32, "sqlalchemy.schema.CheckConstraint"]], "columncollectionconstraint (class in sqlalchemy.schema)": [[32, "sqlalchemy.schema.ColumnCollectionConstraint"]], "columncollectionmixin (class in sqlalchemy.schema)": [[32, "sqlalchemy.schema.ColumnCollectionMixin"]], "constraint (class in sqlalchemy.schema)": [[32, "sqlalchemy.schema.Constraint"]], "foreignkey (class in sqlalchemy.schema)": [[32, "sqlalchemy.schema.ForeignKey"]], "foreignkeyconstraint (class in sqlalchemy.schema)": [[32, "sqlalchemy.schema.ForeignKeyConstraint"]], "index (class in sqlalchemy.schema)": [[32, "sqlalchemy.schema.Index"]], "primarykeyconstraint (class in sqlalchemy.schema)": [[32, "sqlalchemy.schema.PrimaryKeyConstraint"]], "uniqueconstraint (class in sqlalchemy.schema)": [[32, "sqlalchemy.schema.UniqueConstraint"]], "__init__() (sqlalchemy.schema.checkconstraint method)": [[32, "sqlalchemy.schema.CheckConstraint.__init__"]], "__init__() (sqlalchemy.schema.columncollectionconstraint method)": [[32, "sqlalchemy.schema.ColumnCollectionConstraint.__init__"]], "__init__() (sqlalchemy.schema.constraint method)": [[32, "sqlalchemy.schema.Constraint.__init__"]], "__init__() (sqlalchemy.schema.foreignkey method)": [[32, "sqlalchemy.schema.ForeignKey.__init__"]], "__init__() (sqlalchemy.schema.foreignkeyconstraint method)": [[32, "sqlalchemy.schema.ForeignKeyConstraint.__init__"]], "__init__() (sqlalchemy.schema.index method)": [[32, "sqlalchemy.schema.Index.__init__"]], "__init__() (sqlalchemy.schema.uniqueconstraint method)": [[32, "sqlalchemy.schema.UniqueConstraint.__init__"]], "argument_for() (sqlalchemy.schema.checkconstraint class method)": [[32, "sqlalchemy.schema.CheckConstraint.argument_for"]], "argument_for() (sqlalchemy.schema.columncollectionconstraint class method)": [[32, "sqlalchemy.schema.ColumnCollectionConstraint.argument_for"]], "argument_for() (sqlalchemy.schema.foreignkey class method)": [[32, "sqlalchemy.schema.ForeignKey.argument_for"]], "argument_for() (sqlalchemy.schema.foreignkeyconstraint class method)": [[32, "sqlalchemy.schema.ForeignKeyConstraint.argument_for"]], "argument_for() (sqlalchemy.schema.index class method)": [[32, "sqlalchemy.schema.Index.argument_for"]], "argument_for() (sqlalchemy.schema.primarykeyconstraint class method)": [[32, "sqlalchemy.schema.PrimaryKeyConstraint.argument_for"]], "argument_for() (sqlalchemy.schema.uniqueconstraint class method)": [[32, "sqlalchemy.schema.UniqueConstraint.argument_for"]], "bind (sqlalchemy.schema.index attribute)": [[32, "sqlalchemy.schema.Index.bind"]], "column (sqlalchemy.schema.foreignkey attribute)": [[32, "sqlalchemy.schema.ForeignKey.column"]], "column_keys (sqlalchemy.schema.foreignkeyconstraint attribute)": [[32, "sqlalchemy.schema.ForeignKeyConstraint.column_keys"]], "columns (sqlalchemy.schema.checkconstraint attribute)": [[32, "sqlalchemy.schema.CheckConstraint.columns"]], "columns (sqlalchemy.schema.columncollectionconstraint attribute)": [[32, "sqlalchemy.schema.ColumnCollectionConstraint.columns"]], "columns (sqlalchemy.schema.columncollectionmixin attribute)": [[32, "sqlalchemy.schema.ColumnCollectionMixin.columns"]], "columns (sqlalchemy.schema.foreignkeyconstraint attribute)": [[32, "sqlalchemy.schema.ForeignKeyConstraint.columns"]], "columns (sqlalchemy.schema.index attribute)": [[32, "sqlalchemy.schema.Index.columns"]], "columns (sqlalchemy.schema.primarykeyconstraint attribute)": [[32, "sqlalchemy.schema.PrimaryKeyConstraint.columns"]], "columns (sqlalchemy.schema.uniqueconstraint attribute)": [[32, "sqlalchemy.schema.UniqueConstraint.columns"]], "contains_column() (sqlalchemy.schema.checkconstraint method)": [[32, "sqlalchemy.schema.CheckConstraint.contains_column"]], "contains_column() (sqlalchemy.schema.columncollectionconstraint method)": [[32, "sqlalchemy.schema.ColumnCollectionConstraint.contains_column"]], "contains_column() (sqlalchemy.schema.foreignkeyconstraint method)": [[32, "sqlalchemy.schema.ForeignKeyConstraint.contains_column"]], "contains_column() (sqlalchemy.schema.primarykeyconstraint method)": [[32, "sqlalchemy.schema.PrimaryKeyConstraint.contains_column"]], "contains_column() (sqlalchemy.schema.uniqueconstraint method)": [[32, "sqlalchemy.schema.UniqueConstraint.contains_column"]], "conv() (in module sqlalchemy.schema)": [[32, "sqlalchemy.schema.conv"]], "copy() (sqlalchemy.schema.checkconstraint method)": [[32, "sqlalchemy.schema.CheckConstraint.copy"]], "copy() (sqlalchemy.schema.columncollectionconstraint method)": [[32, "sqlalchemy.schema.ColumnCollectionConstraint.copy"]], "copy() (sqlalchemy.schema.constraint method)": [[32, "sqlalchemy.schema.Constraint.copy"]], "copy() (sqlalchemy.schema.foreignkey method)": [[32, "sqlalchemy.schema.ForeignKey.copy"]], "copy() (sqlalchemy.schema.foreignkeyconstraint method)": [[32, "sqlalchemy.schema.ForeignKeyConstraint.copy"]], "copy() (sqlalchemy.schema.primarykeyconstraint method)": [[32, "sqlalchemy.schema.PrimaryKeyConstraint.copy"]], "copy() (sqlalchemy.schema.uniqueconstraint method)": [[32, "sqlalchemy.schema.UniqueConstraint.copy"]], "create() (sqlalchemy.schema.index method)": [[32, "sqlalchemy.schema.Index.create"]], "dialect_kwargs (sqlalchemy.schema.checkconstraint attribute)": [[32, "sqlalchemy.schema.CheckConstraint.dialect_kwargs"]], "dialect_kwargs (sqlalchemy.schema.columncollectionconstraint attribute)": [[32, "sqlalchemy.schema.ColumnCollectionConstraint.dialect_kwargs"]], "dialect_kwargs (sqlalchemy.schema.foreignkey attribute)": [[32, "sqlalchemy.schema.ForeignKey.dialect_kwargs"]], "dialect_kwargs (sqlalchemy.schema.foreignkeyconstraint attribute)": [[32, "sqlalchemy.schema.ForeignKeyConstraint.dialect_kwargs"]], "dialect_kwargs (sqlalchemy.schema.index attribute)": [[32, "sqlalchemy.schema.Index.dialect_kwargs"]], "dialect_kwargs (sqlalchemy.schema.primarykeyconstraint attribute)": [[32, "sqlalchemy.schema.PrimaryKeyConstraint.dialect_kwargs"]], "dialect_kwargs (sqlalchemy.schema.uniqueconstraint attribute)": [[32, "sqlalchemy.schema.UniqueConstraint.dialect_kwargs"]], "dialect_options (sqlalchemy.schema.checkconstraint attribute)": [[32, "sqlalchemy.schema.CheckConstraint.dialect_options"]], "dialect_options (sqlalchemy.schema.columncollectionconstraint attribute)": [[32, "sqlalchemy.schema.ColumnCollectionConstraint.dialect_options"]], "dialect_options (sqlalchemy.schema.foreignkey attribute)": [[32, "sqlalchemy.schema.ForeignKey.dialect_options"]], "dialect_options (sqlalchemy.schema.foreignkeyconstraint attribute)": [[32, "sqlalchemy.schema.ForeignKeyConstraint.dialect_options"]], "dialect_options (sqlalchemy.schema.index attribute)": [[32, "sqlalchemy.schema.Index.dialect_options"]], "dialect_options (sqlalchemy.schema.primarykeyconstraint attribute)": [[32, "sqlalchemy.schema.PrimaryKeyConstraint.dialect_options"]], "dialect_options (sqlalchemy.schema.uniqueconstraint attribute)": [[32, "sqlalchemy.schema.UniqueConstraint.dialect_options"]], "drop() (sqlalchemy.schema.index method)": [[32, "sqlalchemy.schema.Index.drop"]], "elements (sqlalchemy.schema.foreignkeyconstraint attribute)": [[32, "sqlalchemy.schema.ForeignKeyConstraint.elements"]], "get_children() (sqlalchemy.schema.checkconstraint method)": [[32, "sqlalchemy.schema.CheckConstraint.get_children"]], "get_children() (sqlalchemy.schema.columncollectionconstraint method)": [[32, "sqlalchemy.schema.ColumnCollectionConstraint.get_children"]], "get_children() (sqlalchemy.schema.foreignkey method)": [[32, "sqlalchemy.schema.ForeignKey.get_children"]], "get_children() (sqlalchemy.schema.foreignkeyconstraint method)": [[32, "sqlalchemy.schema.ForeignKeyConstraint.get_children"]], "get_children() (sqlalchemy.schema.index method)": [[32, "sqlalchemy.schema.Index.get_children"]], "get_children() (sqlalchemy.schema.primarykeyconstraint method)": [[32, "sqlalchemy.schema.PrimaryKeyConstraint.get_children"]], "get_children() (sqlalchemy.schema.uniqueconstraint method)": [[32, "sqlalchemy.schema.UniqueConstraint.get_children"]], "get_referent() (sqlalchemy.schema.foreignkey method)": [[32, "sqlalchemy.schema.ForeignKey.get_referent"]], "info (sqlalchemy.schema.checkconstraint attribute)": [[32, "sqlalchemy.schema.CheckConstraint.info"]], "info (sqlalchemy.schema.columncollectionconstraint attribute)": [[32, "sqlalchemy.schema.ColumnCollectionConstraint.info"]], "info (sqlalchemy.schema.foreignkey attribute)": [[32, "sqlalchemy.schema.ForeignKey.info"]], "info (sqlalchemy.schema.foreignkeyconstraint attribute)": [[32, "sqlalchemy.schema.ForeignKeyConstraint.info"]], "info (sqlalchemy.schema.index attribute)": [[32, "sqlalchemy.schema.Index.info"]], "info (sqlalchemy.schema.primarykeyconstraint attribute)": [[32, "sqlalchemy.schema.PrimaryKeyConstraint.info"]], "info (sqlalchemy.schema.uniqueconstraint attribute)": [[32, "sqlalchemy.schema.UniqueConstraint.info"]], "kwargs (sqlalchemy.schema.checkconstraint attribute)": [[32, "sqlalchemy.schema.CheckConstraint.kwargs"]], "kwargs (sqlalchemy.schema.columncollectionconstraint attribute)": [[32, "sqlalchemy.schema.ColumnCollectionConstraint.kwargs"]], "kwargs (sqlalchemy.schema.foreignkey attribute)": [[32, "sqlalchemy.schema.ForeignKey.kwargs"]], "kwargs (sqlalchemy.schema.foreignkeyconstraint attribute)": [[32, "sqlalchemy.schema.ForeignKeyConstraint.kwargs"]], "kwargs (sqlalchemy.schema.index attribute)": [[32, "sqlalchemy.schema.Index.kwargs"]], "kwargs (sqlalchemy.schema.primarykeyconstraint attribute)": [[32, "sqlalchemy.schema.PrimaryKeyConstraint.kwargs"]], "kwargs (sqlalchemy.schema.uniqueconstraint attribute)": [[32, "sqlalchemy.schema.UniqueConstraint.kwargs"]], "references() (sqlalchemy.schema.foreignkey method)": [[32, "sqlalchemy.schema.ForeignKey.references"]], "referred_table (sqlalchemy.schema.foreignkeyconstraint attribute)": [[32, "sqlalchemy.schema.ForeignKeyConstraint.referred_table"]], "target_fullname (sqlalchemy.schema.foreignkey attribute)": [[32, "sqlalchemy.schema.ForeignKey.target_fullname"]], "typedecorator (class in sqlalchemy.types)": [[33, "sqlalchemy.types.TypeDecorator"]], "typedecorator.comparator (class in sqlalchemy.types)": [[33, "sqlalchemy.types.TypeDecorator.Comparator"]], "userdefinedtype (class in sqlalchemy.types)": [[33, "sqlalchemy.types.UserDefinedType"]], "__init__() (sqlalchemy.types.typedecorator method)": [[33, "sqlalchemy.types.TypeDecorator.__init__"]], "bind_expression() (sqlalchemy.types.typedecorator method)": [[33, "sqlalchemy.types.TypeDecorator.bind_expression"]], "bind_processor() (sqlalchemy.types.typedecorator method)": [[33, "sqlalchemy.types.TypeDecorator.bind_processor"]], "cache_ok (sqlalchemy.types.typedecorator attribute)": [[33, "sqlalchemy.types.TypeDecorator.cache_ok"]], "cache_ok (sqlalchemy.types.userdefinedtype attribute)": [[33, "sqlalchemy.types.UserDefinedType.cache_ok"]], "coerce_compared_value() (sqlalchemy.types.typedecorator method)": [[33, "sqlalchemy.types.TypeDecorator.coerce_compared_value"]], "coerce_compared_value() (sqlalchemy.types.userdefinedtype method)": [[33, "sqlalchemy.types.UserDefinedType.coerce_compared_value"]], "coerce_to_is_types (sqlalchemy.types.typedecorator attribute)": [[33, "sqlalchemy.types.TypeDecorator.coerce_to_is_types"]], "column_expression() (sqlalchemy.types.typedecorator method)": [[33, "sqlalchemy.types.TypeDecorator.column_expression"]], "comparator_factory (sqlalchemy.types.typedecorator attribute)": [[33, "sqlalchemy.types.TypeDecorator.comparator_factory"]], "compare_values() (sqlalchemy.types.typedecorator method)": [[33, "sqlalchemy.types.TypeDecorator.compare_values"]], "copy() (sqlalchemy.types.typedecorator method)": [[33, "sqlalchemy.types.TypeDecorator.copy"]], "get_dbapi_type() (sqlalchemy.types.typedecorator method)": [[33, "sqlalchemy.types.TypeDecorator.get_dbapi_type"]], "literal_processor() (sqlalchemy.types.typedecorator method)": [[33, "sqlalchemy.types.TypeDecorator.literal_processor"]], "load_dialect_impl() (sqlalchemy.types.typedecorator method)": [[33, "sqlalchemy.types.TypeDecorator.load_dialect_impl"]], "operate() (sqlalchemy.types.typedecorator.comparator method)": [[33, "sqlalchemy.types.TypeDecorator.Comparator.operate"]], "process_bind_param() (sqlalchemy.types.typedecorator method)": [[33, "sqlalchemy.types.TypeDecorator.process_bind_param"]], "process_literal_param() (sqlalchemy.types.typedecorator method)": [[33, "sqlalchemy.types.TypeDecorator.process_literal_param"]], "process_result_value() (sqlalchemy.types.typedecorator method)": [[33, "sqlalchemy.types.TypeDecorator.process_result_value"]], "result_processor() (sqlalchemy.types.typedecorator method)": [[33, "sqlalchemy.types.TypeDecorator.result_processor"]], "reverse_operate() (sqlalchemy.types.typedecorator.comparator method)": [[33, "sqlalchemy.types.TypeDecorator.Comparator.reverse_operate"]], "sort_key_function (sqlalchemy.types.typedecorator attribute)": [[33, "sqlalchemy.types.TypeDecorator.sort_key_function"]], "type_engine() (sqlalchemy.types.typedecorator method)": [[33, "sqlalchemy.types.TypeDecorator.type_engine"]], "addconstraint (class in sqlalchemy.schema)": [[34, "sqlalchemy.schema.AddConstraint"]], "createcolumn (class in sqlalchemy.schema)": [[34, "sqlalchemy.schema.CreateColumn"]], "createindex (class in sqlalchemy.schema)": [[34, "sqlalchemy.schema.CreateIndex"]], "createschema (class in sqlalchemy.schema)": [[34, "sqlalchemy.schema.CreateSchema"]], "createsequence (class in sqlalchemy.schema)": [[34, "sqlalchemy.schema.CreateSequence"]], "createtable (class in sqlalchemy.schema)": [[34, "sqlalchemy.schema.CreateTable"]], "ddl (class in sqlalchemy.schema)": [[34, "sqlalchemy.schema.DDL"]], "ddlelement (class in sqlalchemy.schema)": [[34, "sqlalchemy.schema.DDLElement"]], "dropconstraint (class in sqlalchemy.schema)": [[34, "sqlalchemy.schema.DropConstraint"]], "dropindex (class in sqlalchemy.schema)": [[34, "sqlalchemy.schema.DropIndex"]], "dropschema (class in sqlalchemy.schema)": [[34, "sqlalchemy.schema.DropSchema"]], "dropsequence (class in sqlalchemy.schema)": [[34, "sqlalchemy.schema.DropSequence"]], "droptable (class in sqlalchemy.schema)": [[34, "sqlalchemy.schema.DropTable"]], "_createdropbase (class in sqlalchemy.schema)": [[34, "sqlalchemy.schema._CreateDropBase"]], "__call__() (sqlalchemy.schema.ddlelement method)": [[34, "sqlalchemy.schema.DDLElement.__call__"]], "__init__() (sqlalchemy.schema.createindex method)": [[34, "sqlalchemy.schema.CreateIndex.__init__"]], "__init__() (sqlalchemy.schema.createschema method)": [[34, "sqlalchemy.schema.CreateSchema.__init__"]], "__init__() (sqlalchemy.schema.createtable method)": [[34, "sqlalchemy.schema.CreateTable.__init__"]], "__init__() (sqlalchemy.schema.ddl method)": [[34, "sqlalchemy.schema.DDL.__init__"]], "__init__() (sqlalchemy.schema.dropindex method)": [[34, "sqlalchemy.schema.DropIndex.__init__"]], "__init__() (sqlalchemy.schema.dropschema method)": [[34, "sqlalchemy.schema.DropSchema.__init__"]], "__init__() (sqlalchemy.schema.droptable method)": [[34, "sqlalchemy.schema.DropTable.__init__"]], "against() (sqlalchemy.schema.ddlelement method)": [[34, "sqlalchemy.schema.DDLElement.against"]], "bind (sqlalchemy.schema.ddlelement attribute)": [[34, "sqlalchemy.schema.DDLElement.bind"]], "callable_ (sqlalchemy.schema.ddlelement attribute)": [[34, "sqlalchemy.schema.DDLElement.callable_"]], "dialect (sqlalchemy.schema.ddlelement attribute)": [[34, "sqlalchemy.schema.DDLElement.dialect"]], "execute() (sqlalchemy.schema.ddlelement method)": [[34, "sqlalchemy.schema.DDLElement.execute"]], "execute_if() (sqlalchemy.schema.ddlelement method)": [[34, "sqlalchemy.schema.DDLElement.execute_if"]], "on (sqlalchemy.schema.ddlelement attribute)": [[34, "sqlalchemy.schema.DDLElement.on"]], "sort_tables() (in module sqlalchemy.schema)": [[34, "sqlalchemy.schema.sort_tables"]], "sort_tables_and_constraints() (in module sqlalchemy.schema)": [[34, "sqlalchemy.schema.sort_tables_and_constraints"]], "target (sqlalchemy.schema.ddlelement attribute)": [[34, "sqlalchemy.schema.DDLElement.target"]], "columndefault (class in sqlalchemy.schema)": [[35, "sqlalchemy.schema.ColumnDefault"]], "computed (class in sqlalchemy.schema)": [[35, "sqlalchemy.schema.Computed"]], "defaultclause (class in sqlalchemy.schema)": [[35, "sqlalchemy.schema.DefaultClause"]], "defaultgenerator (class in sqlalchemy.schema)": [[35, "sqlalchemy.schema.DefaultGenerator"]], "fetchedvalue (class in sqlalchemy.schema)": [[35, "sqlalchemy.schema.FetchedValue"]], "identity (class in sqlalchemy.schema)": [[35, "sqlalchemy.schema.Identity"]], "sequence (class in sqlalchemy.schema)": [[35, "sqlalchemy.schema.Sequence"]], "__init__() (sqlalchemy.schema.computed method)": [[35, "sqlalchemy.schema.Computed.__init__"]], "__init__() (sqlalchemy.schema.identity method)": [[35, "sqlalchemy.schema.Identity.__init__"]], "__init__() (sqlalchemy.schema.sequence method)": [[35, "sqlalchemy.schema.Sequence.__init__"]], "bind (sqlalchemy.schema.sequence attribute)": [[35, "sqlalchemy.schema.Sequence.bind"]], "copy() (sqlalchemy.schema.computed method)": [[35, "sqlalchemy.schema.Computed.copy"]], "copy() (sqlalchemy.schema.identity method)": [[35, "sqlalchemy.schema.Identity.copy"]], "create() (sqlalchemy.schema.sequence method)": [[35, "sqlalchemy.schema.Sequence.create"]], "drop() (sqlalchemy.schema.sequence method)": [[35, "sqlalchemy.schema.Sequence.drop"]], "next_value() (sqlalchemy.schema.sequence method)": [[35, "sqlalchemy.schema.Sequence.next_value"]], "delete (class in sqlalchemy.sql.expression)": [[36, "sqlalchemy.sql.expression.Delete"]], "insert (class in sqlalchemy.sql.expression)": [[36, "sqlalchemy.sql.expression.Insert"]], "update (class in sqlalchemy.sql.expression)": [[36, "sqlalchemy.sql.expression.Update"]], "updatebase (class in sqlalchemy.sql.expression)": [[36, "sqlalchemy.sql.expression.UpdateBase"]], "valuesbase (class in sqlalchemy.sql.expression)": [[36, "sqlalchemy.sql.expression.ValuesBase"]], "__init__() (sqlalchemy.sql.expression.delete method)": [[36, "sqlalchemy.sql.expression.Delete.__init__"]], "__init__() (sqlalchemy.sql.expression.insert method)": [[36, "sqlalchemy.sql.expression.Insert.__init__"]], "__init__() (sqlalchemy.sql.expression.update method)": [[36, "sqlalchemy.sql.expression.Update.__init__"]], "bind (sqlalchemy.sql.expression.updatebase attribute)": [[36, "sqlalchemy.sql.expression.UpdateBase.bind"]], "delete() (in module sqlalchemy.sql.expression)": [[36, "sqlalchemy.sql.expression.delete"]], "entity_description (sqlalchemy.sql.expression.updatebase attribute)": [[36, "sqlalchemy.sql.expression.UpdateBase.entity_description"]], "exported_columns (sqlalchemy.sql.expression.updatebase attribute)": [[36, "sqlalchemy.sql.expression.UpdateBase.exported_columns"]], "from_select() (sqlalchemy.sql.expression.insert method)": [[36, "sqlalchemy.sql.expression.Insert.from_select"]], "inline() (sqlalchemy.sql.expression.insert method)": [[36, "sqlalchemy.sql.expression.Insert.inline"]], "inline() (sqlalchemy.sql.expression.update method)": [[36, "sqlalchemy.sql.expression.Update.inline"]], "insert() (in module sqlalchemy.sql.expression)": [[36, "sqlalchemy.sql.expression.insert"]], "ordered_values() (sqlalchemy.sql.expression.update method)": [[36, "sqlalchemy.sql.expression.Update.ordered_values"]], "params() (sqlalchemy.sql.expression.updatebase method)": [[36, "sqlalchemy.sql.expression.UpdateBase.params"]], "return_defaults() (sqlalchemy.sql.expression.valuesbase method)": [[36, "sqlalchemy.sql.expression.ValuesBase.return_defaults"]], "returning() (sqlalchemy.sql.expression.delete method)": [[36, "sqlalchemy.sql.expression.Delete.returning"]], "returning() (sqlalchemy.sql.expression.insert method)": [[36, "sqlalchemy.sql.expression.Insert.returning"]], "returning() (sqlalchemy.sql.expression.update method)": [[36, "sqlalchemy.sql.expression.Update.returning"]], "returning() (sqlalchemy.sql.expression.updatebase method)": [[36, "sqlalchemy.sql.expression.UpdateBase.returning"]], "returning_column_descriptions (sqlalchemy.sql.expression.updatebase attribute)": [[36, "sqlalchemy.sql.expression.UpdateBase.returning_column_descriptions"]], "update() (in module sqlalchemy.sql.expression)": [[36, "sqlalchemy.sql.expression.update"]], "values() (sqlalchemy.sql.expression.insert method)": [[36, "sqlalchemy.sql.expression.Insert.values"]], "values() (sqlalchemy.sql.expression.update method)": [[36, "sqlalchemy.sql.expression.Update.values"]], "values() (sqlalchemy.sql.expression.valuesbase method)": [[36, "sqlalchemy.sql.expression.ValuesBase.values"]], "where() (sqlalchemy.sql.expression.delete method)": [[36, "sqlalchemy.sql.expression.Delete.where"]], "where() (sqlalchemy.sql.expression.update method)": [[36, "sqlalchemy.sql.expression.Update.where"]], "with_dialect_options() (sqlalchemy.sql.expression.updatebase method)": [[36, "sqlalchemy.sql.expression.UpdateBase.with_dialect_options"]], "with_hint() (sqlalchemy.sql.expression.updatebase method)": [[36, "sqlalchemy.sql.expression.UpdateBase.with_hint"]], "url (class in sqlalchemy.engine)": [[37, "sqlalchemy.engine.URL"]], "create() (sqlalchemy.engine.url class method)": [[37, "sqlalchemy.engine.URL.create"]], "create_engine() (in module sqlalchemy)": [[37, "sqlalchemy.create_engine"]], "create_mock_engine() (in module sqlalchemy)": [[37, "sqlalchemy.create_mock_engine"]], "database (sqlalchemy.engine.url attribute)": [[37, "sqlalchemy.engine.URL.database"]], "difference_update_query() (sqlalchemy.engine.url method)": [[37, "sqlalchemy.engine.URL.difference_update_query"]], "drivername (sqlalchemy.engine.url attribute)": [[37, "sqlalchemy.engine.URL.drivername"]], "engine_from_config() (in module sqlalchemy)": [[37, "sqlalchemy.engine_from_config"]], "get_backend_name() (sqlalchemy.engine.url method)": [[37, "sqlalchemy.engine.URL.get_backend_name"]], "get_dialect() (sqlalchemy.engine.url method)": [[37, "sqlalchemy.engine.URL.get_dialect"]], "get_driver_name() (sqlalchemy.engine.url method)": [[37, "sqlalchemy.engine.URL.get_driver_name"]], "host (sqlalchemy.engine.url attribute)": [[37, "sqlalchemy.engine.URL.host"]], "make_url() (in module sqlalchemy.engine)": [[37, "sqlalchemy.engine.make_url"]], "normalized_query (sqlalchemy.engine.url attribute)": [[37, "sqlalchemy.engine.URL.normalized_query"]], "password (sqlalchemy.engine.url attribute)": [[37, "sqlalchemy.engine.URL.password"]], "port (sqlalchemy.engine.url attribute)": [[37, "sqlalchemy.engine.URL.port"]], "query (sqlalchemy.engine.url attribute)": [[37, "sqlalchemy.engine.URL.query"]], "render_as_string() (sqlalchemy.engine.url method)": [[37, "sqlalchemy.engine.URL.render_as_string"]], "set() (sqlalchemy.engine.url method)": [[37, "sqlalchemy.engine.URL.set"]], "translate_connect_args() (sqlalchemy.engine.url method)": [[37, "sqlalchemy.engine.URL.translate_connect_args"]], "update_query_dict() (sqlalchemy.engine.url method)": [[37, "sqlalchemy.engine.URL.update_query_dict"]], "update_query_pairs() (sqlalchemy.engine.url method)": [[37, "sqlalchemy.engine.URL.update_query_pairs"]], "update_query_string() (sqlalchemy.engine.url method)": [[37, "sqlalchemy.engine.URL.update_query_string"]], "username (sqlalchemy.engine.url attribute)": [[37, "sqlalchemy.engine.URL.username"]], "contains() (in module sqlalchemy.event)": [[39, "sqlalchemy.event.contains"]], "listen() (in module sqlalchemy.event)": [[39, "sqlalchemy.event.listen"]], "listens_for() (in module sqlalchemy.event)": [[39, "sqlalchemy.event.listens_for"]], "remove() (in module sqlalchemy.event)": [[39, "sqlalchemy.event.remove"]], "connectionevents (class in sqlalchemy.events)": [[40, "sqlalchemy.events.ConnectionEvents"]], "ddlevents (class in sqlalchemy.events)": [[40, "sqlalchemy.events.DDLEvents"]], "dialectevents (class in sqlalchemy.events)": [[40, "sqlalchemy.events.DialectEvents"]], "events (class in sqlalchemy.event.base)": [[40, "sqlalchemy.event.base.Events"]], "poolevents (class in sqlalchemy.events)": [[40, "sqlalchemy.events.PoolEvents"]], "schemaeventtarget (class in sqlalchemy.events)": [[40, "sqlalchemy.events.SchemaEventTarget"]], "after_create() (sqlalchemy.events.ddlevents method)": [[40, "sqlalchemy.events.DDLEvents.after_create"]], "after_cursor_execute() (sqlalchemy.events.connectionevents method)": [[40, "sqlalchemy.events.ConnectionEvents.after_cursor_execute"]], "after_drop() (sqlalchemy.events.ddlevents method)": [[40, "sqlalchemy.events.DDLEvents.after_drop"]], "after_execute() (sqlalchemy.events.connectionevents method)": [[40, "sqlalchemy.events.ConnectionEvents.after_execute"]], "after_parent_attach() (sqlalchemy.events.ddlevents method)": [[40, "sqlalchemy.events.DDLEvents.after_parent_attach"]], "before_create() (sqlalchemy.events.ddlevents method)": [[40, "sqlalchemy.events.DDLEvents.before_create"]], "before_cursor_execute() (sqlalchemy.events.connectionevents method)": [[40, "sqlalchemy.events.ConnectionEvents.before_cursor_execute"]], "before_drop() (sqlalchemy.events.ddlevents method)": [[40, "sqlalchemy.events.DDLEvents.before_drop"]], "before_execute() (sqlalchemy.events.connectionevents method)": [[40, "sqlalchemy.events.ConnectionEvents.before_execute"]], "before_parent_attach() (sqlalchemy.events.ddlevents method)": [[40, "sqlalchemy.events.DDLEvents.before_parent_attach"]], "begin() (sqlalchemy.events.connectionevents method)": [[40, "sqlalchemy.events.ConnectionEvents.begin"]], "begin_twophase() (sqlalchemy.events.connectionevents method)": [[40, "sqlalchemy.events.ConnectionEvents.begin_twophase"]], "checkin() (sqlalchemy.events.poolevents method)": [[40, "sqlalchemy.events.PoolEvents.checkin"]], "checkout() (sqlalchemy.events.poolevents method)": [[40, "sqlalchemy.events.PoolEvents.checkout"]], "close() (sqlalchemy.events.poolevents method)": [[40, "sqlalchemy.events.PoolEvents.close"]], "close_detached() (sqlalchemy.events.poolevents method)": [[40, "sqlalchemy.events.PoolEvents.close_detached"]], "column_reflect() (sqlalchemy.events.ddlevents method)": [[40, "sqlalchemy.events.DDLEvents.column_reflect"]], "commit() (sqlalchemy.events.connectionevents method)": [[40, "sqlalchemy.events.ConnectionEvents.commit"]], "commit_twophase() (sqlalchemy.events.connectionevents method)": [[40, "sqlalchemy.events.ConnectionEvents.commit_twophase"]], "connect() (sqlalchemy.events.poolevents method)": [[40, "sqlalchemy.events.PoolEvents.connect"]], "detach() (sqlalchemy.events.poolevents method)": [[40, "sqlalchemy.events.PoolEvents.detach"]], "do_connect() (sqlalchemy.events.dialectevents method)": [[40, "sqlalchemy.events.DialectEvents.do_connect"]], "do_execute() (sqlalchemy.events.dialectevents method)": [[40, "sqlalchemy.events.DialectEvents.do_execute"]], "do_execute_no_params() (sqlalchemy.events.dialectevents method)": [[40, "sqlalchemy.events.DialectEvents.do_execute_no_params"]], "do_executemany() (sqlalchemy.events.dialectevents method)": [[40, "sqlalchemy.events.DialectEvents.do_executemany"]], "do_setinputsizes() (sqlalchemy.events.dialectevents method)": [[40, "sqlalchemy.events.DialectEvents.do_setinputsizes"]], "engine_connect() (sqlalchemy.events.connectionevents method)": [[40, "sqlalchemy.events.ConnectionEvents.engine_connect"]], "engine_disposed() (sqlalchemy.events.connectionevents method)": [[40, "sqlalchemy.events.ConnectionEvents.engine_disposed"]], "first_connect() (sqlalchemy.events.poolevents method)": [[40, "sqlalchemy.events.PoolEvents.first_connect"]], "handle_error() (sqlalchemy.events.connectionevents method)": [[40, "sqlalchemy.events.ConnectionEvents.handle_error"]], "invalidate() (sqlalchemy.events.poolevents method)": [[40, "sqlalchemy.events.PoolEvents.invalidate"]], "prepare_twophase() (sqlalchemy.events.connectionevents method)": [[40, "sqlalchemy.events.ConnectionEvents.prepare_twophase"]], "release_savepoint() (sqlalchemy.events.connectionevents method)": [[40, "sqlalchemy.events.ConnectionEvents.release_savepoint"]], "reset() (sqlalchemy.events.poolevents method)": [[40, "sqlalchemy.events.PoolEvents.reset"]], "rollback() (sqlalchemy.events.connectionevents method)": [[40, "sqlalchemy.events.ConnectionEvents.rollback"]], "rollback_savepoint() (sqlalchemy.events.connectionevents method)": [[40, "sqlalchemy.events.ConnectionEvents.rollback_savepoint"]], "rollback_twophase() (sqlalchemy.events.connectionevents method)": [[40, "sqlalchemy.events.ConnectionEvents.rollback_twophase"]], "savepoint() (sqlalchemy.events.connectionevents method)": [[40, "sqlalchemy.events.ConnectionEvents.savepoint"]], "set_connection_execution_options() (sqlalchemy.events.connectionevents method)": [[40, "sqlalchemy.events.ConnectionEvents.set_connection_execution_options"]], "set_engine_execution_options() (sqlalchemy.events.connectionevents method)": [[40, "sqlalchemy.events.ConnectionEvents.set_engine_execution_options"]], "soft_invalidate() (sqlalchemy.events.poolevents method)": [[40, "sqlalchemy.events.PoolEvents.soft_invalidate"]], "ambiguousforeignkeyserror": [[41, "sqlalchemy.exc.AmbiguousForeignKeysError"]], "argumenterror": [[41, "sqlalchemy.exc.ArgumentError"]], "awaitrequired": [[41, "sqlalchemy.exc.AwaitRequired"]], "base20deprecationwarning": [[41, "sqlalchemy.exc.Base20DeprecationWarning"]], "circulardependencyerror": [[41, "sqlalchemy.exc.CircularDependencyError"]], "compileerror": [[41, "sqlalchemy.exc.CompileError"]], "dbapierror": [[41, "sqlalchemy.exc.DBAPIError"]], "dataerror": [[41, "sqlalchemy.exc.DataError"]], "databaseerror": [[41, "sqlalchemy.exc.DatabaseError"]], "disconnectionerror": [[41, "sqlalchemy.exc.DisconnectionError"]], "dontwrapmixin (class in sqlalchemy.exc)": [[41, "sqlalchemy.exc.DontWrapMixin"]], "hasdescriptioncode (class in sqlalchemy.exc)": [[41, "sqlalchemy.exc.HasDescriptionCode"]], "identifiererror": [[41, "sqlalchemy.exc.IdentifierError"]], "integrityerror": [[41, "sqlalchemy.exc.IntegrityError"]], "interfaceerror": [[41, "sqlalchemy.exc.InterfaceError"]], "internalerror": [[41, "sqlalchemy.exc.InternalError"]], "invalidrequesterror": [[41, "sqlalchemy.exc.InvalidRequestError"]], "invalidatepoolerror": [[41, "sqlalchemy.exc.InvalidatePoolError"]], "legacyapiwarning": [[41, "sqlalchemy.exc.LegacyAPIWarning"]], "missinggreenlet": [[41, "sqlalchemy.exc.MissingGreenlet"]], "movedin20warning": [[41, "sqlalchemy.exc.MovedIn20Warning"]], "multipleresultsfound": [[41, "sqlalchemy.exc.MultipleResultsFound"]], "noforeignkeyserror": [[41, "sqlalchemy.exc.NoForeignKeysError"]], "noinspectionavailable": [[41, "sqlalchemy.exc.NoInspectionAvailable"]], "noreferenceerror": [[41, "sqlalchemy.exc.NoReferenceError"]], "noreferencedcolumnerror": [[41, "sqlalchemy.exc.NoReferencedColumnError"]], "noreferencedtableerror": [[41, "sqlalchemy.exc.NoReferencedTableError"]], "noresultfound": [[41, "sqlalchemy.exc.NoResultFound"]], "nosuchcolumnerror": [[41, "sqlalchemy.exc.NoSuchColumnError"]], "nosuchmoduleerror": [[41, "sqlalchemy.exc.NoSuchModuleError"]], "nosuchtableerror": [[41, "sqlalchemy.exc.NoSuchTableError"]], "notsupportederror": [[41, "sqlalchemy.exc.NotSupportedError"]], "objectnotexecutableerror": [[41, "sqlalchemy.exc.ObjectNotExecutableError"]], "operationalerror": [[41, "sqlalchemy.exc.OperationalError"]], "pendingrollbackerror": [[41, "sqlalchemy.exc.PendingRollbackError"]], "programmingerror": [[41, "sqlalchemy.exc.ProgrammingError"]], "removedin20warning": [[41, "sqlalchemy.exc.RemovedIn20Warning"]], "resourceclosederror": [[41, "sqlalchemy.exc.ResourceClosedError"]], "sadeprecationwarning": [[41, "sqlalchemy.exc.SADeprecationWarning"]], "sapendingdeprecationwarning": [[41, "sqlalchemy.exc.SAPendingDeprecationWarning"]], "sawarning": [[41, "sqlalchemy.exc.SAWarning"]], "sqlalchemyerror": [[41, "sqlalchemy.exc.SQLAlchemyError"]], "statementerror": [[41, "sqlalchemy.exc.StatementError"]], "timeouterror": [[41, "sqlalchemy.exc.TimeoutError"]], "unboundexecutionerror": [[41, "sqlalchemy.exc.UnboundExecutionError"]], "unreflectabletableerror": [[41, "sqlalchemy.exc.UnreflectableTableError"]], "unsupportedcompilationerror": [[41, "sqlalchemy.exc.UnsupportedCompilationError"]], "deprecated_since (sqlalchemy.exc.base20deprecationwarning attribute)": [[41, "sqlalchemy.exc.Base20DeprecationWarning.deprecated_since"]], "deprecated_since (sqlalchemy.exc.sadeprecationwarning attribute)": [[41, "sqlalchemy.exc.SADeprecationWarning.deprecated_since"]], "deprecated_since (sqlalchemy.exc.sapendingdeprecationwarning attribute)": [[41, "sqlalchemy.exc.SAPendingDeprecationWarning.deprecated_since"]], "orig (sqlalchemy.exc.statementerror attribute)": [[41, "sqlalchemy.exc.StatementError.orig"]], "params (sqlalchemy.exc.statementerror attribute)": [[41, "sqlalchemy.exc.StatementError.params"]], "sqlalchemy.exc": [[41, "module-sqlalchemy.exc"]], "statement (sqlalchemy.exc.statementerror attribute)": [[41, "sqlalchemy.exc.StatementError.statement"]], "sqlalchemy.sql.expression": [[42, "module-sqlalchemy.sql.expression"]], "cachekey (class in sqlalchemy.sql.expression)": [[43, "sqlalchemy.sql.expression.CacheKey"]], "clauseelement (class in sqlalchemy.sql.expression)": [[43, "sqlalchemy.sql.expression.ClauseElement"]], "dialectkwargs (class in sqlalchemy.sql.base)": [[43, "sqlalchemy.sql.base.DialectKWArgs"]], "hascachekey (class in sqlalchemy.sql.traversals)": [[43, "sqlalchemy.sql.traversals.HasCacheKey"]], "lambdaelement (class in sqlalchemy.sql.expression)": [[43, "sqlalchemy.sql.expression.LambdaElement"]], "statementlambdaelement (class in sqlalchemy.sql.expression)": [[43, "sqlalchemy.sql.expression.StatementLambdaElement"]], "add_criteria() (sqlalchemy.sql.expression.statementlambdaelement method)": [[43, "sqlalchemy.sql.expression.StatementLambdaElement.add_criteria"]], "argument_for() (sqlalchemy.sql.base.dialectkwargs class method)": [[43, "sqlalchemy.sql.base.DialectKWArgs.argument_for"]], "compare() (sqlalchemy.sql.expression.clauseelement method)": [[43, "sqlalchemy.sql.expression.ClauseElement.compare"]], "compile() (sqlalchemy.sql.expression.clauseelement method)": [[43, "sqlalchemy.sql.expression.ClauseElement.compile"]], "dialect_kwargs (sqlalchemy.sql.base.dialectkwargs attribute)": [[43, "sqlalchemy.sql.base.DialectKWArgs.dialect_kwargs"]], "dialect_options (sqlalchemy.sql.base.dialectkwargs attribute)": [[43, "sqlalchemy.sql.base.DialectKWArgs.dialect_options"]], "get_children() (sqlalchemy.sql.expression.clauseelement method)": [[43, "sqlalchemy.sql.expression.ClauseElement.get_children"]], "inherit_cache (sqlalchemy.sql.expression.clauseelement attribute)": [[43, "sqlalchemy.sql.expression.ClauseElement.inherit_cache"]], "inherit_cache (sqlalchemy.sql.traversals.hascachekey attribute)": [[43, "sqlalchemy.sql.traversals.HasCacheKey.inherit_cache"]], "kwargs (sqlalchemy.sql.base.dialectkwargs attribute)": [[43, "sqlalchemy.sql.base.DialectKWArgs.kwargs"]], "memoized_instancemethod() (sqlalchemy.sql.expression.clauseelement class method)": [[43, "sqlalchemy.sql.expression.ClauseElement.memoized_instancemethod"]], "params() (sqlalchemy.sql.expression.clauseelement method)": [[43, "sqlalchemy.sql.expression.ClauseElement.params"]], "self_group() (sqlalchemy.sql.expression.clauseelement method)": [[43, "sqlalchemy.sql.expression.ClauseElement.self_group"]], "spoil() (sqlalchemy.sql.expression.statementlambdaelement method)": [[43, "sqlalchemy.sql.expression.StatementLambdaElement.spoil"]], "to_offline_string() (sqlalchemy.sql.expression.cachekey method)": [[43, "sqlalchemy.sql.expression.CacheKey.to_offline_string"]], "unique_params() (sqlalchemy.sql.expression.clauseelement method)": [[43, "sqlalchemy.sql.expression.ClauseElement.unique_params"]], "ansifunction (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.AnsiFunction"]], "function (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.Function"]], "functionelement (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.FunctionElement"]], "genericfunction (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.GenericFunction"]], "__init__() (sqlalchemy.sql.functions.functionelement method)": [[44, "sqlalchemy.sql.functions.FunctionElement.__init__"]], "alias() (sqlalchemy.sql.functions.functionelement method)": [[44, "sqlalchemy.sql.functions.FunctionElement.alias"]], "array_agg (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.array_agg"]], "as_comparison() (sqlalchemy.sql.functions.functionelement method)": [[44, "sqlalchemy.sql.functions.FunctionElement.as_comparison"]], "char_length (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.char_length"]], "clauses (sqlalchemy.sql.functions.functionelement attribute)": [[44, "sqlalchemy.sql.functions.FunctionElement.clauses"]], "coalesce (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.coalesce"]], "column_valued() (sqlalchemy.sql.functions.functionelement method)": [[44, "sqlalchemy.sql.functions.FunctionElement.column_valued"]], "columns (sqlalchemy.sql.functions.functionelement attribute)": [[44, "sqlalchemy.sql.functions.FunctionElement.columns"]], "concat (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.concat"]], "count (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.count"]], "cube (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.cube"]], "cume_dist (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.cume_dist"]], "current_date (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.current_date"]], "current_time (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.current_time"]], "current_timestamp (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.current_timestamp"]], "current_user (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.current_user"]], "dense_rank (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.dense_rank"]], "entity_namespace (sqlalchemy.sql.functions.functionelement attribute)": [[44, "sqlalchemy.sql.functions.FunctionElement.entity_namespace"]], "execute() (sqlalchemy.sql.functions.functionelement method)": [[44, "sqlalchemy.sql.functions.FunctionElement.execute"]], "exported_columns (sqlalchemy.sql.functions.functionelement attribute)": [[44, "sqlalchemy.sql.functions.FunctionElement.exported_columns"]], "filter() (sqlalchemy.sql.functions.functionelement method)": [[44, "sqlalchemy.sql.functions.FunctionElement.filter"]], "grouping_sets (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.grouping_sets"]], "localtime (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.localtime"]], "localtimestamp (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.localtimestamp"]], "max (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.max"]], "min (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.min"]], "mode (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.mode"]], "next_value (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.next_value"]], "now (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.now"]], "over() (sqlalchemy.sql.functions.functionelement method)": [[44, "sqlalchemy.sql.functions.FunctionElement.over"]], "percent_rank (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.percent_rank"]], "percentile_cont (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.percentile_cont"]], "percentile_disc (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.percentile_disc"]], "random (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.random"]], "rank (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.rank"]], "register_function() (in module sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.register_function"]], "rollup (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.rollup"]], "scalar() (sqlalchemy.sql.functions.functionelement method)": [[44, "sqlalchemy.sql.functions.FunctionElement.scalar"]], "scalar_table_valued() (sqlalchemy.sql.functions.functionelement method)": [[44, "sqlalchemy.sql.functions.FunctionElement.scalar_table_valued"]], "select() (sqlalchemy.sql.functions.functionelement method)": [[44, "sqlalchemy.sql.functions.FunctionElement.select"]], "self_group() (sqlalchemy.sql.functions.functionelement method)": [[44, "sqlalchemy.sql.functions.FunctionElement.self_group"]], "session_user (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.session_user"]], "sum (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.sum"]], "sysdate (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.sysdate"]], "table_valued() (sqlalchemy.sql.functions.functionelement method)": [[44, "sqlalchemy.sql.functions.FunctionElement.table_valued"]], "user (class in sqlalchemy.sql.functions)": [[44, "sqlalchemy.sql.functions.user"]], "within_group() (sqlalchemy.sql.functions.functionelement method)": [[44, "sqlalchemy.sql.functions.FunctionElement.within_group"]], "within_group_type() (sqlalchemy.sql.functions.functionelement method)": [[44, "sqlalchemy.sql.functions.FunctionElement.within_group_type"]], "connection (class in sqlalchemy.future)": [[45, "sqlalchemy.future.Connection"]], "engine (class in sqlalchemy.future)": [[45, "sqlalchemy.future.Engine"]], "begin() (sqlalchemy.future.connection method)": [[45, "sqlalchemy.future.Connection.begin"]], "begin() (sqlalchemy.future.engine method)": [[45, "sqlalchemy.future.Engine.begin"]], "begin_nested() (sqlalchemy.future.connection method)": [[45, "sqlalchemy.future.Connection.begin_nested"]], "close() (sqlalchemy.future.connection method)": [[45, "sqlalchemy.future.Connection.close"]], "commit() (sqlalchemy.future.connection method)": [[45, "sqlalchemy.future.Connection.commit"]], "connect() (sqlalchemy.future.engine method)": [[45, "sqlalchemy.future.Engine.connect"]], "create_engine() (in module sqlalchemy.future)": [[45, "sqlalchemy.future.create_engine"]], "execute() (sqlalchemy.future.connection method)": [[45, "sqlalchemy.future.Connection.execute"]], "execute() (sqlalchemy.future.engine method)": [[45, "sqlalchemy.future.Engine.execute"]], "has_table() (sqlalchemy.future.engine method)": [[45, "sqlalchemy.future.Engine.has_table"]], "rollback() (sqlalchemy.future.connection method)": [[45, "sqlalchemy.future.Connection.rollback"]], "run_callable() (sqlalchemy.future.engine method)": [[45, "sqlalchemy.future.Engine.run_callable"]], "scalar() (sqlalchemy.future.connection method)": [[45, "sqlalchemy.future.Connection.scalar"]], "scalar() (sqlalchemy.future.engine method)": [[45, "sqlalchemy.future.Engine.scalar"]], "select() (in module sqlalchemy.future)": [[45, "sqlalchemy.future.select"]], "sqlalchemy.future": [[45, "module-sqlalchemy.future"]], "table_names() (sqlalchemy.future.engine method)": [[45, "sqlalchemy.future.Engine.table_names"]], "transaction() (sqlalchemy.future.engine method)": [[45, "sqlalchemy.future.Engine.transaction"]], "inspect() (in module sqlalchemy)": [[47, "sqlalchemy.inspect"]], "sqlalchemy.inspection": [[47, "module-sqlalchemy.inspection"]], "adaptedconnection (class in sqlalchemy.engine)": [[48, "sqlalchemy.engine.AdaptedConnection"]], "compiled (class in sqlalchemy.engine)": [[48, "sqlalchemy.engine.Compiled"]], "ddlcompiler (class in sqlalchemy.sql.compiler)": [[48, "sqlalchemy.sql.compiler.DDLCompiler"]], "defaultdialect (class in sqlalchemy.engine.default)": [[48, "sqlalchemy.engine.default.DefaultDialect"]], "defaultexecutioncontext (class in sqlalchemy.engine.default)": [[48, "sqlalchemy.engine.default.DefaultExecutionContext"]], "dialect (class in sqlalchemy.engine)": [[48, "sqlalchemy.engine.Dialect"]], "executioncontext (class in sqlalchemy.engine)": [[48, "sqlalchemy.engine.ExecutionContext"]], "generictypecompiler (class in sqlalchemy.sql.compiler)": [[48, "sqlalchemy.sql.compiler.GenericTypeCompiler"]], "identified (class in sqlalchemy.log)": [[48, "sqlalchemy.log.Identified"]], "identifierpreparer (class in sqlalchemy.sql.compiler)": [[48, "sqlalchemy.sql.compiler.IdentifierPreparer"]], "sqlcompiler (class in sqlalchemy.sql.compiler)": [[48, "sqlalchemy.sql.compiler.SQLCompiler"]], "strsqlcompiler (class in sqlalchemy.sql.compiler)": [[48, "sqlalchemy.sql.compiler.StrSQLCompiler"]], "__init__() (sqlalchemy.engine.compiled method)": [[48, "sqlalchemy.engine.Compiled.__init__"]], "__init__() (sqlalchemy.sql.compiler.ddlcompiler method)": [[48, "sqlalchemy.sql.compiler.DDLCompiler.__init__"]], "__init__() (sqlalchemy.sql.compiler.identifierpreparer method)": [[48, "sqlalchemy.sql.compiler.IdentifierPreparer.__init__"]], "__init__() (sqlalchemy.sql.compiler.sqlcompiler method)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.__init__"]], "ansi_bind_rules (sqlalchemy.sql.compiler.sqlcompiler attribute)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.ansi_bind_rules"]], "compile_state (sqlalchemy.engine.compiled attribute)": [[48, "sqlalchemy.engine.Compiled.compile_state"]], "compile_state (sqlalchemy.sql.compiler.ddlcompiler attribute)": [[48, "sqlalchemy.sql.compiler.DDLCompiler.compile_state"]], "connect() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.connect"]], "connect() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.connect"]], "construct_arguments (sqlalchemy.engine.default.defaultdialect attribute)": [[48, "sqlalchemy.engine.default.DefaultDialect.construct_arguments"]], "construct_params() (sqlalchemy.engine.compiled method)": [[48, "sqlalchemy.engine.Compiled.construct_params"]], "construct_params() (sqlalchemy.sql.compiler.ddlcompiler method)": [[48, "sqlalchemy.sql.compiler.DDLCompiler.construct_params"]], "construct_params() (sqlalchemy.sql.compiler.sqlcompiler method)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.construct_params"]], "create_connect_args() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.create_connect_args"]], "create_connect_args() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.create_connect_args"]], "create_cursor() (sqlalchemy.engine.executioncontext method)": [[48, "sqlalchemy.engine.ExecutionContext.create_cursor"]], "create_cursor() (sqlalchemy.engine.default.defaultexecutioncontext method)": [[48, "sqlalchemy.engine.default.DefaultExecutionContext.create_cursor"]], "create_xid() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.create_xid"]], "create_xid() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.create_xid"]], "current_executable (sqlalchemy.sql.compiler.sqlcompiler attribute)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.current_executable"]], "current_parameters (sqlalchemy.engine.default.defaultexecutioncontext attribute)": [[48, "sqlalchemy.engine.default.DefaultExecutionContext.current_parameters"]], "dbapi_exception_translation_map (sqlalchemy.engine.default.defaultdialect attribute)": [[48, "sqlalchemy.engine.default.DefaultDialect.dbapi_exception_translation_map"]], "ddl_compiler (sqlalchemy.engine.default.defaultdialect attribute)": [[48, "sqlalchemy.engine.default.DefaultDialect.ddl_compiler"]], "default_from() (sqlalchemy.sql.compiler.sqlcompiler method)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.default_from"]], "define_constraint_remote_table() (sqlalchemy.sql.compiler.ddlcompiler method)": [[48, "sqlalchemy.sql.compiler.DDLCompiler.define_constraint_remote_table"]], "delete_extra_from_clause() (sqlalchemy.sql.compiler.sqlcompiler method)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.delete_extra_from_clause"]], "delete_extra_from_clause() (sqlalchemy.sql.compiler.strsqlcompiler method)": [[48, "sqlalchemy.sql.compiler.StrSQLCompiler.delete_extra_from_clause"]], "denormalize_name() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.denormalize_name"]], "denormalize_name() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.denormalize_name"]], "dml_compile_state (sqlalchemy.engine.compiled attribute)": [[48, "sqlalchemy.engine.Compiled.dml_compile_state"]], "dml_compile_state (sqlalchemy.sql.compiler.ddlcompiler attribute)": [[48, "sqlalchemy.sql.compiler.DDLCompiler.dml_compile_state"]], "do_begin() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.do_begin"]], "do_begin() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.do_begin"]], "do_begin_twophase() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.do_begin_twophase"]], "do_begin_twophase() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.do_begin_twophase"]], "do_close() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.do_close"]], "do_close() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.do_close"]], "do_commit() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.do_commit"]], "do_commit() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.do_commit"]], "do_commit_twophase() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.do_commit_twophase"]], "do_commit_twophase() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.do_commit_twophase"]], "do_execute() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.do_execute"]], "do_execute() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.do_execute"]], "do_execute_no_params() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.do_execute_no_params"]], "do_execute_no_params() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.do_execute_no_params"]], "do_executemany() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.do_executemany"]], "do_executemany() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.do_executemany"]], "do_prepare_twophase() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.do_prepare_twophase"]], "do_prepare_twophase() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.do_prepare_twophase"]], "do_recover_twophase() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.do_recover_twophase"]], "do_recover_twophase() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.do_recover_twophase"]], "do_release_savepoint() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.do_release_savepoint"]], "do_release_savepoint() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.do_release_savepoint"]], "do_rollback() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.do_rollback"]], "do_rollback() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.do_rollback"]], "do_rollback_to_savepoint() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.do_rollback_to_savepoint"]], "do_rollback_to_savepoint() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.do_rollback_to_savepoint"]], "do_rollback_twophase() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.do_rollback_twophase"]], "do_rollback_twophase() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.do_rollback_twophase"]], "do_savepoint() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.do_savepoint"]], "do_savepoint() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.do_savepoint"]], "do_set_input_sizes() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.do_set_input_sizes"]], "do_set_input_sizes() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.do_set_input_sizes"]], "do_terminate() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.do_terminate"]], "do_terminate() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.do_terminate"]], "driver_connection (sqlalchemy.engine.adaptedconnection attribute)": [[48, "sqlalchemy.engine.AdaptedConnection.driver_connection"]], "engine_created() (sqlalchemy.engine.dialect class method)": [[48, "sqlalchemy.engine.Dialect.engine_created"]], "engine_created() (sqlalchemy.engine.default.defaultdialect class method)": [[48, "sqlalchemy.engine.default.DefaultDialect.engine_created"]], "escaped_bind_names (sqlalchemy.sql.compiler.sqlcompiler attribute)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.escaped_bind_names"]], "execute_sequence_format (sqlalchemy.engine.default.defaultdialect attribute)": [[48, "sqlalchemy.engine.default.DefaultDialect.execute_sequence_format"]], "execution_ctx_cls (sqlalchemy.engine.default.defaultdialect attribute)": [[48, "sqlalchemy.engine.default.DefaultDialect.execution_ctx_cls"]], "execution_options (sqlalchemy.engine.compiled attribute)": [[48, "sqlalchemy.engine.Compiled.execution_options"]], "execution_options (sqlalchemy.sql.compiler.ddlcompiler attribute)": [[48, "sqlalchemy.sql.compiler.DDLCompiler.execution_options"]], "format_column() (sqlalchemy.sql.compiler.identifierpreparer method)": [[48, "sqlalchemy.sql.compiler.IdentifierPreparer.format_column"]], "format_label_name() (sqlalchemy.sql.compiler.identifierpreparer method)": [[48, "sqlalchemy.sql.compiler.IdentifierPreparer.format_label_name"]], "format_schema() (sqlalchemy.sql.compiler.identifierpreparer method)": [[48, "sqlalchemy.sql.compiler.IdentifierPreparer.format_schema"]], "format_table() (sqlalchemy.sql.compiler.identifierpreparer method)": [[48, "sqlalchemy.sql.compiler.IdentifierPreparer.format_table"]], "format_table_seq() (sqlalchemy.sql.compiler.identifierpreparer method)": [[48, "sqlalchemy.sql.compiler.IdentifierPreparer.format_table_seq"]], "get_check_constraints() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.get_check_constraints"]], "get_check_constraints() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.get_check_constraints"]], "get_columns() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.get_columns"]], "get_columns() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.get_columns"]], "get_current_parameters() (sqlalchemy.engine.default.defaultexecutioncontext method)": [[48, "sqlalchemy.engine.default.DefaultExecutionContext.get_current_parameters"]], "get_default_isolation_level() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.get_default_isolation_level"]], "get_default_isolation_level() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.get_default_isolation_level"]], "get_dialect_cls() (sqlalchemy.engine.dialect class method)": [[48, "sqlalchemy.engine.Dialect.get_dialect_cls"]], "get_dialect_cls() (sqlalchemy.engine.default.defaultdialect class method)": [[48, "sqlalchemy.engine.default.DefaultDialect.get_dialect_cls"]], "get_driver_connection() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.get_driver_connection"]], "get_driver_connection() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.get_driver_connection"]], "get_foreign_keys() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.get_foreign_keys"]], "get_foreign_keys() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.get_foreign_keys"]], "get_indexes() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.get_indexes"]], "get_indexes() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.get_indexes"]], "get_isolation_level() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.get_isolation_level"]], "get_isolation_level() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.get_isolation_level"]], "get_lastrowid() (sqlalchemy.engine.default.defaultexecutioncontext method)": [[48, "sqlalchemy.engine.default.DefaultExecutionContext.get_lastrowid"]], "get_out_parameter_values() (sqlalchemy.engine.executioncontext method)": [[48, "sqlalchemy.engine.ExecutionContext.get_out_parameter_values"]], "get_out_parameter_values() (sqlalchemy.engine.default.defaultexecutioncontext method)": [[48, "sqlalchemy.engine.default.DefaultExecutionContext.get_out_parameter_values"]], "get_pk_constraint() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.get_pk_constraint"]], "get_pk_constraint() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.get_pk_constraint"]], "get_result_processor() (sqlalchemy.engine.default.defaultexecutioncontext method)": [[48, "sqlalchemy.engine.default.DefaultExecutionContext.get_result_processor"]], "get_rowcount() (sqlalchemy.engine.executioncontext method)": [[48, "sqlalchemy.engine.ExecutionContext.get_rowcount"]], "get_select_precolumns() (sqlalchemy.sql.compiler.sqlcompiler method)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.get_select_precolumns"]], "get_sequence_names() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.get_sequence_names"]], "get_sequence_names() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.get_sequence_names"]], "get_table_comment() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.get_table_comment"]], "get_table_comment() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.get_table_comment"]], "get_table_names() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.get_table_names"]], "get_table_names() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.get_table_names"]], "get_temp_table_names() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.get_temp_table_names"]], "get_temp_table_names() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.get_temp_table_names"]], "get_temp_view_names() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.get_temp_view_names"]], "get_temp_view_names() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.get_temp_view_names"]], "get_unique_constraints() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.get_unique_constraints"]], "get_unique_constraints() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.get_unique_constraints"]], "get_view_definition() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.get_view_definition"]], "get_view_definition() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.get_view_definition"]], "get_view_names() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.get_view_names"]], "get_view_names() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.get_view_names"]], "group_by_clause() (sqlalchemy.sql.compiler.sqlcompiler method)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.group_by_clause"]], "handle_dbapi_exception() (sqlalchemy.engine.executioncontext method)": [[48, "sqlalchemy.engine.ExecutionContext.handle_dbapi_exception"]], "handle_dbapi_exception() (sqlalchemy.engine.default.defaultexecutioncontext method)": [[48, "sqlalchemy.engine.default.DefaultExecutionContext.handle_dbapi_exception"]], "has_index() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.has_index"]], "has_index() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.has_index"]], "has_out_parameters (sqlalchemy.sql.compiler.sqlcompiler attribute)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.has_out_parameters"]], "has_sequence() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.has_sequence"]], "has_sequence() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.has_sequence"]], "has_table() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.has_table"]], "has_table() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.has_table"]], "initialize() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.initialize"]], "initialize() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.initialize"]], "insert_single_values_expr (sqlalchemy.sql.compiler.sqlcompiler attribute)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.insert_single_values_expr"]], "is_disconnect() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.is_disconnect"]], "is_disconnect() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.is_disconnect"]], "isdelete (sqlalchemy.sql.compiler.sqlcompiler attribute)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.isdelete"]], "lastrow_has_defaults() (sqlalchemy.engine.executioncontext method)": [[48, "sqlalchemy.engine.ExecutionContext.lastrow_has_defaults"]], "lastrow_has_defaults() (sqlalchemy.engine.default.defaultexecutioncontext method)": [[48, "sqlalchemy.engine.default.DefaultExecutionContext.lastrow_has_defaults"]], "literal_execute_params (sqlalchemy.sql.compiler.sqlcompiler attribute)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.literal_execute_params"]], "load_provisioning() (sqlalchemy.engine.dialect class method)": [[48, "sqlalchemy.engine.Dialect.load_provisioning"]], "load_provisioning() (sqlalchemy.engine.default.defaultdialect class method)": [[48, "sqlalchemy.engine.default.DefaultDialect.load_provisioning"]], "normalize_name() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.normalize_name"]], "normalize_name() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.normalize_name"]], "on_connect() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.on_connect"]], "on_connect() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.on_connect"]], "on_connect_url() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.on_connect_url"]], "on_connect_url() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.on_connect_url"]], "order_by_clause() (sqlalchemy.sql.compiler.sqlcompiler method)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.order_by_clause"]], "params (sqlalchemy.engine.compiled attribute)": [[48, "sqlalchemy.engine.Compiled.params"]], "params (sqlalchemy.sql.compiler.ddlcompiler attribute)": [[48, "sqlalchemy.sql.compiler.DDLCompiler.params"]], "params (sqlalchemy.sql.compiler.sqlcompiler attribute)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.params"]], "positiontup (sqlalchemy.sql.compiler.sqlcompiler attribute)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.positiontup"]], "post_compile_params (sqlalchemy.sql.compiler.sqlcompiler attribute)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.post_compile_params"]], "post_exec() (sqlalchemy.engine.executioncontext method)": [[48, "sqlalchemy.engine.ExecutionContext.post_exec"]], "post_exec() (sqlalchemy.engine.default.defaultexecutioncontext method)": [[48, "sqlalchemy.engine.default.DefaultExecutionContext.post_exec"]], "postfetch_lastrowid (sqlalchemy.sql.compiler.sqlcompiler attribute)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.postfetch_lastrowid"]], "pre_exec() (sqlalchemy.engine.executioncontext method)": [[48, "sqlalchemy.engine.ExecutionContext.pre_exec"]], "pre_exec() (sqlalchemy.engine.default.defaultexecutioncontext method)": [[48, "sqlalchemy.engine.default.DefaultExecutionContext.pre_exec"]], "preparer (sqlalchemy.engine.default.defaultdialect attribute)": [[48, "sqlalchemy.engine.default.DefaultDialect.preparer"]], "quote() (sqlalchemy.sql.compiler.identifierpreparer method)": [[48, "sqlalchemy.sql.compiler.IdentifierPreparer.quote"]], "quote_identifier() (sqlalchemy.sql.compiler.identifierpreparer method)": [[48, "sqlalchemy.sql.compiler.IdentifierPreparer.quote_identifier"]], "quote_schema() (sqlalchemy.sql.compiler.identifierpreparer method)": [[48, "sqlalchemy.sql.compiler.IdentifierPreparer.quote_schema"]], "render_literal_value() (sqlalchemy.sql.compiler.sqlcompiler method)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.render_literal_value"]], "render_table_with_column_in_update_from (sqlalchemy.sql.compiler.sqlcompiler attribute)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.render_table_with_column_in_update_from"]], "reset_isolation_level() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.reset_isolation_level"]], "reset_isolation_level() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.reset_isolation_level"]], "returning (sqlalchemy.sql.compiler.sqlcompiler attribute)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.returning"]], "returning_precedes_values (sqlalchemy.sql.compiler.sqlcompiler attribute)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.returning_precedes_values"]], "returns_unicode_strings (sqlalchemy.engine.default.defaultdialect attribute)": [[48, "sqlalchemy.engine.default.DefaultDialect.returns_unicode_strings"]], "run_async() (sqlalchemy.engine.adaptedconnection method)": [[48, "sqlalchemy.engine.AdaptedConnection.run_async"]], "schema_for_object (sqlalchemy.sql.compiler.identifierpreparer attribute)": [[48, "sqlalchemy.sql.compiler.IdentifierPreparer.schema_for_object"]], "set_isolation_level() (sqlalchemy.engine.dialect method)": [[48, "sqlalchemy.engine.Dialect.set_isolation_level"]], "set_isolation_level() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.set_isolation_level"]], "should_autocommit_text() (sqlalchemy.engine.executioncontext method)": [[48, "sqlalchemy.engine.ExecutionContext.should_autocommit_text"]], "should_autocommit_text() (sqlalchemy.engine.default.defaultexecutioncontext method)": [[48, "sqlalchemy.engine.default.DefaultExecutionContext.should_autocommit_text"]], "sql_compiler (sqlalchemy.engine.compiled attribute)": [[48, "sqlalchemy.engine.Compiled.sql_compiler"]], "sql_compiler (sqlalchemy.sql.compiler.ddlcompiler attribute)": [[48, "sqlalchemy.sql.compiler.DDLCompiler.sql_compiler"]], "sql_compiler (sqlalchemy.sql.compiler.sqlcompiler attribute)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.sql_compiler"]], "statement_compiler (sqlalchemy.engine.default.defaultdialect attribute)": [[48, "sqlalchemy.engine.default.DefaultDialect.statement_compiler"]], "supports_default_metavalue (sqlalchemy.engine.default.defaultdialect attribute)": [[48, "sqlalchemy.engine.default.DefaultDialect.supports_default_metavalue"]], "supports_default_values (sqlalchemy.engine.default.defaultdialect attribute)": [[48, "sqlalchemy.engine.default.DefaultDialect.supports_default_values"]], "supports_empty_insert (sqlalchemy.engine.default.defaultdialect attribute)": [[48, "sqlalchemy.engine.default.DefaultDialect.supports_empty_insert"]], "supports_sane_rowcount_returning (sqlalchemy.engine.default.defaultdialect attribute)": [[48, "sqlalchemy.engine.default.DefaultDialect.supports_sane_rowcount_returning"]], "supports_statement_cache (sqlalchemy.engine.dialect attribute)": [[48, "sqlalchemy.engine.Dialect.supports_statement_cache"]], "supports_statement_cache (sqlalchemy.engine.default.defaultdialect attribute)": [[48, "sqlalchemy.engine.default.DefaultDialect.supports_statement_cache"]], "translate_select_structure (sqlalchemy.sql.compiler.sqlcompiler attribute)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.translate_select_structure"]], "type_compiler (sqlalchemy.engine.default.defaultdialect attribute)": [[48, "sqlalchemy.engine.default.DefaultDialect.type_compiler"]], "type_descriptor() (sqlalchemy.engine.dialect class method)": [[48, "sqlalchemy.engine.Dialect.type_descriptor"]], "type_descriptor() (sqlalchemy.engine.default.defaultdialect method)": [[48, "sqlalchemy.engine.default.DefaultDialect.type_descriptor"]], "unformat_identifiers() (sqlalchemy.sql.compiler.identifierpreparer method)": [[48, "sqlalchemy.sql.compiler.IdentifierPreparer.unformat_identifiers"]], "update_from_clause() (sqlalchemy.sql.compiler.sqlcompiler method)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.update_from_clause"]], "update_from_clause() (sqlalchemy.sql.compiler.strsqlcompiler method)": [[48, "sqlalchemy.sql.compiler.StrSQLCompiler.update_from_clause"]], "update_limit_clause() (sqlalchemy.sql.compiler.sqlcompiler method)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.update_limit_clause"]], "update_tables_clause() (sqlalchemy.sql.compiler.sqlcompiler method)": [[48, "sqlalchemy.sql.compiler.SQLCompiler.update_tables_clause"]], "validate_sql_phrase() (sqlalchemy.sql.compiler.identifierpreparer method)": [[48, "sqlalchemy.sql.compiler.IdentifierPreparer.validate_sql_phrase"]], "column (class in sqlalchemy.schema)": [[49, "sqlalchemy.schema.Column"]], "metadata (class in sqlalchemy.schema)": [[49, "sqlalchemy.schema.MetaData"]], "schemaitem (class in sqlalchemy.schema)": [[49, "sqlalchemy.schema.SchemaItem"]], "table (class in sqlalchemy.schema)": [[49, "sqlalchemy.schema.Table"]], "threadlocalmetadata (class in sqlalchemy.schema)": [[49, "sqlalchemy.schema.ThreadLocalMetaData"]], "__eq__() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.__eq__"]], "__init__() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.__init__"]], "__init__() (sqlalchemy.schema.metadata method)": [[49, "sqlalchemy.schema.MetaData.__init__"]], "__init__() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.__init__"]], "__init__() (sqlalchemy.schema.threadlocalmetadata method)": [[49, "sqlalchemy.schema.ThreadLocalMetaData.__init__"]], "__le__() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.__le__"]], "__lt__() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.__lt__"]], "__ne__() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.__ne__"]], "add_is_dependent_on() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.add_is_dependent_on"]], "alias() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.alias"]], "all_() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.all_"]], "anon_key_label (sqlalchemy.schema.column attribute)": [[49, "sqlalchemy.schema.Column.anon_key_label"]], "anon_label (sqlalchemy.schema.column attribute)": [[49, "sqlalchemy.schema.Column.anon_label"]], "any_() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.any_"]], "append_column() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.append_column"]], "append_constraint() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.append_constraint"]], "argument_for() (sqlalchemy.schema.column class method)": [[49, "sqlalchemy.schema.Column.argument_for"]], "argument_for() (sqlalchemy.schema.table class method)": [[49, "sqlalchemy.schema.Table.argument_for"]], "asc() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.asc"]], "between() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.between"]], "bind (sqlalchemy.schema.metadata attribute)": [[49, "sqlalchemy.schema.MetaData.bind"]], "bind (sqlalchemy.schema.table attribute)": [[49, "sqlalchemy.schema.Table.bind"]], "bind (sqlalchemy.schema.threadlocalmetadata attribute)": [[49, "sqlalchemy.schema.ThreadLocalMetaData.bind"]], "bool_op() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.bool_op"]], "c (sqlalchemy.schema.table attribute)": [[49, "sqlalchemy.schema.Table.c"]], "cast() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.cast"]], "clear() (sqlalchemy.schema.metadata method)": [[49, "sqlalchemy.schema.MetaData.clear"]], "collate() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.collate"]], "columns (sqlalchemy.schema.table attribute)": [[49, "sqlalchemy.schema.Table.columns"]], "compare() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.compare"]], "compare() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.compare"]], "compile() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.compile"]], "compile() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.compile"]], "concat() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.concat"]], "constraints (sqlalchemy.schema.table attribute)": [[49, "sqlalchemy.schema.Table.constraints"]], "contains() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.contains"]], "copy() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.copy"]], "corresponding_column() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.corresponding_column"]], "create() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.create"]], "create_all() (sqlalchemy.schema.metadata method)": [[49, "sqlalchemy.schema.MetaData.create_all"]], "delete() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.delete"]], "desc() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.desc"]], "description (sqlalchemy.schema.table attribute)": [[49, "sqlalchemy.schema.Table.description"]], "dialect_kwargs (sqlalchemy.schema.column attribute)": [[49, "sqlalchemy.schema.Column.dialect_kwargs"]], "dialect_kwargs (sqlalchemy.schema.table attribute)": [[49, "sqlalchemy.schema.Table.dialect_kwargs"]], "dialect_options (sqlalchemy.schema.column attribute)": [[49, "sqlalchemy.schema.Column.dialect_options"]], "dialect_options (sqlalchemy.schema.table attribute)": [[49, "sqlalchemy.schema.Table.dialect_options"]], "dispose() (sqlalchemy.schema.threadlocalmetadata method)": [[49, "sqlalchemy.schema.ThreadLocalMetaData.dispose"]], "distinct() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.distinct"]], "drop() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.drop"]], "drop_all() (sqlalchemy.schema.metadata method)": [[49, "sqlalchemy.schema.MetaData.drop_all"]], "endswith() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.endswith"]], "entity_namespace (sqlalchemy.schema.table attribute)": [[49, "sqlalchemy.schema.Table.entity_namespace"]], "exists() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.exists"]], "exported_columns (sqlalchemy.schema.table attribute)": [[49, "sqlalchemy.schema.Table.exported_columns"]], "expression (sqlalchemy.schema.column attribute)": [[49, "sqlalchemy.schema.Column.expression"]], "foreign_key_constraints (sqlalchemy.schema.table attribute)": [[49, "sqlalchemy.schema.Table.foreign_key_constraints"]], "foreign_keys (sqlalchemy.schema.column attribute)": [[49, "sqlalchemy.schema.Column.foreign_keys"]], "foreign_keys (sqlalchemy.schema.table attribute)": [[49, "sqlalchemy.schema.Table.foreign_keys"]], "get_children() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.get_children"]], "get_children() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.get_children"]], "ilike() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.ilike"]], "implicit_returning (sqlalchemy.schema.table attribute)": [[49, "sqlalchemy.schema.Table.implicit_returning"]], "in_() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.in_"]], "index (sqlalchemy.schema.column attribute)": [[49, "sqlalchemy.schema.Column.index"]], "indexes (sqlalchemy.schema.table attribute)": [[49, "sqlalchemy.schema.Table.indexes"]], "info (sqlalchemy.schema.column attribute)": [[49, "sqlalchemy.schema.Column.info"]], "info (sqlalchemy.schema.schemaitem attribute)": [[49, "sqlalchemy.schema.SchemaItem.info"]], "info (sqlalchemy.schema.table attribute)": [[49, "sqlalchemy.schema.Table.info"]], "inherit_cache (sqlalchemy.schema.column attribute)": [[49, "sqlalchemy.schema.Column.inherit_cache"]], "inherit_cache (sqlalchemy.schema.table attribute)": [[49, "sqlalchemy.schema.Table.inherit_cache"]], "insert() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.insert"]], "is_() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.is_"]], "is_bound() (sqlalchemy.schema.metadata method)": [[49, "sqlalchemy.schema.MetaData.is_bound"]], "is_bound() (sqlalchemy.schema.threadlocalmetadata method)": [[49, "sqlalchemy.schema.ThreadLocalMetaData.is_bound"]], "is_derived_from() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.is_derived_from"]], "is_distinct_from() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.is_distinct_from"]], "is_not() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.is_not"]], "is_not_distinct_from() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.is_not_distinct_from"]], "isnot() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.isnot"]], "isnot_distinct_from() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.isnot_distinct_from"]], "join() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.join"]], "key (sqlalchemy.schema.column attribute)": [[49, "sqlalchemy.schema.Column.key"]], "key (sqlalchemy.schema.table attribute)": [[49, "sqlalchemy.schema.Table.key"]], "kwargs (sqlalchemy.schema.column attribute)": [[49, "sqlalchemy.schema.Column.kwargs"]], "kwargs (sqlalchemy.schema.table attribute)": [[49, "sqlalchemy.schema.Table.kwargs"]], "label() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.label"]], "lateral() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.lateral"]], "like() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.like"]], "match() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.match"]], "memoized_instancemethod() (sqlalchemy.schema.column class method)": [[49, "sqlalchemy.schema.Column.memoized_instancemethod"]], "memoized_instancemethod() (sqlalchemy.schema.table class method)": [[49, "sqlalchemy.schema.Table.memoized_instancemethod"]], "not_ilike() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.not_ilike"]], "not_in() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.not_in"]], "not_like() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.not_like"]], "notilike() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.notilike"]], "notin_() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.notin_"]], "notlike() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.notlike"]], "nulls_first() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.nulls_first"]], "nulls_last() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.nulls_last"]], "nullsfirst() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.nullsfirst"]], "nullslast() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.nullslast"]], "op() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.op"]], "operate() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.operate"]], "outerjoin() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.outerjoin"]], "params() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.params"]], "params() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.params"]], "primary_key (sqlalchemy.schema.table attribute)": [[49, "sqlalchemy.schema.Table.primary_key"]], "references() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.references"]], "reflect() (sqlalchemy.schema.metadata method)": [[49, "sqlalchemy.schema.MetaData.reflect"]], "regexp_match() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.regexp_match"]], "regexp_replace() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.regexp_replace"]], "remove() (sqlalchemy.schema.metadata method)": [[49, "sqlalchemy.schema.MetaData.remove"]], "replace_selectable() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.replace_selectable"]], "reverse_operate() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.reverse_operate"]], "schema (sqlalchemy.schema.table attribute)": [[49, "sqlalchemy.schema.Table.schema"]], "select() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.select"]], "self_group() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.self_group"]], "self_group() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.self_group"]], "shares_lineage() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.shares_lineage"]], "sorted_tables (sqlalchemy.schema.metadata attribute)": [[49, "sqlalchemy.schema.MetaData.sorted_tables"]], "sqlalchemy.schema": [[49, "module-sqlalchemy.schema"]], "startswith() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.startswith"]], "table_valued() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.table_valued"]], "tables (sqlalchemy.schema.metadata attribute)": [[49, "sqlalchemy.schema.MetaData.tables"]], "tablesample() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.tablesample"]], "timetuple (sqlalchemy.schema.column attribute)": [[49, "sqlalchemy.schema.Column.timetuple"]], "to_metadata() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.to_metadata"]], "tometadata() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.tometadata"]], "unique (sqlalchemy.schema.column attribute)": [[49, "sqlalchemy.schema.Column.unique"]], "unique_params() (sqlalchemy.schema.column method)": [[49, "sqlalchemy.schema.Column.unique_params"]], "unique_params() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.unique_params"]], "update() (sqlalchemy.schema.table method)": [[49, "sqlalchemy.schema.Table.update"]], "assertionpool (class in sqlalchemy.pool)": [[51, "sqlalchemy.pool.AssertionPool"]], "nullpool (class in sqlalchemy.pool)": [[51, "sqlalchemy.pool.NullPool"]], "pool (class in sqlalchemy.pool)": [[51, "sqlalchemy.pool.Pool"]], "queuepool (class in sqlalchemy.pool)": [[51, "sqlalchemy.pool.QueuePool"]], "singletonthreadpool (class in sqlalchemy.pool)": [[51, "sqlalchemy.pool.SingletonThreadPool"]], "staticpool (class in sqlalchemy.pool)": [[51, "sqlalchemy.pool.StaticPool"]], "_connectionfairy (class in sqlalchemy.pool)": [[51, "sqlalchemy.pool._ConnectionFairy"]], "_connectionrecord (class in sqlalchemy.pool)": [[51, "sqlalchemy.pool._ConnectionRecord"]], "__init__() (sqlalchemy.pool.pool method)": [[51, "sqlalchemy.pool.Pool.__init__"]], "__init__() (sqlalchemy.pool.queuepool method)": [[51, "sqlalchemy.pool.QueuePool.__init__"]], "_connection_record (sqlalchemy.pool._connectionfairy attribute)": [[51, "sqlalchemy.pool._ConnectionFairy._connection_record"]], "connect() (sqlalchemy.pool.pool method)": [[51, "sqlalchemy.pool.Pool.connect"]], "connect() (sqlalchemy.pool.singletonthreadpool method)": [[51, "sqlalchemy.pool.SingletonThreadPool.connect"]], "connection (sqlalchemy.pool._connectionfairy attribute)": [[51, "sqlalchemy.pool._ConnectionFairy.connection"]], "connection (sqlalchemy.pool._connectionrecord attribute)": [[51, "sqlalchemy.pool._ConnectionRecord.connection"]], "cursor() (sqlalchemy.pool._connectionfairy method)": [[51, "sqlalchemy.pool._ConnectionFairy.cursor"]], "dbapi_connection (sqlalchemy.pool._connectionfairy attribute)": [[51, "sqlalchemy.pool._ConnectionFairy.dbapi_connection"]], "dbapi_connection (sqlalchemy.pool._connectionrecord attribute)": [[51, "sqlalchemy.pool._ConnectionRecord.dbapi_connection"]], "detach() (sqlalchemy.pool._connectionfairy method)": [[51, "sqlalchemy.pool._ConnectionFairy.detach"]], "dispose() (sqlalchemy.pool.assertionpool method)": [[51, "sqlalchemy.pool.AssertionPool.dispose"]], "dispose() (sqlalchemy.pool.nullpool method)": [[51, "sqlalchemy.pool.NullPool.dispose"]], "dispose() (sqlalchemy.pool.pool method)": [[51, "sqlalchemy.pool.Pool.dispose"]], "dispose() (sqlalchemy.pool.queuepool method)": [[51, "sqlalchemy.pool.QueuePool.dispose"]], "dispose() (sqlalchemy.pool.singletonthreadpool method)": [[51, "sqlalchemy.pool.SingletonThreadPool.dispose"]], "dispose() (sqlalchemy.pool.staticpool method)": [[51, "sqlalchemy.pool.StaticPool.dispose"]], "driver_connection (sqlalchemy.pool._connectionfairy attribute)": [[51, "sqlalchemy.pool._ConnectionFairy.driver_connection"]], "driver_connection (sqlalchemy.pool._connectionrecord attribute)": [[51, "sqlalchemy.pool._ConnectionRecord.driver_connection"]], "info (sqlalchemy.pool._connectionfairy attribute)": [[51, "sqlalchemy.pool._ConnectionFairy.info"]], "info (sqlalchemy.pool._connectionrecord attribute)": [[51, "sqlalchemy.pool._ConnectionRecord.info"]], "invalidate() (sqlalchemy.pool._connectionfairy method)": [[51, "sqlalchemy.pool._ConnectionFairy.invalidate"]], "invalidate() (sqlalchemy.pool._connectionrecord method)": [[51, "sqlalchemy.pool._ConnectionRecord.invalidate"]], "is_valid (sqlalchemy.pool._connectionfairy attribute)": [[51, "sqlalchemy.pool._ConnectionFairy.is_valid"]], "record_info (sqlalchemy.pool._connectionfairy attribute)": [[51, "sqlalchemy.pool._ConnectionFairy.record_info"]], "record_info (sqlalchemy.pool._connectionrecord attribute)": [[51, "sqlalchemy.pool._ConnectionRecord.record_info"]], "recreate() (sqlalchemy.pool.assertionpool method)": [[51, "sqlalchemy.pool.AssertionPool.recreate"]], "recreate() (sqlalchemy.pool.nullpool method)": [[51, "sqlalchemy.pool.NullPool.recreate"]], "recreate() (sqlalchemy.pool.pool method)": [[51, "sqlalchemy.pool.Pool.recreate"]], "recreate() (sqlalchemy.pool.queuepool method)": [[51, "sqlalchemy.pool.QueuePool.recreate"]], "recreate() (sqlalchemy.pool.singletonthreadpool method)": [[51, "sqlalchemy.pool.SingletonThreadPool.recreate"]], "recreate() (sqlalchemy.pool.staticpool method)": [[51, "sqlalchemy.pool.StaticPool.recreate"]], "sqlalchemy.pool": [[51, "module-sqlalchemy.pool"]], "inspector (class in sqlalchemy.engine.reflection)": [[52, "sqlalchemy.engine.reflection.Inspector"]], "__init__() (sqlalchemy.engine.reflection.inspector method)": [[52, "sqlalchemy.engine.reflection.Inspector.__init__"]], "default_schema_name (sqlalchemy.engine.reflection.inspector attribute)": [[52, "sqlalchemy.engine.reflection.Inspector.default_schema_name"]], "from_engine() (sqlalchemy.engine.reflection.inspector class method)": [[52, "sqlalchemy.engine.reflection.Inspector.from_engine"]], "get_check_constraints() (sqlalchemy.engine.reflection.inspector method)": [[52, "sqlalchemy.engine.reflection.Inspector.get_check_constraints"]], "get_columns() (sqlalchemy.engine.reflection.inspector method)": [[52, "sqlalchemy.engine.reflection.Inspector.get_columns"]], "get_foreign_keys() (sqlalchemy.engine.reflection.inspector method)": [[52, "sqlalchemy.engine.reflection.Inspector.get_foreign_keys"]], "get_indexes() (sqlalchemy.engine.reflection.inspector method)": [[52, "sqlalchemy.engine.reflection.Inspector.get_indexes"]], "get_pk_constraint() (sqlalchemy.engine.reflection.inspector method)": [[52, "sqlalchemy.engine.reflection.Inspector.get_pk_constraint"]], "get_schema_names() (sqlalchemy.engine.reflection.inspector method)": [[52, "sqlalchemy.engine.reflection.Inspector.get_schema_names"]], "get_sequence_names() (sqlalchemy.engine.reflection.inspector method)": [[52, "sqlalchemy.engine.reflection.Inspector.get_sequence_names"]], "get_sorted_table_and_fkc_names() (sqlalchemy.engine.reflection.inspector method)": [[52, "sqlalchemy.engine.reflection.Inspector.get_sorted_table_and_fkc_names"]], "get_table_comment() (sqlalchemy.engine.reflection.inspector method)": [[52, "sqlalchemy.engine.reflection.Inspector.get_table_comment"]], "get_table_names() (sqlalchemy.engine.reflection.inspector method)": [[52, "sqlalchemy.engine.reflection.Inspector.get_table_names"]], "get_table_options() (sqlalchemy.engine.reflection.inspector method)": [[52, "sqlalchemy.engine.reflection.Inspector.get_table_options"]], "get_temp_table_names() (sqlalchemy.engine.reflection.inspector method)": [[52, "sqlalchemy.engine.reflection.Inspector.get_temp_table_names"]], "get_temp_view_names() (sqlalchemy.engine.reflection.inspector method)": [[52, "sqlalchemy.engine.reflection.Inspector.get_temp_view_names"]], "get_unique_constraints() (sqlalchemy.engine.reflection.inspector method)": [[52, "sqlalchemy.engine.reflection.Inspector.get_unique_constraints"]], "get_view_definition() (sqlalchemy.engine.reflection.inspector method)": [[52, "sqlalchemy.engine.reflection.Inspector.get_view_definition"]], "get_view_names() (sqlalchemy.engine.reflection.inspector method)": [[52, "sqlalchemy.engine.reflection.Inspector.get_view_names"]], "has_sequence() (sqlalchemy.engine.reflection.inspector method)": [[52, "sqlalchemy.engine.reflection.Inspector.has_sequence"]], "has_table() (sqlalchemy.engine.reflection.inspector method)": [[52, "sqlalchemy.engine.reflection.Inspector.has_table"]], "reflect_table() (sqlalchemy.engine.reflection.inspector method)": [[52, "sqlalchemy.engine.reflection.Inspector.reflect_table"]], "reflecttable() (sqlalchemy.engine.reflection.inspector method)": [[52, "sqlalchemy.engine.reflection.Inspector.reflecttable"]], "alias (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.Alias"]], "aliasedreturnsrows (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.AliasedReturnsRows"]], "cte (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.CTE"]], "compoundselect (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.CompoundSelect"]], "executable (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.Executable"]], "exists (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.Exists"]], "fromclause (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.FromClause"]], "generativeselect (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.GenerativeSelect"]], "hascte (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.HasCTE"]], "hasprefixes (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.HasPrefixes"]], "hassuffixes (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.HasSuffixes"]], "join (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.Join"]], "label_style_default (in module sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.LABEL_STYLE_DEFAULT"]], "label_style_disambiguate_only (in module sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.LABEL_STYLE_DISAMBIGUATE_ONLY"]], "label_style_none (in module sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.LABEL_STYLE_NONE"]], "label_style_tablename_plus_col (in module sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.LABEL_STYLE_TABLENAME_PLUS_COL"]], "lateral (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.Lateral"]], "returnsrows (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.ReturnsRows"]], "scalarselect (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.ScalarSelect"]], "select (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.Select"]], "selectbase (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.SelectBase"]], "selectable (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.Selectable"]], "subquery (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.Subquery"]], "tableclause (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.TableClause"]], "tablesample (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.TableSample"]], "tablevaluedalias (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.TableValuedAlias"]], "textualselect (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.TextualSelect"]], "values (class in sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.Values"]], "__init__() (sqlalchemy.sql.expression.exists method)": [[54, "sqlalchemy.sql.expression.Exists.__init__"]], "__init__() (sqlalchemy.sql.expression.join method)": [[54, "sqlalchemy.sql.expression.Join.__init__"]], "__init__() (sqlalchemy.sql.expression.tableclause method)": [[54, "sqlalchemy.sql.expression.TableClause.__init__"]], "__init__() (sqlalchemy.sql.expression.values method)": [[54, "sqlalchemy.sql.expression.Values.__init__"]], "add_columns() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.add_columns"]], "add_cte() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.add_cte"]], "add_cte() (sqlalchemy.sql.expression.hascte method)": [[54, "sqlalchemy.sql.expression.HasCTE.add_cte"]], "add_cte() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.add_cte"]], "add_cte() (sqlalchemy.sql.expression.selectbase method)": [[54, "sqlalchemy.sql.expression.SelectBase.add_cte"]], "add_cte() (sqlalchemy.sql.expression.textualselect method)": [[54, "sqlalchemy.sql.expression.TextualSelect.add_cte"]], "alias() (in module sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.alias"]], "alias() (sqlalchemy.sql.expression.cte method)": [[54, "sqlalchemy.sql.expression.CTE.alias"]], "alias() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.alias"]], "alias() (sqlalchemy.sql.expression.fromclause method)": [[54, "sqlalchemy.sql.expression.FromClause.alias"]], "alias() (sqlalchemy.sql.expression.join method)": [[54, "sqlalchemy.sql.expression.Join.alias"]], "alias() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.alias"]], "alias() (sqlalchemy.sql.expression.selectbase method)": [[54, "sqlalchemy.sql.expression.SelectBase.alias"]], "alias() (sqlalchemy.sql.expression.tableclause method)": [[54, "sqlalchemy.sql.expression.TableClause.alias"]], "alias() (sqlalchemy.sql.expression.tablevaluedalias method)": [[54, "sqlalchemy.sql.expression.TableValuedAlias.alias"]], "alias() (sqlalchemy.sql.expression.textualselect method)": [[54, "sqlalchemy.sql.expression.TextualSelect.alias"]], "alias() (sqlalchemy.sql.expression.values method)": [[54, "sqlalchemy.sql.expression.Values.alias"]], "append_group_by() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.append_group_by"]], "append_order_by() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.append_order_by"]], "apply_labels() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.apply_labels"]], "apply_labels() (sqlalchemy.sql.expression.generativeselect method)": [[54, "sqlalchemy.sql.expression.GenerativeSelect.apply_labels"]], "apply_labels() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.apply_labels"]], "as_scalar() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.as_scalar"]], "as_scalar() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.as_scalar"]], "as_scalar() (sqlalchemy.sql.expression.selectbase method)": [[54, "sqlalchemy.sql.expression.SelectBase.as_scalar"]], "as_scalar() (sqlalchemy.sql.expression.subquery method)": [[54, "sqlalchemy.sql.expression.Subquery.as_scalar"]], "as_scalar() (sqlalchemy.sql.expression.textualselect method)": [[54, "sqlalchemy.sql.expression.TextualSelect.as_scalar"]], "bind (sqlalchemy.sql.expression.compoundselect attribute)": [[54, "sqlalchemy.sql.expression.CompoundSelect.bind"]], "bind (sqlalchemy.sql.expression.executable attribute)": [[54, "sqlalchemy.sql.expression.Executable.bind"]], "bind (sqlalchemy.sql.expression.join attribute)": [[54, "sqlalchemy.sql.expression.Join.bind"]], "bind (sqlalchemy.sql.expression.select attribute)": [[54, "sqlalchemy.sql.expression.Select.bind"]], "bind (sqlalchemy.sql.expression.selectbase attribute)": [[54, "sqlalchemy.sql.expression.SelectBase.bind"]], "bind (sqlalchemy.sql.expression.textualselect attribute)": [[54, "sqlalchemy.sql.expression.TextualSelect.bind"]], "c (sqlalchemy.sql.expression.compoundselect attribute)": [[54, "sqlalchemy.sql.expression.CompoundSelect.c"]], "c (sqlalchemy.sql.expression.fromclause attribute)": [[54, "sqlalchemy.sql.expression.FromClause.c"]], "c (sqlalchemy.sql.expression.select attribute)": [[54, "sqlalchemy.sql.expression.Select.c"]], "c (sqlalchemy.sql.expression.selectbase attribute)": [[54, "sqlalchemy.sql.expression.SelectBase.c"]], "c (sqlalchemy.sql.expression.tableclause attribute)": [[54, "sqlalchemy.sql.expression.TableClause.c"]], "c (sqlalchemy.sql.expression.textualselect attribute)": [[54, "sqlalchemy.sql.expression.TextualSelect.c"]], "column (sqlalchemy.sql.expression.tablevaluedalias attribute)": [[54, "sqlalchemy.sql.expression.TableValuedAlias.column"]], "column() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.column"]], "column_descriptions (sqlalchemy.sql.expression.select attribute)": [[54, "sqlalchemy.sql.expression.Select.column_descriptions"]], "columns (sqlalchemy.sql.expression.fromclause attribute)": [[54, "sqlalchemy.sql.expression.FromClause.columns"]], "columns (sqlalchemy.sql.expression.tableclause attribute)": [[54, "sqlalchemy.sql.expression.TableClause.columns"]], "columns_clause_froms (sqlalchemy.sql.expression.select attribute)": [[54, "sqlalchemy.sql.expression.Select.columns_clause_froms"]], "compare() (sqlalchemy.sql.expression.tableclause method)": [[54, "sqlalchemy.sql.expression.TableClause.compare"]], "compare() (sqlalchemy.sql.expression.textualselect method)": [[54, "sqlalchemy.sql.expression.TextualSelect.compare"]], "compile() (sqlalchemy.sql.expression.tableclause method)": [[54, "sqlalchemy.sql.expression.TableClause.compile"]], "compile() (sqlalchemy.sql.expression.textualselect method)": [[54, "sqlalchemy.sql.expression.TextualSelect.compile"]], "correlate() (sqlalchemy.sql.expression.exists method)": [[54, "sqlalchemy.sql.expression.Exists.correlate"]], "correlate() (sqlalchemy.sql.expression.scalarselect method)": [[54, "sqlalchemy.sql.expression.ScalarSelect.correlate"]], "correlate() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.correlate"]], "correlate_except() (sqlalchemy.sql.expression.exists method)": [[54, "sqlalchemy.sql.expression.Exists.correlate_except"]], "correlate_except() (sqlalchemy.sql.expression.scalarselect method)": [[54, "sqlalchemy.sql.expression.ScalarSelect.correlate_except"]], "correlate_except() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.correlate_except"]], "corresponding_column() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.corresponding_column"]], "corresponding_column() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.corresponding_column"]], "corresponding_column() (sqlalchemy.sql.expression.selectbase method)": [[54, "sqlalchemy.sql.expression.SelectBase.corresponding_column"]], "corresponding_column() (sqlalchemy.sql.expression.selectable method)": [[54, "sqlalchemy.sql.expression.Selectable.corresponding_column"]], "corresponding_column() (sqlalchemy.sql.expression.tableclause method)": [[54, "sqlalchemy.sql.expression.TableClause.corresponding_column"]], "corresponding_column() (sqlalchemy.sql.expression.textualselect method)": [[54, "sqlalchemy.sql.expression.TextualSelect.corresponding_column"]], "create_legacy_select() (sqlalchemy.sql.expression.select class method)": [[54, "sqlalchemy.sql.expression.Select.create_legacy_select"]], "cte() (in module sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.cte"]], "cte() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.cte"]], "cte() (sqlalchemy.sql.expression.hascte method)": [[54, "sqlalchemy.sql.expression.HasCTE.cte"]], "cte() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.cte"]], "cte() (sqlalchemy.sql.expression.selectbase method)": [[54, "sqlalchemy.sql.expression.SelectBase.cte"]], "cte() (sqlalchemy.sql.expression.textualselect method)": [[54, "sqlalchemy.sql.expression.TextualSelect.cte"]], "data() (sqlalchemy.sql.expression.values method)": [[54, "sqlalchemy.sql.expression.Values.data"]], "delete() (sqlalchemy.sql.expression.tableclause method)": [[54, "sqlalchemy.sql.expression.TableClause.delete"]], "description (sqlalchemy.sql.expression.aliasedreturnsrows attribute)": [[54, "sqlalchemy.sql.expression.AliasedReturnsRows.description"]], "description (sqlalchemy.sql.expression.fromclause attribute)": [[54, "sqlalchemy.sql.expression.FromClause.description"]], "description (sqlalchemy.sql.expression.join attribute)": [[54, "sqlalchemy.sql.expression.Join.description"]], "description (sqlalchemy.sql.expression.tableclause attribute)": [[54, "sqlalchemy.sql.expression.TableClause.description"]], "distinct() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.distinct"]], "entity_namespace (sqlalchemy.sql.expression.fromclause attribute)": [[54, "sqlalchemy.sql.expression.FromClause.entity_namespace"]], "entity_namespace (sqlalchemy.sql.expression.tableclause attribute)": [[54, "sqlalchemy.sql.expression.TableClause.entity_namespace"]], "except_() (in module sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.except_"]], "except_() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.except_"]], "except_all() (in module sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.except_all"]], "except_all() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.except_all"]], "execute() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.execute"]], "execute() (sqlalchemy.sql.expression.executable method)": [[54, "sqlalchemy.sql.expression.Executable.execute"]], "execute() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.execute"]], "execute() (sqlalchemy.sql.expression.selectbase method)": [[54, "sqlalchemy.sql.expression.SelectBase.execute"]], "execute() (sqlalchemy.sql.expression.textualselect method)": [[54, "sqlalchemy.sql.expression.TextualSelect.execute"]], "execution_options() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.execution_options"]], "execution_options() (sqlalchemy.sql.expression.executable method)": [[54, "sqlalchemy.sql.expression.Executable.execution_options"]], "execution_options() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.execution_options"]], "execution_options() (sqlalchemy.sql.expression.selectbase method)": [[54, "sqlalchemy.sql.expression.SelectBase.execution_options"]], "execution_options() (sqlalchemy.sql.expression.textualselect method)": [[54, "sqlalchemy.sql.expression.TextualSelect.execution_options"]], "exists() (in module sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.exists"]], "exists() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.exists"]], "exists() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.exists"]], "exists() (sqlalchemy.sql.expression.selectbase method)": [[54, "sqlalchemy.sql.expression.SelectBase.exists"]], "exists() (sqlalchemy.sql.expression.textualselect method)": [[54, "sqlalchemy.sql.expression.TextualSelect.exists"]], "exported_columns (sqlalchemy.sql.expression.compoundselect attribute)": [[54, "sqlalchemy.sql.expression.CompoundSelect.exported_columns"]], "exported_columns (sqlalchemy.sql.expression.fromclause attribute)": [[54, "sqlalchemy.sql.expression.FromClause.exported_columns"]], "exported_columns (sqlalchemy.sql.expression.returnsrows attribute)": [[54, "sqlalchemy.sql.expression.ReturnsRows.exported_columns"]], "exported_columns (sqlalchemy.sql.expression.select attribute)": [[54, "sqlalchemy.sql.expression.Select.exported_columns"]], "exported_columns (sqlalchemy.sql.expression.selectbase attribute)": [[54, "sqlalchemy.sql.expression.SelectBase.exported_columns"]], "exported_columns (sqlalchemy.sql.expression.selectable attribute)": [[54, "sqlalchemy.sql.expression.Selectable.exported_columns"]], "exported_columns (sqlalchemy.sql.expression.tableclause attribute)": [[54, "sqlalchemy.sql.expression.TableClause.exported_columns"]], "exported_columns (sqlalchemy.sql.expression.textualselect attribute)": [[54, "sqlalchemy.sql.expression.TextualSelect.exported_columns"]], "fetch() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.fetch"]], "fetch() (sqlalchemy.sql.expression.generativeselect method)": [[54, "sqlalchemy.sql.expression.GenerativeSelect.fetch"]], "fetch() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.fetch"]], "filter() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.filter"]], "filter_by() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.filter_by"]], "foreign_keys (sqlalchemy.sql.expression.fromclause attribute)": [[54, "sqlalchemy.sql.expression.FromClause.foreign_keys"]], "foreign_keys (sqlalchemy.sql.expression.tableclause attribute)": [[54, "sqlalchemy.sql.expression.TableClause.foreign_keys"]], "from_statement() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.from_statement"]], "froms (sqlalchemy.sql.expression.select attribute)": [[54, "sqlalchemy.sql.expression.Select.froms"]], "get_children() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.get_children"]], "get_children() (sqlalchemy.sql.expression.tableclause method)": [[54, "sqlalchemy.sql.expression.TableClause.get_children"]], "get_children() (sqlalchemy.sql.expression.textualselect method)": [[54, "sqlalchemy.sql.expression.TextualSelect.get_children"]], "get_execution_options() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.get_execution_options"]], "get_execution_options() (sqlalchemy.sql.expression.executable method)": [[54, "sqlalchemy.sql.expression.Executable.get_execution_options"]], "get_execution_options() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.get_execution_options"]], "get_execution_options() (sqlalchemy.sql.expression.selectbase method)": [[54, "sqlalchemy.sql.expression.SelectBase.get_execution_options"]], "get_execution_options() (sqlalchemy.sql.expression.textualselect method)": [[54, "sqlalchemy.sql.expression.TextualSelect.get_execution_options"]], "get_final_froms() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.get_final_froms"]], "get_label_style() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.get_label_style"]], "get_label_style() (sqlalchemy.sql.expression.generativeselect method)": [[54, "sqlalchemy.sql.expression.GenerativeSelect.get_label_style"]], "get_label_style() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.get_label_style"]], "group_by() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.group_by"]], "group_by() (sqlalchemy.sql.expression.generativeselect method)": [[54, "sqlalchemy.sql.expression.GenerativeSelect.group_by"]], "group_by() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.group_by"]], "having() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.having"]], "implicit_returning (sqlalchemy.sql.expression.tableclause attribute)": [[54, "sqlalchemy.sql.expression.TableClause.implicit_returning"]], "inherit_cache (sqlalchemy.sql.expression.alias attribute)": [[54, "sqlalchemy.sql.expression.Alias.inherit_cache"]], "inherit_cache (sqlalchemy.sql.expression.exists attribute)": [[54, "sqlalchemy.sql.expression.Exists.inherit_cache"]], "inherit_cache (sqlalchemy.sql.expression.lateral attribute)": [[54, "sqlalchemy.sql.expression.Lateral.inherit_cache"]], "inherit_cache (sqlalchemy.sql.expression.scalarselect attribute)": [[54, "sqlalchemy.sql.expression.ScalarSelect.inherit_cache"]], "inherit_cache (sqlalchemy.sql.expression.subquery attribute)": [[54, "sqlalchemy.sql.expression.Subquery.inherit_cache"]], "inherit_cache (sqlalchemy.sql.expression.tableclause attribute)": [[54, "sqlalchemy.sql.expression.TableClause.inherit_cache"]], "inherit_cache (sqlalchemy.sql.expression.textualselect attribute)": [[54, "sqlalchemy.sql.expression.TextualSelect.inherit_cache"]], "inner_columns (sqlalchemy.sql.expression.select attribute)": [[54, "sqlalchemy.sql.expression.Select.inner_columns"]], "insert() (sqlalchemy.sql.expression.tableclause method)": [[54, "sqlalchemy.sql.expression.TableClause.insert"]], "intersect() (in module sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.intersect"]], "intersect() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.intersect"]], "intersect_all() (in module sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.intersect_all"]], "intersect_all() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.intersect_all"]], "is_derived_from() (sqlalchemy.sql.expression.aliasedreturnsrows method)": [[54, "sqlalchemy.sql.expression.AliasedReturnsRows.is_derived_from"]], "is_derived_from() (sqlalchemy.sql.expression.fromclause method)": [[54, "sqlalchemy.sql.expression.FromClause.is_derived_from"]], "is_derived_from() (sqlalchemy.sql.expression.join method)": [[54, "sqlalchemy.sql.expression.Join.is_derived_from"]], "is_derived_from() (sqlalchemy.sql.expression.tableclause method)": [[54, "sqlalchemy.sql.expression.TableClause.is_derived_from"]], "join() (in module sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.join"]], "join() (sqlalchemy.sql.expression.fromclause method)": [[54, "sqlalchemy.sql.expression.FromClause.join"]], "join() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.join"]], "join() (sqlalchemy.sql.expression.tableclause method)": [[54, "sqlalchemy.sql.expression.TableClause.join"]], "join_from() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.join_from"]], "label() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.label"]], "label() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.label"]], "label() (sqlalchemy.sql.expression.selectbase method)": [[54, "sqlalchemy.sql.expression.SelectBase.label"]], "label() (sqlalchemy.sql.expression.textualselect method)": [[54, "sqlalchemy.sql.expression.TextualSelect.label"]], "lateral() (in module sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.lateral"]], "lateral() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.lateral"]], "lateral() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.lateral"]], "lateral() (sqlalchemy.sql.expression.selectbase method)": [[54, "sqlalchemy.sql.expression.SelectBase.lateral"]], "lateral() (sqlalchemy.sql.expression.selectable method)": [[54, "sqlalchemy.sql.expression.Selectable.lateral"]], "lateral() (sqlalchemy.sql.expression.tableclause method)": [[54, "sqlalchemy.sql.expression.TableClause.lateral"]], "lateral() (sqlalchemy.sql.expression.tablevaluedalias method)": [[54, "sqlalchemy.sql.expression.TableValuedAlias.lateral"]], "lateral() (sqlalchemy.sql.expression.textualselect method)": [[54, "sqlalchemy.sql.expression.TextualSelect.lateral"]], "lateral() (sqlalchemy.sql.expression.values method)": [[54, "sqlalchemy.sql.expression.Values.lateral"]], "limit() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.limit"]], "limit() (sqlalchemy.sql.expression.generativeselect method)": [[54, "sqlalchemy.sql.expression.GenerativeSelect.limit"]], "limit() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.limit"]], "memoized_instancemethod() (sqlalchemy.sql.expression.tableclause class method)": [[54, "sqlalchemy.sql.expression.TableClause.memoized_instancemethod"]], "memoized_instancemethod() (sqlalchemy.sql.expression.textualselect class method)": [[54, "sqlalchemy.sql.expression.TextualSelect.memoized_instancemethod"]], "offset() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.offset"]], "offset() (sqlalchemy.sql.expression.generativeselect method)": [[54, "sqlalchemy.sql.expression.GenerativeSelect.offset"]], "offset() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.offset"]], "options() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.options"]], "options() (sqlalchemy.sql.expression.executable method)": [[54, "sqlalchemy.sql.expression.Executable.options"]], "options() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.options"]], "options() (sqlalchemy.sql.expression.selectbase method)": [[54, "sqlalchemy.sql.expression.SelectBase.options"]], "options() (sqlalchemy.sql.expression.textualselect method)": [[54, "sqlalchemy.sql.expression.TextualSelect.options"]], "order_by() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.order_by"]], "order_by() (sqlalchemy.sql.expression.generativeselect method)": [[54, "sqlalchemy.sql.expression.GenerativeSelect.order_by"]], "order_by() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.order_by"]], "original (sqlalchemy.sql.expression.aliasedreturnsrows attribute)": [[54, "sqlalchemy.sql.expression.AliasedReturnsRows.original"]], "outerjoin() (in module sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.outerjoin"]], "outerjoin() (sqlalchemy.sql.expression.fromclause method)": [[54, "sqlalchemy.sql.expression.FromClause.outerjoin"]], "outerjoin() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.outerjoin"]], "outerjoin() (sqlalchemy.sql.expression.tableclause method)": [[54, "sqlalchemy.sql.expression.TableClause.outerjoin"]], "outerjoin_from() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.outerjoin_from"]], "params() (sqlalchemy.sql.expression.tableclause method)": [[54, "sqlalchemy.sql.expression.TableClause.params"]], "params() (sqlalchemy.sql.expression.textualselect method)": [[54, "sqlalchemy.sql.expression.TextualSelect.params"]], "prefix_with() (sqlalchemy.sql.expression.hasprefixes method)": [[54, "sqlalchemy.sql.expression.HasPrefixes.prefix_with"]], "prefix_with() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.prefix_with"]], "primary_key (sqlalchemy.sql.expression.fromclause attribute)": [[54, "sqlalchemy.sql.expression.FromClause.primary_key"]], "primary_key (sqlalchemy.sql.expression.tableclause attribute)": [[54, "sqlalchemy.sql.expression.TableClause.primary_key"]], "reduce_columns() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.reduce_columns"]], "render_derived() (sqlalchemy.sql.expression.tablevaluedalias method)": [[54, "sqlalchemy.sql.expression.TableValuedAlias.render_derived"]], "replace_selectable() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.replace_selectable"]], "replace_selectable() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.replace_selectable"]], "replace_selectable() (sqlalchemy.sql.expression.selectbase method)": [[54, "sqlalchemy.sql.expression.SelectBase.replace_selectable"]], "replace_selectable() (sqlalchemy.sql.expression.selectable method)": [[54, "sqlalchemy.sql.expression.Selectable.replace_selectable"]], "replace_selectable() (sqlalchemy.sql.expression.tableclause method)": [[54, "sqlalchemy.sql.expression.TableClause.replace_selectable"]], "replace_selectable() (sqlalchemy.sql.expression.textualselect method)": [[54, "sqlalchemy.sql.expression.TextualSelect.replace_selectable"]], "scalar() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.scalar"]], "scalar() (sqlalchemy.sql.expression.executable method)": [[54, "sqlalchemy.sql.expression.Executable.scalar"]], "scalar() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.scalar"]], "scalar() (sqlalchemy.sql.expression.selectbase method)": [[54, "sqlalchemy.sql.expression.SelectBase.scalar"]], "scalar() (sqlalchemy.sql.expression.textualselect method)": [[54, "sqlalchemy.sql.expression.TextualSelect.scalar"]], "scalar_subquery() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.scalar_subquery"]], "scalar_subquery() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.scalar_subquery"]], "scalar_subquery() (sqlalchemy.sql.expression.selectbase method)": [[54, "sqlalchemy.sql.expression.SelectBase.scalar_subquery"]], "scalar_subquery() (sqlalchemy.sql.expression.textualselect method)": [[54, "sqlalchemy.sql.expression.TextualSelect.scalar_subquery"]], "schema (sqlalchemy.sql.expression.fromclause attribute)": [[54, "sqlalchemy.sql.expression.FromClause.schema"]], "schema (sqlalchemy.sql.expression.tableclause attribute)": [[54, "sqlalchemy.sql.expression.TableClause.schema"]], "select() (in module sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.select"]], "select() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.select"]], "select() (sqlalchemy.sql.expression.exists method)": [[54, "sqlalchemy.sql.expression.Exists.select"]], "select() (sqlalchemy.sql.expression.fromclause method)": [[54, "sqlalchemy.sql.expression.FromClause.select"]], "select() (sqlalchemy.sql.expression.join method)": [[54, "sqlalchemy.sql.expression.Join.select"]], "select() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.select"]], "select() (sqlalchemy.sql.expression.selectbase method)": [[54, "sqlalchemy.sql.expression.SelectBase.select"]], "select() (sqlalchemy.sql.expression.tableclause method)": [[54, "sqlalchemy.sql.expression.TableClause.select"]], "select() (sqlalchemy.sql.expression.textualselect method)": [[54, "sqlalchemy.sql.expression.TextualSelect.select"]], "select_from() (sqlalchemy.sql.expression.exists method)": [[54, "sqlalchemy.sql.expression.Exists.select_from"]], "select_from() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.select_from"]], "selected_columns (sqlalchemy.sql.expression.compoundselect attribute)": [[54, "sqlalchemy.sql.expression.CompoundSelect.selected_columns"]], "selected_columns (sqlalchemy.sql.expression.select attribute)": [[54, "sqlalchemy.sql.expression.Select.selected_columns"]], "selected_columns (sqlalchemy.sql.expression.selectbase attribute)": [[54, "sqlalchemy.sql.expression.SelectBase.selected_columns"]], "selected_columns (sqlalchemy.sql.expression.textualselect attribute)": [[54, "sqlalchemy.sql.expression.TextualSelect.selected_columns"]], "self_group() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.self_group"]], "self_group() (sqlalchemy.sql.expression.join method)": [[54, "sqlalchemy.sql.expression.Join.self_group"]], "self_group() (sqlalchemy.sql.expression.scalarselect method)": [[54, "sqlalchemy.sql.expression.ScalarSelect.self_group"]], "self_group() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.self_group"]], "self_group() (sqlalchemy.sql.expression.tableclause method)": [[54, "sqlalchemy.sql.expression.TableClause.self_group"]], "self_group() (sqlalchemy.sql.expression.textualselect method)": [[54, "sqlalchemy.sql.expression.TextualSelect.self_group"]], "set_label_style() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.set_label_style"]], "set_label_style() (sqlalchemy.sql.expression.generativeselect method)": [[54, "sqlalchemy.sql.expression.GenerativeSelect.set_label_style"]], "set_label_style() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.set_label_style"]], "slice() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.slice"]], "slice() (sqlalchemy.sql.expression.generativeselect method)": [[54, "sqlalchemy.sql.expression.GenerativeSelect.slice"]], "slice() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.slice"]], "subquery() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.subquery"]], "subquery() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.subquery"]], "subquery() (sqlalchemy.sql.expression.selectbase method)": [[54, "sqlalchemy.sql.expression.SelectBase.subquery"]], "subquery() (sqlalchemy.sql.expression.textualselect method)": [[54, "sqlalchemy.sql.expression.TextualSelect.subquery"]], "suffix_with() (sqlalchemy.sql.expression.hassuffixes method)": [[54, "sqlalchemy.sql.expression.HasSuffixes.suffix_with"]], "suffix_with() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.suffix_with"]], "table() (in module sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.table"]], "table_valued() (sqlalchemy.sql.expression.fromclause method)": [[54, "sqlalchemy.sql.expression.FromClause.table_valued"]], "table_valued() (sqlalchemy.sql.expression.tableclause method)": [[54, "sqlalchemy.sql.expression.TableClause.table_valued"]], "tablesample() (in module sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.tablesample"]], "tablesample() (sqlalchemy.sql.expression.fromclause method)": [[54, "sqlalchemy.sql.expression.FromClause.tablesample"]], "tablesample() (sqlalchemy.sql.expression.tableclause method)": [[54, "sqlalchemy.sql.expression.TableClause.tablesample"]], "union() (in module sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.union"]], "union() (sqlalchemy.sql.expression.cte method)": [[54, "sqlalchemy.sql.expression.CTE.union"]], "union() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.union"]], "union_all() (in module sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.union_all"]], "union_all() (sqlalchemy.sql.expression.cte method)": [[54, "sqlalchemy.sql.expression.CTE.union_all"]], "union_all() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.union_all"]], "unique_params() (sqlalchemy.sql.expression.tableclause method)": [[54, "sqlalchemy.sql.expression.TableClause.unique_params"]], "unique_params() (sqlalchemy.sql.expression.textualselect method)": [[54, "sqlalchemy.sql.expression.TextualSelect.unique_params"]], "update() (sqlalchemy.sql.expression.tableclause method)": [[54, "sqlalchemy.sql.expression.TableClause.update"]], "values() (in module sqlalchemy.sql.expression)": [[54, "sqlalchemy.sql.expression.values"]], "where() (sqlalchemy.sql.expression.exists method)": [[54, "sqlalchemy.sql.expression.Exists.where"]], "where() (sqlalchemy.sql.expression.scalarselect method)": [[54, "sqlalchemy.sql.expression.ScalarSelect.where"]], "where() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.where"]], "whereclause (sqlalchemy.sql.expression.select attribute)": [[54, "sqlalchemy.sql.expression.Select.whereclause"]], "with_for_update() (sqlalchemy.sql.expression.compoundselect method)": [[54, "sqlalchemy.sql.expression.CompoundSelect.with_for_update"]], "with_for_update() (sqlalchemy.sql.expression.generativeselect method)": [[54, "sqlalchemy.sql.expression.GenerativeSelect.with_for_update"]], "with_for_update() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.with_for_update"]], "with_hint() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.with_hint"]], "with_only_columns() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.with_only_columns"]], "with_statement_hint() (sqlalchemy.sql.expression.select method)": [[54, "sqlalchemy.sql.expression.Select.with_statement_hint"]], "deserializer() (in module sqlalchemy.ext.serializer)": [[55, "sqlalchemy.ext.serializer.Deserializer"]], "serializer() (in module sqlalchemy.ext.serializer)": [[55, "sqlalchemy.ext.serializer.Serializer"]], "dumps() (in module sqlalchemy.ext.serializer)": [[55, "sqlalchemy.ext.serializer.dumps"]], "loads() (in module sqlalchemy.ext.serializer)": [[55, "sqlalchemy.ext.serializer.loads"]], "sqlalchemy.ext.serializer": [[55, "module-sqlalchemy.ext.serializer"]], "binaryexpression (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.BinaryExpression"]], "bindparameter (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.BindParameter"]], "case (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.Case"]], "cast (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.Cast"]], "clauselist (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.ClauseList"]], "columnclause (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.ColumnClause"]], "columncollection (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.ColumnCollection"]], "columnelement (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.ColumnElement"]], "columnoperators (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.ColumnOperators"]], "extract (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.Extract"]], "false_ (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.False_"]], "functionfilter (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.FunctionFilter"]], "label (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.Label"]], "null (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.Null"]], "operators (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.Operators"]], "over (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.Over"]], "textclause (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.TextClause"]], "true_ (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.True_"]], "tuple (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.Tuple"]], "typecoerce (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.TypeCoerce"]], "unaryexpression (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.UnaryExpression"]], "withingroup (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.WithinGroup"]], "wrapscolumnexpression (class in sqlalchemy.sql.elements)": [[56, "sqlalchemy.sql.elements.WrapsColumnExpression"]], "__add__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__add__"]], "__and__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__and__"]], "__and__() (sqlalchemy.sql.expression.operators method)": [[56, "sqlalchemy.sql.expression.Operators.__and__"]], "__div__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__div__"]], "__eq__() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.__eq__"]], "__eq__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__eq__"]], "__ge__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__ge__"]], "__getitem__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__getitem__"]], "__gt__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__gt__"]], "__hash__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__hash__"]], "__init__() (sqlalchemy.sql.expression.bindparameter method)": [[56, "sqlalchemy.sql.expression.BindParameter.__init__"]], "__init__() (sqlalchemy.sql.expression.case method)": [[56, "sqlalchemy.sql.expression.Case.__init__"]], "__init__() (sqlalchemy.sql.expression.cast method)": [[56, "sqlalchemy.sql.expression.Cast.__init__"]], "__init__() (sqlalchemy.sql.expression.columnclause method)": [[56, "sqlalchemy.sql.expression.ColumnClause.__init__"]], "__init__() (sqlalchemy.sql.expression.extract method)": [[56, "sqlalchemy.sql.expression.Extract.__init__"]], "__init__() (sqlalchemy.sql.expression.functionfilter method)": [[56, "sqlalchemy.sql.expression.FunctionFilter.__init__"]], "__init__() (sqlalchemy.sql.expression.label method)": [[56, "sqlalchemy.sql.expression.Label.__init__"]], "__init__() (sqlalchemy.sql.expression.over method)": [[56, "sqlalchemy.sql.expression.Over.__init__"]], "__init__() (sqlalchemy.sql.expression.tuple method)": [[56, "sqlalchemy.sql.expression.Tuple.__init__"]], "__init__() (sqlalchemy.sql.expression.typecoerce method)": [[56, "sqlalchemy.sql.expression.TypeCoerce.__init__"]], "__init__() (sqlalchemy.sql.expression.withingroup method)": [[56, "sqlalchemy.sql.expression.WithinGroup.__init__"]], "__invert__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__invert__"]], "__invert__() (sqlalchemy.sql.expression.operators method)": [[56, "sqlalchemy.sql.expression.Operators.__invert__"]], "__le__() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.__le__"]], "__le__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__le__"]], "__lshift__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__lshift__"]], "__lt__() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.__lt__"]], "__lt__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__lt__"]], "__mod__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__mod__"]], "__mul__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__mul__"]], "__ne__() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.__ne__"]], "__ne__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__ne__"]], "__neg__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__neg__"]], "__or__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__or__"]], "__or__() (sqlalchemy.sql.expression.operators method)": [[56, "sqlalchemy.sql.expression.Operators.__or__"]], "__radd__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__radd__"]], "__rdiv__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__rdiv__"]], "__rmod__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__rmod__"]], "__rmul__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__rmul__"]], "__rshift__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__rshift__"]], "__rsub__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__rsub__"]], "__rtruediv__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__rtruediv__"]], "__sub__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__sub__"]], "__truediv__() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.__truediv__"]], "add() (sqlalchemy.sql.expression.columncollection method)": [[56, "sqlalchemy.sql.expression.ColumnCollection.add"]], "all_() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.all_"]], "all_() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.all_"]], "all_() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.all_"]], "allows_lambda (sqlalchemy.sql.expression.columnelement attribute)": [[56, "sqlalchemy.sql.expression.ColumnElement.allows_lambda"]], "and_() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.and_"]], "anon_key_label (sqlalchemy.sql.expression.columnelement attribute)": [[56, "sqlalchemy.sql.expression.ColumnElement.anon_key_label"]], "anon_label (sqlalchemy.sql.expression.columnelement attribute)": [[56, "sqlalchemy.sql.expression.ColumnElement.anon_label"]], "any_() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.any_"]], "any_() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.any_"]], "any_() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.any_"]], "as_immutable() (sqlalchemy.sql.expression.columncollection method)": [[56, "sqlalchemy.sql.expression.ColumnCollection.as_immutable"]], "asc() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.asc"]], "asc() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.asc"]], "asc() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.asc"]], "base_columns (sqlalchemy.sql.expression.columnelement attribute)": [[56, "sqlalchemy.sql.expression.ColumnElement.base_columns"]], "between() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.between"]], "between() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.between"]], "between() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.between"]], "bind (sqlalchemy.sql.expression.columnelement attribute)": [[56, "sqlalchemy.sql.expression.ColumnElement.bind"]], "bindparam() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.bindparam"]], "bindparams() (sqlalchemy.sql.expression.textclause method)": [[56, "sqlalchemy.sql.expression.TextClause.bindparams"]], "bool_op() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.bool_op"]], "bool_op() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.bool_op"]], "bool_op() (sqlalchemy.sql.expression.operators method)": [[56, "sqlalchemy.sql.expression.Operators.bool_op"]], "case() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.case"]], "cast() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.cast"]], "cast() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.cast"]], "clear() (sqlalchemy.sql.expression.columncollection method)": [[56, "sqlalchemy.sql.expression.ColumnCollection.clear"]], "collate() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.collate"]], "collate() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.collate"]], "collate() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.collate"]], "column() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.column"]], "columns() (sqlalchemy.sql.expression.textclause method)": [[56, "sqlalchemy.sql.expression.TextClause.columns"]], "comparator (sqlalchemy.sql.expression.columnelement attribute)": [[56, "sqlalchemy.sql.expression.ColumnElement.comparator"]], "compare() (sqlalchemy.sql.expression.columncollection method)": [[56, "sqlalchemy.sql.expression.ColumnCollection.compare"]], "compare() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.compare"]], "compile() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.compile"]], "concat() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.concat"]], "concat() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.concat"]], "contains() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.contains"]], "contains() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.contains"]], "contains_column() (sqlalchemy.sql.expression.columncollection method)": [[56, "sqlalchemy.sql.expression.ColumnCollection.contains_column"]], "corresponding_column() (sqlalchemy.sql.expression.columncollection method)": [[56, "sqlalchemy.sql.expression.ColumnCollection.corresponding_column"]], "custom_op (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.custom_op"]], "desc() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.desc"]], "desc() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.desc"]], "desc() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.desc"]], "description (sqlalchemy.sql.expression.columnelement attribute)": [[56, "sqlalchemy.sql.expression.ColumnElement.description"]], "distinct() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.distinct"]], "distinct() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.distinct"]], "distinct() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.distinct"]], "effective_value (sqlalchemy.sql.expression.bindparameter attribute)": [[56, "sqlalchemy.sql.expression.BindParameter.effective_value"]], "element (sqlalchemy.sql.expression.over attribute)": [[56, "sqlalchemy.sql.expression.Over.element"]], "endswith() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.endswith"]], "endswith() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.endswith"]], "entity_namespace (sqlalchemy.sql.expression.columnelement attribute)": [[56, "sqlalchemy.sql.expression.ColumnElement.entity_namespace"]], "expression (sqlalchemy.sql.expression.columnelement attribute)": [[56, "sqlalchemy.sql.expression.ColumnElement.expression"]], "extract() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.extract"]], "false() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.false"]], "filter() (sqlalchemy.sql.expression.functionfilter method)": [[56, "sqlalchemy.sql.expression.FunctionFilter.filter"]], "foreign_keys (sqlalchemy.sql.expression.columnelement attribute)": [[56, "sqlalchemy.sql.expression.ColumnElement.foreign_keys"]], "foreign_keys (sqlalchemy.sql.expression.label attribute)": [[56, "sqlalchemy.sql.expression.Label.foreign_keys"]], "func (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.func"]], "funcfilter() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.funcfilter"]], "get() (sqlalchemy.sql.expression.columncollection method)": [[56, "sqlalchemy.sql.expression.ColumnCollection.get"]], "get_children() (sqlalchemy.sql.expression.columnclause method)": [[56, "sqlalchemy.sql.expression.ColumnClause.get_children"]], "get_children() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.get_children"]], "ilike() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.ilike"]], "ilike() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.ilike"]], "in_() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.in_"]], "in_() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.in_"]], "inherit_cache (sqlalchemy.sql.expression.bindparameter attribute)": [[56, "sqlalchemy.sql.expression.BindParameter.inherit_cache"]], "inherit_cache (sqlalchemy.sql.expression.columnelement attribute)": [[56, "sqlalchemy.sql.expression.ColumnElement.inherit_cache"]], "is_() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.is_"]], "is_() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.is_"]], "is_clause_element (sqlalchemy.sql.expression.columnelement attribute)": [[56, "sqlalchemy.sql.expression.ColumnElement.is_clause_element"]], "is_distinct_from() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.is_distinct_from"]], "is_distinct_from() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.is_distinct_from"]], "is_not() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.is_not"]], "is_not() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.is_not"]], "is_not_distinct_from() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.is_not_distinct_from"]], "is_not_distinct_from() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.is_not_distinct_from"]], "is_selectable (sqlalchemy.sql.expression.columnelement attribute)": [[56, "sqlalchemy.sql.expression.ColumnElement.is_selectable"]], "isnot() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.isnot"]], "isnot() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.isnot"]], "isnot_distinct_from() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.isnot_distinct_from"]], "isnot_distinct_from() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.isnot_distinct_from"]], "items() (sqlalchemy.sql.expression.columncollection method)": [[56, "sqlalchemy.sql.expression.ColumnCollection.items"]], "key (sqlalchemy.sql.expression.columnelement attribute)": [[56, "sqlalchemy.sql.expression.ColumnElement.key"]], "keys() (sqlalchemy.sql.expression.columncollection method)": [[56, "sqlalchemy.sql.expression.ColumnCollection.keys"]], "label() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.label"]], "label() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.label"]], "lambda_stmt() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.lambda_stmt"]], "like() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.like"]], "like() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.like"]], "literal() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.literal"]], "literal_column() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.literal_column"]], "match() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.match"]], "match() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.match"]], "memoized_instancemethod() (sqlalchemy.sql.expression.columnelement class method)": [[56, "sqlalchemy.sql.expression.ColumnElement.memoized_instancemethod"]], "not_() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.not_"]], "not_ilike() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.not_ilike"]], "not_ilike() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.not_ilike"]], "not_in() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.not_in"]], "not_in() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.not_in"]], "not_like() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.not_like"]], "not_like() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.not_like"]], "notilike() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.notilike"]], "notilike() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.notilike"]], "notin_() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.notin_"]], "notin_() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.notin_"]], "notlike() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.notlike"]], "notlike() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.notlike"]], "null() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.null"]], "nulls_first() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.nulls_first"]], "nulls_first() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.nulls_first"]], "nulls_first() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.nulls_first"]], "nulls_last() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.nulls_last"]], "nulls_last() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.nulls_last"]], "nulls_last() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.nulls_last"]], "nullsfirst() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.nullsfirst"]], "nullsfirst() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.nullsfirst"]], "nullslast() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.nullslast"]], "nullslast() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.nullslast"]], "op() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.op"]], "op() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.op"]], "op() (sqlalchemy.sql.expression.operators method)": [[56, "sqlalchemy.sql.expression.Operators.op"]], "operate() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.operate"]], "operate() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.operate"]], "operate() (sqlalchemy.sql.expression.operators method)": [[56, "sqlalchemy.sql.expression.Operators.operate"]], "or_() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.or_"]], "outparam() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.outparam"]], "over() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.over"]], "over() (sqlalchemy.sql.expression.functionfilter method)": [[56, "sqlalchemy.sql.expression.FunctionFilter.over"]], "over() (sqlalchemy.sql.expression.withingroup method)": [[56, "sqlalchemy.sql.expression.WithinGroup.over"]], "params() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.params"]], "primary_key (sqlalchemy.sql.expression.columnelement attribute)": [[56, "sqlalchemy.sql.expression.ColumnElement.primary_key"]], "primary_key (sqlalchemy.sql.expression.label attribute)": [[56, "sqlalchemy.sql.expression.Label.primary_key"]], "proxy_set (sqlalchemy.sql.expression.columnelement attribute)": [[56, "sqlalchemy.sql.expression.ColumnElement.proxy_set"]], "quote (sqlalchemy.sql.expression.quoted_name attribute)": [[56, "sqlalchemy.sql.expression.quoted_name.quote"]], "quoted_name (class in sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.quoted_name"]], "regexp_match() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.regexp_match"]], "regexp_match() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.regexp_match"]], "regexp_replace() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.regexp_replace"]], "regexp_replace() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.regexp_replace"]], "remove() (sqlalchemy.sql.expression.columncollection method)": [[56, "sqlalchemy.sql.expression.ColumnCollection.remove"]], "render_literal_execute() (sqlalchemy.sql.expression.bindparameter method)": [[56, "sqlalchemy.sql.expression.BindParameter.render_literal_execute"]], "reverse_operate() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.reverse_operate"]], "reverse_operate() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.reverse_operate"]], "reverse_operate() (sqlalchemy.sql.expression.operators method)": [[56, "sqlalchemy.sql.expression.Operators.reverse_operate"]], "self_group() (sqlalchemy.sql.expression.binaryexpression method)": [[56, "sqlalchemy.sql.expression.BinaryExpression.self_group"]], "self_group() (sqlalchemy.sql.expression.clauselist method)": [[56, "sqlalchemy.sql.expression.ClauseList.self_group"]], "self_group() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.self_group"]], "self_group() (sqlalchemy.sql.expression.functionfilter method)": [[56, "sqlalchemy.sql.expression.FunctionFilter.self_group"]], "self_group() (sqlalchemy.sql.expression.label method)": [[56, "sqlalchemy.sql.expression.Label.self_group"]], "self_group() (sqlalchemy.sql.expression.textclause method)": [[56, "sqlalchemy.sql.expression.TextClause.self_group"]], "self_group() (sqlalchemy.sql.expression.tuple method)": [[56, "sqlalchemy.sql.expression.Tuple.self_group"]], "self_group() (sqlalchemy.sql.expression.typecoerce method)": [[56, "sqlalchemy.sql.expression.TypeCoerce.self_group"]], "self_group() (sqlalchemy.sql.expression.unaryexpression method)": [[56, "sqlalchemy.sql.expression.UnaryExpression.self_group"]], "shares_lineage() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.shares_lineage"]], "startswith() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.startswith"]], "startswith() (sqlalchemy.sql.expression.columnoperators method)": [[56, "sqlalchemy.sql.expression.ColumnOperators.startswith"]], "stringify_dialect (sqlalchemy.sql.expression.columnelement attribute)": [[56, "sqlalchemy.sql.expression.ColumnElement.stringify_dialect"]], "supports_execution (sqlalchemy.sql.expression.columnelement attribute)": [[56, "sqlalchemy.sql.expression.ColumnElement.supports_execution"]], "text() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.text"]], "timetuple (sqlalchemy.sql.expression.columnelement attribute)": [[56, "sqlalchemy.sql.expression.ColumnElement.timetuple"]], "timetuple (sqlalchemy.sql.expression.columnoperators attribute)": [[56, "sqlalchemy.sql.expression.ColumnOperators.timetuple"]], "true() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.true"]], "tuple_() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.tuple_"]], "type (sqlalchemy.sql.expression.columnelement attribute)": [[56, "sqlalchemy.sql.expression.ColumnElement.type"]], "type_coerce() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.type_coerce"]], "unique_params() (sqlalchemy.sql.expression.columnelement method)": [[56, "sqlalchemy.sql.expression.ColumnElement.unique_params"]], "update() (sqlalchemy.sql.expression.columncollection method)": [[56, "sqlalchemy.sql.expression.ColumnCollection.update"]], "uses_inspection (sqlalchemy.sql.expression.columnelement attribute)": [[56, "sqlalchemy.sql.expression.ColumnElement.uses_inspection"]], "values() (sqlalchemy.sql.expression.columncollection method)": [[56, "sqlalchemy.sql.expression.ColumnCollection.values"]], "within_group() (in module sqlalchemy.sql.expression)": [[56, "sqlalchemy.sql.expression.within_group"]], "concatenable (class in sqlalchemy.types)": [[58, "sqlalchemy.types.Concatenable"]], "concatenable.comparator (class in sqlalchemy.types)": [[58, "sqlalchemy.types.Concatenable.Comparator"]], "externaltype (class in sqlalchemy.types)": [[58, "sqlalchemy.types.ExternalType"]], "indexable (class in sqlalchemy.types)": [[58, "sqlalchemy.types.Indexable"]], "indexable.comparator (class in sqlalchemy.types)": [[58, "sqlalchemy.types.Indexable.Comparator"]], "nulltype (class in sqlalchemy.types)": [[58, "sqlalchemy.types.NullType"]], "typeengine (class in sqlalchemy.types)": [[58, "sqlalchemy.types.TypeEngine"]], "typeengine.comparator (class in sqlalchemy.types)": [[58, "sqlalchemy.types.TypeEngine.Comparator"]], "variant (class in sqlalchemy.types)": [[58, "sqlalchemy.types.Variant"]], "__init__() (sqlalchemy.types.variant method)": [[58, "sqlalchemy.types.Variant.__init__"]], "adapt() (sqlalchemy.types.typeengine method)": [[58, "sqlalchemy.types.TypeEngine.adapt"]], "as_generic() (sqlalchemy.types.typeengine method)": [[58, "sqlalchemy.types.TypeEngine.as_generic"]], "bind_expression() (sqlalchemy.types.typeengine method)": [[58, "sqlalchemy.types.TypeEngine.bind_expression"]], "bind_processor() (sqlalchemy.types.typeengine method)": [[58, "sqlalchemy.types.TypeEngine.bind_processor"]], "cache_ok (sqlalchemy.types.externaltype attribute)": [[58, "sqlalchemy.types.ExternalType.cache_ok"]], "coerce_compared_value() (sqlalchemy.types.typeengine method)": [[58, "sqlalchemy.types.TypeEngine.coerce_compared_value"]], "column_expression() (sqlalchemy.types.typeengine method)": [[58, "sqlalchemy.types.TypeEngine.column_expression"]], "comparator_factory (sqlalchemy.types.concatenable attribute)": [[58, "sqlalchemy.types.Concatenable.comparator_factory"]], "comparator_factory (sqlalchemy.types.indexable attribute)": [[58, "sqlalchemy.types.Indexable.comparator_factory"]], "comparator_factory (sqlalchemy.types.typeengine attribute)": [[58, "sqlalchemy.types.TypeEngine.comparator_factory"]], "compare_against_backend() (sqlalchemy.types.typeengine method)": [[58, "sqlalchemy.types.TypeEngine.compare_against_backend"]], "compare_values() (sqlalchemy.types.typeengine method)": [[58, "sqlalchemy.types.TypeEngine.compare_values"]], "compile() (sqlalchemy.types.typeengine method)": [[58, "sqlalchemy.types.TypeEngine.compile"]], "dialect_impl() (sqlalchemy.types.typeengine method)": [[58, "sqlalchemy.types.TypeEngine.dialect_impl"]], "evaluates_none() (sqlalchemy.types.typeengine method)": [[58, "sqlalchemy.types.TypeEngine.evaluates_none"]], "get_dbapi_type() (sqlalchemy.types.typeengine method)": [[58, "sqlalchemy.types.TypeEngine.get_dbapi_type"]], "hashable (sqlalchemy.types.typeengine attribute)": [[58, "sqlalchemy.types.TypeEngine.hashable"]], "literal_processor() (sqlalchemy.types.typeengine method)": [[58, "sqlalchemy.types.TypeEngine.literal_processor"]], "operate() (sqlalchemy.types.typeengine.comparator method)": [[58, "sqlalchemy.types.TypeEngine.Comparator.operate"]], "python_type (sqlalchemy.types.typeengine attribute)": [[58, "sqlalchemy.types.TypeEngine.python_type"]], "result_processor() (sqlalchemy.types.typeengine method)": [[58, "sqlalchemy.types.TypeEngine.result_processor"]], "reverse_operate() (sqlalchemy.types.typeengine.comparator method)": [[58, "sqlalchemy.types.TypeEngine.Comparator.reverse_operate"]], "should_evaluate_none (sqlalchemy.types.typeengine attribute)": [[58, "sqlalchemy.types.TypeEngine.should_evaluate_none"]], "sort_key_function (sqlalchemy.types.typeengine attribute)": [[58, "sqlalchemy.types.TypeEngine.sort_key_function"]], "with_variant() (sqlalchemy.types.typeengine method)": [[58, "sqlalchemy.types.TypeEngine.with_variant"]], "with_variant() (sqlalchemy.types.variant method)": [[58, "sqlalchemy.types.Variant.with_variant"]], "array (class in sqlalchemy.types)": [[59, "sqlalchemy.types.ARRAY"]], "array.comparator (class in sqlalchemy.types)": [[59, "sqlalchemy.types.ARRAY.Comparator"]], "bigint (class in sqlalchemy.types)": [[59, "sqlalchemy.types.BIGINT"]], "binary (class in sqlalchemy.types)": [[59, "sqlalchemy.types.BINARY"]], "blob (class in sqlalchemy.types)": [[59, "sqlalchemy.types.BLOB"]], "boolean (class in sqlalchemy.types)": [[59, "sqlalchemy.types.BOOLEAN"], [59, "sqlalchemy.types.Boolean"]], "biginteger (class in sqlalchemy.types)": [[59, "sqlalchemy.types.BigInteger"]], "char (class in sqlalchemy.types)": [[59, "sqlalchemy.types.CHAR"]], "clob (class in sqlalchemy.types)": [[59, "sqlalchemy.types.CLOB"]], "date (class in sqlalchemy.types)": [[59, "sqlalchemy.types.DATE"], [59, "sqlalchemy.types.Date"]], "datetime (class in sqlalchemy.types)": [[59, "sqlalchemy.types.DATETIME"], [59, "sqlalchemy.types.DateTime"]], "decimal (class in sqlalchemy.types)": [[59, "sqlalchemy.types.DECIMAL"]], "enum (class in sqlalchemy.types)": [[59, "sqlalchemy.types.Enum"]], "float (class in sqlalchemy.types)": [[59, "sqlalchemy.types.FLOAT"], [59, "sqlalchemy.types.Float"]], "int (in module sqlalchemy.types)": [[59, "sqlalchemy.types.INT"]], "integer (class in sqlalchemy.types)": [[59, "sqlalchemy.types.INTEGER"], [59, "sqlalchemy.types.Integer"]], "interval (class in sqlalchemy.types)": [[59, "sqlalchemy.types.Interval"]], "json (class in sqlalchemy.types)": [[59, "sqlalchemy.types.JSON"]], "json.comparator (class in sqlalchemy.types)": [[59, "sqlalchemy.types.JSON.Comparator"]], "json.jsonelementtype (class in sqlalchemy.types)": [[59, "sqlalchemy.types.JSON.JSONElementType"]], "json.jsonindextype (class in sqlalchemy.types)": [[59, "sqlalchemy.types.JSON.JSONIndexType"]], "json.jsonintindextype (class in sqlalchemy.types)": [[59, "sqlalchemy.types.JSON.JSONIntIndexType"]], "json.jsonpathtype (class in sqlalchemy.types)": [[59, "sqlalchemy.types.JSON.JSONPathType"]], "json.jsonstrindextype (class in sqlalchemy.types)": [[59, "sqlalchemy.types.JSON.JSONStrIndexType"]], "largebinary (class in sqlalchemy.types)": [[59, "sqlalchemy.types.LargeBinary"]], "matchtype (class in sqlalchemy.types)": [[59, "sqlalchemy.types.MatchType"]], "nchar (class in sqlalchemy.types)": [[59, "sqlalchemy.types.NCHAR"]], "null (sqlalchemy.types.json attribute)": [[59, "sqlalchemy.types.JSON.NULL"]], "numeric (class in sqlalchemy.types)": [[59, "sqlalchemy.types.NUMERIC"], [59, "sqlalchemy.types.Numeric"]], "nvarchar (class in sqlalchemy.types)": [[59, "sqlalchemy.types.NVARCHAR"]], "pickletype (class in sqlalchemy.types)": [[59, "sqlalchemy.types.PickleType"]], "real (class in sqlalchemy.types)": [[59, "sqlalchemy.types.REAL"]], "returns_bytes (sqlalchemy.types.string attribute)": [[59, "sqlalchemy.types.String.RETURNS_BYTES"]], "returns_conditional (sqlalchemy.types.string attribute)": [[59, "sqlalchemy.types.String.RETURNS_CONDITIONAL"]], "returns_unicode (sqlalchemy.types.string attribute)": [[59, "sqlalchemy.types.String.RETURNS_UNICODE"]], "returns_unknown (sqlalchemy.types.string attribute)": [[59, "sqlalchemy.types.String.RETURNS_UNKNOWN"]], "smallint (class in sqlalchemy.types)": [[59, "sqlalchemy.types.SMALLINT"]], "schematype (class in sqlalchemy.types)": [[59, "sqlalchemy.types.SchemaType"]], "smallinteger (class in sqlalchemy.types)": [[59, "sqlalchemy.types.SmallInteger"]], "string (class in sqlalchemy.types)": [[59, "sqlalchemy.types.String"]], "text (class in sqlalchemy.types)": [[59, "sqlalchemy.types.TEXT"], [59, "sqlalchemy.types.Text"]], "time (class in sqlalchemy.types)": [[59, "sqlalchemy.types.TIME"], [59, "sqlalchemy.types.Time"]], "timestamp (class in sqlalchemy.types)": [[59, "sqlalchemy.types.TIMESTAMP"]], "unicode (class in sqlalchemy.types)": [[59, "sqlalchemy.types.Unicode"]], "unicodetext (class in sqlalchemy.types)": [[59, "sqlalchemy.types.UnicodeText"]], "varbinary (class in sqlalchemy.types)": [[59, "sqlalchemy.types.VARBINARY"]], "varchar (class in sqlalchemy.types)": [[59, "sqlalchemy.types.VARCHAR"]], "__init__() (sqlalchemy.types.array method)": [[59, "sqlalchemy.types.ARRAY.__init__"]], "__init__() (sqlalchemy.types.boolean method)": [[59, "sqlalchemy.types.Boolean.__init__"]], "__init__() (sqlalchemy.types.datetime method)": [[59, "sqlalchemy.types.DateTime.__init__"]], "__init__() (sqlalchemy.types.enum method)": [[59, "sqlalchemy.types.Enum.__init__"]], "__init__() (sqlalchemy.types.float method)": [[59, "sqlalchemy.types.Float.__init__"]], "__init__() (sqlalchemy.types.interval method)": [[59, "sqlalchemy.types.Interval.__init__"]], "__init__() (sqlalchemy.types.json method)": [[59, "sqlalchemy.types.JSON.__init__"]], "__init__() (sqlalchemy.types.largebinary method)": [[59, "sqlalchemy.types.LargeBinary.__init__"]], "__init__() (sqlalchemy.types.numeric method)": [[59, "sqlalchemy.types.Numeric.__init__"]], "__init__() (sqlalchemy.types.pickletype method)": [[59, "sqlalchemy.types.PickleType.__init__"]], "__init__() (sqlalchemy.types.string method)": [[59, "sqlalchemy.types.String.__init__"]], "__init__() (sqlalchemy.types.timestamp method)": [[59, "sqlalchemy.types.TIMESTAMP.__init__"]], "__init__() (sqlalchemy.types.unicode method)": [[59, "sqlalchemy.types.Unicode.__init__"]], "__init__() (sqlalchemy.types.unicodetext method)": [[59, "sqlalchemy.types.UnicodeText.__init__"]], "adapt() (sqlalchemy.types.schematype method)": [[59, "sqlalchemy.types.SchemaType.adapt"]], "adapt_to_emulated() (sqlalchemy.types.interval method)": [[59, "sqlalchemy.types.Interval.adapt_to_emulated"]], "all() (sqlalchemy.types.array.comparator method)": [[59, "sqlalchemy.types.ARRAY.Comparator.all"]], "any() (sqlalchemy.types.array.comparator method)": [[59, "sqlalchemy.types.ARRAY.Comparator.any"]], "as_boolean() (sqlalchemy.types.json.comparator method)": [[59, "sqlalchemy.types.JSON.Comparator.as_boolean"]], "as_float() (sqlalchemy.types.json.comparator method)": [[59, "sqlalchemy.types.JSON.Comparator.as_float"]], "as_integer() (sqlalchemy.types.json.comparator method)": [[59, "sqlalchemy.types.JSON.Comparator.as_integer"]], "as_json() (sqlalchemy.types.json.comparator method)": [[59, "sqlalchemy.types.JSON.Comparator.as_json"]], "as_numeric() (sqlalchemy.types.json.comparator method)": [[59, "sqlalchemy.types.JSON.Comparator.as_numeric"]], "as_string() (sqlalchemy.types.json.comparator method)": [[59, "sqlalchemy.types.JSON.Comparator.as_string"]], "bind (sqlalchemy.types.schematype attribute)": [[59, "sqlalchemy.types.SchemaType.bind"]], "bind_processor() (sqlalchemy.types.boolean method)": [[59, "sqlalchemy.types.Boolean.bind_processor"]], "bind_processor() (sqlalchemy.types.interval method)": [[59, "sqlalchemy.types.Interval.bind_processor"]], "bind_processor() (sqlalchemy.types.json method)": [[59, "sqlalchemy.types.JSON.bind_processor"]], "bind_processor() (sqlalchemy.types.json.jsonelementtype method)": [[59, "sqlalchemy.types.JSON.JSONElementType.bind_processor"]], "bind_processor() (sqlalchemy.types.numeric method)": [[59, "sqlalchemy.types.Numeric.bind_processor"]], "bind_processor() (sqlalchemy.types.pickletype method)": [[59, "sqlalchemy.types.PickleType.bind_processor"]], "bind_processor() (sqlalchemy.types.string method)": [[59, "sqlalchemy.types.String.bind_processor"]], "cache_ok (sqlalchemy.types.interval attribute)": [[59, "sqlalchemy.types.Interval.cache_ok"]], "cache_ok (sqlalchemy.types.pickletype attribute)": [[59, "sqlalchemy.types.PickleType.cache_ok"]], "comparator_factory (sqlalchemy.types.array attribute)": [[59, "sqlalchemy.types.ARRAY.comparator_factory"]], "comparator_factory (sqlalchemy.types.json attribute)": [[59, "sqlalchemy.types.JSON.comparator_factory"]], "compare_values() (sqlalchemy.types.array method)": [[59, "sqlalchemy.types.ARRAY.compare_values"]], "compare_values() (sqlalchemy.types.pickletype method)": [[59, "sqlalchemy.types.PickleType.compare_values"]], "contains() (sqlalchemy.types.array.comparator method)": [[59, "sqlalchemy.types.ARRAY.Comparator.contains"]], "copy() (sqlalchemy.types.schematype method)": [[59, "sqlalchemy.types.SchemaType.copy"]], "create() (sqlalchemy.types.enum method)": [[59, "sqlalchemy.types.Enum.create"]], "create() (sqlalchemy.types.schematype method)": [[59, "sqlalchemy.types.SchemaType.create"]], "drop() (sqlalchemy.types.enum method)": [[59, "sqlalchemy.types.Enum.drop"]], "drop() (sqlalchemy.types.schematype method)": [[59, "sqlalchemy.types.SchemaType.drop"]], "get_dbapi_type() (sqlalchemy.types.date method)": [[59, "sqlalchemy.types.Date.get_dbapi_type"]], "get_dbapi_type() (sqlalchemy.types.datetime method)": [[59, "sqlalchemy.types.DateTime.get_dbapi_type"]], "get_dbapi_type() (sqlalchemy.types.integer method)": [[59, "sqlalchemy.types.Integer.get_dbapi_type"]], "get_dbapi_type() (sqlalchemy.types.numeric method)": [[59, "sqlalchemy.types.Numeric.get_dbapi_type"]], "get_dbapi_type() (sqlalchemy.types.string method)": [[59, "sqlalchemy.types.String.get_dbapi_type"]], "get_dbapi_type() (sqlalchemy.types.timestamp method)": [[59, "sqlalchemy.types.TIMESTAMP.get_dbapi_type"]], "get_dbapi_type() (sqlalchemy.types.time method)": [[59, "sqlalchemy.types.Time.get_dbapi_type"]], "hashable (sqlalchemy.types.array attribute)": [[59, "sqlalchemy.types.ARRAY.hashable"]], "hashable (sqlalchemy.types.json attribute)": [[59, "sqlalchemy.types.JSON.hashable"]], "impl (sqlalchemy.types.interval attribute)": [[59, "sqlalchemy.types.Interval.impl"]], "impl (sqlalchemy.types.pickletype attribute)": [[59, "sqlalchemy.types.PickleType.impl"]], "literal_processor() (sqlalchemy.types.boolean method)": [[59, "sqlalchemy.types.Boolean.literal_processor"]], "literal_processor() (sqlalchemy.types.integer method)": [[59, "sqlalchemy.types.Integer.literal_processor"]], "literal_processor() (sqlalchemy.types.json.jsonelementtype method)": [[59, "sqlalchemy.types.JSON.JSONElementType.literal_processor"]], "literal_processor() (sqlalchemy.types.numeric method)": [[59, "sqlalchemy.types.Numeric.literal_processor"]], "literal_processor() (sqlalchemy.types.string method)": [[59, "sqlalchemy.types.String.literal_processor"]], "python_type (sqlalchemy.types.array attribute)": [[59, "sqlalchemy.types.ARRAY.python_type"]], "python_type (sqlalchemy.types.boolean attribute)": [[59, "sqlalchemy.types.Boolean.python_type"]], "python_type (sqlalchemy.types.date attribute)": [[59, "sqlalchemy.types.Date.python_type"]], "python_type (sqlalchemy.types.datetime attribute)": [[59, "sqlalchemy.types.DateTime.python_type"]], "python_type (sqlalchemy.types.integer attribute)": [[59, "sqlalchemy.types.Integer.python_type"]], "python_type (sqlalchemy.types.interval attribute)": [[59, "sqlalchemy.types.Interval.python_type"]], "python_type (sqlalchemy.types.json attribute)": [[59, "sqlalchemy.types.JSON.python_type"]], "python_type (sqlalchemy.types.numeric attribute)": [[59, "sqlalchemy.types.Numeric.python_type"]], "python_type (sqlalchemy.types.string attribute)": [[59, "sqlalchemy.types.String.python_type"]], "python_type (sqlalchemy.types.time attribute)": [[59, "sqlalchemy.types.Time.python_type"]], "result_processor() (sqlalchemy.types.boolean method)": [[59, "sqlalchemy.types.Boolean.result_processor"]], "result_processor() (sqlalchemy.types.float method)": [[59, "sqlalchemy.types.Float.result_processor"]], "result_processor() (sqlalchemy.types.interval method)": [[59, "sqlalchemy.types.Interval.result_processor"]], "result_processor() (sqlalchemy.types.json method)": [[59, "sqlalchemy.types.JSON.result_processor"]], "result_processor() (sqlalchemy.types.numeric method)": [[59, "sqlalchemy.types.Numeric.result_processor"]], "result_processor() (sqlalchemy.types.pickletype method)": [[59, "sqlalchemy.types.PickleType.result_processor"]], "result_processor() (sqlalchemy.types.string method)": [[59, "sqlalchemy.types.String.result_processor"]], "should_evaluate_none (sqlalchemy.types.json attribute)": [[59, "sqlalchemy.types.JSON.should_evaluate_none"]], "sqlalchemy.types": [[59, "module-sqlalchemy.types"]], "zero_indexes (sqlalchemy.types.array attribute)": [[59, "sqlalchemy.types.ARRAY.zero_indexes"]], "externaltraversal (class in sqlalchemy.sql.visitors)": [[61, "sqlalchemy.sql.visitors.ExternalTraversal"]], "internaltraversal (class in sqlalchemy.sql.visitors)": [[61, "sqlalchemy.sql.visitors.InternalTraversal"]], "traversible (class in sqlalchemy.sql.visitors)": [[61, "sqlalchemy.sql.visitors.Traversible"]], "traversibletype (class in sqlalchemy.sql.visitors)": [[61, "sqlalchemy.sql.visitors.TraversibleType"]], "chain() (sqlalchemy.sql.visitors.externaltraversal method)": [[61, "sqlalchemy.sql.visitors.ExternalTraversal.chain"]], "cloned_traverse() (in module sqlalchemy.sql.visitors)": [[61, "sqlalchemy.sql.visitors.cloned_traverse"]], "dispatch() (sqlalchemy.sql.visitors.internaltraversal method)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dispatch"]], "dp_annotations_key (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_annotations_key"]], "dp_anon_name (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_anon_name"]], "dp_boolean (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_boolean"]], "dp_clauseelement (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_clauseelement"]], "dp_clauseelement_list (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_clauseelement_list"]], "dp_clauseelement_tuple (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_clauseelement_tuple"]], "dp_clauseelement_tuples (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_clauseelement_tuples"]], "dp_dialect_options (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_dialect_options"]], "dp_dml_multi_values (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_dml_multi_values"]], "dp_dml_ordered_values (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_dml_ordered_values"]], "dp_dml_values (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_dml_values"]], "dp_fromclause_canonical_column_collection (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_fromclause_canonical_column_collection"]], "dp_fromclause_ordered_set (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_fromclause_ordered_set"]], "dp_has_cache_key (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_has_cache_key"]], "dp_has_cache_key_list (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_has_cache_key_list"]], "dp_named_ddl_element (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_named_ddl_element"]], "dp_operator (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_operator"]], "dp_plain_dict (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_plain_dict"]], "dp_plain_obj (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_plain_obj"]], "dp_prefix_sequence (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_prefix_sequence"]], "dp_propagate_attrs (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_propagate_attrs"]], "dp_statement_hint_list (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_statement_hint_list"]], "dp_string (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_string"]], "dp_string_clauseelement_dict (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_string_clauseelement_dict"]], "dp_string_list (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_string_list"]], "dp_string_multi_dict (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_string_multi_dict"]], "dp_table_hint_list (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_table_hint_list"]], "dp_type (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_type"]], "dp_unknown_structure (sqlalchemy.sql.visitors.internaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.InternalTraversal.dp_unknown_structure"]], "get_children() (sqlalchemy.sql.visitors.traversible method)": [[61, "sqlalchemy.sql.visitors.Traversible.get_children"]], "iterate() (in module sqlalchemy.sql.visitors)": [[61, "sqlalchemy.sql.visitors.iterate"]], "iterate() (sqlalchemy.sql.visitors.externaltraversal method)": [[61, "sqlalchemy.sql.visitors.ExternalTraversal.iterate"]], "replacement_traverse() (in module sqlalchemy.sql.visitors)": [[61, "sqlalchemy.sql.visitors.replacement_traverse"]], "sqlalchemy.sql.visitors": [[61, "module-sqlalchemy.sql.visitors"]], "traverse() (in module sqlalchemy.sql.visitors)": [[61, "sqlalchemy.sql.visitors.traverse"]], "traverse() (sqlalchemy.sql.visitors.externaltraversal method)": [[61, "sqlalchemy.sql.visitors.ExternalTraversal.traverse"]], "traverse_using() (in module sqlalchemy.sql.visitors)": [[61, "sqlalchemy.sql.visitors.traverse_using"]], "visitor_iterator (sqlalchemy.sql.visitors.externaltraversal attribute)": [[61, "sqlalchemy.sql.visitors.ExternalTraversal.visitor_iterator"]], "sqlalchemy.dialects.firebird.base": [[62, "module-sqlalchemy.dialects.firebird.base"]], "sqlalchemy.dialects.firebird.fdb": [[62, "module-sqlalchemy.dialects.firebird.fdb"]], "sqlalchemy.dialects.firebird.kinterbasdb": [[62, "module-sqlalchemy.dialects.firebird.kinterbasdb"]], "best effort": [[63, "term-Best-effort"]], "fully tested in ci": [[63, "term-Fully-tested-in-CI"]], "normal support": [[63, "term-Normal-support"]], "bit (class in sqlalchemy.dialects.mssql)": [[64, "sqlalchemy.dialects.mssql.BIT"]], "datetime2 (class in sqlalchemy.dialects.mssql)": [[64, "sqlalchemy.dialects.mssql.DATETIME2"]], "datetimeoffset (class in sqlalchemy.dialects.mssql)": [[64, "sqlalchemy.dialects.mssql.DATETIMEOFFSET"]], "image (class in sqlalchemy.dialects.mssql)": [[64, "sqlalchemy.dialects.mssql.IMAGE"]], "json (class in sqlalchemy.dialects.mssql)": [[64, "sqlalchemy.dialects.mssql.JSON"]], "money (class in sqlalchemy.dialects.mssql)": [[64, "sqlalchemy.dialects.mssql.MONEY"]], "ntext (class in sqlalchemy.dialects.mssql)": [[64, "sqlalchemy.dialects.mssql.NTEXT"]], "real (class in sqlalchemy.dialects.mssql)": [[64, "sqlalchemy.dialects.mssql.REAL"]], "rowversion (class in sqlalchemy.dialects.mssql)": [[64, "sqlalchemy.dialects.mssql.ROWVERSION"]], "smalldatetime (class in sqlalchemy.dialects.mssql)": [[64, "sqlalchemy.dialects.mssql.SMALLDATETIME"]], "smallmoney (class in sqlalchemy.dialects.mssql)": [[64, "sqlalchemy.dialects.mssql.SMALLMONEY"]], "sql_variant (class in sqlalchemy.dialects.mssql)": [[64, "sqlalchemy.dialects.mssql.SQL_VARIANT"]], "time (class in sqlalchemy.dialects.mssql)": [[64, "sqlalchemy.dialects.mssql.TIME"]], "timestamp (class in sqlalchemy.dialects.mssql)": [[64, "sqlalchemy.dialects.mssql.TIMESTAMP"]], "tinyint (class in sqlalchemy.dialects.mssql)": [[64, "sqlalchemy.dialects.mssql.TINYINT"]], "uniqueidentifier (class in sqlalchemy.dialects.mssql)": [[64, "sqlalchemy.dialects.mssql.UNIQUEIDENTIFIER"]], "xml (class in sqlalchemy.dialects.mssql)": [[64, "sqlalchemy.dialects.mssql.XML"]], "__init__() (sqlalchemy.dialects.mssql.bit method)": [[64, "sqlalchemy.dialects.mssql.BIT.__init__"]], "__init__() (sqlalchemy.dialects.mssql.image method)": [[64, "sqlalchemy.dialects.mssql.IMAGE.__init__"]], "__init__() (sqlalchemy.dialects.mssql.json method)": [[64, "sqlalchemy.dialects.mssql.JSON.__init__"]], "__init__() (sqlalchemy.dialects.mssql.ntext method)": [[64, "sqlalchemy.dialects.mssql.NTEXT.__init__"]], "__init__() (sqlalchemy.dialects.mssql.rowversion method)": [[64, "sqlalchemy.dialects.mssql.ROWVERSION.__init__"]], "__init__() (sqlalchemy.dialects.mssql.smalldatetime method)": [[64, "sqlalchemy.dialects.mssql.SMALLDATETIME.__init__"]], "__init__() (sqlalchemy.dialects.mssql.timestamp method)": [[64, "sqlalchemy.dialects.mssql.TIMESTAMP.__init__"]], "__init__() (sqlalchemy.dialects.mssql.xml method)": [[64, "sqlalchemy.dialects.mssql.XML.__init__"]], "sqlalchemy.dialects.mssql.base": [[64, "module-sqlalchemy.dialects.mssql.base"]], "sqlalchemy.dialects.mssql.mxodbc": [[64, "module-sqlalchemy.dialects.mssql.mxodbc"]], "sqlalchemy.dialects.mssql.pymssql": [[64, "module-sqlalchemy.dialects.mssql.pymssql"]], "sqlalchemy.dialects.mssql.pyodbc": [[64, "module-sqlalchemy.dialects.mssql.pyodbc"]], "try_cast() (in module sqlalchemy.dialects.mssql)": [[64, "sqlalchemy.dialects.mssql.try_cast"]], "bigint (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.BIGINT"]], "bit (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.BIT"]], "char (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.CHAR"]], "datetime (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.DATETIME"]], "decimal (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.DECIMAL"]], "enum (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.ENUM"]], "float (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.FLOAT"]], "integer (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.INTEGER"]], "insert (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.Insert"]], "json (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.JSON"]], "longblob (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.LONGBLOB"]], "longtext (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.LONGTEXT"]], "mediumblob (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.MEDIUMBLOB"]], "mediumint (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.MEDIUMINT"]], "mediumtext (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.MEDIUMTEXT"]], "nchar (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.NCHAR"]], "numeric (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.NUMERIC"]], "nvarchar (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.NVARCHAR"]], "real (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.REAL"]], "set (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.SET"]], "smallint (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.SMALLINT"]], "time (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.TIME"]], "timestamp (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.TIMESTAMP"]], "tinyblob (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.TINYBLOB"]], "tinyint (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.TINYINT"]], "tinytext (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.TINYTEXT"]], "varchar (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.VARCHAR"]], "year (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.YEAR"]], "__init__() (sqlalchemy.dialects.mysql.bigint method)": [[65, "sqlalchemy.dialects.mysql.BIGINT.__init__"]], "__init__() (sqlalchemy.dialects.mysql.bit method)": [[65, "sqlalchemy.dialects.mysql.BIT.__init__"]], "__init__() (sqlalchemy.dialects.mysql.char method)": [[65, "sqlalchemy.dialects.mysql.CHAR.__init__"]], "__init__() (sqlalchemy.dialects.mysql.datetime method)": [[65, "sqlalchemy.dialects.mysql.DATETIME.__init__"]], "__init__() (sqlalchemy.dialects.mysql.decimal method)": [[65, "sqlalchemy.dialects.mysql.DECIMAL.__init__"]], "__init__() (sqlalchemy.dialects.mysql.enum method)": [[65, "sqlalchemy.dialects.mysql.ENUM.__init__"]], "__init__() (sqlalchemy.dialects.mysql.float method)": [[65, "sqlalchemy.dialects.mysql.FLOAT.__init__"]], "__init__() (sqlalchemy.dialects.mysql.integer method)": [[65, "sqlalchemy.dialects.mysql.INTEGER.__init__"]], "__init__() (sqlalchemy.dialects.mysql.longtext method)": [[65, "sqlalchemy.dialects.mysql.LONGTEXT.__init__"]], "__init__() (sqlalchemy.dialects.mysql.mediumint method)": [[65, "sqlalchemy.dialects.mysql.MEDIUMINT.__init__"]], "__init__() (sqlalchemy.dialects.mysql.mediumtext method)": [[65, "sqlalchemy.dialects.mysql.MEDIUMTEXT.__init__"]], "__init__() (sqlalchemy.dialects.mysql.nchar method)": [[65, "sqlalchemy.dialects.mysql.NCHAR.__init__"]], "__init__() (sqlalchemy.dialects.mysql.numeric method)": [[65, "sqlalchemy.dialects.mysql.NUMERIC.__init__"]], "__init__() (sqlalchemy.dialects.mysql.nvarchar method)": [[65, "sqlalchemy.dialects.mysql.NVARCHAR.__init__"]], "__init__() (sqlalchemy.dialects.mysql.real method)": [[65, "sqlalchemy.dialects.mysql.REAL.__init__"]], "__init__() (sqlalchemy.dialects.mysql.set method)": [[65, "sqlalchemy.dialects.mysql.SET.__init__"]], "__init__() (sqlalchemy.dialects.mysql.smallint method)": [[65, "sqlalchemy.dialects.mysql.SMALLINT.__init__"]], "__init__() (sqlalchemy.dialects.mysql.time method)": [[65, "sqlalchemy.dialects.mysql.TIME.__init__"]], "__init__() (sqlalchemy.dialects.mysql.timestamp method)": [[65, "sqlalchemy.dialects.mysql.TIMESTAMP.__init__"]], "__init__() (sqlalchemy.dialects.mysql.tinyint method)": [[65, "sqlalchemy.dialects.mysql.TINYINT.__init__"]], "__init__() (sqlalchemy.dialects.mysql.tinytext method)": [[65, "sqlalchemy.dialects.mysql.TINYTEXT.__init__"]], "__init__() (sqlalchemy.dialects.mysql.varchar method)": [[65, "sqlalchemy.dialects.mysql.VARCHAR.__init__"]], "in_boolean_mode() (sqlalchemy.dialects.mysql.match method)": [[65, "sqlalchemy.dialects.mysql.match.in_boolean_mode"]], "in_natural_language_mode() (sqlalchemy.dialects.mysql.match method)": [[65, "sqlalchemy.dialects.mysql.match.in_natural_language_mode"]], "inherit_cache (sqlalchemy.dialects.mysql.insert attribute)": [[65, "sqlalchemy.dialects.mysql.Insert.inherit_cache"]], "inherit_cache (sqlalchemy.dialects.mysql.match attribute)": [[65, "sqlalchemy.dialects.mysql.match.inherit_cache"]], "insert() (in module sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.insert"]], "inserted (sqlalchemy.dialects.mysql.insert attribute)": [[65, "sqlalchemy.dialects.mysql.Insert.inserted"]], "match (class in sqlalchemy.dialects.mysql)": [[65, "sqlalchemy.dialects.mysql.match"]], "on_duplicate_key_update() (sqlalchemy.dialects.mysql.insert method)": [[65, "sqlalchemy.dialects.mysql.Insert.on_duplicate_key_update"]], "sqlalchemy.dialects.mysql.aiomysql": [[65, "module-sqlalchemy.dialects.mysql.aiomysql"]], "sqlalchemy.dialects.mysql.asyncmy": [[65, "module-sqlalchemy.dialects.mysql.asyncmy"]], "sqlalchemy.dialects.mysql.base": [[65, "module-sqlalchemy.dialects.mysql.base"]], "sqlalchemy.dialects.mysql.cymysql": [[65, "module-sqlalchemy.dialects.mysql.cymysql"]], "sqlalchemy.dialects.mysql.mariadbconnector": [[65, "module-sqlalchemy.dialects.mysql.mariadbconnector"]], "sqlalchemy.dialects.mysql.mysqlconnector": [[65, "module-sqlalchemy.dialects.mysql.mysqlconnector"]], "sqlalchemy.dialects.mysql.mysqldb": [[65, "module-sqlalchemy.dialects.mysql.mysqldb"]], "sqlalchemy.dialects.mysql.oursql": [[65, "module-sqlalchemy.dialects.mysql.oursql"]], "sqlalchemy.dialects.mysql.pymysql": [[65, "module-sqlalchemy.dialects.mysql.pymysql"]], "sqlalchemy.dialects.mysql.pyodbc": [[65, "module-sqlalchemy.dialects.mysql.pyodbc"]], "with_query_expansion() (sqlalchemy.dialects.mysql.match method)": [[65, "sqlalchemy.dialects.mysql.match.with_query_expansion"]], "bfile (class in sqlalchemy.dialects.oracle)": [[66, "sqlalchemy.dialects.oracle.BFILE"]], "date (class in sqlalchemy.dialects.oracle)": [[66, "sqlalchemy.dialects.oracle.DATE"]], "double_precision (class in sqlalchemy.dialects.oracle)": [[66, "sqlalchemy.dialects.oracle.DOUBLE_PRECISION"]], "interval (class in sqlalchemy.dialects.oracle)": [[66, "sqlalchemy.dialects.oracle.INTERVAL"]], "long (class in sqlalchemy.dialects.oracle)": [[66, "sqlalchemy.dialects.oracle.LONG"]], "nclob (class in sqlalchemy.dialects.oracle)": [[66, "sqlalchemy.dialects.oracle.NCLOB"]], "number (class in sqlalchemy.dialects.oracle)": [[66, "sqlalchemy.dialects.oracle.NUMBER"]], "raw (class in sqlalchemy.dialects.oracle)": [[66, "sqlalchemy.dialects.oracle.RAW"]], "__init__() (sqlalchemy.dialects.oracle.bfile method)": [[66, "sqlalchemy.dialects.oracle.BFILE.__init__"]], "__init__() (sqlalchemy.dialects.oracle.date method)": [[66, "sqlalchemy.dialects.oracle.DATE.__init__"]], "__init__() (sqlalchemy.dialects.oracle.double_precision method)": [[66, "sqlalchemy.dialects.oracle.DOUBLE_PRECISION.__init__"]], "__init__() (sqlalchemy.dialects.oracle.interval method)": [[66, "sqlalchemy.dialects.oracle.INTERVAL.__init__"]], "__init__() (sqlalchemy.dialects.oracle.long method)": [[66, "sqlalchemy.dialects.oracle.LONG.__init__"]], "__init__() (sqlalchemy.dialects.oracle.nclob method)": [[66, "sqlalchemy.dialects.oracle.NCLOB.__init__"]], "sqlalchemy.dialects.oracle.base": [[66, "module-sqlalchemy.dialects.oracle.base"]], "sqlalchemy.dialects.oracle.cx_oracle": [[66, "module-sqlalchemy.dialects.oracle.cx_oracle"]], "array (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.ARRAY"], [67, "sqlalchemy.dialects.postgresql.array"]], "array.comparator (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.ARRAY.Comparator"]], "all() (in module sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.All"]], "any() (in module sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.Any"]], "bit (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.BIT"]], "bytea (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.BYTEA"]], "cidr (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.CIDR"]], "daterange (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.DATERANGE"]], "enum (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.ENUM"]], "excludeconstraint (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.ExcludeConstraint"]], "hstore (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.HSTORE"], [67, "sqlalchemy.dialects.postgresql.hstore"]], "hstore.comparator (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.HSTORE.Comparator"]], "inet (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.INET"]], "int4range (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.INT4RANGE"]], "int8range (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.INT8RANGE"]], "interval (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.INTERVAL"]], "insert (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.Insert"]], "json (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.JSON"]], "json.comparator (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.JSON.Comparator"]], "jsonb (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.JSONB"]], "jsonb.comparator (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.JSONB.Comparator"]], "macaddr (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.MACADDR"]], "macaddr8 (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.MACADDR8"]], "money (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.MONEY"]], "numrange (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.NUMRANGE"]], "oid (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.OID"]], "pginspector (class in sqlalchemy.dialects.postgresql.base)": [[67, "sqlalchemy.dialects.postgresql.base.PGInspector"]], "regclass (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.REGCLASS"]], "rangeoperators (class in sqlalchemy.dialects.postgresql.ranges)": [[67, "sqlalchemy.dialects.postgresql.ranges.RangeOperators"]], "rangeoperators.comparator_factory (class in sqlalchemy.dialects.postgresql.ranges)": [[67, "sqlalchemy.dialects.postgresql.ranges.RangeOperators.comparator_factory"]], "time (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.TIME"]], "timestamp (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.TIMESTAMP"]], "tsrange (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.TSRANGE"]], "tstzrange (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.TSTZRANGE"]], "tsvector (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.TSVECTOR"]], "uuid (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.UUID"]], "__init__() (sqlalchemy.dialects.postgresql.array method)": [[67, "sqlalchemy.dialects.postgresql.ARRAY.__init__"]], "__init__() (sqlalchemy.dialects.postgresql.bytea method)": [[67, "sqlalchemy.dialects.postgresql.BYTEA.__init__"]], "__init__() (sqlalchemy.dialects.postgresql.enum method)": [[67, "sqlalchemy.dialects.postgresql.ENUM.__init__"]], "__init__() (sqlalchemy.dialects.postgresql.excludeconstraint method)": [[67, "sqlalchemy.dialects.postgresql.ExcludeConstraint.__init__"]], "__init__() (sqlalchemy.dialects.postgresql.hstore method)": [[67, "sqlalchemy.dialects.postgresql.HSTORE.__init__"]], "__init__() (sqlalchemy.dialects.postgresql.interval method)": [[67, "sqlalchemy.dialects.postgresql.INTERVAL.__init__"]], "__init__() (sqlalchemy.dialects.postgresql.json method)": [[67, "sqlalchemy.dialects.postgresql.JSON.__init__"]], "__init__() (sqlalchemy.dialects.postgresql.time method)": [[67, "sqlalchemy.dialects.postgresql.TIME.__init__"]], "__init__() (sqlalchemy.dialects.postgresql.timestamp method)": [[67, "sqlalchemy.dialects.postgresql.TIMESTAMP.__init__"]], "__init__() (sqlalchemy.dialects.postgresql.uuid method)": [[67, "sqlalchemy.dialects.postgresql.UUID.__init__"]], "__ne__() (sqlalchemy.dialects.postgresql.ranges.rangeoperators.comparator_factory method)": [[67, "sqlalchemy.dialects.postgresql.ranges.RangeOperators.comparator_factory.__ne__"]], "adjacent_to() (sqlalchemy.dialects.postgresql.ranges.rangeoperators.comparator_factory method)": [[67, "sqlalchemy.dialects.postgresql.ranges.RangeOperators.comparator_factory.adjacent_to"]], "aggregate_order_by (class in sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.aggregate_order_by"]], "array() (sqlalchemy.dialects.postgresql.hstore.comparator method)": [[67, "sqlalchemy.dialects.postgresql.HSTORE.Comparator.array"]], "array_agg() (in module sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.array_agg"]], "astext (sqlalchemy.dialects.postgresql.json.comparator attribute)": [[67, "sqlalchemy.dialects.postgresql.JSON.Comparator.astext"]], "bind_processor() (sqlalchemy.dialects.postgresql.hstore method)": [[67, "sqlalchemy.dialects.postgresql.HSTORE.bind_processor"]], "comparator_factory (sqlalchemy.dialects.postgresql.hstore attribute)": [[67, "sqlalchemy.dialects.postgresql.HSTORE.comparator_factory"]], "comparator_factory (sqlalchemy.dialects.postgresql.json attribute)": [[67, "sqlalchemy.dialects.postgresql.JSON.comparator_factory"]], "comparator_factory (sqlalchemy.dialects.postgresql.jsonb attribute)": [[67, "sqlalchemy.dialects.postgresql.JSONB.comparator_factory"]], "contained_by() (sqlalchemy.dialects.postgresql.array.comparator method)": [[67, "sqlalchemy.dialects.postgresql.ARRAY.Comparator.contained_by"]], "contained_by() (sqlalchemy.dialects.postgresql.hstore.comparator method)": [[67, "sqlalchemy.dialects.postgresql.HSTORE.Comparator.contained_by"]], "contained_by() (sqlalchemy.dialects.postgresql.jsonb.comparator method)": [[67, "sqlalchemy.dialects.postgresql.JSONB.Comparator.contained_by"]], "contained_by() (sqlalchemy.dialects.postgresql.ranges.rangeoperators.comparator_factory method)": [[67, "sqlalchemy.dialects.postgresql.ranges.RangeOperators.comparator_factory.contained_by"]], "contains() (sqlalchemy.dialects.postgresql.array.comparator method)": [[67, "sqlalchemy.dialects.postgresql.ARRAY.Comparator.contains"]], "contains() (sqlalchemy.dialects.postgresql.hstore.comparator method)": [[67, "sqlalchemy.dialects.postgresql.HSTORE.Comparator.contains"]], "contains() (sqlalchemy.dialects.postgresql.jsonb.comparator method)": [[67, "sqlalchemy.dialects.postgresql.JSONB.Comparator.contains"]], "contains() (sqlalchemy.dialects.postgresql.ranges.rangeoperators.comparator_factory method)": [[67, "sqlalchemy.dialects.postgresql.ranges.RangeOperators.comparator_factory.contains"]], "create() (sqlalchemy.dialects.postgresql.enum method)": [[67, "sqlalchemy.dialects.postgresql.ENUM.create"]], "defined() (sqlalchemy.dialects.postgresql.hstore.comparator method)": [[67, "sqlalchemy.dialects.postgresql.HSTORE.Comparator.defined"]], "delete() (sqlalchemy.dialects.postgresql.hstore.comparator method)": [[67, "sqlalchemy.dialects.postgresql.HSTORE.Comparator.delete"]], "drop() (sqlalchemy.dialects.postgresql.enum method)": [[67, "sqlalchemy.dialects.postgresql.ENUM.drop"]], "excluded (sqlalchemy.dialects.postgresql.insert attribute)": [[67, "sqlalchemy.dialects.postgresql.Insert.excluded"]], "get_enums() (sqlalchemy.dialects.postgresql.base.pginspector method)": [[67, "sqlalchemy.dialects.postgresql.base.PGInspector.get_enums"]], "get_foreign_table_names() (sqlalchemy.dialects.postgresql.base.pginspector method)": [[67, "sqlalchemy.dialects.postgresql.base.PGInspector.get_foreign_table_names"]], "get_table_oid() (sqlalchemy.dialects.postgresql.base.pginspector method)": [[67, "sqlalchemy.dialects.postgresql.base.PGInspector.get_table_oid"]], "get_view_names() (sqlalchemy.dialects.postgresql.base.pginspector method)": [[67, "sqlalchemy.dialects.postgresql.base.PGInspector.get_view_names"]], "has_all() (sqlalchemy.dialects.postgresql.hstore.comparator method)": [[67, "sqlalchemy.dialects.postgresql.HSTORE.Comparator.has_all"]], "has_all() (sqlalchemy.dialects.postgresql.jsonb.comparator method)": [[67, "sqlalchemy.dialects.postgresql.JSONB.Comparator.has_all"]], "has_any() (sqlalchemy.dialects.postgresql.hstore.comparator method)": [[67, "sqlalchemy.dialects.postgresql.HSTORE.Comparator.has_any"]], "has_any() (sqlalchemy.dialects.postgresql.jsonb.comparator method)": [[67, "sqlalchemy.dialects.postgresql.JSONB.Comparator.has_any"]], "has_key() (sqlalchemy.dialects.postgresql.hstore.comparator method)": [[67, "sqlalchemy.dialects.postgresql.HSTORE.Comparator.has_key"]], "has_key() (sqlalchemy.dialects.postgresql.jsonb.comparator method)": [[67, "sqlalchemy.dialects.postgresql.JSONB.Comparator.has_key"]], "hashable (sqlalchemy.dialects.postgresql.hstore attribute)": [[67, "sqlalchemy.dialects.postgresql.HSTORE.hashable"]], "inherit_cache (sqlalchemy.dialects.postgresql.insert attribute)": [[67, "sqlalchemy.dialects.postgresql.Insert.inherit_cache"]], "inherit_cache (sqlalchemy.dialects.postgresql.hstore attribute)": [[67, "sqlalchemy.dialects.postgresql.hstore.inherit_cache"]], "insert() (in module sqlalchemy.dialects.postgresql)": [[67, "sqlalchemy.dialects.postgresql.insert"]], "keys() (sqlalchemy.dialects.postgresql.hstore.comparator method)": [[67, "sqlalchemy.dialects.postgresql.HSTORE.Comparator.keys"]], "matrix() (sqlalchemy.dialects.postgresql.hstore.comparator method)": [[67, "sqlalchemy.dialects.postgresql.HSTORE.Comparator.matrix"]], "not_extend_left_of() (sqlalchemy.dialects.postgresql.ranges.rangeoperators.comparator_factory method)": [[67, "sqlalchemy.dialects.postgresql.ranges.RangeOperators.comparator_factory.not_extend_left_of"]], "not_extend_right_of() (sqlalchemy.dialects.postgresql.ranges.rangeoperators.comparator_factory method)": [[67, "sqlalchemy.dialects.postgresql.ranges.RangeOperators.comparator_factory.not_extend_right_of"]], "on_conflict_do_nothing() (sqlalchemy.dialects.postgresql.insert method)": [[67, "sqlalchemy.dialects.postgresql.Insert.on_conflict_do_nothing"]], "on_conflict_do_update() (sqlalchemy.dialects.postgresql.insert method)": [[67, "sqlalchemy.dialects.postgresql.Insert.on_conflict_do_update"]], "overlap() (sqlalchemy.dialects.postgresql.array.comparator method)": [[67, "sqlalchemy.dialects.postgresql.ARRAY.Comparator.overlap"]], "overlaps() (sqlalchemy.dialects.postgresql.ranges.rangeoperators.comparator_factory method)": [[67, "sqlalchemy.dialects.postgresql.ranges.RangeOperators.comparator_factory.overlaps"]], "result_processor() (sqlalchemy.dialects.postgresql.hstore method)": [[67, "sqlalchemy.dialects.postgresql.HSTORE.result_processor"]], "slice() (sqlalchemy.dialects.postgresql.hstore.comparator method)": [[67, "sqlalchemy.dialects.postgresql.HSTORE.Comparator.slice"]], "sqlalchemy.dialects.postgresql.asyncpg": [[67, "module-sqlalchemy.dialects.postgresql.asyncpg"]], "sqlalchemy.dialects.postgresql.base": [[67, "module-sqlalchemy.dialects.postgresql.base"]], "sqlalchemy.dialects.postgresql.pg8000": [[67, "module-sqlalchemy.dialects.postgresql.pg8000"]], "sqlalchemy.dialects.postgresql.psycopg2": [[67, "module-sqlalchemy.dialects.postgresql.psycopg2"]], "sqlalchemy.dialects.postgresql.psycopg2cffi": [[67, "module-sqlalchemy.dialects.postgresql.psycopg2cffi"]], "sqlalchemy.dialects.postgresql.pygresql": [[67, "module-sqlalchemy.dialects.postgresql.pygresql"]], "sqlalchemy.dialects.postgresql.pypostgresql": [[67, "module-sqlalchemy.dialects.postgresql.pypostgresql"]], "strictly_left_of() (sqlalchemy.dialects.postgresql.ranges.rangeoperators.comparator_factory method)": [[67, "sqlalchemy.dialects.postgresql.ranges.RangeOperators.comparator_factory.strictly_left_of"]], "strictly_right_of() (sqlalchemy.dialects.postgresql.ranges.rangeoperators.comparator_factory method)": [[67, "sqlalchemy.dialects.postgresql.ranges.RangeOperators.comparator_factory.strictly_right_of"]], "type (sqlalchemy.dialects.postgresql.hstore attribute)": [[67, "sqlalchemy.dialects.postgresql.hstore.type"]], "vals() (sqlalchemy.dialects.postgresql.hstore.comparator method)": [[67, "sqlalchemy.dialects.postgresql.HSTORE.Comparator.vals"]], "date (class in sqlalchemy.dialects.sqlite)": [[68, "sqlalchemy.dialects.sqlite.DATE"]], "datetime (class in sqlalchemy.dialects.sqlite)": [[68, "sqlalchemy.dialects.sqlite.DATETIME"]], "insert (class in sqlalchemy.dialects.sqlite)": [[68, "sqlalchemy.dialects.sqlite.Insert"]], "json (class in sqlalchemy.dialects.sqlite)": [[68, "sqlalchemy.dialects.sqlite.JSON"]], "time (class in sqlalchemy.dialects.sqlite)": [[68, "sqlalchemy.dialects.sqlite.TIME"]], "excluded (sqlalchemy.dialects.sqlite.insert attribute)": [[68, "sqlalchemy.dialects.sqlite.Insert.excluded"]], "inherit_cache (sqlalchemy.dialects.sqlite.insert attribute)": [[68, "sqlalchemy.dialects.sqlite.Insert.inherit_cache"]], "insert() (in module sqlalchemy.dialects.sqlite)": [[68, "sqlalchemy.dialects.sqlite.insert"]], "on_conflict_do_nothing() (sqlalchemy.dialects.sqlite.insert method)": [[68, "sqlalchemy.dialects.sqlite.Insert.on_conflict_do_nothing"]], "on_conflict_do_update() (sqlalchemy.dialects.sqlite.insert method)": [[68, "sqlalchemy.dialects.sqlite.Insert.on_conflict_do_update"]], "sqlalchemy.dialects.sqlite": [[68, "module-sqlalchemy.dialects.sqlite"]], "sqlalchemy.dialects.sqlite.aiosqlite": [[68, "module-sqlalchemy.dialects.sqlite.aiosqlite"]], "sqlalchemy.dialects.sqlite.base": [[68, "module-sqlalchemy.dialects.sqlite.base"]], "sqlalchemy.dialects.sqlite.pysqlcipher": [[68, "module-sqlalchemy.dialects.sqlite.pysqlcipher"]], "sqlalchemy.dialects.sqlite.pysqlite": [[68, "module-sqlalchemy.dialects.sqlite.pysqlite"]], "sqlalchemy.dialects.sybase.base": [[69, "module-sqlalchemy.dialects.sybase.base"]], "sqlalchemy.dialects.sybase.mxodbc": [[69, "module-sqlalchemy.dialects.sybase.mxodbc"]], "sqlalchemy.dialects.sybase.pyodbc": [[69, "module-sqlalchemy.dialects.sybase.pyodbc"]], "sqlalchemy.dialects.sybase.pysybase": [[69, "module-sqlalchemy.dialects.sybase.pysybase"]], "1.x style": [[80, "term-1.x-style"]], "1.x-style": [[80, "term-0"]], "2.0 style": [[80, "term-2.0-style"]], "2.0-style": [[80, "term-1"]], "acid": [[80, "term-ACID"]], "acid model": [[80, "term-ACID-model"]], "crud": [[80, "term-CRUD"], [80, "term-crud"]], "dbapi": [[80, "term-DBAPI"]], "ddl": [[80, "term-DDL"]], "dml": [[80, "term-DML"]], "dql": [[80, "term-DQL"]], "expiring": [[80, "term-Expiring"], [80, "term-expiring"]], "from clause": [[80, "term-FROM-clause"]], "isolation": [[80, "term-Isolation"], [80, "term-isolation"]], "n plus one": [[80, "term-N-plus-one"]], "n plus one problem": [[80, "term-N-plus-one-problem"]], "returning": [[80, "term-RETURNING"]], "session": [[80, "term-Session"]], "where clause": [[80, "term-WHERE-clause"]], "annotations": [[80, "term-annotations"]], "association relationship": [[80, "term-association-relationship"]], "atomicity": [[80, "term-atomicity"]], "attached": [[80, "term-attached"]], "backref": [[80, "term-backref"]], "bidirectional relationship": [[80, "term-bidirectional-relationship"]], "bind parameter": [[80, "term-bind-parameter"]], "bind parameters": [[80, "term-bind-parameters"]], "bound parameter": [[80, "term-bound-parameter"]], "bound parameters": [[80, "term-bound-parameters"]], "candidate key": [[80, "term-candidate-key"]], "cartesian product": [[80, "term-cartesian-product"]], "cascade": [[80, "term-cascade"]], "check constraint": [[80, "term-check-constraint"]], "columns clause": [[80, "term-columns-clause"]], "composite primary key": [[80, "term-composite-primary-key"]], "consistency": [[80, "term-consistency"]], "constrained": [[80, "term-constrained"]], "constraint": [[80, "term-constraint"]], "constraints": [[80, "term-constraints"]], "correlated subqueries": [[80, "term-correlated-subqueries"]], "correlated subquery": [[80, "term-correlated-subquery"]], "correlates": [[80, "term-correlates"]], "cursor": [[80, "term-cursor"]], "cyclomatic complexity": [[80, "term-cyclomatic-complexity"]], "data marshalling": [[80, "term-data-marshalling"]], "database metadata": [[80, "term-database-metadata"]], "declarative": [[80, "term-declarative"]], "deleted": [[80, "term-deleted"]], "descriptor": [[80, "term-descriptor"]], "descriptors": [[80, "term-descriptors"]], "detached": [[80, "term-detached"]], "dialect": [[80, "term-dialect"]], "discriminator": [[80, "term-discriminator"]], "domain model": [[80, "term-domain-model"]], "durability": [[80, "term-durability"]], "eager load": [[80, "term-eager-load"]], "eager loaded": [[80, "term-eager-loaded"]], "eager loading": [[80, "term-eager-loading"]], "eager loads": [[80, "term-eager-loads"]], "expire": [[80, "term-expire"]], "expired": [[80, "term-expired"]], "expires": [[80, "term-expires"]], "facade": [[80, "term-facade"]], "foreign key constraint": [[80, "term-foreign-key-constraint"]], "generative": [[80, "term-generative"]], "identity key": [[80, "term-identity-key"]], "identity map": [[80, "term-identity-map"]], "imperative": [[80, "term-imperative"]], "instrumentation": [[80, "term-instrumentation"]], "instrumented": [[80, "term-instrumented"]], "instrumenting": [[80, "term-instrumenting"]], "isolated": [[80, "term-isolated"]], "isolation level": [[80, "term-isolation-level"]], "lazy initialization": [[80, "term-lazy-initialization"]], "lazy load": [[80, "term-lazy-load"]], "lazy loaded": [[80, "term-lazy-loaded"]], "lazy loading": [[80, "term-lazy-loading"]], "lazy loads": [[80, "term-lazy-loads"]], "many to many": [[80, "term-many-to-many"]], "many to one": [[80, "term-many-to-one"]], "mapped": [[80, "term-mapped"]], "mapped class": [[80, "term-mapped-class"]], "mapping": [[80, "term-mapping"]], "marshalling": [[80, "term-marshalling"]], "metadata": [[80, "term-metadata"]], "method chaining": [[80, "term-method-chaining"]], "one to many": [[80, "term-one-to-many"]], "pending": [[80, "term-pending"]], "pep-249": [[80, "term-pep-249"]], "persistent": [[80, "term-persistent"]], "plugin": [[80, "term-plugin"]], "plugin-enabled": [[80, "term-plugin-enabled"]], "plugin-specific": [[80, "term-plugin-specific"]], "polymorphic": [[80, "term-polymorphic"]], "polymorphically": [[80, "term-polymorphically"]], "primary key": [[80, "term-primary-key"]], "primary key constraint": [[80, "term-primary-key-constraint"]], "read committed": [[80, "term-read-committed"]], "read uncommitted": [[80, "term-read-uncommitted"]], "reflected": [[80, "term-reflected"]], "reflection": [[80, "term-reflection"]], "registry": [[80, "term-registry"]], "relational": [[80, "term-relational"]], "relational algebra": [[80, "term-relational-algebra"]], "relationship": [[80, "term-relationship"]], "relationships": [[80, "term-relationships"]], "release": [[80, "term-release"]], "released": [[80, "term-released"]], "releases": [[80, "term-releases"]], "repeatable read": [[80, "term-repeatable-read"]], "scalar subquery": [[80, "term-scalar-subquery"]], "selectable": [[80, "term-selectable"]], "serializable": [[80, "term-serializable"]], "subquery": [[80, "term-subquery"]], "table metadata": [[80, "term-table-metadata"]], "transient": [[80, "term-transient"]], "unique constraint": [[80, "term-unique-constraint"]], "unique key index": [[80, "term-unique-key-index"]], "unit of work": [[80, "term-unit-of-work"]], "version id column": [[80, "term-version-id-column"]], "appenderquery (class in sqlalchemy.orm)": [[87, "sqlalchemy.orm.AppenderQuery"]], "collectionadapter (class in sqlalchemy.orm.collections)": [[87, "sqlalchemy.orm.collections.CollectionAdapter"]], "instrumenteddict (class in sqlalchemy.orm.collections)": [[87, "sqlalchemy.orm.collections.InstrumentedDict"]], "instrumentedlist (class in sqlalchemy.orm.collections)": [[87, "sqlalchemy.orm.collections.InstrumentedList"]], "instrumentedset (class in sqlalchemy.orm.collections)": [[87, "sqlalchemy.orm.collections.InstrumentedSet"]], "mappedcollection (class in sqlalchemy.orm.collections)": [[87, "sqlalchemy.orm.collections.MappedCollection"]], "__init__() (sqlalchemy.orm.collections.mappedcollection method)": [[87, "sqlalchemy.orm.collections.MappedCollection.__init__"]], "adds() (sqlalchemy.orm.collections.collection static method)": [[87, "sqlalchemy.orm.collections.collection.adds"]], "appender() (sqlalchemy.orm.collections.collection static method)": [[87, "sqlalchemy.orm.collections.collection.appender"]], "attribute_mapped_collection() (in module sqlalchemy.orm.collections)": [[87, "sqlalchemy.orm.collections.attribute_mapped_collection"]], "bulk_replace() (in module sqlalchemy.orm.collections)": [[87, "sqlalchemy.orm.collections.bulk_replace"]], "clear() (sqlalchemy.orm.collections.mappedcollection method)": [[87, "sqlalchemy.orm.collections.MappedCollection.clear"]], "collection (class in sqlalchemy.orm.collections)": [[87, "sqlalchemy.orm.collections.collection"]], "collection_adapter (in module sqlalchemy.orm.collections)": [[87, "sqlalchemy.orm.collections.collection_adapter"]], "column_mapped_collection() (in module sqlalchemy.orm.collections)": [[87, "sqlalchemy.orm.collections.column_mapped_collection"]], "converter() (sqlalchemy.orm.collections.collection static method)": [[87, "sqlalchemy.orm.collections.collection.converter"]], "internally_instrumented() (sqlalchemy.orm.collections.collection static method)": [[87, "sqlalchemy.orm.collections.collection.internally_instrumented"]], "iterator() (sqlalchemy.orm.collections.collection static method)": [[87, "sqlalchemy.orm.collections.collection.iterator"]], "mapped_collection() (in module sqlalchemy.orm.collections)": [[87, "sqlalchemy.orm.collections.mapped_collection"]], "pop() (sqlalchemy.orm.collections.mappedcollection method)": [[87, "sqlalchemy.orm.collections.MappedCollection.pop"]], "popitem() (sqlalchemy.orm.collections.mappedcollection method)": [[87, "sqlalchemy.orm.collections.MappedCollection.popitem"]], "prepare_instrumentation() (in module sqlalchemy.orm.collections)": [[87, "sqlalchemy.orm.collections.prepare_instrumentation"]], "remove() (sqlalchemy.orm.collections.mappedcollection method)": [[87, "sqlalchemy.orm.collections.MappedCollection.remove"]], "remover() (sqlalchemy.orm.collections.collection static method)": [[87, "sqlalchemy.orm.collections.collection.remover"]], "removes() (sqlalchemy.orm.collections.collection static method)": [[87, "sqlalchemy.orm.collections.collection.removes"]], "removes_return() (sqlalchemy.orm.collections.collection static method)": [[87, "sqlalchemy.orm.collections.collection.removes_return"]], "replaces() (sqlalchemy.orm.collections.collection static method)": [[87, "sqlalchemy.orm.collections.collection.replaces"]], "set() (sqlalchemy.orm.collections.mappedcollection method)": [[87, "sqlalchemy.orm.collections.MappedCollection.set"]], "setdefault() (sqlalchemy.orm.collections.mappedcollection method)": [[87, "sqlalchemy.orm.collections.MappedCollection.setdefault"]], "update() (sqlalchemy.orm.collections.mappedcollection method)": [[87, "sqlalchemy.orm.collections.MappedCollection.update"]], "composite() (in module sqlalchemy.orm)": [[88, "sqlalchemy.orm.composite"]], "scopedregistry (class in sqlalchemy.util)": [[90, "sqlalchemy.util.ScopedRegistry"]], "threadlocalregistry (class in sqlalchemy.util)": [[90, "sqlalchemy.util.ThreadLocalRegistry"]], "__call__() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.__call__"]], "__init__() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.__init__"]], "__init__() (sqlalchemy.util.scopedregistry method)": [[90, "sqlalchemy.util.ScopedRegistry.__init__"]], "add() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.add"]], "add_all() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.add_all"]], "begin() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.begin"]], "begin_nested() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.begin_nested"]], "bulk_insert_mappings() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.bulk_insert_mappings"]], "bulk_save_objects() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.bulk_save_objects"]], "bulk_update_mappings() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.bulk_update_mappings"]], "clear() (sqlalchemy.util.scopedregistry method)": [[90, "sqlalchemy.util.ScopedRegistry.clear"]], "close() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.close"]], "close_all() (sqlalchemy.orm.scoping.scoped_session class method)": [[90, "sqlalchemy.orm.scoping.scoped_session.close_all"]], "commit() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.commit"]], "configure() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.configure"]], "connection() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.connection"]], "delete() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.delete"]], "deleted (sqlalchemy.orm.scoping.scoped_session attribute)": [[90, "sqlalchemy.orm.scoping.scoped_session.deleted"]], "dirty (sqlalchemy.orm.scoping.scoped_session attribute)": [[90, "sqlalchemy.orm.scoping.scoped_session.dirty"]], "execute() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.execute"]], "expire() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.expire"]], "expire_all() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.expire_all"]], "expunge() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.expunge"]], "expunge_all() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.expunge_all"]], "flush() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.flush"]], "get() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.get"]], "get_bind() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.get_bind"]], "has() (sqlalchemy.util.scopedregistry method)": [[90, "sqlalchemy.util.ScopedRegistry.has"]], "identity_key() (sqlalchemy.orm.scoping.scoped_session class method)": [[90, "sqlalchemy.orm.scoping.scoped_session.identity_key"]], "info (sqlalchemy.orm.scoping.scoped_session attribute)": [[90, "sqlalchemy.orm.scoping.scoped_session.info"]], "is_active (sqlalchemy.orm.scoping.scoped_session attribute)": [[90, "sqlalchemy.orm.scoping.scoped_session.is_active"]], "is_modified() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.is_modified"]], "merge() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.merge"]], "new (sqlalchemy.orm.scoping.scoped_session attribute)": [[90, "sqlalchemy.orm.scoping.scoped_session.new"]], "no_autoflush (sqlalchemy.orm.scoping.scoped_session attribute)": [[90, "sqlalchemy.orm.scoping.scoped_session.no_autoflush"]], "object_session() (sqlalchemy.orm.scoping.scoped_session class method)": [[90, "sqlalchemy.orm.scoping.scoped_session.object_session"]], "query() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.query"]], "query_property() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.query_property"]], "refresh() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.refresh"]], "remove() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.remove"]], "rollback() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.rollback"]], "scalar() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.scalar"]], "scalars() (sqlalchemy.orm.scoping.scoped_session method)": [[90, "sqlalchemy.orm.scoping.scoped_session.scalars"]], "scoped_session (class in sqlalchemy.orm.scoping)": [[90, "sqlalchemy.orm.scoping.scoped_session"]], "session_factory (sqlalchemy.orm.scoping.scoped_session attribute)": [[90, "sqlalchemy.orm.scoping.scoped_session.session_factory"]], "set() (sqlalchemy.util.scopedregistry method)": [[90, "sqlalchemy.util.ScopedRegistry.set"]], "attributeevents (class in sqlalchemy.orm)": [[97, "sqlalchemy.orm.AttributeEvents"]], "instanceevents (class in sqlalchemy.orm)": [[97, "sqlalchemy.orm.InstanceEvents"]], "instrumentationevents (class in sqlalchemy.orm)": [[97, "sqlalchemy.orm.InstrumentationEvents"]], "mapperevents (class in sqlalchemy.orm)": [[97, "sqlalchemy.orm.MapperEvents"]], "queryevents (class in sqlalchemy.orm)": [[97, "sqlalchemy.orm.QueryEvents"]], "sessionevents (class in sqlalchemy.orm)": [[97, "sqlalchemy.orm.SessionEvents"]], "after_attach() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.after_attach"]], "after_begin() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.after_begin"]], "after_bulk_delete() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.after_bulk_delete"]], "after_bulk_update() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.after_bulk_update"]], "after_commit() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.after_commit"]], "after_configured() (sqlalchemy.orm.mapperevents method)": [[97, "sqlalchemy.orm.MapperEvents.after_configured"]], "after_delete() (sqlalchemy.orm.mapperevents method)": [[97, "sqlalchemy.orm.MapperEvents.after_delete"]], "after_flush() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.after_flush"]], "after_flush_postexec() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.after_flush_postexec"]], "after_insert() (sqlalchemy.orm.mapperevents method)": [[97, "sqlalchemy.orm.MapperEvents.after_insert"]], "after_rollback() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.after_rollback"]], "after_soft_rollback() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.after_soft_rollback"]], "after_transaction_create() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.after_transaction_create"]], "after_transaction_end() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.after_transaction_end"]], "after_update() (sqlalchemy.orm.mapperevents method)": [[97, "sqlalchemy.orm.MapperEvents.after_update"]], "append() (sqlalchemy.orm.attributeevents method)": [[97, "sqlalchemy.orm.AttributeEvents.append"]], "append_wo_mutation() (sqlalchemy.orm.attributeevents method)": [[97, "sqlalchemy.orm.AttributeEvents.append_wo_mutation"]], "attribute_instrument() (sqlalchemy.orm.instrumentationevents method)": [[97, "sqlalchemy.orm.InstrumentationEvents.attribute_instrument"]], "before_attach() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.before_attach"]], "before_commit() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.before_commit"]], "before_compile() (sqlalchemy.orm.queryevents method)": [[97, "sqlalchemy.orm.QueryEvents.before_compile"]], "before_compile_delete() (sqlalchemy.orm.queryevents method)": [[97, "sqlalchemy.orm.QueryEvents.before_compile_delete"]], "before_compile_update() (sqlalchemy.orm.queryevents method)": [[97, "sqlalchemy.orm.QueryEvents.before_compile_update"]], "before_configured() (sqlalchemy.orm.mapperevents method)": [[97, "sqlalchemy.orm.MapperEvents.before_configured"]], "before_delete() (sqlalchemy.orm.mapperevents method)": [[97, "sqlalchemy.orm.MapperEvents.before_delete"]], "before_flush() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.before_flush"]], "before_insert() (sqlalchemy.orm.mapperevents method)": [[97, "sqlalchemy.orm.MapperEvents.before_insert"]], "before_mapper_configured() (sqlalchemy.orm.mapperevents method)": [[97, "sqlalchemy.orm.MapperEvents.before_mapper_configured"]], "before_update() (sqlalchemy.orm.mapperevents method)": [[97, "sqlalchemy.orm.MapperEvents.before_update"]], "bulk_replace() (sqlalchemy.orm.attributeevents method)": [[97, "sqlalchemy.orm.AttributeEvents.bulk_replace"]], "class_instrument() (sqlalchemy.orm.instrumentationevents method)": [[97, "sqlalchemy.orm.InstrumentationEvents.class_instrument"]], "class_uninstrument() (sqlalchemy.orm.instrumentationevents method)": [[97, "sqlalchemy.orm.InstrumentationEvents.class_uninstrument"]], "deleted_to_detached() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.deleted_to_detached"]], "deleted_to_persistent() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.deleted_to_persistent"]], "detached_to_persistent() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.detached_to_persistent"]], "dispose_collection() (sqlalchemy.orm.attributeevents method)": [[97, "sqlalchemy.orm.AttributeEvents.dispose_collection"]], "do_orm_execute() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.do_orm_execute"]], "expire() (sqlalchemy.orm.instanceevents method)": [[97, "sqlalchemy.orm.InstanceEvents.expire"]], "first_init() (sqlalchemy.orm.instanceevents method)": [[97, "sqlalchemy.orm.InstanceEvents.first_init"]], "init() (sqlalchemy.orm.instanceevents method)": [[97, "sqlalchemy.orm.InstanceEvents.init"]], "init_collection() (sqlalchemy.orm.attributeevents method)": [[97, "sqlalchemy.orm.AttributeEvents.init_collection"]], "init_failure() (sqlalchemy.orm.instanceevents method)": [[97, "sqlalchemy.orm.InstanceEvents.init_failure"]], "init_scalar() (sqlalchemy.orm.attributeevents method)": [[97, "sqlalchemy.orm.AttributeEvents.init_scalar"]], "instrument_class() (sqlalchemy.orm.mapperevents method)": [[97, "sqlalchemy.orm.MapperEvents.instrument_class"]], "load() (sqlalchemy.orm.instanceevents method)": [[97, "sqlalchemy.orm.InstanceEvents.load"]], "loaded_as_persistent() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.loaded_as_persistent"]], "mapper_configured() (sqlalchemy.orm.mapperevents method)": [[97, "sqlalchemy.orm.MapperEvents.mapper_configured"]], "modified() (sqlalchemy.orm.attributeevents method)": [[97, "sqlalchemy.orm.AttributeEvents.modified"]], "pending_to_persistent() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.pending_to_persistent"]], "pending_to_transient() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.pending_to_transient"]], "persistent_to_deleted() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.persistent_to_deleted"]], "persistent_to_detached() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.persistent_to_detached"]], "persistent_to_transient() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.persistent_to_transient"]], "pickle() (sqlalchemy.orm.instanceevents method)": [[97, "sqlalchemy.orm.InstanceEvents.pickle"]], "refresh() (sqlalchemy.orm.instanceevents method)": [[97, "sqlalchemy.orm.InstanceEvents.refresh"]], "refresh_flush() (sqlalchemy.orm.instanceevents method)": [[97, "sqlalchemy.orm.InstanceEvents.refresh_flush"]], "remove() (sqlalchemy.orm.attributeevents method)": [[97, "sqlalchemy.orm.AttributeEvents.remove"]], "set() (sqlalchemy.orm.attributeevents method)": [[97, "sqlalchemy.orm.AttributeEvents.set"]], "sqlalchemy.orm.instrumentation": [[97, "module-sqlalchemy.orm.instrumentation"]], "transient_to_pending() (sqlalchemy.orm.sessionevents method)": [[97, "sqlalchemy.orm.SessionEvents.transient_to_pending"]], "unpickle() (sqlalchemy.orm.instanceevents method)": [[97, "sqlalchemy.orm.InstanceEvents.unpickle"]], "examples.adjacency_list": [[98, "module-examples.adjacency_list"]], "examples.association": [[98, "module-examples.association"]], "examples.asyncio": [[98, "module-examples.asyncio"]], "examples.custom_attributes": [[98, "module-examples.custom_attributes"]], "examples.dogpile_caching": [[98, "module-examples.dogpile_caching"]], "examples.dynamic_dict": [[98, "module-examples.dynamic_dict"]], "examples.elementtree": [[98, "module-examples.elementtree"]], "examples.extending_query": [[98, "module-examples.extending_query"]], "examples.generic_associations": [[98, "module-examples.generic_associations"]], "examples.graphs": [[98, "module-examples.graphs"]], "examples.inheritance": [[98, "module-examples.inheritance"]], "examples.join_conditions": [[98, "module-examples.join_conditions"]], "examples.large_collection": [[98, "module-examples.large_collection"]], "examples.materialized_paths": [[98, "module-examples.materialized_paths"]], "examples.nested_sets": [[98, "module-examples.nested_sets"]], "examples.performance": [[98, "module-examples.performance"]], "examples.postgis": [[98, "module-examples.postgis"]], "examples.sharding": [[98, "module-examples.sharding"]], "examples.space_invaders": [[98, "module-examples.space_invaders"]], "examples.versioned_history": [[98, "module-examples.versioned_history"]], "examples.versioned_rows": [[98, "module-examples.versioned_rows"]], "examples.vertical": [[98, "module-examples.vertical"]], "concurrentmodificationerror (in module sqlalchemy.orm.exc)": [[99, "sqlalchemy.orm.exc.ConcurrentModificationError"]], "detachedinstanceerror": [[99, "sqlalchemy.orm.exc.DetachedInstanceError"]], "flusherror": [[99, "sqlalchemy.orm.exc.FlushError"]], "loaderstrategyexception": [[99, "sqlalchemy.orm.exc.LoaderStrategyException"]], "no_state (in module sqlalchemy.orm.exc)": [[99, "sqlalchemy.orm.exc.NO_STATE"]], "objectdeletederror": [[99, "sqlalchemy.orm.exc.ObjectDeletedError"]], "objectdereferencederror": [[99, "sqlalchemy.orm.exc.ObjectDereferencedError"]], "staledataerror": [[99, "sqlalchemy.orm.exc.StaleDataError"]], "unmappedclasserror": [[99, "sqlalchemy.orm.exc.UnmappedClassError"]], "unmappedcolumnerror": [[99, "sqlalchemy.orm.exc.UnmappedColumnError"]], "unmappederror": [[99, "sqlalchemy.orm.exc.UnmappedError"]], "unmappedinstanceerror": [[99, "sqlalchemy.orm.exc.UnmappedInstanceError"]], "sqlalchemy.orm.exc": [[99, "module-sqlalchemy.orm.exc"]], "association_proxy (in module sqlalchemy.ext.associationproxy)": [[101, "sqlalchemy.ext.associationproxy.ASSOCIATION_PROXY"]], "associationproxy (class in sqlalchemy.ext.associationproxy)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxy"]], "associationproxyinstance (class in sqlalchemy.ext.associationproxy)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxyInstance"]], "columnassociationproxyinstance (class in sqlalchemy.ext.associationproxy)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance"]], "objectassociationproxyinstance (class in sqlalchemy.ext.associationproxy)": [[101, "sqlalchemy.ext.associationproxy.ObjectAssociationProxyInstance"]], "__init__() (sqlalchemy.ext.associationproxy.associationproxy method)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxy.__init__"]], "__le__() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.__le__"]], "__lt__() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.__lt__"]], "__ne__() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.__ne__"]], "all_() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.all_"]], "any() (sqlalchemy.ext.associationproxy.associationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxyInstance.any"]], "any() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.any"]], "any() (sqlalchemy.ext.associationproxy.objectassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ObjectAssociationProxyInstance.any"]], "any_() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.any_"]], "asc() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.asc"]], "association_proxy() (in module sqlalchemy.ext.associationproxy)": [[101, "sqlalchemy.ext.associationproxy.association_proxy"]], "attr (sqlalchemy.ext.associationproxy.associationproxyinstance attribute)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxyInstance.attr"]], "attr (sqlalchemy.ext.associationproxy.columnassociationproxyinstance attribute)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.attr"]], "attr (sqlalchemy.ext.associationproxy.objectassociationproxyinstance attribute)": [[101, "sqlalchemy.ext.associationproxy.ObjectAssociationProxyInstance.attr"]], "between() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.between"]], "bool_op() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.bool_op"]], "collate() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.collate"]], "concat() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.concat"]], "contains() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.contains"]], "contains() (sqlalchemy.ext.associationproxy.objectassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ObjectAssociationProxyInstance.contains"]], "delete() (sqlalchemy.ext.associationproxy.associationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxyInstance.delete"]], "desc() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.desc"]], "distinct() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.distinct"]], "endswith() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.endswith"]], "extension_type (sqlalchemy.ext.associationproxy.associationproxy attribute)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxy.extension_type"]], "for_class() (sqlalchemy.ext.associationproxy.associationproxy method)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxy.for_class"]], "for_proxy() (sqlalchemy.ext.associationproxy.associationproxyinstance class method)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxyInstance.for_proxy"]], "get() (sqlalchemy.ext.associationproxy.associationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxyInstance.get"]], "has() (sqlalchemy.ext.associationproxy.associationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxyInstance.has"]], "has() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.has"]], "has() (sqlalchemy.ext.associationproxy.objectassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ObjectAssociationProxyInstance.has"]], "ilike() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.ilike"]], "in_() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.in_"]], "info (sqlalchemy.ext.associationproxy.associationproxy attribute)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxy.info"]], "info (sqlalchemy.ext.associationproxy.associationproxyinstance attribute)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxyInstance.info"]], "is_() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.is_"]], "is_aliased_class (sqlalchemy.ext.associationproxy.associationproxy attribute)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxy.is_aliased_class"]], "is_attribute (sqlalchemy.ext.associationproxy.associationproxy attribute)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxy.is_attribute"]], "is_bundle (sqlalchemy.ext.associationproxy.associationproxy attribute)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxy.is_bundle"]], "is_clause_element (sqlalchemy.ext.associationproxy.associationproxy attribute)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxy.is_clause_element"]], "is_distinct_from() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.is_distinct_from"]], "is_instance (sqlalchemy.ext.associationproxy.associationproxy attribute)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxy.is_instance"]], "is_mapper (sqlalchemy.ext.associationproxy.associationproxy attribute)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxy.is_mapper"]], "is_not() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.is_not"]], "is_not_distinct_from() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.is_not_distinct_from"]], "is_property (sqlalchemy.ext.associationproxy.associationproxy attribute)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxy.is_property"]], "is_selectable (sqlalchemy.ext.associationproxy.associationproxy attribute)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxy.is_selectable"]], "isnot() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.isnot"]], "isnot_distinct_from() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.isnot_distinct_from"]], "like() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.like"]], "local_attr (sqlalchemy.ext.associationproxy.associationproxyinstance attribute)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxyInstance.local_attr"]], "local_attr (sqlalchemy.ext.associationproxy.columnassociationproxyinstance attribute)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.local_attr"]], "local_attr (sqlalchemy.ext.associationproxy.objectassociationproxyinstance attribute)": [[101, "sqlalchemy.ext.associationproxy.ObjectAssociationProxyInstance.local_attr"]], "match() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.match"]], "not_ilike() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.not_ilike"]], "not_in() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.not_in"]], "not_like() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.not_like"]], "notilike() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.notilike"]], "notin_() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.notin_"]], "notlike() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.notlike"]], "nulls_first() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.nulls_first"]], "nulls_last() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.nulls_last"]], "nullsfirst() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.nullsfirst"]], "nullslast() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.nullslast"]], "op() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.op"]], "operate() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.operate"]], "regexp_match() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.regexp_match"]], "regexp_replace() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.regexp_replace"]], "remote_attr (sqlalchemy.ext.associationproxy.associationproxyinstance attribute)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxyInstance.remote_attr"]], "remote_attr (sqlalchemy.ext.associationproxy.columnassociationproxyinstance attribute)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.remote_attr"]], "remote_attr (sqlalchemy.ext.associationproxy.objectassociationproxyinstance attribute)": [[101, "sqlalchemy.ext.associationproxy.ObjectAssociationProxyInstance.remote_attr"]], "reverse_operate() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.reverse_operate"]], "scalar (sqlalchemy.ext.associationproxy.associationproxyinstance attribute)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxyInstance.scalar"]], "scalar (sqlalchemy.ext.associationproxy.columnassociationproxyinstance attribute)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.scalar"]], "scalar (sqlalchemy.ext.associationproxy.objectassociationproxyinstance attribute)": [[101, "sqlalchemy.ext.associationproxy.ObjectAssociationProxyInstance.scalar"]], "set() (sqlalchemy.ext.associationproxy.associationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxyInstance.set"]], "sqlalchemy.ext.associationproxy": [[101, "module-sqlalchemy.ext.associationproxy"]], "startswith() (sqlalchemy.ext.associationproxy.columnassociationproxyinstance method)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.startswith"]], "target_class (sqlalchemy.ext.associationproxy.associationproxyinstance attribute)": [[101, "sqlalchemy.ext.associationproxy.AssociationProxyInstance.target_class"]], "target_class (sqlalchemy.ext.associationproxy.columnassociationproxyinstance attribute)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.target_class"]], "target_class (sqlalchemy.ext.associationproxy.objectassociationproxyinstance attribute)": [[101, "sqlalchemy.ext.associationproxy.ObjectAssociationProxyInstance.target_class"]], "timetuple (sqlalchemy.ext.associationproxy.columnassociationproxyinstance attribute)": [[101, "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance.timetuple"]], "asyncconnection (class in sqlalchemy.ext.asyncio)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection"]], "asyncengine (class in sqlalchemy.ext.asyncio)": [[102, "sqlalchemy.ext.asyncio.AsyncEngine"]], "asyncmappingresult (class in sqlalchemy.ext.asyncio)": [[102, "sqlalchemy.ext.asyncio.AsyncMappingResult"]], "asyncresult (class in sqlalchemy.ext.asyncio)": [[102, "sqlalchemy.ext.asyncio.AsyncResult"]], "asyncscalarresult (class in sqlalchemy.ext.asyncio)": [[102, "sqlalchemy.ext.asyncio.AsyncScalarResult"]], "asyncsession (class in sqlalchemy.ext.asyncio)": [[102, "sqlalchemy.ext.asyncio.AsyncSession"]], "asyncsessiontransaction (class in sqlalchemy.ext.asyncio)": [[102, "sqlalchemy.ext.asyncio.AsyncSessionTransaction"]], "asynctransaction (class in sqlalchemy.ext.asyncio)": [[102, "sqlalchemy.ext.asyncio.AsyncTransaction"]], "__call__() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.__call__"]], "__init__() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.__init__"]], "__init__() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.__init__"]], "add() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.add"]], "add() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.add"]], "add_all() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.add_all"]], "add_all() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.add_all"]], "all() (sqlalchemy.ext.asyncio.asyncmappingresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncMappingResult.all"]], "all() (sqlalchemy.ext.asyncio.asyncresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncResult.all"]], "all() (sqlalchemy.ext.asyncio.asyncscalarresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncScalarResult.all"]], "async_engine_from_config() (in module sqlalchemy.ext.asyncio)": [[102, "sqlalchemy.ext.asyncio.async_engine_from_config"]], "async_object_session() (in module sqlalchemy.ext.asyncio)": [[102, "sqlalchemy.ext.asyncio.async_object_session"]], "async_scoped_session (class in sqlalchemy.ext.asyncio)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session"]], "async_session() (in module sqlalchemy.ext.asyncio)": [[102, "sqlalchemy.ext.asyncio.async_session"]], "autoflush (sqlalchemy.ext.asyncio.async_scoped_session attribute)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.autoflush"]], "begin() (sqlalchemy.ext.asyncio.asyncconnection method)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.begin"]], "begin() (sqlalchemy.ext.asyncio.asyncengine method)": [[102, "sqlalchemy.ext.asyncio.AsyncEngine.begin"]], "begin() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.begin"]], "begin() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.begin"]], "begin_nested() (sqlalchemy.ext.asyncio.asyncconnection method)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.begin_nested"]], "begin_nested() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.begin_nested"]], "begin_nested() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.begin_nested"]], "clear_compiled_cache() (sqlalchemy.ext.asyncio.asyncengine method)": [[102, "sqlalchemy.ext.asyncio.AsyncEngine.clear_compiled_cache"]], "close() (sqlalchemy.ext.asyncio.asyncconnection method)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.close"]], "close() (sqlalchemy.ext.asyncio.asyncmappingresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncMappingResult.close"]], "close() (sqlalchemy.ext.asyncio.asyncresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncResult.close"]], "close() (sqlalchemy.ext.asyncio.asyncscalarresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncScalarResult.close"]], "close() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.close"]], "close() (sqlalchemy.ext.asyncio.asynctransaction method)": [[102, "sqlalchemy.ext.asyncio.AsyncTransaction.close"]], "close() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.close"]], "close_all() (sqlalchemy.ext.asyncio.asyncsession class method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.close_all"]], "close_all() (sqlalchemy.ext.asyncio.async_scoped_session class method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.close_all"]], "closed (sqlalchemy.ext.asyncio.asyncmappingresult attribute)": [[102, "sqlalchemy.ext.asyncio.AsyncMappingResult.closed"]], "closed (sqlalchemy.ext.asyncio.asyncresult attribute)": [[102, "sqlalchemy.ext.asyncio.AsyncResult.closed"]], "closed (sqlalchemy.ext.asyncio.asyncscalarresult attribute)": [[102, "sqlalchemy.ext.asyncio.AsyncScalarResult.closed"]], "columns() (sqlalchemy.ext.asyncio.asyncmappingresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncMappingResult.columns"]], "columns() (sqlalchemy.ext.asyncio.asyncresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncResult.columns"]], "commit() (sqlalchemy.ext.asyncio.asyncconnection method)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.commit"]], "commit() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.commit"]], "commit() (sqlalchemy.ext.asyncio.asyncsessiontransaction method)": [[102, "sqlalchemy.ext.asyncio.AsyncSessionTransaction.commit"]], "commit() (sqlalchemy.ext.asyncio.asynctransaction method)": [[102, "sqlalchemy.ext.asyncio.AsyncTransaction.commit"]], "commit() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.commit"]], "configure() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.configure"]], "connect() (sqlalchemy.ext.asyncio.asyncengine method)": [[102, "sqlalchemy.ext.asyncio.AsyncEngine.connect"]], "connection (sqlalchemy.ext.asyncio.asyncconnection attribute)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.connection"]], "connection() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.connection"]], "connection() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.connection"]], "create_async_engine() (in module sqlalchemy.ext.asyncio)": [[102, "sqlalchemy.ext.asyncio.create_async_engine"]], "delete() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.delete"]], "delete() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.delete"]], "deleted (sqlalchemy.ext.asyncio.asyncsession attribute)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.deleted"]], "deleted (sqlalchemy.ext.asyncio.async_scoped_session attribute)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.deleted"]], "dirty (sqlalchemy.ext.asyncio.asyncsession attribute)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.dirty"]], "dirty (sqlalchemy.ext.asyncio.async_scoped_session attribute)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.dirty"]], "dispose() (sqlalchemy.ext.asyncio.asyncengine method)": [[102, "sqlalchemy.ext.asyncio.AsyncEngine.dispose"]], "exec_driver_sql() (sqlalchemy.ext.asyncio.asyncconnection method)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.exec_driver_sql"]], "execute() (sqlalchemy.ext.asyncio.asyncconnection method)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.execute"]], "execute() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.execute"]], "execute() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.execute"]], "execution_options() (sqlalchemy.ext.asyncio.asyncconnection method)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.execution_options"]], "execution_options() (sqlalchemy.ext.asyncio.asyncengine method)": [[102, "sqlalchemy.ext.asyncio.AsyncEngine.execution_options"]], "expire() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.expire"]], "expire() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.expire"]], "expire_all() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.expire_all"]], "expire_all() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.expire_all"]], "expunge() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.expunge"]], "expunge() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.expunge"]], "expunge_all() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.expunge_all"]], "expunge_all() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.expunge_all"]], "fetchall() (sqlalchemy.ext.asyncio.asyncmappingresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncMappingResult.fetchall"]], "fetchall() (sqlalchemy.ext.asyncio.asyncscalarresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncScalarResult.fetchall"]], "fetchmany() (sqlalchemy.ext.asyncio.asyncmappingresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncMappingResult.fetchmany"]], "fetchmany() (sqlalchemy.ext.asyncio.asyncresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncResult.fetchmany"]], "fetchmany() (sqlalchemy.ext.asyncio.asyncscalarresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncScalarResult.fetchmany"]], "fetchone() (sqlalchemy.ext.asyncio.asyncmappingresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncMappingResult.fetchone"]], "fetchone() (sqlalchemy.ext.asyncio.asyncresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncResult.fetchone"]], "first() (sqlalchemy.ext.asyncio.asyncmappingresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncMappingResult.first"]], "first() (sqlalchemy.ext.asyncio.asyncresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncResult.first"]], "first() (sqlalchemy.ext.asyncio.asyncscalarresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncScalarResult.first"]], "flush() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.flush"]], "flush() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.flush"]], "freeze() (sqlalchemy.ext.asyncio.asyncresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncResult.freeze"]], "get() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.get"]], "get() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.get"]], "get_bind() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.get_bind"]], "get_bind() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.get_bind"]], "get_execution_options() (sqlalchemy.ext.asyncio.asyncengine method)": [[102, "sqlalchemy.ext.asyncio.AsyncEngine.get_execution_options"]], "get_nested_transaction() (sqlalchemy.ext.asyncio.asyncconnection method)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.get_nested_transaction"]], "get_nested_transaction() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.get_nested_transaction"]], "get_raw_connection() (sqlalchemy.ext.asyncio.asyncconnection method)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.get_raw_connection"]], "get_transaction() (sqlalchemy.ext.asyncio.asyncconnection method)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.get_transaction"]], "get_transaction() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.get_transaction"]], "identity_key() (sqlalchemy.ext.asyncio.asyncsession class method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.identity_key"]], "identity_key() (sqlalchemy.ext.asyncio.async_scoped_session class method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.identity_key"]], "identity_map (sqlalchemy.ext.asyncio.async_scoped_session attribute)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.identity_map"]], "in_nested_transaction() (sqlalchemy.ext.asyncio.asyncconnection method)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.in_nested_transaction"]], "in_nested_transaction() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.in_nested_transaction"]], "in_transaction() (sqlalchemy.ext.asyncio.asyncconnection method)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.in_transaction"]], "in_transaction() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.in_transaction"]], "info (sqlalchemy.ext.asyncio.asyncconnection attribute)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.info"]], "info (sqlalchemy.ext.asyncio.asyncsession attribute)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.info"]], "info (sqlalchemy.ext.asyncio.async_scoped_session attribute)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.info"]], "invalidate() (sqlalchemy.ext.asyncio.asyncconnection method)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.invalidate"]], "invalidate() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.invalidate"]], "invalidate() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.invalidate"]], "is_active (sqlalchemy.ext.asyncio.asyncsession attribute)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.is_active"]], "is_active (sqlalchemy.ext.asyncio.async_scoped_session attribute)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.is_active"]], "is_modified() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.is_modified"]], "is_modified() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.is_modified"]], "keys() (sqlalchemy.ext.asyncio.asyncmappingresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncMappingResult.keys"]], "keys() (sqlalchemy.ext.asyncio.asyncresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncResult.keys"]], "mappings() (sqlalchemy.ext.asyncio.asyncresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncResult.mappings"]], "memoized_instancemethod() (sqlalchemy.ext.asyncio.asyncmappingresult class method)": [[102, "sqlalchemy.ext.asyncio.AsyncMappingResult.memoized_instancemethod"]], "memoized_instancemethod() (sqlalchemy.ext.asyncio.asyncresult class method)": [[102, "sqlalchemy.ext.asyncio.AsyncResult.memoized_instancemethod"]], "memoized_instancemethod() (sqlalchemy.ext.asyncio.asyncscalarresult class method)": [[102, "sqlalchemy.ext.asyncio.AsyncScalarResult.memoized_instancemethod"]], "merge() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.merge"]], "merge() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.merge"]], "new (sqlalchemy.ext.asyncio.asyncsession attribute)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.new"]], "new (sqlalchemy.ext.asyncio.async_scoped_session attribute)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.new"]], "no_autoflush (sqlalchemy.ext.asyncio.asyncsession attribute)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.no_autoflush"]], "no_autoflush (sqlalchemy.ext.asyncio.async_scoped_session attribute)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.no_autoflush"]], "object_session() (sqlalchemy.ext.asyncio.asyncsession class method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.object_session"]], "object_session() (sqlalchemy.ext.asyncio.async_scoped_session class method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.object_session"]], "one() (sqlalchemy.ext.asyncio.asyncmappingresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncMappingResult.one"]], "one() (sqlalchemy.ext.asyncio.asyncresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncResult.one"]], "one() (sqlalchemy.ext.asyncio.asyncscalarresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncScalarResult.one"]], "one_or_none() (sqlalchemy.ext.asyncio.asyncmappingresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncMappingResult.one_or_none"]], "one_or_none() (sqlalchemy.ext.asyncio.asyncresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncResult.one_or_none"]], "one_or_none() (sqlalchemy.ext.asyncio.asyncscalarresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncScalarResult.one_or_none"]], "partitions() (sqlalchemy.ext.asyncio.asyncmappingresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncMappingResult.partitions"]], "partitions() (sqlalchemy.ext.asyncio.asyncresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncResult.partitions"]], "partitions() (sqlalchemy.ext.asyncio.asyncscalarresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncScalarResult.partitions"]], "raw_connection() (sqlalchemy.ext.asyncio.asyncengine method)": [[102, "sqlalchemy.ext.asyncio.AsyncEngine.raw_connection"]], "refresh() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.refresh"]], "refresh() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.refresh"]], "remove() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.remove"]], "rollback() (sqlalchemy.ext.asyncio.asyncconnection method)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.rollback"]], "rollback() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.rollback"]], "rollback() (sqlalchemy.ext.asyncio.asyncsessiontransaction method)": [[102, "sqlalchemy.ext.asyncio.AsyncSessionTransaction.rollback"]], "rollback() (sqlalchemy.ext.asyncio.asynctransaction method)": [[102, "sqlalchemy.ext.asyncio.AsyncTransaction.rollback"]], "rollback() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.rollback"]], "run_sync() (sqlalchemy.ext.asyncio.asyncconnection method)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.run_sync"]], "run_sync() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.run_sync"]], "scalar() (sqlalchemy.ext.asyncio.asyncconnection method)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.scalar"]], "scalar() (sqlalchemy.ext.asyncio.asyncresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncResult.scalar"]], "scalar() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.scalar"]], "scalar() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.scalar"]], "scalar_one() (sqlalchemy.ext.asyncio.asyncresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncResult.scalar_one"]], "scalar_one_or_none() (sqlalchemy.ext.asyncio.asyncresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncResult.scalar_one_or_none"]], "scalars() (sqlalchemy.ext.asyncio.asyncconnection method)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.scalars"]], "scalars() (sqlalchemy.ext.asyncio.asyncresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncResult.scalars"]], "scalars() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.scalars"]], "scalars() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.scalars"]], "start() (sqlalchemy.ext.asyncio.asyncconnection method)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.start"]], "start() (sqlalchemy.ext.asyncio.asynctransaction method)": [[102, "sqlalchemy.ext.asyncio.AsyncTransaction.start"]], "stream() (sqlalchemy.ext.asyncio.asyncconnection method)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.stream"]], "stream() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.stream"]], "stream() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.stream"]], "stream_scalars() (sqlalchemy.ext.asyncio.asyncconnection method)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.stream_scalars"]], "stream_scalars() (sqlalchemy.ext.asyncio.asyncsession method)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.stream_scalars"]], "stream_scalars() (sqlalchemy.ext.asyncio.async_scoped_session method)": [[102, "sqlalchemy.ext.asyncio.async_scoped_session.stream_scalars"]], "sync_connection (sqlalchemy.ext.asyncio.asyncconnection attribute)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.sync_connection"]], "sync_engine (sqlalchemy.ext.asyncio.asyncconnection attribute)": [[102, "sqlalchemy.ext.asyncio.AsyncConnection.sync_engine"]], "sync_engine (sqlalchemy.ext.asyncio.asyncengine attribute)": [[102, "sqlalchemy.ext.asyncio.AsyncEngine.sync_engine"]], "sync_session (sqlalchemy.ext.asyncio.asyncsession attribute)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.sync_session"]], "sync_session_class (sqlalchemy.ext.asyncio.asyncsession attribute)": [[102, "sqlalchemy.ext.asyncio.AsyncSession.sync_session_class"]], "unique() (sqlalchemy.ext.asyncio.asyncmappingresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncMappingResult.unique"]], "unique() (sqlalchemy.ext.asyncio.asyncresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncResult.unique"]], "unique() (sqlalchemy.ext.asyncio.asyncscalarresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncScalarResult.unique"]], "update_execution_options() (sqlalchemy.ext.asyncio.asyncengine method)": [[102, "sqlalchemy.ext.asyncio.AsyncEngine.update_execution_options"]], "yield_per() (sqlalchemy.ext.asyncio.asyncmappingresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncMappingResult.yield_per"]], "yield_per() (sqlalchemy.ext.asyncio.asyncresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncResult.yield_per"]], "yield_per() (sqlalchemy.ext.asyncio.asyncscalarresult method)": [[102, "sqlalchemy.ext.asyncio.AsyncScalarResult.yield_per"]], "automapbase (class in sqlalchemy.ext.automap)": [[103, "sqlalchemy.ext.automap.AutomapBase"]], "automap_base() (in module sqlalchemy.ext.automap)": [[103, "sqlalchemy.ext.automap.automap_base"]], "classes (sqlalchemy.ext.automap.automapbase attribute)": [[103, "sqlalchemy.ext.automap.AutomapBase.classes"]], "classname_for_table() (in module sqlalchemy.ext.automap)": [[103, "sqlalchemy.ext.automap.classname_for_table"]], "generate_relationship() (in module sqlalchemy.ext.automap)": [[103, "sqlalchemy.ext.automap.generate_relationship"]], "name_for_collection_relationship() (in module sqlalchemy.ext.automap)": [[103, "sqlalchemy.ext.automap.name_for_collection_relationship"]], "name_for_scalar_relationship() (in module sqlalchemy.ext.automap)": [[103, "sqlalchemy.ext.automap.name_for_scalar_relationship"]], "prepare() (sqlalchemy.ext.automap.automapbase class method)": [[103, "sqlalchemy.ext.automap.AutomapBase.prepare"]], "sqlalchemy.ext.automap": [[103, "module-sqlalchemy.ext.automap"]], "bakedquery (class in sqlalchemy.ext.baked)": [[104, "sqlalchemy.ext.baked.BakedQuery"]], "bakery (class in sqlalchemy.ext.baked)": [[104, "sqlalchemy.ext.baked.Bakery"]], "add_criteria() (sqlalchemy.ext.baked.bakedquery method)": [[104, "sqlalchemy.ext.baked.BakedQuery.add_criteria"]], "bakery() (in module sqlalchemy.ext.baked)": [[104, "sqlalchemy.ext.baked.bakery"]], "bakery() (sqlalchemy.ext.baked.bakedquery class method)": [[104, "sqlalchemy.ext.baked.BakedQuery.bakery"]], "for_session() (sqlalchemy.ext.baked.bakedquery method)": [[104, "sqlalchemy.ext.baked.BakedQuery.for_session"]], "spoil() (sqlalchemy.ext.baked.bakedquery method)": [[104, "sqlalchemy.ext.baked.BakedQuery.spoil"]], "sqlalchemy.ext.baked": [[104, "module-sqlalchemy.ext.baked"]], "to_query() (sqlalchemy.ext.baked.bakedquery method)": [[104, "sqlalchemy.ext.baked.BakedQuery.to_query"]], "with_criteria() (sqlalchemy.ext.baked.bakedquery method)": [[104, "sqlalchemy.ext.baked.BakedQuery.with_criteria"]], "sqlalchemy.ext.declarative": [[105, "module-sqlalchemy.ext.declarative"]], "abstractconcretebase (class in sqlalchemy.ext.declarative)": [[107, "sqlalchemy.ext.declarative.AbstractConcreteBase"]], "concretebase (class in sqlalchemy.ext.declarative)": [[107, "sqlalchemy.ext.declarative.ConcreteBase"]], "deferredreflection (class in sqlalchemy.ext.declarative)": [[107, "sqlalchemy.ext.declarative.DeferredReflection"]], "prepare() (sqlalchemy.ext.declarative.deferredreflection class method)": [[107, "sqlalchemy.ext.declarative.DeferredReflection.prepare"]], "shardedquery (class in sqlalchemy.ext.horizontal_shard)": [[112, "sqlalchemy.ext.horizontal_shard.ShardedQuery"]], "shardedsession (class in sqlalchemy.ext.horizontal_shard)": [[112, "sqlalchemy.ext.horizontal_shard.ShardedSession"]], "__init__() (sqlalchemy.ext.horizontal_shard.shardedsession method)": [[112, "sqlalchemy.ext.horizontal_shard.ShardedSession.__init__"]], "connection_callable() (sqlalchemy.ext.horizontal_shard.shardedsession method)": [[112, "sqlalchemy.ext.horizontal_shard.ShardedSession.connection_callable"]], "get_bind() (sqlalchemy.ext.horizontal_shard.shardedsession method)": [[112, "sqlalchemy.ext.horizontal_shard.ShardedSession.get_bind"]], "set_shard() (sqlalchemy.ext.horizontal_shard.shardedquery method)": [[112, "sqlalchemy.ext.horizontal_shard.ShardedQuery.set_shard"]], "sqlalchemy.ext.horizontal_shard": [[112, "module-sqlalchemy.ext.horizontal_shard"]], "comparator (class in sqlalchemy.ext.hybrid)": [[113, "sqlalchemy.ext.hybrid.Comparator"]], "hybrid_method (in module sqlalchemy.ext.hybrid)": [[113, "sqlalchemy.ext.hybrid.HYBRID_METHOD"]], "hybrid_property (in module sqlalchemy.ext.hybrid)": [[113, "sqlalchemy.ext.hybrid.HYBRID_PROPERTY"]], "__init__() (sqlalchemy.ext.hybrid.hybrid_method method)": [[113, "sqlalchemy.ext.hybrid.hybrid_method.__init__"]], "__init__() (sqlalchemy.ext.hybrid.hybrid_property method)": [[113, "sqlalchemy.ext.hybrid.hybrid_property.__init__"]], "comparator() (sqlalchemy.ext.hybrid.hybrid_property method)": [[113, "sqlalchemy.ext.hybrid.hybrid_property.comparator"]], "deleter() (sqlalchemy.ext.hybrid.hybrid_property method)": [[113, "sqlalchemy.ext.hybrid.hybrid_property.deleter"]], "expression() (sqlalchemy.ext.hybrid.hybrid_method method)": [[113, "sqlalchemy.ext.hybrid.hybrid_method.expression"]], "expression() (sqlalchemy.ext.hybrid.hybrid_property method)": [[113, "sqlalchemy.ext.hybrid.hybrid_property.expression"]], "extension_type (sqlalchemy.ext.hybrid.hybrid_method attribute)": [[113, "sqlalchemy.ext.hybrid.hybrid_method.extension_type"]], "extension_type (sqlalchemy.ext.hybrid.hybrid_property attribute)": [[113, "sqlalchemy.ext.hybrid.hybrid_property.extension_type"]], "getter() (sqlalchemy.ext.hybrid.hybrid_property method)": [[113, "sqlalchemy.ext.hybrid.hybrid_property.getter"]], "hybrid_method (class in sqlalchemy.ext.hybrid)": [[113, "sqlalchemy.ext.hybrid.hybrid_method"]], "hybrid_property (class in sqlalchemy.ext.hybrid)": [[113, "sqlalchemy.ext.hybrid.hybrid_property"]], "is_attribute (sqlalchemy.ext.hybrid.hybrid_method attribute)": [[113, "sqlalchemy.ext.hybrid.hybrid_method.is_attribute"]], "is_attribute (sqlalchemy.ext.hybrid.hybrid_property attribute)": [[113, "sqlalchemy.ext.hybrid.hybrid_property.is_attribute"]], "overrides (sqlalchemy.ext.hybrid.hybrid_property attribute)": [[113, "sqlalchemy.ext.hybrid.hybrid_property.overrides"]], "setter() (sqlalchemy.ext.hybrid.hybrid_property method)": [[113, "sqlalchemy.ext.hybrid.hybrid_property.setter"]], "sqlalchemy.ext.hybrid": [[113, "module-sqlalchemy.ext.hybrid"]], "update_expression() (sqlalchemy.ext.hybrid.hybrid_property method)": [[113, "sqlalchemy.ext.hybrid.hybrid_property.update_expression"]], "__init__() (sqlalchemy.ext.indexable.index_property method)": [[115, "sqlalchemy.ext.indexable.index_property.__init__"]], "index_property (class in sqlalchemy.ext.indexable)": [[115, "sqlalchemy.ext.indexable.index_property"]], "sqlalchemy.ext.indexable": [[115, "module-sqlalchemy.ext.indexable"]], "extendedinstrumentationregistry (class in sqlalchemy.ext.instrumentation)": [[116, "sqlalchemy.ext.instrumentation.ExtendedInstrumentationRegistry"]], "instrumentation_manager (in module sqlalchemy.ext.instrumentation)": [[116, "sqlalchemy.ext.instrumentation.INSTRUMENTATION_MANAGER"]], "instrumentationfactory (class in sqlalchemy.orm.instrumentation)": [[116, "sqlalchemy.orm.instrumentation.InstrumentationFactory"]], "instrumentationmanager (class in sqlalchemy.ext.instrumentation)": [[116, "sqlalchemy.ext.instrumentation.InstrumentationManager"]], "dict_getter() (sqlalchemy.ext.instrumentation.instrumentationmanager method)": [[116, "sqlalchemy.ext.instrumentation.InstrumentationManager.dict_getter"]], "get_instance_dict() (sqlalchemy.ext.instrumentation.instrumentationmanager method)": [[116, "sqlalchemy.ext.instrumentation.InstrumentationManager.get_instance_dict"]], "initialize_instance_dict() (sqlalchemy.ext.instrumentation.instrumentationmanager method)": [[116, "sqlalchemy.ext.instrumentation.InstrumentationManager.initialize_instance_dict"]], "install_descriptor() (sqlalchemy.ext.instrumentation.instrumentationmanager method)": [[116, "sqlalchemy.ext.instrumentation.InstrumentationManager.install_descriptor"]], "install_member() (sqlalchemy.ext.instrumentation.instrumentationmanager method)": [[116, "sqlalchemy.ext.instrumentation.InstrumentationManager.install_member"]], "install_state() (sqlalchemy.ext.instrumentation.instrumentationmanager method)": [[116, "sqlalchemy.ext.instrumentation.InstrumentationManager.install_state"]], "instrument_attribute() (sqlalchemy.ext.instrumentation.instrumentationmanager method)": [[116, "sqlalchemy.ext.instrumentation.InstrumentationManager.instrument_attribute"]], "instrument_collection_class() (sqlalchemy.ext.instrumentation.instrumentationmanager method)": [[116, "sqlalchemy.ext.instrumentation.InstrumentationManager.instrument_collection_class"]], "instrumentation_finders (in module sqlalchemy.ext.instrumentation)": [[116, "sqlalchemy.ext.instrumentation.instrumentation_finders"]], "manage() (sqlalchemy.ext.instrumentation.instrumentationmanager method)": [[116, "sqlalchemy.ext.instrumentation.InstrumentationManager.manage"]], "manager_getter() (sqlalchemy.ext.instrumentation.instrumentationmanager method)": [[116, "sqlalchemy.ext.instrumentation.InstrumentationManager.manager_getter"]], "post_configure_attribute() (sqlalchemy.ext.instrumentation.instrumentationmanager method)": [[116, "sqlalchemy.ext.instrumentation.InstrumentationManager.post_configure_attribute"]], "remove_state() (sqlalchemy.ext.instrumentation.instrumentationmanager method)": [[116, "sqlalchemy.ext.instrumentation.InstrumentationManager.remove_state"]], "sqlalchemy.ext.instrumentation": [[116, "module-sqlalchemy.ext.instrumentation"]], "state_getter() (sqlalchemy.ext.instrumentation.instrumentationmanager method)": [[116, "sqlalchemy.ext.instrumentation.InstrumentationManager.state_getter"]], "uninstall_descriptor() (sqlalchemy.ext.instrumentation.instrumentationmanager method)": [[116, "sqlalchemy.ext.instrumentation.InstrumentationManager.uninstall_descriptor"]], "uninstall_member() (sqlalchemy.ext.instrumentation.instrumentationmanager method)": [[116, "sqlalchemy.ext.instrumentation.InstrumentationManager.uninstall_member"]], "unregister() (sqlalchemy.ext.instrumentation.instrumentationmanager method)": [[116, "sqlalchemy.ext.instrumentation.InstrumentationManager.unregister"]], "mutable (class in sqlalchemy.ext.mutable)": [[117, "sqlalchemy.ext.mutable.Mutable"]], "mutablebase (class in sqlalchemy.ext.mutable)": [[117, "sqlalchemy.ext.mutable.MutableBase"]], "mutablecomposite (class in sqlalchemy.ext.mutable)": [[117, "sqlalchemy.ext.mutable.MutableComposite"]], "mutabledict (class in sqlalchemy.ext.mutable)": [[117, "sqlalchemy.ext.mutable.MutableDict"]], "mutablelist (class in sqlalchemy.ext.mutable)": [[117, "sqlalchemy.ext.mutable.MutableList"]], "mutableset (class in sqlalchemy.ext.mutable)": [[117, "sqlalchemy.ext.mutable.MutableSet"]], "_get_listen_keys() (sqlalchemy.ext.mutable.mutable class method)": [[117, "sqlalchemy.ext.mutable.Mutable._get_listen_keys"]], "_listen_on_attribute() (sqlalchemy.ext.mutable.mutable class method)": [[117, "sqlalchemy.ext.mutable.Mutable._listen_on_attribute"]], "_parents (sqlalchemy.ext.mutable.mutable attribute)": [[117, "sqlalchemy.ext.mutable.Mutable._parents"]], "_parents (sqlalchemy.ext.mutable.mutablebase attribute)": [[117, "sqlalchemy.ext.mutable.MutableBase._parents"]], "add() (sqlalchemy.ext.mutable.mutableset method)": [[117, "sqlalchemy.ext.mutable.MutableSet.add"]], "append() (sqlalchemy.ext.mutable.mutablelist method)": [[117, "sqlalchemy.ext.mutable.MutableList.append"]], "as_mutable() (sqlalchemy.ext.mutable.mutable class method)": [[117, "sqlalchemy.ext.mutable.Mutable.as_mutable"]], "associate_with() (sqlalchemy.ext.mutable.mutable class method)": [[117, "sqlalchemy.ext.mutable.Mutable.associate_with"]], "associate_with_attribute() (sqlalchemy.ext.mutable.mutable class method)": [[117, "sqlalchemy.ext.mutable.Mutable.associate_with_attribute"]], "changed() (sqlalchemy.ext.mutable.mutable method)": [[117, "sqlalchemy.ext.mutable.Mutable.changed"]], "changed() (sqlalchemy.ext.mutable.mutablecomposite method)": [[117, "sqlalchemy.ext.mutable.MutableComposite.changed"]], "clear() (sqlalchemy.ext.mutable.mutabledict method)": [[117, "sqlalchemy.ext.mutable.MutableDict.clear"]], "clear() (sqlalchemy.ext.mutable.mutablelist method)": [[117, "sqlalchemy.ext.mutable.MutableList.clear"]], "clear() (sqlalchemy.ext.mutable.mutableset method)": [[117, "sqlalchemy.ext.mutable.MutableSet.clear"]], "coerce() (sqlalchemy.ext.mutable.mutable class method)": [[117, "sqlalchemy.ext.mutable.Mutable.coerce"]], "coerce() (sqlalchemy.ext.mutable.mutablebase class method)": [[117, "sqlalchemy.ext.mutable.MutableBase.coerce"]], "coerce() (sqlalchemy.ext.mutable.mutabledict class method)": [[117, "sqlalchemy.ext.mutable.MutableDict.coerce"]], "coerce() (sqlalchemy.ext.mutable.mutablelist class method)": [[117, "sqlalchemy.ext.mutable.MutableList.coerce"]], "coerce() (sqlalchemy.ext.mutable.mutableset class method)": [[117, "sqlalchemy.ext.mutable.MutableSet.coerce"]], "difference_update() (sqlalchemy.ext.mutable.mutableset method)": [[117, "sqlalchemy.ext.mutable.MutableSet.difference_update"]], "discard() (sqlalchemy.ext.mutable.mutableset method)": [[117, "sqlalchemy.ext.mutable.MutableSet.discard"]], "extend() (sqlalchemy.ext.mutable.mutablelist method)": [[117, "sqlalchemy.ext.mutable.MutableList.extend"]], "insert() (sqlalchemy.ext.mutable.mutablelist method)": [[117, "sqlalchemy.ext.mutable.MutableList.insert"]], "intersection_update() (sqlalchemy.ext.mutable.mutableset method)": [[117, "sqlalchemy.ext.mutable.MutableSet.intersection_update"]], "pop() (sqlalchemy.ext.mutable.mutabledict method)": [[117, "sqlalchemy.ext.mutable.MutableDict.pop"]], "pop() (sqlalchemy.ext.mutable.mutablelist method)": [[117, "sqlalchemy.ext.mutable.MutableList.pop"]], "pop() (sqlalchemy.ext.mutable.mutableset method)": [[117, "sqlalchemy.ext.mutable.MutableSet.pop"]], "popitem() (sqlalchemy.ext.mutable.mutabledict method)": [[117, "sqlalchemy.ext.mutable.MutableDict.popitem"]], "remove() (sqlalchemy.ext.mutable.mutablelist method)": [[117, "sqlalchemy.ext.mutable.MutableList.remove"]], "remove() (sqlalchemy.ext.mutable.mutableset method)": [[117, "sqlalchemy.ext.mutable.MutableSet.remove"]], "reverse() (sqlalchemy.ext.mutable.mutablelist method)": [[117, "sqlalchemy.ext.mutable.MutableList.reverse"]], "setdefault() (sqlalchemy.ext.mutable.mutabledict method)": [[117, "sqlalchemy.ext.mutable.MutableDict.setdefault"]], "sort() (sqlalchemy.ext.mutable.mutablelist method)": [[117, "sqlalchemy.ext.mutable.MutableList.sort"]], "sqlalchemy.ext.mutable": [[117, "module-sqlalchemy.ext.mutable"]], "symmetric_difference_update() (sqlalchemy.ext.mutable.mutableset method)": [[117, "sqlalchemy.ext.mutable.MutableSet.symmetric_difference_update"]], "update() (sqlalchemy.ext.mutable.mutabledict method)": [[117, "sqlalchemy.ext.mutable.MutableDict.update"]], "update() (sqlalchemy.ext.mutable.mutableset method)": [[117, "sqlalchemy.ext.mutable.MutableSet.update"]], "pep 561": [[118, "index-1"]], "orderinglist (class in sqlalchemy.ext.orderinglist)": [[119, "sqlalchemy.ext.orderinglist.OrderingList"]], "__init__() (sqlalchemy.ext.orderinglist.orderinglist method)": [[119, "sqlalchemy.ext.orderinglist.OrderingList.__init__"]], "append() (sqlalchemy.ext.orderinglist.orderinglist method)": [[119, "sqlalchemy.ext.orderinglist.OrderingList.append"]], "count_from_0() (in module sqlalchemy.ext.orderinglist)": [[119, "sqlalchemy.ext.orderinglist.count_from_0"]], "count_from_1() (in module sqlalchemy.ext.orderinglist)": [[119, "sqlalchemy.ext.orderinglist.count_from_1"]], "count_from_n_factory() (in module sqlalchemy.ext.orderinglist)": [[119, "sqlalchemy.ext.orderinglist.count_from_n_factory"]], "insert() (sqlalchemy.ext.orderinglist.orderinglist method)": [[119, "sqlalchemy.ext.orderinglist.OrderingList.insert"]], "ordering_list() (in module sqlalchemy.ext.orderinglist)": [[119, "sqlalchemy.ext.orderinglist.ordering_list"]], "pop() (sqlalchemy.ext.orderinglist.orderinglist method)": [[119, "sqlalchemy.ext.orderinglist.OrderingList.pop"]], "remove() (sqlalchemy.ext.orderinglist.orderinglist method)": [[119, "sqlalchemy.ext.orderinglist.OrderingList.remove"]], "reorder() (sqlalchemy.ext.orderinglist.orderinglist method)": [[119, "sqlalchemy.ext.orderinglist.OrderingList.reorder"]], "sqlalchemy.ext.orderinglist": [[119, "module-sqlalchemy.ext.orderinglist"]], "selectin_polymorphic() (in module sqlalchemy.orm)": [[122, "sqlalchemy.orm.selectin_polymorphic"]], "with_polymorphic() (in module sqlalchemy.orm)": [[122, "sqlalchemy.orm.with_polymorphic"]], "attributeevent (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.AttributeEvent"]], "attributestate (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.AttributeState"]], "cascadeoptions (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.CascadeOptions"]], "classmanager (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.ClassManager"]], "columnproperty (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.ColumnProperty"]], "columnproperty.comparator (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.ColumnProperty.Comparator"]], "compositeproperty (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.CompositeProperty"]], "compositeproperty.comparator (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.CompositeProperty.Comparator"]], "compositeproperty.compositebundle (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.CompositeProperty.CompositeBundle"]], "identitymap (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.IdentityMap"]], "inspectionattr (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.InspectionAttr"]], "inspectionattrinfo (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.InspectionAttrInfo"]], "instancestate (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.InstanceState"]], "instrumentedattribute (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.InstrumentedAttribute"]], "manytomany (in module sqlalchemy.orm)": [[123, "sqlalchemy.orm.MANYTOMANY"]], "manytoone (in module sqlalchemy.orm)": [[123, "sqlalchemy.orm.MANYTOONE"]], "mapped (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.Mapped"]], "mapperproperty (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.MapperProperty"]], "not_extension (in module sqlalchemy.orm)": [[123, "sqlalchemy.orm.NOT_EXTENSION"]], "onetomany (in module sqlalchemy.orm)": [[123, "sqlalchemy.orm.ONETOMANY"]], "propcomparator (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.PropComparator"]], "querycontext (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.QueryContext"]], "querycontext.default_load_options (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.QueryContext.default_load_options"]], "queryableattribute (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.QueryableAttribute"]], "relationshipproperty (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.RelationshipProperty"]], "relationshipproperty.comparator (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator"]], "synonymproperty (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.SynonymProperty"]], "uowtransaction (class in sqlalchemy.orm)": [[123, "sqlalchemy.orm.UOWTransaction"]], "__delete__() (sqlalchemy.orm.instrumentedattribute method)": [[123, "sqlalchemy.orm.InstrumentedAttribute.__delete__"]], "__eq__() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.__eq__"]], "__eq__() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.__eq__"]], "__eq__() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.__eq__"]], "__get__() (sqlalchemy.orm.instrumentedattribute method)": [[123, "sqlalchemy.orm.InstrumentedAttribute.__get__"]], "__init__() (sqlalchemy.orm.columnproperty method)": [[123, "sqlalchemy.orm.ColumnProperty.__init__"]], "__init__() (sqlalchemy.orm.compositeproperty method)": [[123, "sqlalchemy.orm.CompositeProperty.__init__"]], "__init__() (sqlalchemy.orm.relationshipproperty method)": [[123, "sqlalchemy.orm.RelationshipProperty.__init__"]], "__init__() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.__init__"]], "__init__() (sqlalchemy.orm.synonymproperty method)": [[123, "sqlalchemy.orm.SynonymProperty.__init__"]], "__le__() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.__le__"]], "__le__() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.__le__"]], "__le__() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.__le__"]], "__lt__() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.__lt__"]], "__lt__() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.__lt__"]], "__lt__() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.__lt__"]], "__ne__() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.__ne__"]], "__ne__() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.__ne__"]], "__ne__() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.__ne__"]], "__set__() (sqlalchemy.orm.instrumentedattribute method)": [[123, "sqlalchemy.orm.InstrumentedAttribute.__set__"]], "adapt_to_entity() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.adapt_to_entity"]], "adapt_to_entity() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.adapt_to_entity"]], "adapt_to_entity() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.adapt_to_entity"]], "adapter (sqlalchemy.orm.propcomparator attribute)": [[123, "sqlalchemy.orm.PropComparator.adapter"]], "adapter (sqlalchemy.orm.queryableattribute attribute)": [[123, "sqlalchemy.orm.QueryableAttribute.adapter"]], "adapter (sqlalchemy.orm.relationshipproperty.comparator attribute)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.adapter"]], "all_() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.all_"]], "all_() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.all_"]], "all_() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.all_"]], "and_() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.and_"]], "and_() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.and_"]], "and_() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.and_"]], "any() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.any"]], "any() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.any"]], "any() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.any"]], "any_() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.any_"]], "any_() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.any_"]], "any_() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.any_"]], "asc() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.asc"]], "asc() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.asc"]], "asc() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.asc"]], "async_session (sqlalchemy.orm.instancestate attribute)": [[123, "sqlalchemy.orm.InstanceState.async_session"]], "attrs (sqlalchemy.orm.instancestate attribute)": [[123, "sqlalchemy.orm.InstanceState.attrs"]], "between() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.between"]], "between() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.between"]], "between() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.between"]], "bool_op() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.bool_op"]], "bool_op() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.bool_op"]], "bool_op() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.bool_op"]], "callables (sqlalchemy.orm.instancestate attribute)": [[123, "sqlalchemy.orm.InstanceState.callables"]], "cascade (sqlalchemy.orm.mapperproperty attribute)": [[123, "sqlalchemy.orm.MapperProperty.cascade"]], "cascade (sqlalchemy.orm.relationshipproperty attribute)": [[123, "sqlalchemy.orm.RelationshipProperty.cascade"]], "cascade (sqlalchemy.orm.synonymproperty attribute)": [[123, "sqlalchemy.orm.SynonymProperty.cascade"]], "cascade_iterator() (sqlalchemy.orm.mapperproperty method)": [[123, "sqlalchemy.orm.MapperProperty.cascade_iterator"]], "cascade_iterator() (sqlalchemy.orm.relationshipproperty method)": [[123, "sqlalchemy.orm.RelationshipProperty.cascade_iterator"]], "cascade_iterator() (sqlalchemy.orm.synonymproperty method)": [[123, "sqlalchemy.orm.SynonymProperty.cascade_iterator"]], "check_modified() (sqlalchemy.orm.identitymap method)": [[123, "sqlalchemy.orm.IdentityMap.check_modified"]], "class_attribute (sqlalchemy.orm.mapperproperty attribute)": [[123, "sqlalchemy.orm.MapperProperty.class_attribute"]], "class_attribute (sqlalchemy.orm.relationshipproperty attribute)": [[123, "sqlalchemy.orm.RelationshipProperty.class_attribute"]], "class_attribute (sqlalchemy.orm.synonymproperty attribute)": [[123, "sqlalchemy.orm.SynonymProperty.class_attribute"]], "collate() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.collate"]], "collate() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.collate"]], "collate() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.collate"]], "concat() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.concat"]], "concat() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.concat"]], "concat() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.concat"]], "contains() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.contains"]], "contains() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.contains"]], "contains() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.contains"]], "create_row_processor() (sqlalchemy.orm.compositeproperty.compositebundle method)": [[123, "sqlalchemy.orm.CompositeProperty.CompositeBundle.create_row_processor"]], "create_row_processor() (sqlalchemy.orm.mapperproperty method)": [[123, "sqlalchemy.orm.MapperProperty.create_row_processor"]], "create_row_processor() (sqlalchemy.orm.relationshipproperty method)": [[123, "sqlalchemy.orm.RelationshipProperty.create_row_processor"]], "create_row_processor() (sqlalchemy.orm.synonymproperty method)": [[123, "sqlalchemy.orm.SynonymProperty.create_row_processor"]], "deferred_scalar_loader (sqlalchemy.orm.classmanager attribute)": [[123, "sqlalchemy.orm.ClassManager.deferred_scalar_loader"]], "deleted (sqlalchemy.orm.instancestate attribute)": [[123, "sqlalchemy.orm.InstanceState.deleted"]], "desc() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.desc"]], "desc() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.desc"]], "desc() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.desc"]], "detached (sqlalchemy.orm.instancestate attribute)": [[123, "sqlalchemy.orm.InstanceState.detached"]], "dict (sqlalchemy.orm.instancestate attribute)": [[123, "sqlalchemy.orm.InstanceState.dict"]], "distinct() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.distinct"]], "distinct() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.distinct"]], "distinct() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.distinct"]], "do_init() (sqlalchemy.orm.columnproperty method)": [[123, "sqlalchemy.orm.ColumnProperty.do_init"]], "do_init() (sqlalchemy.orm.compositeproperty method)": [[123, "sqlalchemy.orm.CompositeProperty.do_init"]], "do_init() (sqlalchemy.orm.mapperproperty method)": [[123, "sqlalchemy.orm.MapperProperty.do_init"]], "do_init() (sqlalchemy.orm.relationshipproperty method)": [[123, "sqlalchemy.orm.RelationshipProperty.do_init"]], "do_init() (sqlalchemy.orm.synonymproperty method)": [[123, "sqlalchemy.orm.SynonymProperty.do_init"]], "endswith() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.endswith"]], "endswith() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.endswith"]], "endswith() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.endswith"]], "entity (sqlalchemy.orm.relationshipproperty attribute)": [[123, "sqlalchemy.orm.RelationshipProperty.entity"]], "entity (sqlalchemy.orm.relationshipproperty.comparator attribute)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.entity"]], "expired_attribute_loader (sqlalchemy.orm.classmanager attribute)": [[123, "sqlalchemy.orm.ClassManager.expired_attribute_loader"]], "expired_attributes (sqlalchemy.orm.instancestate attribute)": [[123, "sqlalchemy.orm.InstanceState.expired_attributes"]], "expression (sqlalchemy.orm.columnproperty attribute)": [[123, "sqlalchemy.orm.ColumnProperty.expression"]], "expression (sqlalchemy.orm.queryableattribute attribute)": [[123, "sqlalchemy.orm.QueryableAttribute.expression"]], "expressions (sqlalchemy.orm.columnproperty.comparator attribute)": [[123, "sqlalchemy.orm.ColumnProperty.Comparator.expressions"]], "extension_type (sqlalchemy.orm.inspectionattr attribute)": [[123, "sqlalchemy.orm.InspectionAttr.extension_type"]], "extension_type (sqlalchemy.orm.queryableattribute attribute)": [[123, "sqlalchemy.orm.QueryableAttribute.extension_type"]], "extension_type (sqlalchemy.orm.relationshipproperty attribute)": [[123, "sqlalchemy.orm.RelationshipProperty.extension_type"]], "extension_type (sqlalchemy.orm.synonymproperty attribute)": [[123, "sqlalchemy.orm.SynonymProperty.extension_type"]], "filter_states_for_dep() (sqlalchemy.orm.uowtransaction method)": [[123, "sqlalchemy.orm.UOWTransaction.filter_states_for_dep"]], "finalize_flush_changes() (sqlalchemy.orm.uowtransaction method)": [[123, "sqlalchemy.orm.UOWTransaction.finalize_flush_changes"]], "get_attribute_history() (sqlalchemy.orm.uowtransaction method)": [[123, "sqlalchemy.orm.UOWTransaction.get_attribute_history"]], "get_history() (sqlalchemy.orm.compositeproperty method)": [[123, "sqlalchemy.orm.CompositeProperty.get_history"]], "has() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.has"]], "has() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.has"]], "has() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.has"]], "has_identity (sqlalchemy.orm.instancestate attribute)": [[123, "sqlalchemy.orm.InstanceState.has_identity"]], "has_parent() (sqlalchemy.orm.classmanager method)": [[123, "sqlalchemy.orm.ClassManager.has_parent"]], "history (sqlalchemy.orm.attributestate attribute)": [[123, "sqlalchemy.orm.AttributeState.history"]], "identity (sqlalchemy.orm.instancestate attribute)": [[123, "sqlalchemy.orm.InstanceState.identity"]], "identity_key (sqlalchemy.orm.instancestate attribute)": [[123, "sqlalchemy.orm.InstanceState.identity_key"]], "ilike() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.ilike"]], "ilike() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.ilike"]], "ilike() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.ilike"]], "in_() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.in_"]], "in_() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.in_"]], "in_() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.in_"]], "info (sqlalchemy.orm.inspectionattrinfo attribute)": [[123, "sqlalchemy.orm.InspectionAttrInfo.info"]], "info (sqlalchemy.orm.mapperproperty attribute)": [[123, "sqlalchemy.orm.MapperProperty.info"]], "info (sqlalchemy.orm.queryableattribute attribute)": [[123, "sqlalchemy.orm.QueryableAttribute.info"]], "inherit_cache (sqlalchemy.orm.columnproperty attribute)": [[123, "sqlalchemy.orm.ColumnProperty.inherit_cache"]], "inherit_cache (sqlalchemy.orm.queryableattribute attribute)": [[123, "sqlalchemy.orm.QueryableAttribute.inherit_cache"]], "inherit_cache (sqlalchemy.orm.relationshipproperty attribute)": [[123, "sqlalchemy.orm.RelationshipProperty.inherit_cache"]], "inherit_cache (sqlalchemy.orm.synonymproperty attribute)": [[123, "sqlalchemy.orm.SynonymProperty.inherit_cache"]], "init() (sqlalchemy.orm.mapperproperty method)": [[123, "sqlalchemy.orm.MapperProperty.init"]], "init() (sqlalchemy.orm.relationshipproperty method)": [[123, "sqlalchemy.orm.RelationshipProperty.init"]], "init() (sqlalchemy.orm.synonymproperty method)": [[123, "sqlalchemy.orm.SynonymProperty.init"]], "instrument_class() (sqlalchemy.orm.columnproperty method)": [[123, "sqlalchemy.orm.ColumnProperty.instrument_class"]], "instrument_class() (sqlalchemy.orm.compositeproperty method)": [[123, "sqlalchemy.orm.CompositeProperty.instrument_class"]], "instrument_class() (sqlalchemy.orm.mapperproperty method)": [[123, "sqlalchemy.orm.MapperProperty.instrument_class"]], "instrument_class() (sqlalchemy.orm.relationshipproperty method)": [[123, "sqlalchemy.orm.RelationshipProperty.instrument_class"]], "instrument_class() (sqlalchemy.orm.synonymproperty method)": [[123, "sqlalchemy.orm.SynonymProperty.instrument_class"]], "is_() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.is_"]], "is_() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.is_"]], "is_() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.is_"]], "is_aliased_class (sqlalchemy.orm.inspectionattr attribute)": [[123, "sqlalchemy.orm.InspectionAttr.is_aliased_class"]], "is_aliased_class (sqlalchemy.orm.queryableattribute attribute)": [[123, "sqlalchemy.orm.QueryableAttribute.is_aliased_class"]], "is_aliased_class (sqlalchemy.orm.relationshipproperty attribute)": [[123, "sqlalchemy.orm.RelationshipProperty.is_aliased_class"]], "is_aliased_class (sqlalchemy.orm.synonymproperty attribute)": [[123, "sqlalchemy.orm.SynonymProperty.is_aliased_class"]], "is_attribute (sqlalchemy.orm.inspectionattr attribute)": [[123, "sqlalchemy.orm.InspectionAttr.is_attribute"]], "is_attribute (sqlalchemy.orm.queryableattribute attribute)": [[123, "sqlalchemy.orm.QueryableAttribute.is_attribute"]], "is_attribute (sqlalchemy.orm.relationshipproperty attribute)": [[123, "sqlalchemy.orm.RelationshipProperty.is_attribute"]], "is_attribute (sqlalchemy.orm.synonymproperty attribute)": [[123, "sqlalchemy.orm.SynonymProperty.is_attribute"]], "is_bundle (sqlalchemy.orm.inspectionattr attribute)": [[123, "sqlalchemy.orm.InspectionAttr.is_bundle"]], "is_bundle (sqlalchemy.orm.queryableattribute attribute)": [[123, "sqlalchemy.orm.QueryableAttribute.is_bundle"]], "is_bundle (sqlalchemy.orm.relationshipproperty attribute)": [[123, "sqlalchemy.orm.RelationshipProperty.is_bundle"]], "is_bundle (sqlalchemy.orm.synonymproperty attribute)": [[123, "sqlalchemy.orm.SynonymProperty.is_bundle"]], "is_clause_element (sqlalchemy.orm.inspectionattr attribute)": [[123, "sqlalchemy.orm.InspectionAttr.is_clause_element"]], "is_clause_element (sqlalchemy.orm.queryableattribute attribute)": [[123, "sqlalchemy.orm.QueryableAttribute.is_clause_element"]], "is_clause_element (sqlalchemy.orm.relationshipproperty attribute)": [[123, "sqlalchemy.orm.RelationshipProperty.is_clause_element"]], "is_clause_element (sqlalchemy.orm.synonymproperty attribute)": [[123, "sqlalchemy.orm.SynonymProperty.is_clause_element"]], "is_deleted() (sqlalchemy.orm.uowtransaction method)": [[123, "sqlalchemy.orm.UOWTransaction.is_deleted"]], "is_distinct_from() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.is_distinct_from"]], "is_distinct_from() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.is_distinct_from"]], "is_distinct_from() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.is_distinct_from"]], "is_instance (sqlalchemy.orm.inspectionattr attribute)": [[123, "sqlalchemy.orm.InspectionAttr.is_instance"]], "is_instance (sqlalchemy.orm.instancestate attribute)": [[123, "sqlalchemy.orm.InstanceState.is_instance"]], "is_instance (sqlalchemy.orm.queryableattribute attribute)": [[123, "sqlalchemy.orm.QueryableAttribute.is_instance"]], "is_instance (sqlalchemy.orm.relationshipproperty attribute)": [[123, "sqlalchemy.orm.RelationshipProperty.is_instance"]], "is_instance (sqlalchemy.orm.synonymproperty attribute)": [[123, "sqlalchemy.orm.SynonymProperty.is_instance"]], "is_mapper (sqlalchemy.orm.inspectionattr attribute)": [[123, "sqlalchemy.orm.InspectionAttr.is_mapper"]], "is_mapper (sqlalchemy.orm.queryableattribute attribute)": [[123, "sqlalchemy.orm.QueryableAttribute.is_mapper"]], "is_mapper (sqlalchemy.orm.relationshipproperty attribute)": [[123, "sqlalchemy.orm.RelationshipProperty.is_mapper"]], "is_mapper (sqlalchemy.orm.synonymproperty attribute)": [[123, "sqlalchemy.orm.SynonymProperty.is_mapper"]], "is_not() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.is_not"]], "is_not() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.is_not"]], "is_not() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.is_not"]], "is_not_distinct_from() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.is_not_distinct_from"]], "is_not_distinct_from() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.is_not_distinct_from"]], "is_not_distinct_from() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.is_not_distinct_from"]], "is_property (sqlalchemy.orm.inspectionattr attribute)": [[123, "sqlalchemy.orm.InspectionAttr.is_property"]], "is_property (sqlalchemy.orm.mapperproperty attribute)": [[123, "sqlalchemy.orm.MapperProperty.is_property"]], "is_property (sqlalchemy.orm.queryableattribute attribute)": [[123, "sqlalchemy.orm.QueryableAttribute.is_property"]], "is_property (sqlalchemy.orm.relationshipproperty attribute)": [[123, "sqlalchemy.orm.RelationshipProperty.is_property"]], "is_property (sqlalchemy.orm.synonymproperty attribute)": [[123, "sqlalchemy.orm.SynonymProperty.is_property"]], "is_selectable (sqlalchemy.orm.inspectionattr attribute)": [[123, "sqlalchemy.orm.InspectionAttr.is_selectable"]], "is_selectable (sqlalchemy.orm.queryableattribute attribute)": [[123, "sqlalchemy.orm.QueryableAttribute.is_selectable"]], "is_selectable (sqlalchemy.orm.relationshipproperty attribute)": [[123, "sqlalchemy.orm.RelationshipProperty.is_selectable"]], "is_selectable (sqlalchemy.orm.synonymproperty attribute)": [[123, "sqlalchemy.orm.SynonymProperty.is_selectable"]], "isnot() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.isnot"]], "isnot() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.isnot"]], "isnot() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.isnot"]], "isnot_distinct_from() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.isnot_distinct_from"]], "isnot_distinct_from() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.isnot_distinct_from"]], "isnot_distinct_from() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.isnot_distinct_from"]], "like() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.like"]], "like() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.like"]], "like() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.like"]], "load_history() (sqlalchemy.orm.attributestate method)": [[123, "sqlalchemy.orm.AttributeState.load_history"]], "loaded_value (sqlalchemy.orm.attributestate attribute)": [[123, "sqlalchemy.orm.AttributeState.loaded_value"]], "manage() (sqlalchemy.orm.classmanager method)": [[123, "sqlalchemy.orm.ClassManager.manage"]], "mapper (sqlalchemy.orm.instancestate attribute)": [[123, "sqlalchemy.orm.InstanceState.mapper"]], "mapper (sqlalchemy.orm.relationshipproperty attribute)": [[123, "sqlalchemy.orm.RelationshipProperty.mapper"]], "mapper (sqlalchemy.orm.relationshipproperty.comparator attribute)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.mapper"]], "match() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.match"]], "match() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.match"]], "match() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.match"]], "memoized_instancemethod() (sqlalchemy.orm.queryableattribute class method)": [[123, "sqlalchemy.orm.QueryableAttribute.memoized_instancemethod"]], "merge() (sqlalchemy.orm.columnproperty method)": [[123, "sqlalchemy.orm.ColumnProperty.merge"]], "merge() (sqlalchemy.orm.mapperproperty method)": [[123, "sqlalchemy.orm.MapperProperty.merge"]], "merge() (sqlalchemy.orm.relationshipproperty method)": [[123, "sqlalchemy.orm.RelationshipProperty.merge"]], "merge() (sqlalchemy.orm.synonymproperty method)": [[123, "sqlalchemy.orm.SynonymProperty.merge"]], "merge_frozen_result() (in module sqlalchemy.orm)": [[123, "sqlalchemy.orm.merge_frozen_result"]], "merge_result() (in module sqlalchemy.orm)": [[123, "sqlalchemy.orm.merge_result"]], "not_ilike() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.not_ilike"]], "not_ilike() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.not_ilike"]], "not_ilike() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.not_ilike"]], "not_in() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.not_in"]], "not_in() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.not_in"]], "not_in() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.not_in"]], "not_like() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.not_like"]], "not_like() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.not_like"]], "not_like() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.not_like"]], "notilike() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.notilike"]], "notilike() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.notilike"]], "notilike() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.notilike"]], "notin_() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.notin_"]], "notin_() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.notin_"]], "notin_() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.notin_"]], "notlike() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.notlike"]], "notlike() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.notlike"]], "notlike() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.notlike"]], "nulls_first() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.nulls_first"]], "nulls_first() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.nulls_first"]], "nulls_first() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.nulls_first"]], "nulls_last() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.nulls_last"]], "nulls_last() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.nulls_last"]], "nulls_last() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.nulls_last"]], "nullsfirst() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.nullsfirst"]], "nullsfirst() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.nullsfirst"]], "nullsfirst() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.nullsfirst"]], "nullslast() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.nullslast"]], "nullslast() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.nullslast"]], "nullslast() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.nullslast"]], "object (sqlalchemy.orm.instancestate attribute)": [[123, "sqlalchemy.orm.InstanceState.object"]], "of_type() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.of_type"]], "of_type() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.of_type"]], "of_type() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.of_type"]], "op() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.op"]], "op() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.op"]], "op() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.op"]], "operate() (sqlalchemy.orm.columnproperty.comparator method)": [[123, "sqlalchemy.orm.ColumnProperty.Comparator.operate"]], "operate() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.operate"]], "operate() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.operate"]], "operate() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.operate"]], "parent (sqlalchemy.orm.queryableattribute attribute)": [[123, "sqlalchemy.orm.QueryableAttribute.parent"]], "pending (sqlalchemy.orm.instancestate attribute)": [[123, "sqlalchemy.orm.InstanceState.pending"]], "persistent (sqlalchemy.orm.instancestate attribute)": [[123, "sqlalchemy.orm.InstanceState.persistent"]], "post_instrument_class() (sqlalchemy.orm.mapperproperty method)": [[123, "sqlalchemy.orm.MapperProperty.post_instrument_class"]], "post_instrument_class() (sqlalchemy.orm.relationshipproperty method)": [[123, "sqlalchemy.orm.RelationshipProperty.post_instrument_class"]], "post_instrument_class() (sqlalchemy.orm.synonymproperty method)": [[123, "sqlalchemy.orm.SynonymProperty.post_instrument_class"]], "property (sqlalchemy.orm.queryableattribute attribute)": [[123, "sqlalchemy.orm.QueryableAttribute.property"]], "regexp_match() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.regexp_match"]], "regexp_match() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.regexp_match"]], "regexp_match() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.regexp_match"]], "regexp_replace() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.regexp_replace"]], "regexp_replace() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.regexp_replace"]], "regexp_replace() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.regexp_replace"]], "remove_state_actions() (sqlalchemy.orm.uowtransaction method)": [[123, "sqlalchemy.orm.UOWTransaction.remove_state_actions"]], "reverse_operate() (sqlalchemy.orm.columnproperty.comparator method)": [[123, "sqlalchemy.orm.ColumnProperty.Comparator.reverse_operate"]], "reverse_operate() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.reverse_operate"]], "reverse_operate() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.reverse_operate"]], "reverse_operate() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.reverse_operate"]], "session (sqlalchemy.orm.instancestate attribute)": [[123, "sqlalchemy.orm.InstanceState.session"]], "set_parent() (sqlalchemy.orm.mapperproperty method)": [[123, "sqlalchemy.orm.MapperProperty.set_parent"]], "set_parent() (sqlalchemy.orm.relationshipproperty method)": [[123, "sqlalchemy.orm.RelationshipProperty.set_parent"]], "set_parent() (sqlalchemy.orm.synonymproperty method)": [[123, "sqlalchemy.orm.SynonymProperty.set_parent"]], "setup() (sqlalchemy.orm.mapperproperty method)": [[123, "sqlalchemy.orm.MapperProperty.setup"]], "setup() (sqlalchemy.orm.relationshipproperty method)": [[123, "sqlalchemy.orm.RelationshipProperty.setup"]], "setup() (sqlalchemy.orm.synonymproperty method)": [[123, "sqlalchemy.orm.SynonymProperty.setup"]], "startswith() (sqlalchemy.orm.propcomparator method)": [[123, "sqlalchemy.orm.PropComparator.startswith"]], "startswith() (sqlalchemy.orm.queryableattribute method)": [[123, "sqlalchemy.orm.QueryableAttribute.startswith"]], "startswith() (sqlalchemy.orm.relationshipproperty.comparator method)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.startswith"]], "state_getter() (sqlalchemy.orm.classmanager method)": [[123, "sqlalchemy.orm.ClassManager.state_getter"]], "timetuple (sqlalchemy.orm.propcomparator attribute)": [[123, "sqlalchemy.orm.PropComparator.timetuple"]], "timetuple (sqlalchemy.orm.queryableattribute attribute)": [[123, "sqlalchemy.orm.QueryableAttribute.timetuple"]], "timetuple (sqlalchemy.orm.relationshipproperty.comparator attribute)": [[123, "sqlalchemy.orm.RelationshipProperty.Comparator.timetuple"]], "transient (sqlalchemy.orm.instancestate attribute)": [[123, "sqlalchemy.orm.InstanceState.transient"]], "unloaded (sqlalchemy.orm.instancestate attribute)": [[123, "sqlalchemy.orm.InstanceState.unloaded"]], "unloaded_expirable (sqlalchemy.orm.instancestate attribute)": [[123, "sqlalchemy.orm.InstanceState.unloaded_expirable"]], "unmodified (sqlalchemy.orm.instancestate attribute)": [[123, "sqlalchemy.orm.InstanceState.unmodified"]], "unmodified_intersection() (sqlalchemy.orm.instancestate method)": [[123, "sqlalchemy.orm.InstanceState.unmodified_intersection"]], "unregister() (sqlalchemy.orm.classmanager method)": [[123, "sqlalchemy.orm.ClassManager.unregister"]], "uses_objects (sqlalchemy.orm.synonymproperty attribute)": [[123, "sqlalchemy.orm.SynonymProperty.uses_objects"]], "value (sqlalchemy.orm.attributestate attribute)": [[123, "sqlalchemy.orm.AttributeState.value"]], "was_already_deleted() (sqlalchemy.orm.uowtransaction method)": [[123, "sqlalchemy.orm.UOWTransaction.was_already_deleted"]], "was_deleted (sqlalchemy.orm.instancestate attribute)": [[123, "sqlalchemy.orm.InstanceState.was_deleted"]], "defer() (in module sqlalchemy.orm)": [[126, "sqlalchemy.orm.defer"]], "deferred() (in module sqlalchemy.orm)": [[126, "sqlalchemy.orm.deferred"]], "load_only() (in module sqlalchemy.orm)": [[126, "sqlalchemy.orm.load_only"]], "query_expression() (in module sqlalchemy.orm)": [[126, "sqlalchemy.orm.query_expression"]], "undefer() (in module sqlalchemy.orm)": [[126, "sqlalchemy.orm.undefer"]], "undefer_group() (in module sqlalchemy.orm)": [[126, "sqlalchemy.orm.undefer_group"]], "with_expression() (in module sqlalchemy.orm)": [[126, "sqlalchemy.orm.with_expression"]], "load (class in sqlalchemy.orm)": [[128, "sqlalchemy.orm.Load"]], "contains_eager() (in module sqlalchemy.orm)": [[128, "sqlalchemy.orm.contains_eager"]], "contains_eager() (sqlalchemy.orm.load method)": [[128, "sqlalchemy.orm.Load.contains_eager"]], "defaultload() (in module sqlalchemy.orm)": [[128, "sqlalchemy.orm.defaultload"]], "defaultload() (sqlalchemy.orm.load method)": [[128, "sqlalchemy.orm.Load.defaultload"]], "defer() (sqlalchemy.orm.load method)": [[128, "sqlalchemy.orm.Load.defer"]], "eagerload() (in module sqlalchemy.orm)": [[128, "sqlalchemy.orm.eagerload"]], "immediateload() (in module sqlalchemy.orm)": [[128, "sqlalchemy.orm.immediateload"]], "immediateload() (sqlalchemy.orm.load method)": [[128, "sqlalchemy.orm.Load.immediateload"]], "joinedload() (in module sqlalchemy.orm)": [[128, "sqlalchemy.orm.joinedload"]], "joinedload() (sqlalchemy.orm.load method)": [[128, "sqlalchemy.orm.Load.joinedload"]], "lazyload() (in module sqlalchemy.orm)": [[128, "sqlalchemy.orm.lazyload"]], "lazyload() (sqlalchemy.orm.load method)": [[128, "sqlalchemy.orm.Load.lazyload"]], "load_only() (sqlalchemy.orm.load method)": [[128, "sqlalchemy.orm.Load.load_only"]], "noload() (in module sqlalchemy.orm)": [[128, "sqlalchemy.orm.noload"]], "noload() (sqlalchemy.orm.load method)": [[128, "sqlalchemy.orm.Load.noload"]], "options() (sqlalchemy.orm.load method)": [[128, "sqlalchemy.orm.Load.options"]], "process_compile_state() (sqlalchemy.orm.load method)": [[128, "sqlalchemy.orm.Load.process_compile_state"]], "process_compile_state_replaced_entities() (sqlalchemy.orm.load method)": [[128, "sqlalchemy.orm.Load.process_compile_state_replaced_entities"]], "propagate_to_loaders (sqlalchemy.orm.load attribute)": [[128, "sqlalchemy.orm.Load.propagate_to_loaders"]], "raiseload() (in module sqlalchemy.orm)": [[128, "sqlalchemy.orm.raiseload"]], "raiseload() (sqlalchemy.orm.load method)": [[128, "sqlalchemy.orm.Load.raiseload"]], "selectin_polymorphic() (sqlalchemy.orm.load method)": [[128, "sqlalchemy.orm.Load.selectin_polymorphic"]], "selectinload() (in module sqlalchemy.orm)": [[128, "sqlalchemy.orm.selectinload"]], "selectinload() (sqlalchemy.orm.load method)": [[128, "sqlalchemy.orm.Load.selectinload"]], "subqueryload() (in module sqlalchemy.orm)": [[128, "sqlalchemy.orm.subqueryload"]], "subqueryload() (sqlalchemy.orm.load method)": [[128, "sqlalchemy.orm.Load.subqueryload"]], "undefer() (sqlalchemy.orm.load method)": [[128, "sqlalchemy.orm.Load.undefer"]], "undefer_group() (sqlalchemy.orm.load method)": [[128, "sqlalchemy.orm.Load.undefer_group"]], "with_expression() (sqlalchemy.orm.load method)": [[128, "sqlalchemy.orm.Load.with_expression"]], "synonym() (in module sqlalchemy.orm)": [[129, "sqlalchemy.orm.synonym"]], "validates() (in module sqlalchemy.orm)": [[129, "sqlalchemy.orm.validates"]], "mapper (class in sqlalchemy.orm)": [[132, "sqlalchemy.orm.Mapper"]], "__init__() (sqlalchemy.orm.mapper method)": [[132, "sqlalchemy.orm.Mapper.__init__"]], "__init__() (sqlalchemy.orm.registry method)": [[132, "sqlalchemy.orm.registry.__init__"]], "add_properties() (sqlalchemy.orm.mapper method)": [[132, "sqlalchemy.orm.Mapper.add_properties"]], "add_property() (sqlalchemy.orm.mapper method)": [[132, "sqlalchemy.orm.Mapper.add_property"]], "all_orm_descriptors (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.all_orm_descriptors"]], "as_declarative() (in module sqlalchemy.orm)": [[132, "sqlalchemy.orm.as_declarative"]], "as_declarative_base() (sqlalchemy.orm.registry method)": [[132, "sqlalchemy.orm.registry.as_declarative_base"]], "attrs (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.attrs"]], "base_mapper (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.base_mapper"]], "c (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.c"]], "cascade_iterator() (sqlalchemy.orm.mapper method)": [[132, "sqlalchemy.orm.Mapper.cascade_iterator"]], "class_ (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.class_"]], "class_manager (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.class_manager"]], "class_mapper() (in module sqlalchemy.orm)": [[132, "sqlalchemy.orm.class_mapper"]], "clear_mappers() (in module sqlalchemy.orm)": [[132, "sqlalchemy.orm.clear_mappers"]], "column_attrs (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.column_attrs"]], "columns (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.columns"]], "common_parent() (sqlalchemy.orm.mapper method)": [[132, "sqlalchemy.orm.Mapper.common_parent"]], "composites (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.composites"]], "concrete (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.concrete"]], "configure() (sqlalchemy.orm.registry method)": [[132, "sqlalchemy.orm.registry.configure"]], "configure_mappers() (in module sqlalchemy.orm)": [[132, "sqlalchemy.orm.configure_mappers"]], "configured (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.configured"]], "declarative_base() (in module sqlalchemy.orm)": [[132, "sqlalchemy.orm.declarative_base"]], "declarative_mixin() (in module sqlalchemy.orm)": [[132, "sqlalchemy.orm.declarative_mixin"]], "declared_attr (class in sqlalchemy.orm)": [[132, "sqlalchemy.orm.declared_attr"]], "dispose() (sqlalchemy.orm.registry method)": [[132, "sqlalchemy.orm.registry.dispose"]], "entity (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.entity"]], "generate_base() (sqlalchemy.orm.registry method)": [[132, "sqlalchemy.orm.registry.generate_base"]], "get_property() (sqlalchemy.orm.mapper method)": [[132, "sqlalchemy.orm.Mapper.get_property"]], "get_property_by_column() (sqlalchemy.orm.mapper method)": [[132, "sqlalchemy.orm.Mapper.get_property_by_column"]], "has_inherited_table() (in module sqlalchemy.orm)": [[132, "sqlalchemy.orm.has_inherited_table"]], "identity_key() (in module sqlalchemy.orm.util)": [[132, "sqlalchemy.orm.util.identity_key"]], "identity_key_from_instance() (sqlalchemy.orm.mapper method)": [[132, "sqlalchemy.orm.Mapper.identity_key_from_instance"]], "identity_key_from_primary_key() (sqlalchemy.orm.mapper method)": [[132, "sqlalchemy.orm.Mapper.identity_key_from_primary_key"]], "identity_key_from_row() (sqlalchemy.orm.mapper method)": [[132, "sqlalchemy.orm.Mapper.identity_key_from_row"]], "inherits (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.inherits"]], "is_mapper (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.is_mapper"]], "is_sibling() (sqlalchemy.orm.mapper method)": [[132, "sqlalchemy.orm.Mapper.is_sibling"]], "isa() (sqlalchemy.orm.mapper method)": [[132, "sqlalchemy.orm.Mapper.isa"]], "iterate_properties (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.iterate_properties"]], "local_table (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.local_table"]], "map_declaratively() (sqlalchemy.orm.registry method)": [[132, "sqlalchemy.orm.registry.map_declaratively"]], "map_imperatively() (sqlalchemy.orm.registry method)": [[132, "sqlalchemy.orm.registry.map_imperatively"]], "mapped() (sqlalchemy.orm.registry method)": [[132, "sqlalchemy.orm.registry.mapped"]], "mapped_table (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.mapped_table"]], "mapper (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.mapper"]], "mapper() (in module sqlalchemy.orm)": [[132, "sqlalchemy.orm.mapper"]], "mappers (sqlalchemy.orm.registry attribute)": [[132, "sqlalchemy.orm.registry.mappers"]], "non_primary (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.non_primary"]], "object_mapper() (in module sqlalchemy.orm)": [[132, "sqlalchemy.orm.object_mapper"]], "persist_selectable (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.persist_selectable"]], "polymorphic_identity (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.polymorphic_identity"]], "polymorphic_iterator() (sqlalchemy.orm.mapper method)": [[132, "sqlalchemy.orm.Mapper.polymorphic_iterator"]], "polymorphic_map (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.polymorphic_map"]], "polymorphic_on (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.polymorphic_on"]], "polymorphic_union() (in module sqlalchemy.orm)": [[132, "sqlalchemy.orm.polymorphic_union"]], "primary_key (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.primary_key"]], "primary_key_from_instance() (sqlalchemy.orm.mapper method)": [[132, "sqlalchemy.orm.Mapper.primary_key_from_instance"]], "primary_mapper() (sqlalchemy.orm.mapper method)": [[132, "sqlalchemy.orm.Mapper.primary_mapper"]], "reconstructor() (in module sqlalchemy.orm)": [[132, "sqlalchemy.orm.reconstructor"]], "registry (class in sqlalchemy.orm)": [[132, "sqlalchemy.orm.registry"]], "relationships (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.relationships"]], "selectable (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.selectable"]], "self_and_descendants (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.self_and_descendants"]], "single (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.single"]], "synonym_for() (in module sqlalchemy.orm)": [[132, "sqlalchemy.orm.synonym_for"]], "synonyms (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.synonyms"]], "tables (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.tables"]], "validators (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.validators"]], "with_polymorphic_mappers (sqlalchemy.orm.mapper attribute)": [[132, "sqlalchemy.orm.Mapper.with_polymorphic_mappers"]], "column_property() (in module sqlalchemy.orm)": [[133, "sqlalchemy.orm.column_property"]], "aliasedclass (class in sqlalchemy.orm.util)": [[137, "sqlalchemy.orm.util.AliasedClass"]], "aliasedinsp (class in sqlalchemy.orm.util)": [[137, "sqlalchemy.orm.util.AliasedInsp"]], "bundle (class in sqlalchemy.orm)": [[137, "sqlalchemy.orm.Bundle"]], "query (class in sqlalchemy.orm)": [[137, "sqlalchemy.orm.Query"]], "__init__() (sqlalchemy.orm.bundle method)": [[137, "sqlalchemy.orm.Bundle.__init__"]], "__init__() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.__init__"]], "add_column() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.add_column"]], "add_columns() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.add_columns"]], "add_entity() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.add_entity"]], "aliased() (in module sqlalchemy.orm)": [[137, "sqlalchemy.orm.aliased"]], "all() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.all"]], "apply_labels() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.apply_labels"]], "as_scalar() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.as_scalar"]], "autoflush() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.autoflush"]], "bind (sqlalchemy.orm.query attribute)": [[137, "sqlalchemy.orm.Query.bind"]], "c (sqlalchemy.orm.bundle attribute)": [[137, "sqlalchemy.orm.Bundle.c"]], "column_descriptions (sqlalchemy.orm.query attribute)": [[137, "sqlalchemy.orm.Query.column_descriptions"]], "columns (sqlalchemy.orm.bundle attribute)": [[137, "sqlalchemy.orm.Bundle.columns"]], "correlate() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.correlate"]], "count() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.count"]], "create_row_processor() (sqlalchemy.orm.bundle method)": [[137, "sqlalchemy.orm.Bundle.create_row_processor"]], "cte() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.cte"]], "delete() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.delete"]], "distinct() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.distinct"]], "enable_assertions() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.enable_assertions"]], "enable_eagerloads() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.enable_eagerloads"]], "except_() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.except_"]], "except_all() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.except_all"]], "execute() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.execute"]], "execution_options() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.execution_options"]], "exists() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.exists"]], "filter() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.filter"]], "filter_by() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.filter_by"]], "first() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.first"]], "from_self() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.from_self"]], "from_statement() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.from_statement"]], "get() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.get"]], "get_execution_options() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.get_execution_options"]], "get_label_style (sqlalchemy.orm.query attribute)": [[137, "sqlalchemy.orm.Query.get_label_style"]], "group_by() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.group_by"]], "having() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.having"]], "instances() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.instances"]], "intersect() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.intersect"]], "intersect_all() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.intersect_all"]], "is_aliased_class (sqlalchemy.orm.bundle attribute)": [[137, "sqlalchemy.orm.Bundle.is_aliased_class"]], "is_bundle (sqlalchemy.orm.bundle attribute)": [[137, "sqlalchemy.orm.Bundle.is_bundle"]], "is_clause_element (sqlalchemy.orm.bundle attribute)": [[137, "sqlalchemy.orm.Bundle.is_clause_element"]], "is_mapper (sqlalchemy.orm.bundle attribute)": [[137, "sqlalchemy.orm.Bundle.is_mapper"]], "is_single_entity (sqlalchemy.orm.query attribute)": [[137, "sqlalchemy.orm.Query.is_single_entity"]], "join() (in module sqlalchemy.orm)": [[137, "sqlalchemy.orm.join"]], "join() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.join"]], "label() (sqlalchemy.orm.bundle method)": [[137, "sqlalchemy.orm.Bundle.label"]], "label() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.label"]], "lazy_loaded_from (sqlalchemy.orm.query attribute)": [[137, "sqlalchemy.orm.Query.lazy_loaded_from"]], "limit() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.limit"]], "memoized_instancemethod() (sqlalchemy.orm.query class method)": [[137, "sqlalchemy.orm.Query.memoized_instancemethod"]], "merge_result() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.merge_result"]], "offset() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.offset"]], "one() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.one"]], "one_or_none() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.one_or_none"]], "only_return_tuples() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.only_return_tuples"]], "options() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.options"]], "order_by() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.order_by"]], "outerjoin() (in module sqlalchemy.orm)": [[137, "sqlalchemy.orm.outerjoin"]], "outerjoin() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.outerjoin"]], "params() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.params"]], "populate_existing() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.populate_existing"]], "prefix_with() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.prefix_with"]], "reset_joinpoint() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.reset_joinpoint"]], "scalar() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.scalar"]], "scalar_subquery() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.scalar_subquery"]], "select_entity_from() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.select_entity_from"]], "select_from() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.select_from"]], "selectable (sqlalchemy.orm.query attribute)": [[137, "sqlalchemy.orm.Query.selectable"]], "set_label_style() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.set_label_style"]], "single_entity (sqlalchemy.orm.bundle attribute)": [[137, "sqlalchemy.orm.Bundle.single_entity"]], "slice() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.slice"]], "statement (sqlalchemy.orm.query attribute)": [[137, "sqlalchemy.orm.Query.statement"]], "subquery() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.subquery"]], "suffix_with() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.suffix_with"]], "union() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.union"]], "union_all() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.union_all"]], "update() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.update"]], "value() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.value"]], "values() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.values"]], "where() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.where"]], "whereclause (sqlalchemy.orm.query attribute)": [[137, "sqlalchemy.orm.Query.whereclause"]], "with_entities() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.with_entities"]], "with_for_update() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.with_for_update"]], "with_hint() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.with_hint"]], "with_labels() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.with_labels"]], "with_loader_criteria() (in module sqlalchemy.orm)": [[137, "sqlalchemy.orm.with_loader_criteria"]], "with_parent() (in module sqlalchemy.orm)": [[137, "sqlalchemy.orm.with_parent"]], "with_parent() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.with_parent"]], "with_polymorphic() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.with_polymorphic"]], "with_session() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.with_session"]], "with_statement_hint() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.with_statement_hint"]], "with_transformation() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.with_transformation"]], "yield_per() (sqlalchemy.orm.query method)": [[137, "sqlalchemy.orm.Query.yield_per"]], "backref() (in module sqlalchemy.orm)": [[140, "sqlalchemy.orm.backref"]], "dynamic_loader() (in module sqlalchemy.orm)": [[140, "sqlalchemy.orm.dynamic_loader"]], "foreign() (in module sqlalchemy.orm)": [[140, "sqlalchemy.orm.foreign"]], "relation() (in module sqlalchemy.orm)": [[140, "sqlalchemy.orm.relation"]], "relationship() (in module sqlalchemy.orm)": [[140, "sqlalchemy.orm.relationship"]], "remote() (in module sqlalchemy.orm)": [[140, "sqlalchemy.orm.remote"]], "sqlalchemy.orm.session": [[145, "module-sqlalchemy.orm.session"]], "history (class in sqlalchemy.orm.attributes)": [[146, "sqlalchemy.orm.attributes.History"]], "ormexecutestate (class in sqlalchemy.orm)": [[146, "sqlalchemy.orm.ORMExecuteState"]], "session (class in sqlalchemy.orm)": [[146, "sqlalchemy.orm.Session"]], "sessiontransaction (class in sqlalchemy.orm)": [[146, "sqlalchemy.orm.SessionTransaction"]], "__call__() (sqlalchemy.orm.sessionmaker method)": [[146, "sqlalchemy.orm.sessionmaker.__call__"]], "__init__() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.__init__"]], "__init__() (sqlalchemy.orm.sessionmaker method)": [[146, "sqlalchemy.orm.sessionmaker.__init__"]], "add() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.add"]], "add_all() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.add_all"]], "all_mappers (sqlalchemy.orm.ormexecutestate attribute)": [[146, "sqlalchemy.orm.ORMExecuteState.all_mappers"]], "begin() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.begin"]], "begin() (sqlalchemy.orm.sessionmaker method)": [[146, "sqlalchemy.orm.sessionmaker.begin"]], "begin_nested() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.begin_nested"]], "bind_arguments (sqlalchemy.orm.ormexecutestate attribute)": [[146, "sqlalchemy.orm.ORMExecuteState.bind_arguments"]], "bind_mapper (sqlalchemy.orm.ormexecutestate attribute)": [[146, "sqlalchemy.orm.ORMExecuteState.bind_mapper"]], "bind_mapper() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.bind_mapper"]], "bind_table() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.bind_table"]], "bulk_insert_mappings() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.bulk_insert_mappings"]], "bulk_save_objects() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.bulk_save_objects"]], "bulk_update_mappings() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.bulk_update_mappings"]], "close() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.close"]], "close_all() (sqlalchemy.orm.session class method)": [[146, "sqlalchemy.orm.Session.close_all"]], "close_all() (sqlalchemy.orm.sessionmaker class method)": [[146, "sqlalchemy.orm.sessionmaker.close_all"]], "close_all_sessions() (in module sqlalchemy.orm)": [[146, "sqlalchemy.orm.close_all_sessions"]], "commit() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.commit"]], "configure() (sqlalchemy.orm.sessionmaker method)": [[146, "sqlalchemy.orm.sessionmaker.configure"]], "connection() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.connection"]], "del_attribute() (in module sqlalchemy.orm.attributes)": [[146, "sqlalchemy.orm.attributes.del_attribute"]], "delete() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.delete"]], "deleted (sqlalchemy.orm.session attribute)": [[146, "sqlalchemy.orm.Session.deleted"]], "dirty (sqlalchemy.orm.session attribute)": [[146, "sqlalchemy.orm.Session.dirty"]], "empty() (sqlalchemy.orm.attributes.history method)": [[146, "sqlalchemy.orm.attributes.History.empty"]], "enable_relationship_loading() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.enable_relationship_loading"]], "execute() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.execute"]], "execution_options (sqlalchemy.orm.ormexecutestate attribute)": [[146, "sqlalchemy.orm.ORMExecuteState.execution_options"]], "expire() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.expire"]], "expire_all() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.expire_all"]], "expunge() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.expunge"]], "expunge_all() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.expunge_all"]], "flag_dirty() (in module sqlalchemy.orm.attributes)": [[146, "sqlalchemy.orm.attributes.flag_dirty"]], "flag_modified() (in module sqlalchemy.orm.attributes)": [[146, "sqlalchemy.orm.attributes.flag_modified"]], "flush() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.flush"]], "get() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.get"]], "get_attribute() (in module sqlalchemy.orm.attributes)": [[146, "sqlalchemy.orm.attributes.get_attribute"]], "get_bind() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.get_bind"]], "get_history() (in module sqlalchemy.orm.attributes)": [[146, "sqlalchemy.orm.attributes.get_history"]], "get_nested_transaction() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.get_nested_transaction"]], "get_transaction() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.get_transaction"]], "has_changes() (sqlalchemy.orm.attributes.history method)": [[146, "sqlalchemy.orm.attributes.History.has_changes"]], "identity_key() (sqlalchemy.orm.session class method)": [[146, "sqlalchemy.orm.Session.identity_key"]], "identity_key() (sqlalchemy.orm.sessionmaker class method)": [[146, "sqlalchemy.orm.sessionmaker.identity_key"]], "identity_map (sqlalchemy.orm.session attribute)": [[146, "sqlalchemy.orm.Session.identity_map"]], "in_nested_transaction() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.in_nested_transaction"]], "in_transaction() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.in_transaction"]], "info (sqlalchemy.orm.session attribute)": [[146, "sqlalchemy.orm.Session.info"]], "init_collection() (in module sqlalchemy.orm.attributes)": [[146, "sqlalchemy.orm.attributes.init_collection"]], "instance_state() (in module sqlalchemy.orm.attributes)": [[146, "sqlalchemy.orm.attributes.instance_state"]], "invalidate() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.invalidate"]], "invoke_statement() (sqlalchemy.orm.ormexecutestate method)": [[146, "sqlalchemy.orm.ORMExecuteState.invoke_statement"]], "is_active (sqlalchemy.orm.session attribute)": [[146, "sqlalchemy.orm.Session.is_active"]], "is_column_load (sqlalchemy.orm.ormexecutestate attribute)": [[146, "sqlalchemy.orm.ORMExecuteState.is_column_load"]], "is_delete (sqlalchemy.orm.ormexecutestate attribute)": [[146, "sqlalchemy.orm.ORMExecuteState.is_delete"]], "is_insert (sqlalchemy.orm.ormexecutestate attribute)": [[146, "sqlalchemy.orm.ORMExecuteState.is_insert"]], "is_instrumented() (in module sqlalchemy.orm.instrumentation)": [[146, "sqlalchemy.orm.instrumentation.is_instrumented"]], "is_modified() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.is_modified"]], "is_orm_statement (sqlalchemy.orm.ormexecutestate attribute)": [[146, "sqlalchemy.orm.ORMExecuteState.is_orm_statement"]], "is_relationship_load (sqlalchemy.orm.ormexecutestate attribute)": [[146, "sqlalchemy.orm.ORMExecuteState.is_relationship_load"]], "is_select (sqlalchemy.orm.ormexecutestate attribute)": [[146, "sqlalchemy.orm.ORMExecuteState.is_select"]], "is_update (sqlalchemy.orm.ormexecutestate attribute)": [[146, "sqlalchemy.orm.ORMExecuteState.is_update"]], "lazy_loaded_from (sqlalchemy.orm.ormexecutestate attribute)": [[146, "sqlalchemy.orm.ORMExecuteState.lazy_loaded_from"]], "load_options (sqlalchemy.orm.ormexecutestate attribute)": [[146, "sqlalchemy.orm.ORMExecuteState.load_options"]], "loader_strategy_path (sqlalchemy.orm.ormexecutestate attribute)": [[146, "sqlalchemy.orm.ORMExecuteState.loader_strategy_path"]], "local_execution_options (sqlalchemy.orm.ormexecutestate attribute)": [[146, "sqlalchemy.orm.ORMExecuteState.local_execution_options"]], "make_transient() (in module sqlalchemy.orm)": [[146, "sqlalchemy.orm.make_transient"]], "make_transient_to_detached() (in module sqlalchemy.orm)": [[146, "sqlalchemy.orm.make_transient_to_detached"]], "merge() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.merge"]], "nested (sqlalchemy.orm.sessiontransaction attribute)": [[146, "sqlalchemy.orm.SessionTransaction.nested"]], "new (sqlalchemy.orm.session attribute)": [[146, "sqlalchemy.orm.Session.new"]], "no_autoflush (sqlalchemy.orm.session attribute)": [[146, "sqlalchemy.orm.Session.no_autoflush"]], "non_added() (sqlalchemy.orm.attributes.history method)": [[146, "sqlalchemy.orm.attributes.History.non_added"]], "non_deleted() (sqlalchemy.orm.attributes.history method)": [[146, "sqlalchemy.orm.attributes.History.non_deleted"]], "object_session() (in module sqlalchemy.orm)": [[146, "sqlalchemy.orm.object_session"]], "object_session() (sqlalchemy.orm.session class method)": [[146, "sqlalchemy.orm.Session.object_session"]], "object_session() (sqlalchemy.orm.sessionmaker class method)": [[146, "sqlalchemy.orm.sessionmaker.object_session"]], "object_state() (in module sqlalchemy.orm.util)": [[146, "sqlalchemy.orm.util.object_state"]], "parameters (sqlalchemy.orm.ormexecutestate attribute)": [[146, "sqlalchemy.orm.ORMExecuteState.parameters"]], "parent (sqlalchemy.orm.sessiontransaction attribute)": [[146, "sqlalchemy.orm.SessionTransaction.parent"]], "prepare() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.prepare"]], "query() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.query"]], "refresh() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.refresh"]], "rollback() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.rollback"]], "scalar() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.scalar"]], "scalars() (sqlalchemy.orm.session method)": [[146, "sqlalchemy.orm.Session.scalars"]], "session (sqlalchemy.orm.ormexecutestate attribute)": [[146, "sqlalchemy.orm.ORMExecuteState.session"]], "sessionmaker (class in sqlalchemy.orm)": [[146, "sqlalchemy.orm.sessionmaker"]], "set_attribute() (in module sqlalchemy.orm.attributes)": [[146, "sqlalchemy.orm.attributes.set_attribute"]], "set_committed_value() (in module sqlalchemy.orm.attributes)": [[146, "sqlalchemy.orm.attributes.set_committed_value"]], "statement (sqlalchemy.orm.ormexecutestate attribute)": [[146, "sqlalchemy.orm.ORMExecuteState.statement"]], "sum() (sqlalchemy.orm.attributes.history method)": [[146, "sqlalchemy.orm.attributes.History.sum"]], "transaction (sqlalchemy.orm.session attribute)": [[146, "sqlalchemy.orm.Session.transaction"]], "update_delete_options (sqlalchemy.orm.ormexecutestate attribute)": [[146, "sqlalchemy.orm.ORMExecuteState.update_delete_options"]], "user_defined_options (sqlalchemy.orm.ormexecutestate attribute)": [[146, "sqlalchemy.orm.ORMExecuteState.user_defined_options"]], "was_deleted() (in module sqlalchemy.orm.util)": [[146, "sqlalchemy.orm.util.was_deleted"]]}})